{"version":3,"file":"index-4fa2dd85.js","sources":["../../node_modules/.pnpm/@vue+shared@3.3.4/node_modules/@vue/shared/dist/shared.esm-bundler.js","../../node_modules/.pnpm/@vue+reactivity@3.3.4/node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","../../node_modules/.pnpm/@vue+runtime-core@3.3.4/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","../../node_modules/.pnpm/@vue+runtime-dom@3.3.4/node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","../../node_modules/.pnpm/webmidi@3.1.6/node_modules/webmidi/dist/esm/webmidi.esm.js","../../node_modules/.pnpm/@vueuse+shared@10.1.2_vue@3.3.4/node_modules/@vueuse/shared/index.mjs","../../node_modules/.pnpm/@vueuse+core@10.1.2_vue@3.3.4/node_modules/@vueuse/core/index.mjs","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/version.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-extended-exponential-ramp-to-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-extended-linear-ramp-to-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-set-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-set-value-curve-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/get-target-value-at-time.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/exponential-ramp-to-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/linear-ramp-to-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/any-ramp-to-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/set-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/set-value-curve-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/get-value-of-automation-event-at-index-at-time.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/get-end-time-and-value-of-previous-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/cancel-and-hold-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/cancel-scheduled-values-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/get-event-time.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/get-exponential-ramp-value-at-time.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/get-linear-ramp-value-at-time.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/interpolate-value.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/get-value-curve-value-at-time.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/guards/set-target-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/classes/automation-event-list.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-cancel-and-hold-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-cancel-scheduled-values-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-exponential-ramp-to-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-linear-ramp-to-value-automation-event.js","../../node_modules/.pnpm/automation-events@4.0.20/node_modules/automation-events/build/es2019/functions/create-set-target-automation-event.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/globals.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/constants.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/read-only-map.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/window.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","../../node_modules/.pnpm/standardized-audio-context@25.3.29/node_modules/standardized-audio-context/build/es2019/module.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/TypeCheck.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Debug.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/AudioContext.js","../../node_modules/.pnpm/tslib@2.4.0/node_modules/tslib/tslib.es6.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/Ticker.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Defaults.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/Tone.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Math.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Timeline.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/ContextInitialization.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Emitter.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/BaseContext.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/Context.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/DummyContext.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Interface.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/OfflineContext.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/Global.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/type/Conversions.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/type/TimeBase.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/type/Time.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/type/Frequency.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/type/TransportTime.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/ToneWithContext.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/StateTimeline.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/Param.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/ToneAudioNode.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/Gain.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/OneShotSource.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/ToneConstantSource.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/Signal.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/TickParam.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/TickSignal.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/TickSource.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/Clock.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/Delay.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/type/Midi.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/type/Ticks.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Draw.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/IntervalTimeline.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/channel/Volume.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/Destination.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/TimelineValue.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/SignalOperator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/WaveShaper.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/Pow.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/TransportEvent.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/clock/Transport.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/Source.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/Noise.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/Oscillator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/AudioToGain.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/Multiply.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/AMOscillator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/FMOscillator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/FatOscillator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/Add.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/Scale.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/Zero.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/oscillator/LFO.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/util/Decorator.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/source/buffer/Player.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/signal/GainToAudio.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/envelope/Envelope.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/instrument/Instrument.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/instrument/Monophonic.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/instrument/Synth.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/filter/BiquadFilter.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/filter/Filter.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/instrument/MonoSynth.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/instrument/MembraneSynth.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/instrument/PolySynth.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/instrument/Sampler.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/channel/CrossFade.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/effect/Effect.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/effect/LFOEffect.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/channel/Panner.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/effect/AutoPanner.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/effect/BitCrusher.worklet.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/channel/Merge.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/effect/FeedbackEffect.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/effect/FeedbackDelay.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/effect/Reverb.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/channel/Solo.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/channel/PanVol.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/channel/Channel.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/core/context/Listener.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/component/dynamics/Compressor.js","../../node_modules/.pnpm/tone@14.8.49/node_modules/tone/build/esm/index.js","../../node_modules/.pnpm/@vueuse+math@10.1.2_vue@3.3.4/node_modules/@vueuse/math/index.mjs","../../src/use/synth.js","../../src/use/midi.js","../../src/use/chromatone.js","../../src/use/scene.js","../../src/components/scene/stats.vue","../../../../../../../../../pc-keyboard.svg","../../src/components/state/start.vue","../../src/components/state/bpm.vue","../../src/components/state/oscillator.vue","../../../../../../../../../@vite-plugin-pages/route-block","../../src/components/midi/log.vue","../../src/components/midi/input.vue","../../src/components/midi/panel.vue","../../src/components/midi/state.vue","../../src/use/state.js","../../src/components/state/fullscreen.vue","../../src/components/state/overlay.vue","../../node_modules/.pnpm/simplex-noise@4.0.1/node_modules/simplex-noise/dist/esm/simplex-noise.js","../../node_modules/.pnpm/color-hash@2.0.2/node_modules/color-hash/dist/esm.js","../../../../../../../../../@vite-plugin-pages/generated-pages?id=~pages","../../node_modules/.pnpm/vue-router@4.2.2_vue@3.3.4/node_modules/vue-router/dist/vue-router.mjs","../../src/app.vue","../../node_modules/.pnpm/@floating-ui+core@0.3.1/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../../node_modules/.pnpm/@floating-ui+dom@0.1.10/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","../../node_modules/.pnpm/floating-vue@2.0.0-y.0_vue@3.3.4/node_modules/floating-vue/dist/floating-vue.es.js","../../src/main.js","../../src/scenes/stats.vue","../../src/scenes/spiral.vue","../../src/scenes/rose.vue","../../src/scenes/level.vue","../../src/scenes/index.vue","../../src/components/scene/ring.vue","../../src/scenes/donut.vue","../../src/scenes/cross.vue"],"sourcesContent":["function makeMap(str, expectsLowerCase) {\n  const map = /* @__PURE__ */ Object.create(null);\n  const list = str.split(\",\");\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase ? (val) => !!map[val.toLowerCase()] : (val) => !!map[val];\n}\n\nconst EMPTY_OBJ = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze({}) : {};\nconst EMPTY_ARR = !!(process.env.NODE_ENV !== \"production\") ? Object.freeze([]) : [];\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst onRE = /^on[^a-z]/;\nconst isOn = (key) => onRE.test(key);\nconst isModelListener = (key) => key.startsWith(\"onUpdate:\");\nconst extend = Object.assign;\nconst remove = (arr, el) => {\n  const i = arr.indexOf(el);\n  if (i > -1) {\n    arr.splice(i, 1);\n  }\n};\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\nconst isArray = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isDate = (val) => toTypeString(val) === \"[object Date]\";\nconst isRegExp = (val) => toTypeString(val) === \"[object RegExp]\";\nconst isFunction = (val) => typeof val === \"function\";\nconst isString = (val) => typeof val === \"string\";\nconst isSymbol = (val) => typeof val === \"symbol\";\nconst isObject = (val) => val !== null && typeof val === \"object\";\nconst isPromise = (val) => {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst toRawType = (value) => {\n  return toTypeString(value).slice(8, -1);\n};\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isIntegerKey = (key) => isString(key) && key !== \"NaN\" && key[0] !== \"-\" && \"\" + parseInt(key, 10) === key;\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize = cacheStringFunction(\n  (str) => str.charAt(0).toUpperCase() + str.slice(1)\n);\nconst toHandlerKey = cacheStringFunction(\n  (str) => str ? `on${capitalize(str)}` : ``\n);\nconst hasChanged = (value, oldValue) => !Object.is(value, oldValue);\nconst invokeArrayFns = (fns, arg) => {\n  for (let i = 0; i < fns.length; i++) {\n    fns[i](arg);\n  }\n};\nconst def = (obj, key, value) => {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: false,\n    value\n  });\n};\nconst looseToNumber = (val) => {\n  const n = parseFloat(val);\n  return isNaN(n) ? val : n;\n};\nconst toNumber = (val) => {\n  const n = isString(val) ? Number(val) : NaN;\n  return isNaN(n) ? val : n;\n};\nlet _globalThis;\nconst getGlobalThis = () => {\n  return _globalThis || (_globalThis = typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n};\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `HYDRATE_EVENTS`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_WHITE_LISTED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console\";\nconst isGloballyWhitelisted = /* @__PURE__ */ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length)\n          continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString(value)) {\n    return value;\n  } else if (isObject(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n    if (isString(value) || typeof value === \"number\") {\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString(value)) {\n    res = value;\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\nfunction normalizeProps(props) {\n  if (!props)\n    return null;\n  let { class: klass, style } = props;\n  if (klass && !isString(klass)) {\n    props.class = normalizeClass(klass);\n  }\n  if (style) {\n    props.style = normalizeStyle(style);\n  }\n  return props;\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nfunction includeBooleanAttr(value) {\n  return !!value || value === \"\";\n}\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\nfunction escapeHtmlComment(src) {\n  return src.replace(commentStripRE, \"\");\n}\n\nfunction looseCompareArrays(a, b) {\n  if (a.length !== b.length)\n    return false;\n  let equal = true;\n  for (let i = 0; equal && i < a.length; i++) {\n    equal = looseEqual(a[i], b[i]);\n  }\n  return equal;\n}\nfunction looseEqual(a, b) {\n  if (a === b)\n    return true;\n  let aValidType = isDate(a);\n  let bValidType = isDate(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? a.getTime() === b.getTime() : false;\n  }\n  aValidType = isSymbol(a);\n  bValidType = isSymbol(b);\n  if (aValidType || bValidType) {\n    return a === b;\n  }\n  aValidType = isArray(a);\n  bValidType = isArray(b);\n  if (aValidType || bValidType) {\n    return aValidType && bValidType ? looseCompareArrays(a, b) : false;\n  }\n  aValidType = isObject(a);\n  bValidType = isObject(b);\n  if (aValidType || bValidType) {\n    if (!aValidType || !bValidType) {\n      return false;\n    }\n    const aKeysCount = Object.keys(a).length;\n    const bKeysCount = Object.keys(b).length;\n    if (aKeysCount !== bKeysCount) {\n      return false;\n    }\n    for (const key in a) {\n      const aHasKey = a.hasOwnProperty(key);\n      const bHasKey = b.hasOwnProperty(key);\n      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n  }\n  return String(a) === String(b);\n}\nfunction looseIndexOf(arr, val) {\n  return arr.findIndex((item) => looseEqual(item, val));\n}\n\nconst toDisplayString = (val) => {\n  return isString(val) ? val : val == null ? \"\" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val2]) => {\n        entries[`${key} =>`] = val2;\n        return entries;\n      }, {})\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()]\n    };\n  } else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, genPropsAccessExp, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, includeBooleanAttr, invokeArrayFns, isArray, isBooleanAttr, isBuiltInDirective, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownHtmlAttr, isKnownSvgAttr, isMap, isModelListener, isObject, isOn, isPlainObject, isPromise, isRegExp, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, looseToNumber, makeMap, normalizeClass, normalizeProps, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","import { extend, isArray, isMap, isIntegerKey, hasOwn, isSymbol, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nconst createDep = (effects) => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit;\n    }\n  }\n};\nconst finalizeDepMarkers = (effect) => {\n  const { deps } = effect;\n  if (deps.length) {\n    let ptr = 0;\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      }\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"iterate\" : \"\");\nconst MAP_KEY_ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"Map key iterate\" : \"\");\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = void 0;\n    recordEffectScope(this, scope);\n  }\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n      parent = parent.parent;\n    }\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = void 0;\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n  stop() {\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n      if (this.onStop) {\n        this.onStop();\n      }\n      this.active = false;\n    }\n  }\n}\nfunction cleanupEffect(effect2) {\n  const { deps } = effect2;\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect2);\n    }\n    deps.length = 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect) {\n    fn = fn.effect.fn;\n  }\n  const _effect = new ReactiveEffect(fn);\n  if (options) {\n    extend(_effect, options);\n    if (options.scope)\n      recordEffectScope(_effect, options.scope);\n  }\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n  const runner = _effect.run.bind(_effect);\n  runner.effect = _effect;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n    const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { effect: activeEffect, target, type, key } : void 0;\n    trackEffects(dep, eventInfo);\n  }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack2 = false;\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit;\n      shouldTrack2 = !wasTracked(dep);\n    }\n  } else {\n    shouldTrack2 = !dep.has(activeEffect);\n  }\n  if (shouldTrack2) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n    if (!!(process.env.NODE_ENV !== \"production\") && activeEffect.onTrack) {\n      activeEffect.onTrack(\n        extend(\n          {\n            effect: activeEffect\n          },\n          debuggerEventExtraInfo\n        )\n      );\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && isArray(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { target, type, key, newValue, oldValue, oldTarget } : void 0;\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        triggerEffects(deps[0], eventInfo);\n      } else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    const effects = [];\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(createDep(effects), eventInfo);\n    } else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  const effects = isArray(dep) ? dep : [...dep];\n  for (const effect2 of effects) {\n    if (effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n  for (const effect2 of effects) {\n    if (!effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n}\nfunction triggerEffect(effect2, debuggerEventExtraInfo) {\n  if (effect2 !== activeEffect || effect2.allowRecurse) {\n    if (!!(process.env.NODE_ENV !== \"production\") && effect2.onTrigger) {\n      effect2.onTrigger(extend({ effect: effect2 }, debuggerEventExtraInfo));\n    }\n    if (effect2.scheduler) {\n      effect2.scheduler();\n    } else {\n      effect2.run();\n    }\n  }\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nconst get$1 = /* @__PURE__ */ createGetter();\nconst shallowGet = /* @__PURE__ */ createGetter(false, true);\nconst readonlyGet = /* @__PURE__ */ createGetter(true);\nconst shallowReadonlyGet = /* @__PURE__ */ createGetter(true, true);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nfunction createGetter(isReadonly2 = false, shallow = false) {\n  return function get2(target, key, receiver) {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return shallow;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly2) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  };\n}\nconst set$1 = /* @__PURE__ */ createSetter();\nconst shallowSet = /* @__PURE__ */ createSetter(true);\nfunction createSetter(shallow = false) {\n  return function set2(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n    if (!shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  };\n}\nfunction deleteProperty(target, key) {\n  const hadKey = hasOwn(target, key);\n  const oldValue = target[key];\n  const result = Reflect.deleteProperty(target, key);\n  if (result && hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction has$1(target, key) {\n  const result = Reflect.has(target, key);\n  if (!isSymbol(key) || !builtInSymbols.has(key)) {\n    track(target, \"has\", key);\n  }\n  return result;\n}\nfunction ownKeys(target) {\n  track(target, \"iterate\", isArray(target) ? \"length\" : ITERATE_KEY);\n  return Reflect.ownKeys(target);\n}\nconst mutableHandlers = {\n  get: get$1,\n  set: set$1,\n  deleteProperty,\n  has: has$1,\n  ownKeys\n};\nconst readonlyHandlers = {\n  get: readonlyGet,\n  set(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  },\n  deleteProperty(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n};\nconst shallowReactiveHandlers = /* @__PURE__ */ extend(\n  {},\n  mutableHandlers,\n  {\n    get: shallowGet,\n    set: shallowSet\n  }\n);\nconst shallowReadonlyHandlers = /* @__PURE__ */ extend(\n  {},\n  readonlyHandlers,\n  {\n    get: shallowReadonlyGet\n  }\n);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (key !== rawKey) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = !!(process.env.NODE_ENV !== \"production\") ? isMap(target) ? new Map(target) : new Set(target) : void 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      false\n    );\n    readonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      false\n    );\n    shallowInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      true\n    );\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  def(value, \"__v_skip\", true);\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref2) {\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      trackEffects(ref2.dep || (ref2.dep = createDep()), {\n        target: ref2,\n        type: \"get\",\n        key: \"value\"\n      });\n    } else {\n      trackEffects(ref2.dep || (ref2.dep = createDep()));\n    }\n  }\n}\nfunction triggerRefValue(ref2, newVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(dep, {\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: newVal\n      });\n    } else {\n      triggerEffects(dep);\n    }\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  triggerRefValue(ref2, !!(process.env.NODE_ENV !== \"production\") ? ref2.value : void 0);\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = void 0;\n    this.__v_isRef = true;\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    );\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this.__v_isRef = true;\n    this.__v_isReadonly = true;\n  }\n  get value() {\n    return this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(\n    source,\n    key,\n    defaultValue\n  );\n}\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    trackRefValue(self);\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = !!(process.env.NODE_ENV !== \"production\") ? () => {\n      console.warn(\"Write operation failed: computed value is readonly\");\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  if (!!(process.env.NODE_ENV !== \"production\") && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst tick = /* @__PURE__ */ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n  queue.push(fn);\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n  queue.length = 0;\n  queued = false;\n};\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = void 0;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n            scheduled = false;\n          });\n        }\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(\n              true\n              /* computedTrigger */\n            );\n          }\n        }\n      }\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n    return this._value;\n  }\n  get value() {\n    trackRefValue(this);\n    return toRaw(this)._get();\n  }\n}\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, getCurrentScope, isShallow as isShallow$1, isReactive, ReactiveEffect, ref, shallowReadonly, track, reactive, shallowReactive, trigger, isProxy, proxyRefs, markRaw, EffectScope, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { EffectScope, ReactiveEffect, customRef, effect, effectScope, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, NOOP, getGlobalThis, extend, EMPTY_OBJ, toHandlerKey, looseToNumber, hyphenate, camelize, isObject, isOn, hasOwn, isModelListener, toNumber, hasChanged, remove, isSet, isMap, isPlainObject, isBuiltInDirective, invokeArrayFns, isRegExp, capitalize, isGloballyWhitelisted, NO, def, isReservedProp, EMPTY_ARR, toRawType, makeMap, normalizeClass, normalizeStyle } from '@vue/shared';\nexport { camelize, capitalize, normalizeClass, normalizeProps, normalizeStyle, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\nfunction pushWarningContext(vnode) {\n  stack.push(vnode);\n}\nfunction popWarningContext() {\n  stack.pop();\n}\nfunction warn(msg, ...args) {\n  if (!!!(process.env.NODE_ENV !== \"production\"))\n    return;\n  pauseTracking();\n  const instance = stack.length ? stack[stack.length - 1].component : null;\n  const appWarnHandler = instance && instance.appContext.config.warnHandler;\n  const trace = getComponentTrace();\n  if (appWarnHandler) {\n    callWithErrorHandling(\n      appWarnHandler,\n      instance,\n      11,\n      [\n        msg + args.join(\"\"),\n        instance && instance.proxy,\n        trace.map(\n          ({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`\n        ).join(\"\\n\"),\n        trace\n      ]\n    );\n  } else {\n    const warnArgs = [`[Vue warn]: ${msg}`, ...args];\n    if (trace.length && // avoid spamming console during tests\n    true) {\n      warnArgs.push(`\n`, ...formatTrace(trace));\n    }\n    console.warn(...warnArgs);\n  }\n  resetTracking();\n}\nfunction getComponentTrace() {\n  let currentVNode = stack[stack.length - 1];\n  if (!currentVNode) {\n    return [];\n  }\n  const normalizedStack = [];\n  while (currentVNode) {\n    const last = normalizedStack[0];\n    if (last && last.vnode === currentVNode) {\n      last.recurseCount++;\n    } else {\n      normalizedStack.push({\n        vnode: currentVNode,\n        recurseCount: 0\n      });\n    }\n    const parentInstance = currentVNode.component && currentVNode.component.parent;\n    currentVNode = parentInstance && parentInstance.vnode;\n  }\n  return normalizedStack;\n}\nfunction formatTrace(trace) {\n  const logs = [];\n  trace.forEach((entry, i) => {\n    logs.push(...i === 0 ? [] : [`\n`], ...formatTraceEntry(entry));\n  });\n  return logs;\n}\nfunction formatTraceEntry({ vnode, recurseCount }) {\n  const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\n  const isRoot = vnode.component ? vnode.component.parent == null : false;\n  const open = ` at <${formatComponentName(\n    vnode.component,\n    vnode.type,\n    isRoot\n  )}`;\n  const close = `>` + postfix;\n  return vnode.props ? [open, ...formatProps(vnode.props), close] : [open + close];\n}\nfunction formatProps(props) {\n  const res = [];\n  const keys = Object.keys(props);\n  keys.slice(0, 3).forEach((key) => {\n    res.push(...formatProp(key, props[key]));\n  });\n  if (keys.length > 3) {\n    res.push(` ...`);\n  }\n  return res;\n}\nfunction formatProp(key, value, raw) {\n  if (isString(value)) {\n    value = JSON.stringify(value);\n    return raw ? value : [`${key}=${value}`];\n  } else if (typeof value === \"number\" || typeof value === \"boolean\" || value == null) {\n    return raw ? value : [`${key}=${value}`];\n  } else if (isRef(value)) {\n    value = formatProp(key, toRaw(value.value), true);\n    return raw ? value : [`${key}=Ref<`, value, `>`];\n  } else if (isFunction(value)) {\n    return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\n  } else {\n    value = toRaw(value);\n    return raw ? value : [`${key}=`, value];\n  }\n}\nfunction assertNumber(val, type) {\n  if (!!!(process.env.NODE_ENV !== \"production\"))\n    return;\n  if (val === void 0) {\n    return;\n  } else if (typeof val !== \"number\") {\n    warn(`${type} is not a valid number - got ${JSON.stringify(val)}.`);\n  } else if (isNaN(val)) {\n    warn(`${type} is NaN - the duration expression might be incorrect.`);\n  }\n}\n\nconst ErrorTypeStrings = {\n  [\"sp\"]: \"serverPrefetch hook\",\n  [\"bc\"]: \"beforeCreate hook\",\n  [\"c\"]: \"created hook\",\n  [\"bm\"]: \"beforeMount hook\",\n  [\"m\"]: \"mounted hook\",\n  [\"bu\"]: \"beforeUpdate hook\",\n  [\"u\"]: \"updated\",\n  [\"bum\"]: \"beforeUnmount hook\",\n  [\"um\"]: \"unmounted hook\",\n  [\"a\"]: \"activated hook\",\n  [\"da\"]: \"deactivated hook\",\n  [\"ec\"]: \"errorCaptured hook\",\n  [\"rtc\"]: \"renderTracked hook\",\n  [\"rtg\"]: \"renderTriggered hook\",\n  [0]: \"setup function\",\n  [1]: \"render function\",\n  [2]: \"watcher getter\",\n  [3]: \"watcher callback\",\n  [4]: \"watcher cleanup function\",\n  [5]: \"native event handler\",\n  [6]: \"component event handler\",\n  [7]: \"vnode hook\",\n  [8]: \"directive hook\",\n  [9]: \"transition hook\",\n  [10]: \"app errorHandler\",\n  [11]: \"app warnHandler\",\n  [12]: \"ref function\",\n  [13]: \"async component loader\",\n  [14]: \"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core\"\n};\nfunction callWithErrorHandling(fn, instance, type, args) {\n  let res;\n  try {\n    res = args ? fn(...args) : fn();\n  } catch (err) {\n    handleError(err, instance, type);\n  }\n  return res;\n}\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\n  if (isFunction(fn)) {\n    const res = callWithErrorHandling(fn, instance, type, args);\n    if (res && isPromise(res)) {\n      res.catch((err) => {\n        handleError(err, instance, type);\n      });\n    }\n    return res;\n  }\n  const values = [];\n  for (let i = 0; i < fn.length; i++) {\n    values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\n  }\n  return values;\n}\nfunction handleError(err, instance, type, throwInDev = true) {\n  const contextVNode = instance ? instance.vnode : null;\n  if (instance) {\n    let cur = instance.parent;\n    const exposedInstance = instance.proxy;\n    const errorInfo = !!(process.env.NODE_ENV !== \"production\") ? ErrorTypeStrings[type] : type;\n    while (cur) {\n      const errorCapturedHooks = cur.ec;\n      if (errorCapturedHooks) {\n        for (let i = 0; i < errorCapturedHooks.length; i++) {\n          if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\n            return;\n          }\n        }\n      }\n      cur = cur.parent;\n    }\n    const appErrorHandler = instance.appContext.config.errorHandler;\n    if (appErrorHandler) {\n      callWithErrorHandling(\n        appErrorHandler,\n        null,\n        10,\n        [err, exposedInstance, errorInfo]\n      );\n      return;\n    }\n  }\n  logError(err, type, contextVNode, throwInDev);\n}\nfunction logError(err, type, contextVNode, throwInDev = true) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const info = ErrorTypeStrings[type];\n    if (contextVNode) {\n      pushWarningContext(contextVNode);\n    }\n    warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\n    if (contextVNode) {\n      popWarningContext();\n    }\n    if (throwInDev) {\n      throw err;\n    } else {\n      console.error(err);\n    }\n  } else {\n    console.error(err);\n  }\n}\n\nlet isFlushing = false;\nlet isFlushPending = false;\nconst queue = [];\nlet flushIndex = 0;\nconst pendingPostFlushCbs = [];\nlet activePostFlushCbs = null;\nlet postFlushIndex = 0;\nconst resolvedPromise = /* @__PURE__ */ Promise.resolve();\nlet currentFlushPromise = null;\nconst RECURSION_LIMIT = 100;\nfunction nextTick(fn) {\n  const p = currentFlushPromise || resolvedPromise;\n  return fn ? p.then(this ? fn.bind(this) : fn) : p;\n}\nfunction findInsertionIndex(id) {\n  let start = flushIndex + 1;\n  let end = queue.length;\n  while (start < end) {\n    const middle = start + end >>> 1;\n    const middleJobId = getId(queue[middle]);\n    middleJobId < id ? start = middle + 1 : end = middle;\n  }\n  return start;\n}\nfunction queueJob(job) {\n  if (!queue.length || !queue.includes(\n    job,\n    isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex\n  )) {\n    if (job.id == null) {\n      queue.push(job);\n    } else {\n      queue.splice(findInsertionIndex(job.id), 0, job);\n    }\n    queueFlush();\n  }\n}\nfunction queueFlush() {\n  if (!isFlushing && !isFlushPending) {\n    isFlushPending = true;\n    currentFlushPromise = resolvedPromise.then(flushJobs);\n  }\n}\nfunction invalidateJob(job) {\n  const i = queue.indexOf(job);\n  if (i > flushIndex) {\n    queue.splice(i, 1);\n  }\n}\nfunction queuePostFlushCb(cb) {\n  if (!isArray(cb)) {\n    if (!activePostFlushCbs || !activePostFlushCbs.includes(\n      cb,\n      cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex\n    )) {\n      pendingPostFlushCbs.push(cb);\n    }\n  } else {\n    pendingPostFlushCbs.push(...cb);\n  }\n  queueFlush();\n}\nfunction flushPreFlushCbs(seen, i = isFlushing ? flushIndex + 1 : 0) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  for (; i < queue.length; i++) {\n    const cb = queue[i];\n    if (cb && cb.pre) {\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, cb)) {\n        continue;\n      }\n      queue.splice(i, 1);\n      i--;\n      cb();\n    }\n  }\n}\nfunction flushPostFlushCbs(seen) {\n  if (pendingPostFlushCbs.length) {\n    const deduped = [...new Set(pendingPostFlushCbs)];\n    pendingPostFlushCbs.length = 0;\n    if (activePostFlushCbs) {\n      activePostFlushCbs.push(...deduped);\n      return;\n    }\n    activePostFlushCbs = deduped;\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      seen = seen || /* @__PURE__ */ new Map();\n    }\n    activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\n    for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\n      if (!!(process.env.NODE_ENV !== \"production\") && checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\n        continue;\n      }\n      activePostFlushCbs[postFlushIndex]();\n    }\n    activePostFlushCbs = null;\n    postFlushIndex = 0;\n  }\n}\nconst getId = (job) => job.id == null ? Infinity : job.id;\nconst comparator = (a, b) => {\n  const diff = getId(a) - getId(b);\n  if (diff === 0) {\n    if (a.pre && !b.pre)\n      return -1;\n    if (b.pre && !a.pre)\n      return 1;\n  }\n  return diff;\n};\nfunction flushJobs(seen) {\n  isFlushPending = false;\n  isFlushing = true;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    seen = seen || /* @__PURE__ */ new Map();\n  }\n  queue.sort(comparator);\n  const check = !!(process.env.NODE_ENV !== \"production\") ? (job) => checkRecursiveUpdates(seen, job) : NOOP;\n  try {\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\n      const job = queue[flushIndex];\n      if (job && job.active !== false) {\n        if (!!(process.env.NODE_ENV !== \"production\") && check(job)) {\n          continue;\n        }\n        callWithErrorHandling(job, null, 14);\n      }\n    }\n  } finally {\n    flushIndex = 0;\n    queue.length = 0;\n    flushPostFlushCbs(seen);\n    isFlushing = false;\n    currentFlushPromise = null;\n    if (queue.length || pendingPostFlushCbs.length) {\n      flushJobs(seen);\n    }\n  }\n}\nfunction checkRecursiveUpdates(seen, fn) {\n  if (!seen.has(fn)) {\n    seen.set(fn, 1);\n  } else {\n    const count = seen.get(fn);\n    if (count > RECURSION_LIMIT) {\n      const instance = fn.ownerInstance;\n      const componentName = instance && getComponentName(instance.type);\n      warn(\n        `Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`\n      );\n      return true;\n    } else {\n      seen.set(fn, count + 1);\n    }\n  }\n}\n\nlet isHmrUpdating = false;\nconst hmrDirtyComponents = /* @__PURE__ */ new Set();\nif (!!(process.env.NODE_ENV !== \"production\")) {\n  getGlobalThis().__VUE_HMR_RUNTIME__ = {\n    createRecord: tryWrap(createRecord),\n    rerender: tryWrap(rerender),\n    reload: tryWrap(reload)\n  };\n}\nconst map = /* @__PURE__ */ new Map();\nfunction registerHMR(instance) {\n  const id = instance.type.__hmrId;\n  let record = map.get(id);\n  if (!record) {\n    createRecord(id, instance.type);\n    record = map.get(id);\n  }\n  record.instances.add(instance);\n}\nfunction unregisterHMR(instance) {\n  map.get(instance.type.__hmrId).instances.delete(instance);\n}\nfunction createRecord(id, initialDef) {\n  if (map.has(id)) {\n    return false;\n  }\n  map.set(id, {\n    initialDef: normalizeClassComponent(initialDef),\n    instances: /* @__PURE__ */ new Set()\n  });\n  return true;\n}\nfunction normalizeClassComponent(component) {\n  return isClassComponent(component) ? component.__vccOpts : component;\n}\nfunction rerender(id, newRender) {\n  const record = map.get(id);\n  if (!record) {\n    return;\n  }\n  record.initialDef.render = newRender;\n  [...record.instances].forEach((instance) => {\n    if (newRender) {\n      instance.render = newRender;\n      normalizeClassComponent(instance.type).render = newRender;\n    }\n    instance.renderCache = [];\n    isHmrUpdating = true;\n    instance.update();\n    isHmrUpdating = false;\n  });\n}\nfunction reload(id, newComp) {\n  const record = map.get(id);\n  if (!record)\n    return;\n  newComp = normalizeClassComponent(newComp);\n  updateComponentDef(record.initialDef, newComp);\n  const instances = [...record.instances];\n  for (const instance of instances) {\n    const oldComp = normalizeClassComponent(instance.type);\n    if (!hmrDirtyComponents.has(oldComp)) {\n      if (oldComp !== record.initialDef) {\n        updateComponentDef(oldComp, newComp);\n      }\n      hmrDirtyComponents.add(oldComp);\n    }\n    instance.appContext.propsCache.delete(instance.type);\n    instance.appContext.emitsCache.delete(instance.type);\n    instance.appContext.optionsCache.delete(instance.type);\n    if (instance.ceReload) {\n      hmrDirtyComponents.add(oldComp);\n      instance.ceReload(newComp.styles);\n      hmrDirtyComponents.delete(oldComp);\n    } else if (instance.parent) {\n      queueJob(instance.parent.update);\n    } else if (instance.appContext.reload) {\n      instance.appContext.reload();\n    } else if (typeof window !== \"undefined\") {\n      window.location.reload();\n    } else {\n      console.warn(\n        \"[HMR] Root or manually mounted instance modified. Full reload required.\"\n      );\n    }\n  }\n  queuePostFlushCb(() => {\n    for (const instance of instances) {\n      hmrDirtyComponents.delete(\n        normalizeClassComponent(instance.type)\n      );\n    }\n  });\n}\nfunction updateComponentDef(oldComp, newComp) {\n  extend(oldComp, newComp);\n  for (const key in oldComp) {\n    if (key !== \"__file\" && !(key in newComp)) {\n      delete oldComp[key];\n    }\n  }\n}\nfunction tryWrap(fn) {\n  return (id, arg) => {\n    try {\n      return fn(id, arg);\n    } catch (e) {\n      console.error(e);\n      console.warn(\n        `[HMR] Something went wrong during Vue component hot-reload. Full reload required.`\n      );\n    }\n  };\n}\n\nlet devtools;\nlet buffer = [];\nlet devtoolsNotInstalled = false;\nfunction emit$1(event, ...args) {\n  if (devtools) {\n    devtools.emit(event, ...args);\n  } else if (!devtoolsNotInstalled) {\n    buffer.push({ event, args });\n  }\n}\nfunction setDevtoolsHook(hook, target) {\n  var _a, _b;\n  devtools = hook;\n  if (devtools) {\n    devtools.enabled = true;\n    buffer.forEach(({ event, args }) => devtools.emit(event, ...args));\n    buffer = [];\n  } else if (\n    // handle late devtools injection - only do this if we are in an actual\n    // browser environment to avoid the timer handle stalling test runner exit\n    // (#4815)\n    typeof window !== \"undefined\" && // some envs mock window but not fully\n    window.HTMLElement && // also exclude jsdom\n    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes(\"jsdom\"))\n  ) {\n    const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];\n    replay.push((newHook) => {\n      setDevtoolsHook(newHook, target);\n    });\n    setTimeout(() => {\n      if (!devtools) {\n        target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;\n        devtoolsNotInstalled = true;\n        buffer = [];\n      }\n    }, 3e3);\n  } else {\n    devtoolsNotInstalled = true;\n    buffer = [];\n  }\n}\nfunction devtoolsInitApp(app, version) {\n  emit$1(\"app:init\" /* APP_INIT */, app, version, {\n    Fragment,\n    Text,\n    Comment,\n    Static\n  });\n}\nfunction devtoolsUnmountApp(app) {\n  emit$1(\"app:unmount\" /* APP_UNMOUNT */, app);\n}\nconst devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:added\" /* COMPONENT_ADDED */\n);\nconst devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\nconst _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook(\n  \"component:removed\" /* COMPONENT_REMOVED */\n);\nconst devtoolsComponentRemoved = (component) => {\n  if (devtools && typeof devtools.cleanupBuffer === \"function\" && // remove the component if it wasn't buffered\n  !devtools.cleanupBuffer(component)) {\n    _devtoolsComponentRemoved(component);\n  }\n};\nfunction createDevtoolsComponentHook(hook) {\n  return (component) => {\n    emit$1(\n      hook,\n      component.appContext.app,\n      component.uid,\n      component.parent ? component.parent.uid : void 0,\n      component\n    );\n  };\n}\nconst devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:start\" /* PERFORMANCE_START */\n);\nconst devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook(\n  \"perf:end\" /* PERFORMANCE_END */\n);\nfunction createDevtoolsPerformanceHook(hook) {\n  return (component, type, time) => {\n    emit$1(hook, component.appContext.app, component.uid, component, type, time);\n  };\n}\nfunction devtoolsComponentEmit(component, event, params) {\n  emit$1(\n    \"component:emit\" /* COMPONENT_EMIT */,\n    component.appContext.app,\n    component,\n    event,\n    params\n  );\n}\n\nfunction emit(instance, event, ...rawArgs) {\n  if (instance.isUnmounted)\n    return;\n  const props = instance.vnode.props || EMPTY_OBJ;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const {\n      emitsOptions,\n      propsOptions: [propsOptions]\n    } = instance;\n    if (emitsOptions) {\n      if (!(event in emitsOptions) && true) {\n        if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\n          warn(\n            `Component emitted event \"${event}\" but it is neither declared in the emits option nor as an \"${toHandlerKey(event)}\" prop.`\n          );\n        }\n      } else {\n        const validator = emitsOptions[event];\n        if (isFunction(validator)) {\n          const isValid = validator(...rawArgs);\n          if (!isValid) {\n            warn(\n              `Invalid event arguments: event validation failed for event \"${event}\".`\n            );\n          }\n        }\n      }\n    }\n  }\n  let args = rawArgs;\n  const isModelListener = event.startsWith(\"update:\");\n  const modelArg = isModelListener && event.slice(7);\n  if (modelArg && modelArg in props) {\n    const modifiersKey = `${modelArg === \"modelValue\" ? \"model\" : modelArg}Modifiers`;\n    const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\n    if (trim) {\n      args = rawArgs.map((a) => isString(a) ? a.trim() : a);\n    }\n    if (number) {\n      args = rawArgs.map(looseToNumber);\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsComponentEmit(instance, event, args);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const lowerCaseEvent = event.toLowerCase();\n    if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\n      warn(\n        `Event \"${lowerCaseEvent}\" is emitted in component ${formatComponentName(\n          instance,\n          instance.type\n        )} but the handler is registered for \"${event}\". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`\n      );\n    }\n  }\n  let handlerName;\n  let handler = props[handlerName = toHandlerKey(event)] || // also try camelCase event handler (#2249)\n  props[handlerName = toHandlerKey(camelize(event))];\n  if (!handler && isModelListener) {\n    handler = props[handlerName = toHandlerKey(hyphenate(event))];\n  }\n  if (handler) {\n    callWithAsyncErrorHandling(\n      handler,\n      instance,\n      6,\n      args\n    );\n  }\n  const onceHandler = props[handlerName + `Once`];\n  if (onceHandler) {\n    if (!instance.emitted) {\n      instance.emitted = {};\n    } else if (instance.emitted[handlerName]) {\n      return;\n    }\n    instance.emitted[handlerName] = true;\n    callWithAsyncErrorHandling(\n      onceHandler,\n      instance,\n      6,\n      args\n    );\n  }\n}\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.emitsCache;\n  const cached = cache.get(comp);\n  if (cached !== void 0) {\n    return cached;\n  }\n  const raw = comp.emits;\n  let normalized = {};\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendEmits = (raw2) => {\n      const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);\n      if (normalizedFromExtend) {\n        hasExtends = true;\n        extend(normalized, normalizedFromExtend);\n      }\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendEmits);\n    }\n    if (comp.extends) {\n      extendEmits(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendEmits);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, null);\n    }\n    return null;\n  }\n  if (isArray(raw)) {\n    raw.forEach((key) => normalized[key] = null);\n  } else {\n    extend(normalized, raw);\n  }\n  if (isObject(comp)) {\n    cache.set(comp, normalized);\n  }\n  return normalized;\n}\nfunction isEmitListener(options, key) {\n  if (!options || !isOn(key)) {\n    return false;\n  }\n  key = key.slice(2).replace(/Once$/, \"\");\n  return hasOwn(options, key[0].toLowerCase() + key.slice(1)) || hasOwn(options, hyphenate(key)) || hasOwn(options, key);\n}\n\nlet currentRenderingInstance = null;\nlet currentScopeId = null;\nfunction setCurrentRenderingInstance(instance) {\n  const prev = currentRenderingInstance;\n  currentRenderingInstance = instance;\n  currentScopeId = instance && instance.type.__scopeId || null;\n  return prev;\n}\nfunction pushScopeId(id) {\n  currentScopeId = id;\n}\nfunction popScopeId() {\n  currentScopeId = null;\n}\nconst withScopeId = (_id) => withCtx;\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {\n  if (!ctx)\n    return fn;\n  if (fn._n) {\n    return fn;\n  }\n  const renderFnWithContext = (...args) => {\n    if (renderFnWithContext._d) {\n      setBlockTracking(-1);\n    }\n    const prevInstance = setCurrentRenderingInstance(ctx);\n    let res;\n    try {\n      res = fn(...args);\n    } finally {\n      setCurrentRenderingInstance(prevInstance);\n      if (renderFnWithContext._d) {\n        setBlockTracking(1);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentUpdated(ctx);\n    }\n    return res;\n  };\n  renderFnWithContext._n = true;\n  renderFnWithContext._c = true;\n  renderFnWithContext._d = true;\n  return renderFnWithContext;\n}\n\nlet accessedAttrs = false;\nfunction markAttrsAccessed() {\n  accessedAttrs = true;\n}\nfunction renderComponentRoot(instance) {\n  const {\n    type: Component,\n    vnode,\n    proxy,\n    withProxy,\n    props,\n    propsOptions: [propsOptions],\n    slots,\n    attrs,\n    emit,\n    render,\n    renderCache,\n    data,\n    setupState,\n    ctx,\n    inheritAttrs\n  } = instance;\n  let result;\n  let fallthroughAttrs;\n  const prev = setCurrentRenderingInstance(instance);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    accessedAttrs = false;\n  }\n  try {\n    if (vnode.shapeFlag & 4) {\n      const proxyToUse = withProxy || proxy;\n      result = normalizeVNode(\n        render.call(\n          proxyToUse,\n          proxyToUse,\n          renderCache,\n          props,\n          setupState,\n          data,\n          ctx\n        )\n      );\n      fallthroughAttrs = attrs;\n    } else {\n      const render2 = Component;\n      if (!!(process.env.NODE_ENV !== \"production\") && attrs === props) {\n        markAttrsAccessed();\n      }\n      result = normalizeVNode(\n        render2.length > 1 ? render2(\n          props,\n          !!(process.env.NODE_ENV !== \"production\") ? {\n            get attrs() {\n              markAttrsAccessed();\n              return attrs;\n            },\n            slots,\n            emit\n          } : { attrs, slots, emit }\n        ) : render2(\n          props,\n          null\n          /* we know it doesn't need it */\n        )\n      );\n      fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);\n    }\n  } catch (err) {\n    blockStack.length = 0;\n    handleError(err, instance, 1);\n    result = createVNode(Comment);\n  }\n  let root = result;\n  let setRoot = void 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && result.patchFlag > 0 && result.patchFlag & 2048) {\n    [root, setRoot] = getChildRoot(result);\n  }\n  if (fallthroughAttrs && inheritAttrs !== false) {\n    const keys = Object.keys(fallthroughAttrs);\n    const { shapeFlag } = root;\n    if (keys.length) {\n      if (shapeFlag & (1 | 6)) {\n        if (propsOptions && keys.some(isModelListener)) {\n          fallthroughAttrs = filterModelListeners(\n            fallthroughAttrs,\n            propsOptions\n          );\n        }\n        root = cloneVNode(root, fallthroughAttrs);\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !accessedAttrs && root.type !== Comment) {\n        const allAttrs = Object.keys(attrs);\n        const eventAttrs = [];\n        const extraAttrs = [];\n        for (let i = 0, l = allAttrs.length; i < l; i++) {\n          const key = allAttrs[i];\n          if (isOn(key)) {\n            if (!isModelListener(key)) {\n              eventAttrs.push(key[2].toLowerCase() + key.slice(3));\n            }\n          } else {\n            extraAttrs.push(key);\n          }\n        }\n        if (extraAttrs.length) {\n          warn(\n            `Extraneous non-props attributes (${extraAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`\n          );\n        }\n        if (eventAttrs.length) {\n          warn(\n            `Extraneous non-emits event listeners (${eventAttrs.join(\", \")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the \"emits\" option.`\n          );\n        }\n      }\n    }\n  }\n  if (vnode.dirs) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn(\n        `Runtime directive used on component with non-element root node. The directives will not function as intended.`\n      );\n    }\n    root = cloneVNode(root);\n    root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\n  }\n  if (vnode.transition) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isElementRoot(root)) {\n      warn(\n        `Component inside <Transition> renders non-element root node that cannot be animated.`\n      );\n    }\n    root.transition = vnode.transition;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && setRoot) {\n    setRoot(root);\n  } else {\n    result = root;\n  }\n  setCurrentRenderingInstance(prev);\n  return result;\n}\nconst getChildRoot = (vnode) => {\n  const rawChildren = vnode.children;\n  const dynamicChildren = vnode.dynamicChildren;\n  const childRoot = filterSingleRoot(rawChildren);\n  if (!childRoot) {\n    return [vnode, void 0];\n  }\n  const index = rawChildren.indexOf(childRoot);\n  const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\n  const setRoot = (updatedRoot) => {\n    rawChildren[index] = updatedRoot;\n    if (dynamicChildren) {\n      if (dynamicIndex > -1) {\n        dynamicChildren[dynamicIndex] = updatedRoot;\n      } else if (updatedRoot.patchFlag > 0) {\n        vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\n      }\n    }\n  };\n  return [normalizeVNode(childRoot), setRoot];\n};\nfunction filterSingleRoot(children) {\n  let singleRoot;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (isVNode(child)) {\n      if (child.type !== Comment || child.children === \"v-if\") {\n        if (singleRoot) {\n          return;\n        } else {\n          singleRoot = child;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n  return singleRoot;\n}\nconst getFunctionalFallthrough = (attrs) => {\n  let res;\n  for (const key in attrs) {\n    if (key === \"class\" || key === \"style\" || isOn(key)) {\n      (res || (res = {}))[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst filterModelListeners = (attrs, props) => {\n  const res = {};\n  for (const key in attrs) {\n    if (!isModelListener(key) || !(key.slice(9) in props)) {\n      res[key] = attrs[key];\n    }\n  }\n  return res;\n};\nconst isElementRoot = (vnode) => {\n  return vnode.shapeFlag & (6 | 1) || vnode.type === Comment;\n};\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\n  const { props: prevProps, children: prevChildren, component } = prevVNode;\n  const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\n  const emits = component.emitsOptions;\n  if (!!(process.env.NODE_ENV !== \"production\") && (prevChildren || nextChildren) && isHmrUpdating) {\n    return true;\n  }\n  if (nextVNode.dirs || nextVNode.transition) {\n    return true;\n  }\n  if (optimized && patchFlag >= 0) {\n    if (patchFlag & 1024) {\n      return true;\n    }\n    if (patchFlag & 16) {\n      if (!prevProps) {\n        return !!nextProps;\n      }\n      return hasPropsChanged(prevProps, nextProps, emits);\n    } else if (patchFlag & 8) {\n      const dynamicProps = nextVNode.dynamicProps;\n      for (let i = 0; i < dynamicProps.length; i++) {\n        const key = dynamicProps[i];\n        if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) {\n          return true;\n        }\n      }\n    }\n  } else {\n    if (prevChildren || nextChildren) {\n      if (!nextChildren || !nextChildren.$stable) {\n        return true;\n      }\n    }\n    if (prevProps === nextProps) {\n      return false;\n    }\n    if (!prevProps) {\n      return !!nextProps;\n    }\n    if (!nextProps) {\n      return true;\n    }\n    return hasPropsChanged(prevProps, nextProps, emits);\n  }\n  return false;\n}\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\n  const nextKeys = Object.keys(nextProps);\n  if (nextKeys.length !== Object.keys(prevProps).length) {\n    return true;\n  }\n  for (let i = 0; i < nextKeys.length; i++) {\n    const key = nextKeys[i];\n    if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction updateHOCHostEl({ vnode, parent }, el) {\n  while (parent && parent.subTree === vnode) {\n    (vnode = parent.vnode).el = el;\n    parent = parent.parent;\n  }\n}\n\nconst isSuspense = (type) => type.__isSuspense;\nconst SuspenseImpl = {\n  name: \"Suspense\",\n  // In order to make Suspense tree-shakable, we need to avoid importing it\n  // directly in the renderer. The renderer checks for the __isSuspense flag\n  // on a vnode's type and calls the `process` method, passing in renderer\n  // internals.\n  __isSuspense: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n    if (n1 == null) {\n      mountSuspense(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    } else {\n      patchSuspense(\n        n1,\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        rendererInternals\n      );\n    }\n  },\n  hydrate: hydrateSuspense,\n  create: createSuspenseBoundary,\n  normalize: normalizeSuspenseChildren\n};\nconst Suspense = SuspenseImpl ;\nfunction triggerEvent(vnode, name) {\n  const eventListener = vnode.props && vnode.props[name];\n  if (isFunction(eventListener)) {\n    eventListener();\n  }\n}\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\n  const {\n    p: patch,\n    o: { createElement }\n  } = rendererInternals;\n  const hiddenContainer = createElement(\"div\");\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    container,\n    hiddenContainer,\n    anchor,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals\n  );\n  patch(\n    null,\n    suspense.pendingBranch = vnode.ssContent,\n    hiddenContainer,\n    null,\n    parentComponent,\n    suspense,\n    isSVG,\n    slotScopeIds\n  );\n  if (suspense.deps > 0) {\n    triggerEvent(vnode, \"onPending\");\n    triggerEvent(vnode, \"onFallback\");\n    patch(\n      null,\n      vnode.ssFallback,\n      container,\n      anchor,\n      parentComponent,\n      null,\n      // fallback tree will not have suspense context\n      isSVG,\n      slotScopeIds\n    );\n    setActiveBranch(suspense, vnode.ssFallback);\n  } else {\n    suspense.resolve(false, true);\n  }\n}\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\n  const suspense = n2.suspense = n1.suspense;\n  suspense.vnode = n2;\n  n2.el = n1.el;\n  const newBranch = n2.ssContent;\n  const newFallback = n2.ssFallback;\n  const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\n  if (pendingBranch) {\n    suspense.pendingBranch = newBranch;\n    if (isSameVNodeType(newBranch, pendingBranch)) {\n      patch(\n        pendingBranch,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else if (isInFallback) {\n        patch(\n          activeBranch,\n          newFallback,\n          container,\n          anchor,\n          parentComponent,\n          null,\n          // fallback tree will not have suspense context\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, newFallback);\n      }\n    } else {\n      suspense.pendingId++;\n      if (isHydrating) {\n        suspense.isHydrating = false;\n        suspense.activeBranch = pendingBranch;\n      } else {\n        unmount(pendingBranch, parentComponent, suspense);\n      }\n      suspense.deps = 0;\n      suspense.effects.length = 0;\n      suspense.hiddenContainer = createElement(\"div\");\n      if (isInFallback) {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        } else {\n          patch(\n            activeBranch,\n            newFallback,\n            container,\n            anchor,\n            parentComponent,\n            null,\n            // fallback tree will not have suspense context\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          setActiveBranch(suspense, newFallback);\n        }\n      } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n        patch(\n          activeBranch,\n          newBranch,\n          container,\n          anchor,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        suspense.resolve(true);\n      } else {\n        patch(\n          null,\n          newBranch,\n          suspense.hiddenContainer,\n          null,\n          parentComponent,\n          suspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        if (suspense.deps <= 0) {\n          suspense.resolve();\n        }\n      }\n    }\n  } else {\n    if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\n      patch(\n        activeBranch,\n        newBranch,\n        container,\n        anchor,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      setActiveBranch(suspense, newBranch);\n    } else {\n      triggerEvent(n2, \"onPending\");\n      suspense.pendingBranch = newBranch;\n      suspense.pendingId++;\n      patch(\n        null,\n        newBranch,\n        suspense.hiddenContainer,\n        null,\n        parentComponent,\n        suspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n      if (suspense.deps <= 0) {\n        suspense.resolve();\n      } else {\n        const { timeout, pendingId } = suspense;\n        if (timeout > 0) {\n          setTimeout(() => {\n            if (suspense.pendingId === pendingId) {\n              suspense.fallback(newFallback);\n            }\n          }, timeout);\n        } else if (timeout === 0) {\n          suspense.fallback(newFallback);\n        }\n      }\n    }\n  }\n}\nlet hasWarned = false;\nfunction createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\n  if (!!(process.env.NODE_ENV !== \"production\") && true && !hasWarned) {\n    hasWarned = true;\n    console[console.info ? \"info\" : \"log\"](\n      `<Suspense> is an experimental feature and its API will likely change.`\n    );\n  }\n  const {\n    p: patch,\n    m: move,\n    um: unmount,\n    n: next,\n    o: { parentNode, remove }\n  } = rendererInternals;\n  let parentSuspenseId;\n  const isSuspensible = isVNodeSuspensible(vnode);\n  if (isSuspensible) {\n    if (parentSuspense == null ? void 0 : parentSuspense.pendingBranch) {\n      parentSuspenseId = parentSuspense.pendingId;\n      parentSuspense.deps++;\n    }\n  }\n  const timeout = vnode.props ? toNumber(vnode.props.timeout) : void 0;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(timeout, `Suspense timeout`);\n  }\n  const suspense = {\n    vnode,\n    parent: parentSuspense,\n    parentComponent,\n    isSVG,\n    container,\n    hiddenContainer,\n    anchor,\n    deps: 0,\n    pendingId: 0,\n    timeout: typeof timeout === \"number\" ? timeout : -1,\n    activeBranch: null,\n    pendingBranch: null,\n    isInFallback: true,\n    isHydrating,\n    isUnmounted: false,\n    effects: [],\n    resolve(resume = false, sync = false) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        if (!resume && !suspense.pendingBranch) {\n          throw new Error(\n            `suspense.resolve() is called without a pending branch.`\n          );\n        }\n        if (suspense.isUnmounted) {\n          throw new Error(\n            `suspense.resolve() is called on an already unmounted suspense boundary.`\n          );\n        }\n      }\n      const {\n        vnode: vnode2,\n        activeBranch,\n        pendingBranch,\n        pendingId,\n        effects,\n        parentComponent: parentComponent2,\n        container: container2\n      } = suspense;\n      if (suspense.isHydrating) {\n        suspense.isHydrating = false;\n      } else if (!resume) {\n        const delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === \"out-in\";\n        if (delayEnter) {\n          activeBranch.transition.afterLeave = () => {\n            if (pendingId === suspense.pendingId) {\n              move(pendingBranch, container2, anchor2, 0);\n            }\n          };\n        }\n        let { anchor: anchor2 } = suspense;\n        if (activeBranch) {\n          anchor2 = next(activeBranch);\n          unmount(activeBranch, parentComponent2, suspense, true);\n        }\n        if (!delayEnter) {\n          move(pendingBranch, container2, anchor2, 0);\n        }\n      }\n      setActiveBranch(suspense, pendingBranch);\n      suspense.pendingBranch = null;\n      suspense.isInFallback = false;\n      let parent = suspense.parent;\n      let hasUnresolvedAncestor = false;\n      while (parent) {\n        if (parent.pendingBranch) {\n          parent.effects.push(...effects);\n          hasUnresolvedAncestor = true;\n          break;\n        }\n        parent = parent.parent;\n      }\n      if (!hasUnresolvedAncestor) {\n        queuePostFlushCb(effects);\n      }\n      suspense.effects = [];\n      if (isSuspensible) {\n        if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {\n          parentSuspense.deps--;\n          if (parentSuspense.deps === 0 && !sync) {\n            parentSuspense.resolve();\n          }\n        }\n      }\n      triggerEvent(vnode2, \"onResolve\");\n    },\n    fallback(fallbackVNode) {\n      if (!suspense.pendingBranch) {\n        return;\n      }\n      const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, isSVG: isSVG2 } = suspense;\n      triggerEvent(vnode2, \"onFallback\");\n      const anchor2 = next(activeBranch);\n      const mountFallback = () => {\n        if (!suspense.isInFallback) {\n          return;\n        }\n        patch(\n          null,\n          fallbackVNode,\n          container2,\n          anchor2,\n          parentComponent2,\n          null,\n          // fallback tree will not have suspense context\n          isSVG2,\n          slotScopeIds,\n          optimized\n        );\n        setActiveBranch(suspense, fallbackVNode);\n      };\n      const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === \"out-in\";\n      if (delayEnter) {\n        activeBranch.transition.afterLeave = mountFallback;\n      }\n      suspense.isInFallback = true;\n      unmount(\n        activeBranch,\n        parentComponent2,\n        null,\n        // no suspense so unmount hooks fire now\n        true\n        // shouldRemove\n      );\n      if (!delayEnter) {\n        mountFallback();\n      }\n    },\n    move(container2, anchor2, type) {\n      suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);\n      suspense.container = container2;\n    },\n    next() {\n      return suspense.activeBranch && next(suspense.activeBranch);\n    },\n    registerDep(instance, setupRenderEffect) {\n      const isInPendingSuspense = !!suspense.pendingBranch;\n      if (isInPendingSuspense) {\n        suspense.deps++;\n      }\n      const hydratedEl = instance.vnode.el;\n      instance.asyncDep.catch((err) => {\n        handleError(err, instance, 0);\n      }).then((asyncSetupResult) => {\n        if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) {\n          return;\n        }\n        instance.asyncResolved = true;\n        const { vnode: vnode2 } = instance;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(vnode2);\n        }\n        handleSetupResult(instance, asyncSetupResult, false);\n        if (hydratedEl) {\n          vnode2.el = hydratedEl;\n        }\n        const placeholder = !hydratedEl && instance.subTree.el;\n        setupRenderEffect(\n          instance,\n          vnode2,\n          // component may have been moved before resolve.\n          // if this is not a hydration, instance.subTree will be the comment\n          // placeholder.\n          parentNode(hydratedEl || instance.subTree.el),\n          // anchor will not be used if this is hydration, so only need to\n          // consider the comment placeholder case.\n          hydratedEl ? null : next(instance.subTree),\n          suspense,\n          isSVG,\n          optimized\n        );\n        if (placeholder) {\n          remove(placeholder);\n        }\n        updateHOCHostEl(instance, vnode2.el);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        if (isInPendingSuspense && --suspense.deps === 0) {\n          suspense.resolve();\n        }\n      });\n    },\n    unmount(parentSuspense2, doRemove) {\n      suspense.isUnmounted = true;\n      if (suspense.activeBranch) {\n        unmount(\n          suspense.activeBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n      if (suspense.pendingBranch) {\n        unmount(\n          suspense.pendingBranch,\n          parentComponent,\n          parentSuspense2,\n          doRemove\n        );\n      }\n    }\n  };\n  return suspense;\n}\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\n  const suspense = vnode.suspense = createSuspenseBoundary(\n    vnode,\n    parentSuspense,\n    parentComponent,\n    node.parentNode,\n    document.createElement(\"div\"),\n    null,\n    isSVG,\n    slotScopeIds,\n    optimized,\n    rendererInternals,\n    true\n    /* hydrating */\n  );\n  const result = hydrateNode(\n    node,\n    suspense.pendingBranch = vnode.ssContent,\n    parentComponent,\n    suspense,\n    slotScopeIds,\n    optimized\n  );\n  if (suspense.deps === 0) {\n    suspense.resolve(false, true);\n  }\n  return result;\n}\nfunction normalizeSuspenseChildren(vnode) {\n  const { shapeFlag, children } = vnode;\n  const isSlotChildren = shapeFlag & 32;\n  vnode.ssContent = normalizeSuspenseSlot(\n    isSlotChildren ? children.default : children\n  );\n  vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);\n}\nfunction normalizeSuspenseSlot(s) {\n  let block;\n  if (isFunction(s)) {\n    const trackBlock = isBlockTreeEnabled && s._c;\n    if (trackBlock) {\n      s._d = false;\n      openBlock();\n    }\n    s = s();\n    if (trackBlock) {\n      s._d = true;\n      block = currentBlock;\n      closeBlock();\n    }\n  }\n  if (isArray(s)) {\n    const singleChild = filterSingleRoot(s);\n    if (!!(process.env.NODE_ENV !== \"production\") && !singleChild) {\n      warn(`<Suspense> slots expect a single root node.`);\n    }\n    s = singleChild;\n  }\n  s = normalizeVNode(s);\n  if (block && !s.dynamicChildren) {\n    s.dynamicChildren = block.filter((c) => c !== s);\n  }\n  return s;\n}\nfunction queueEffectWithSuspense(fn, suspense) {\n  if (suspense && suspense.pendingBranch) {\n    if (isArray(fn)) {\n      suspense.effects.push(...fn);\n    } else {\n      suspense.effects.push(fn);\n    }\n  } else {\n    queuePostFlushCb(fn);\n  }\n}\nfunction setActiveBranch(suspense, branch) {\n  suspense.activeBranch = branch;\n  const { vnode, parentComponent } = suspense;\n  const el = vnode.el = branch.el;\n  if (parentComponent && parentComponent.subTree === vnode) {\n    parentComponent.vnode.el = el;\n    updateHOCHostEl(parentComponent, el);\n  }\n}\nfunction isVNodeSuspensible(vnode) {\n  var _a;\n  return ((_a = vnode.props) == null ? void 0 : _a.suspensible) != null && vnode.props.suspensible !== false;\n}\n\nfunction watchEffect(effect, options) {\n  return doWatch(effect, null, options);\n}\nfunction watchPostEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"post\" }) : { flush: \"post\" }\n  );\n}\nfunction watchSyncEffect(effect, options) {\n  return doWatch(\n    effect,\n    null,\n    !!(process.env.NODE_ENV !== \"production\") ? extend({}, options, { flush: \"sync\" }) : { flush: \"sync\" }\n  );\n}\nconst INITIAL_WATCHER_VALUE = {};\nfunction watch(source, cb, options) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(cb)) {\n    warn(\n      `\\`watch(fn, options?)\\` signature has been moved to a separate API. Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only supports \\`watch(source, cb, options?) signature.`\n    );\n  }\n  return doWatch(source, cb, options);\n}\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ) {\n  var _a;\n  if (!!(process.env.NODE_ENV !== \"production\") && !cb) {\n    if (immediate !== void 0) {\n      warn(\n        `watch() \"immediate\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n    if (deep !== void 0) {\n      warn(\n        `watch() \"deep\" option is only respected when using the watch(source, callback, options?) signature.`\n      );\n    }\n  }\n  const warnInvalidSource = (s) => {\n    warn(\n      `Invalid watch source: `,\n      s,\n      `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`\n    );\n  };\n  const instance = getCurrentScope() === ((_a = currentInstance) == null ? void 0 : _a.scope) ? currentInstance : null;\n  let getter;\n  let forceTrigger = false;\n  let isMultiSource = false;\n  if (isRef(source)) {\n    getter = () => source.value;\n    forceTrigger = isShallow$1(source);\n  } else if (isReactive(source)) {\n    getter = () => source;\n    deep = true;\n  } else if (isArray(source)) {\n    isMultiSource = true;\n    forceTrigger = source.some((s) => isReactive(s) || isShallow$1(s));\n    getter = () => source.map((s) => {\n      if (isRef(s)) {\n        return s.value;\n      } else if (isReactive(s)) {\n        return traverse(s);\n      } else if (isFunction(s)) {\n        return callWithErrorHandling(s, instance, 2);\n      } else {\n        !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(s);\n      }\n    });\n  } else if (isFunction(source)) {\n    if (cb) {\n      getter = () => callWithErrorHandling(source, instance, 2);\n    } else {\n      getter = () => {\n        if (instance && instance.isUnmounted) {\n          return;\n        }\n        if (cleanup) {\n          cleanup();\n        }\n        return callWithAsyncErrorHandling(\n          source,\n          instance,\n          3,\n          [onCleanup]\n        );\n      };\n    }\n  } else {\n    getter = NOOP;\n    !!(process.env.NODE_ENV !== \"production\") && warnInvalidSource(source);\n  }\n  if (cb && deep) {\n    const baseGetter = getter;\n    getter = () => traverse(baseGetter());\n  }\n  let cleanup;\n  let onCleanup = (fn) => {\n    cleanup = effect.onStop = () => {\n      callWithErrorHandling(fn, instance, 4);\n    };\n  };\n  let ssrCleanup;\n  if (isInSSRComponentSetup) {\n    onCleanup = NOOP;\n    if (!cb) {\n      getter();\n    } else if (immediate) {\n      callWithAsyncErrorHandling(cb, instance, 3, [\n        getter(),\n        isMultiSource ? [] : void 0,\n        onCleanup\n      ]);\n    }\n    if (flush === \"sync\") {\n      const ctx = useSSRContext();\n      ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);\n    } else {\n      return NOOP;\n    }\n  }\n  let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;\n  const job = () => {\n    if (!effect.active) {\n      return;\n    }\n    if (cb) {\n      const newValue = effect.run();\n      if (deep || forceTrigger || (isMultiSource ? newValue.some(\n        (v, i) => hasChanged(v, oldValue[i])\n      ) : hasChanged(newValue, oldValue)) || false) {\n        if (cleanup) {\n          cleanup();\n        }\n        callWithAsyncErrorHandling(cb, instance, 3, [\n          newValue,\n          // pass undefined as the old value when it's changed for the first time\n          oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,\n          onCleanup\n        ]);\n        oldValue = newValue;\n      }\n    } else {\n      effect.run();\n    }\n  };\n  job.allowRecurse = !!cb;\n  let scheduler;\n  if (flush === \"sync\") {\n    scheduler = job;\n  } else if (flush === \"post\") {\n    scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\n  } else {\n    job.pre = true;\n    if (instance)\n      job.id = instance.uid;\n    scheduler = () => queueJob(job);\n  }\n  const effect = new ReactiveEffect(getter, scheduler);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    effect.onTrack = onTrack;\n    effect.onTrigger = onTrigger;\n  }\n  if (cb) {\n    if (immediate) {\n      job();\n    } else {\n      oldValue = effect.run();\n    }\n  } else if (flush === \"post\") {\n    queuePostRenderEffect(\n      effect.run.bind(effect),\n      instance && instance.suspense\n    );\n  } else {\n    effect.run();\n  }\n  const unwatch = () => {\n    effect.stop();\n    if (instance && instance.scope) {\n      remove(instance.scope.effects, effect);\n    }\n  };\n  if (ssrCleanup)\n    ssrCleanup.push(unwatch);\n  return unwatch;\n}\nfunction instanceWatch(source, value, options) {\n  const publicThis = this.proxy;\n  const getter = isString(source) ? source.includes(\".\") ? createPathGetter(publicThis, source) : () => publicThis[source] : source.bind(publicThis, publicThis);\n  let cb;\n  if (isFunction(value)) {\n    cb = value;\n  } else {\n    cb = value.handler;\n    options = value;\n  }\n  const cur = currentInstance;\n  setCurrentInstance(this);\n  const res = doWatch(getter, cb.bind(publicThis), options);\n  if (cur) {\n    setCurrentInstance(cur);\n  } else {\n    unsetCurrentInstance();\n  }\n  return res;\n}\nfunction createPathGetter(ctx, path) {\n  const segments = path.split(\".\");\n  return () => {\n    let cur = ctx;\n    for (let i = 0; i < segments.length && cur; i++) {\n      cur = cur[segments[i]];\n    }\n    return cur;\n  };\n}\nfunction traverse(value, seen) {\n  if (!isObject(value) || value[\"__v_skip\"]) {\n    return value;\n  }\n  seen = seen || /* @__PURE__ */ new Set();\n  if (seen.has(value)) {\n    return value;\n  }\n  seen.add(value);\n  if (isRef(value)) {\n    traverse(value.value, seen);\n  } else if (isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      traverse(value[i], seen);\n    }\n  } else if (isSet(value) || isMap(value)) {\n    value.forEach((v) => {\n      traverse(v, seen);\n    });\n  } else if (isPlainObject(value)) {\n    for (const key in value) {\n      traverse(value[key], seen);\n    }\n  }\n  return value;\n}\n\nfunction validateDirectiveName(name) {\n  if (isBuiltInDirective(name)) {\n    warn(\"Do not use built-in directive ids as custom directive id: \" + name);\n  }\n}\nfunction withDirectives(vnode, directives) {\n  const internalInstance = currentRenderingInstance;\n  if (internalInstance === null) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(`withDirectives can only be used inside render functions.`);\n    return vnode;\n  }\n  const instance = getExposeProxy(internalInstance) || internalInstance.proxy;\n  const bindings = vnode.dirs || (vnode.dirs = []);\n  for (let i = 0; i < directives.length; i++) {\n    let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\n    if (dir) {\n      if (isFunction(dir)) {\n        dir = {\n          mounted: dir,\n          updated: dir\n        };\n      }\n      if (dir.deep) {\n        traverse(value);\n      }\n      bindings.push({\n        dir,\n        instance,\n        value,\n        oldValue: void 0,\n        arg,\n        modifiers\n      });\n    }\n  }\n  return vnode;\n}\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\n  const bindings = vnode.dirs;\n  const oldBindings = prevVNode && prevVNode.dirs;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    if (oldBindings) {\n      binding.oldValue = oldBindings[i].value;\n    }\n    let hook = binding.dir[name];\n    if (hook) {\n      pauseTracking();\n      callWithAsyncErrorHandling(hook, instance, 8, [\n        vnode.el,\n        binding,\n        vnode,\n        prevVNode\n      ]);\n      resetTracking();\n    }\n  }\n}\n\nfunction useTransitionState() {\n  const state = {\n    isMounted: false,\n    isLeaving: false,\n    isUnmounting: false,\n    leavingVNodes: /* @__PURE__ */ new Map()\n  };\n  onMounted(() => {\n    state.isMounted = true;\n  });\n  onBeforeUnmount(() => {\n    state.isUnmounting = true;\n  });\n  return state;\n}\nconst TransitionHookValidator = [Function, Array];\nconst BaseTransitionPropsValidators = {\n  mode: String,\n  appear: Boolean,\n  persisted: Boolean,\n  // enter\n  onBeforeEnter: TransitionHookValidator,\n  onEnter: TransitionHookValidator,\n  onAfterEnter: TransitionHookValidator,\n  onEnterCancelled: TransitionHookValidator,\n  // leave\n  onBeforeLeave: TransitionHookValidator,\n  onLeave: TransitionHookValidator,\n  onAfterLeave: TransitionHookValidator,\n  onLeaveCancelled: TransitionHookValidator,\n  // appear\n  onBeforeAppear: TransitionHookValidator,\n  onAppear: TransitionHookValidator,\n  onAfterAppear: TransitionHookValidator,\n  onAppearCancelled: TransitionHookValidator\n};\nconst BaseTransitionImpl = {\n  name: `BaseTransition`,\n  props: BaseTransitionPropsValidators,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevTransitionKey;\n    return () => {\n      const children = slots.default && getTransitionRawChildren(slots.default(), true);\n      if (!children || !children.length) {\n        return;\n      }\n      let child = children[0];\n      if (children.length > 1) {\n        let hasFound = false;\n        for (const c of children) {\n          if (c.type !== Comment) {\n            if (!!(process.env.NODE_ENV !== \"production\") && hasFound) {\n              warn(\n                \"<transition> can only be used on a single element or component. Use <transition-group> for lists.\"\n              );\n              break;\n            }\n            child = c;\n            hasFound = true;\n            if (!!!(process.env.NODE_ENV !== \"production\"))\n              break;\n          }\n        }\n      }\n      const rawProps = toRaw(props);\n      const { mode } = rawProps;\n      if (!!(process.env.NODE_ENV !== \"production\") && mode && mode !== \"in-out\" && mode !== \"out-in\" && mode !== \"default\") {\n        warn(`invalid <transition> mode: ${mode}`);\n      }\n      if (state.isLeaving) {\n        return emptyPlaceholder(child);\n      }\n      const innerChild = getKeepAliveChild(child);\n      if (!innerChild) {\n        return emptyPlaceholder(child);\n      }\n      const enterHooks = resolveTransitionHooks(\n        innerChild,\n        rawProps,\n        state,\n        instance\n      );\n      setTransitionHooks(innerChild, enterHooks);\n      const oldChild = instance.subTree;\n      const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\n      let transitionKeyChanged = false;\n      const { getTransitionKey } = innerChild.type;\n      if (getTransitionKey) {\n        const key = getTransitionKey();\n        if (prevTransitionKey === void 0) {\n          prevTransitionKey = key;\n        } else if (key !== prevTransitionKey) {\n          prevTransitionKey = key;\n          transitionKeyChanged = true;\n        }\n      }\n      if (oldInnerChild && oldInnerChild.type !== Comment && (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\n        const leavingHooks = resolveTransitionHooks(\n          oldInnerChild,\n          rawProps,\n          state,\n          instance\n        );\n        setTransitionHooks(oldInnerChild, leavingHooks);\n        if (mode === \"out-in\") {\n          state.isLeaving = true;\n          leavingHooks.afterLeave = () => {\n            state.isLeaving = false;\n            if (instance.update.active !== false) {\n              instance.update();\n            }\n          };\n          return emptyPlaceholder(child);\n        } else if (mode === \"in-out\" && innerChild.type !== Comment) {\n          leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\n            const leavingVNodesCache = getLeavingNodesForType(\n              state,\n              oldInnerChild\n            );\n            leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\n            el._leaveCb = () => {\n              earlyRemove();\n              el._leaveCb = void 0;\n              delete enterHooks.delayedLeave;\n            };\n            enterHooks.delayedLeave = delayedLeave;\n          };\n        }\n      }\n      return child;\n    };\n  }\n};\nconst BaseTransition = BaseTransitionImpl;\nfunction getLeavingNodesForType(state, vnode) {\n  const { leavingVNodes } = state;\n  let leavingVNodesCache = leavingVNodes.get(vnode.type);\n  if (!leavingVNodesCache) {\n    leavingVNodesCache = /* @__PURE__ */ Object.create(null);\n    leavingVNodes.set(vnode.type, leavingVNodesCache);\n  }\n  return leavingVNodesCache;\n}\nfunction resolveTransitionHooks(vnode, props, state, instance) {\n  const {\n    appear,\n    mode,\n    persisted = false,\n    onBeforeEnter,\n    onEnter,\n    onAfterEnter,\n    onEnterCancelled,\n    onBeforeLeave,\n    onLeave,\n    onAfterLeave,\n    onLeaveCancelled,\n    onBeforeAppear,\n    onAppear,\n    onAfterAppear,\n    onAppearCancelled\n  } = props;\n  const key = String(vnode.key);\n  const leavingVNodesCache = getLeavingNodesForType(state, vnode);\n  const callHook = (hook, args) => {\n    hook && callWithAsyncErrorHandling(\n      hook,\n      instance,\n      9,\n      args\n    );\n  };\n  const callAsyncHook = (hook, args) => {\n    const done = args[1];\n    callHook(hook, args);\n    if (isArray(hook)) {\n      if (hook.every((hook2) => hook2.length <= 1))\n        done();\n    } else if (hook.length <= 1) {\n      done();\n    }\n  };\n  const hooks = {\n    mode,\n    persisted,\n    beforeEnter(el) {\n      let hook = onBeforeEnter;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onBeforeAppear || onBeforeEnter;\n        } else {\n          return;\n        }\n      }\n      if (el._leaveCb) {\n        el._leaveCb(\n          true\n          /* cancelled */\n        );\n      }\n      const leavingVNode = leavingVNodesCache[key];\n      if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el._leaveCb) {\n        leavingVNode.el._leaveCb();\n      }\n      callHook(hook, [el]);\n    },\n    enter(el) {\n      let hook = onEnter;\n      let afterHook = onAfterEnter;\n      let cancelHook = onEnterCancelled;\n      if (!state.isMounted) {\n        if (appear) {\n          hook = onAppear || onEnter;\n          afterHook = onAfterAppear || onAfterEnter;\n          cancelHook = onAppearCancelled || onEnterCancelled;\n        } else {\n          return;\n        }\n      }\n      let called = false;\n      const done = el._enterCb = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        if (cancelled) {\n          callHook(cancelHook, [el]);\n        } else {\n          callHook(afterHook, [el]);\n        }\n        if (hooks.delayedLeave) {\n          hooks.delayedLeave();\n        }\n        el._enterCb = void 0;\n      };\n      if (hook) {\n        callAsyncHook(hook, [el, done]);\n      } else {\n        done();\n      }\n    },\n    leave(el, remove) {\n      const key2 = String(vnode.key);\n      if (el._enterCb) {\n        el._enterCb(\n          true\n          /* cancelled */\n        );\n      }\n      if (state.isUnmounting) {\n        return remove();\n      }\n      callHook(onBeforeLeave, [el]);\n      let called = false;\n      const done = el._leaveCb = (cancelled) => {\n        if (called)\n          return;\n        called = true;\n        remove();\n        if (cancelled) {\n          callHook(onLeaveCancelled, [el]);\n        } else {\n          callHook(onAfterLeave, [el]);\n        }\n        el._leaveCb = void 0;\n        if (leavingVNodesCache[key2] === vnode) {\n          delete leavingVNodesCache[key2];\n        }\n      };\n      leavingVNodesCache[key2] = vnode;\n      if (onLeave) {\n        callAsyncHook(onLeave, [el, done]);\n      } else {\n        done();\n      }\n    },\n    clone(vnode2) {\n      return resolveTransitionHooks(vnode2, props, state, instance);\n    }\n  };\n  return hooks;\n}\nfunction emptyPlaceholder(vnode) {\n  if (isKeepAlive(vnode)) {\n    vnode = cloneVNode(vnode);\n    vnode.children = null;\n    return vnode;\n  }\n}\nfunction getKeepAliveChild(vnode) {\n  return isKeepAlive(vnode) ? vnode.children ? vnode.children[0] : void 0 : vnode;\n}\nfunction setTransitionHooks(vnode, hooks) {\n  if (vnode.shapeFlag & 6 && vnode.component) {\n    setTransitionHooks(vnode.component.subTree, hooks);\n  } else if (vnode.shapeFlag & 128) {\n    vnode.ssContent.transition = hooks.clone(vnode.ssContent);\n    vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\n  } else {\n    vnode.transition = hooks;\n  }\n}\nfunction getTransitionRawChildren(children, keepComment = false, parentKey) {\n  let ret = [];\n  let keyedFragmentCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);\n    if (child.type === Fragment) {\n      if (child.patchFlag & 128)\n        keyedFragmentCount++;\n      ret = ret.concat(\n        getTransitionRawChildren(child.children, keepComment, key)\n      );\n    } else if (keepComment || child.type !== Comment) {\n      ret.push(key != null ? cloneVNode(child, { key }) : child);\n    }\n  }\n  if (keyedFragmentCount > 1) {\n    for (let i = 0; i < ret.length; i++) {\n      ret[i].patchFlag = -2;\n    }\n  }\n  return ret;\n}\n\nfunction defineComponent(options, extraOptions) {\n  return isFunction(options) ? (\n    // #8326: extend call and options.name access are considered side-effects\n    // by Rollup, so we have to wrap it in a pure-annotated IIFE.\n    /* @__PURE__ */ (() => extend({ name: options.name }, extraOptions, { setup: options }))()\n  ) : options;\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\nfunction defineAsyncComponent(source) {\n  if (isFunction(source)) {\n    source = { loader: source };\n  }\n  const {\n    loader,\n    loadingComponent,\n    errorComponent,\n    delay = 200,\n    timeout,\n    // undefined = never times out\n    suspensible = true,\n    onError: userOnError\n  } = source;\n  let pendingRequest = null;\n  let resolvedComp;\n  let retries = 0;\n  const retry = () => {\n    retries++;\n    pendingRequest = null;\n    return load();\n  };\n  const load = () => {\n    let thisRequest;\n    return pendingRequest || (thisRequest = pendingRequest = loader().catch((err) => {\n      err = err instanceof Error ? err : new Error(String(err));\n      if (userOnError) {\n        return new Promise((resolve, reject) => {\n          const userRetry = () => resolve(retry());\n          const userFail = () => reject(err);\n          userOnError(err, userRetry, userFail, retries + 1);\n        });\n      } else {\n        throw err;\n      }\n    }).then((comp) => {\n      if (thisRequest !== pendingRequest && pendingRequest) {\n        return pendingRequest;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && !comp) {\n        warn(\n          `Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`\n        );\n      }\n      if (comp && (comp.__esModule || comp[Symbol.toStringTag] === \"Module\")) {\n        comp = comp.default;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && comp && !isObject(comp) && !isFunction(comp)) {\n        throw new Error(`Invalid async component load result: ${comp}`);\n      }\n      resolvedComp = comp;\n      return comp;\n    }));\n  };\n  return defineComponent({\n    name: \"AsyncComponentWrapper\",\n    __asyncLoader: load,\n    get __asyncResolved() {\n      return resolvedComp;\n    },\n    setup() {\n      const instance = currentInstance;\n      if (resolvedComp) {\n        return () => createInnerComp(resolvedComp, instance);\n      }\n      const onError = (err) => {\n        pendingRequest = null;\n        handleError(\n          err,\n          instance,\n          13,\n          !errorComponent\n          /* do not throw in dev if user provided error component */\n        );\n      };\n      if (suspensible && instance.suspense || isInSSRComponentSetup) {\n        return load().then((comp) => {\n          return () => createInnerComp(comp, instance);\n        }).catch((err) => {\n          onError(err);\n          return () => errorComponent ? createVNode(errorComponent, {\n            error: err\n          }) : null;\n        });\n      }\n      const loaded = ref(false);\n      const error = ref();\n      const delayed = ref(!!delay);\n      if (delay) {\n        setTimeout(() => {\n          delayed.value = false;\n        }, delay);\n      }\n      if (timeout != null) {\n        setTimeout(() => {\n          if (!loaded.value && !error.value) {\n            const err = new Error(\n              `Async component timed out after ${timeout}ms.`\n            );\n            onError(err);\n            error.value = err;\n          }\n        }, timeout);\n      }\n      load().then(() => {\n        loaded.value = true;\n        if (instance.parent && isKeepAlive(instance.parent.vnode)) {\n          queueJob(instance.parent.update);\n        }\n      }).catch((err) => {\n        onError(err);\n        error.value = err;\n      });\n      return () => {\n        if (loaded.value && resolvedComp) {\n          return createInnerComp(resolvedComp, instance);\n        } else if (error.value && errorComponent) {\n          return createVNode(errorComponent, {\n            error: error.value\n          });\n        } else if (loadingComponent && !delayed.value) {\n          return createVNode(loadingComponent);\n        }\n      };\n    }\n  });\n}\nfunction createInnerComp(comp, parent) {\n  const { ref: ref2, props, children, ce } = parent.vnode;\n  const vnode = createVNode(comp, props, children);\n  vnode.ref = ref2;\n  vnode.ce = ce;\n  delete parent.vnode.ce;\n  return vnode;\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\nconst KeepAliveImpl = {\n  name: `KeepAlive`,\n  // Marker for special handling inside the renderer. We are not using a ===\n  // check directly on KeepAlive in the renderer, because importing it directly\n  // would prevent it from being tree-shaken.\n  __isKeepAlive: true,\n  props: {\n    include: [String, RegExp, Array],\n    exclude: [String, RegExp, Array],\n    max: [String, Number]\n  },\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const sharedContext = instance.ctx;\n    if (!sharedContext.renderer) {\n      return () => {\n        const children = slots.default && slots.default();\n        return children && children.length === 1 ? children[0] : children;\n      };\n    }\n    const cache = /* @__PURE__ */ new Map();\n    const keys = /* @__PURE__ */ new Set();\n    let current = null;\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.__v_cache = cache;\n    }\n    const parentSuspense = instance.suspense;\n    const {\n      renderer: {\n        p: patch,\n        m: move,\n        um: _unmount,\n        o: { createElement }\n      }\n    } = sharedContext;\n    const storageContainer = createElement(\"div\");\n    sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\n      const instance2 = vnode.component;\n      move(vnode, container, anchor, 0, parentSuspense);\n      patch(\n        instance2.vnode,\n        vnode,\n        container,\n        anchor,\n        instance2,\n        parentSuspense,\n        isSVG,\n        vnode.slotScopeIds,\n        optimized\n      );\n      queuePostRenderEffect(() => {\n        instance2.isDeactivated = false;\n        if (instance2.a) {\n          invokeArrayFns(instance2.a);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    sharedContext.deactivate = (vnode) => {\n      const instance2 = vnode.component;\n      move(vnode, storageContainer, null, 1, parentSuspense);\n      queuePostRenderEffect(() => {\n        if (instance2.da) {\n          invokeArrayFns(instance2.da);\n        }\n        const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\n        if (vnodeHook) {\n          invokeVNodeHook(vnodeHook, instance2.parent, vnode);\n        }\n        instance2.isDeactivated = true;\n      }, parentSuspense);\n      if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n        devtoolsComponentAdded(instance2);\n      }\n    };\n    function unmount(vnode) {\n      resetShapeFlag(vnode);\n      _unmount(vnode, instance, parentSuspense, true);\n    }\n    function pruneCache(filter) {\n      cache.forEach((vnode, key) => {\n        const name = getComponentName(vnode.type);\n        if (name && (!filter || !filter(name))) {\n          pruneCacheEntry(key);\n        }\n      });\n    }\n    function pruneCacheEntry(key) {\n      const cached = cache.get(key);\n      if (!current || !isSameVNodeType(cached, current)) {\n        unmount(cached);\n      } else if (current) {\n        resetShapeFlag(current);\n      }\n      cache.delete(key);\n      keys.delete(key);\n    }\n    watch(\n      () => [props.include, props.exclude],\n      ([include, exclude]) => {\n        include && pruneCache((name) => matches(include, name));\n        exclude && pruneCache((name) => !matches(exclude, name));\n      },\n      // prune post-render after `current` has been updated\n      { flush: \"post\", deep: true }\n    );\n    let pendingCacheKey = null;\n    const cacheSubtree = () => {\n      if (pendingCacheKey != null) {\n        cache.set(pendingCacheKey, getInnerChild(instance.subTree));\n      }\n    };\n    onMounted(cacheSubtree);\n    onUpdated(cacheSubtree);\n    onBeforeUnmount(() => {\n      cache.forEach((cached) => {\n        const { subTree, suspense } = instance;\n        const vnode = getInnerChild(subTree);\n        if (cached.type === vnode.type && cached.key === vnode.key) {\n          resetShapeFlag(vnode);\n          const da = vnode.component.da;\n          da && queuePostRenderEffect(da, suspense);\n          return;\n        }\n        unmount(cached);\n      });\n    });\n    return () => {\n      pendingCacheKey = null;\n      if (!slots.default) {\n        return null;\n      }\n      const children = slots.default();\n      const rawVNode = children[0];\n      if (children.length > 1) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`KeepAlive should contain exactly one component child.`);\n        }\n        current = null;\n        return children;\n      } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {\n        current = null;\n        return rawVNode;\n      }\n      let vnode = getInnerChild(rawVNode);\n      const comp = vnode.type;\n      const name = getComponentName(\n        isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp\n      );\n      const { include, exclude, max } = props;\n      if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {\n        current = vnode;\n        return rawVNode;\n      }\n      const key = vnode.key == null ? comp : vnode.key;\n      const cachedVNode = cache.get(key);\n      if (vnode.el) {\n        vnode = cloneVNode(vnode);\n        if (rawVNode.shapeFlag & 128) {\n          rawVNode.ssContent = vnode;\n        }\n      }\n      pendingCacheKey = key;\n      if (cachedVNode) {\n        vnode.el = cachedVNode.el;\n        vnode.component = cachedVNode.component;\n        if (vnode.transition) {\n          setTransitionHooks(vnode, vnode.transition);\n        }\n        vnode.shapeFlag |= 512;\n        keys.delete(key);\n        keys.add(key);\n      } else {\n        keys.add(key);\n        if (max && keys.size > parseInt(max, 10)) {\n          pruneCacheEntry(keys.values().next().value);\n        }\n      }\n      vnode.shapeFlag |= 256;\n      current = vnode;\n      return isSuspense(rawVNode.type) ? rawVNode : vnode;\n    };\n  }\n};\nconst KeepAlive = KeepAliveImpl;\nfunction matches(pattern, name) {\n  if (isArray(pattern)) {\n    return pattern.some((p) => matches(p, name));\n  } else if (isString(pattern)) {\n    return pattern.split(\",\").includes(name);\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name);\n  }\n  return false;\n}\nfunction onActivated(hook, target) {\n  registerKeepAliveHook(hook, \"a\", target);\n}\nfunction onDeactivated(hook, target) {\n  registerKeepAliveHook(hook, \"da\", target);\n}\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\n  const wrappedHook = hook.__wdc || (hook.__wdc = () => {\n    let current = target;\n    while (current) {\n      if (current.isDeactivated) {\n        return;\n      }\n      current = current.parent;\n    }\n    return hook();\n  });\n  injectHook(type, wrappedHook, target);\n  if (target) {\n    let current = target.parent;\n    while (current && current.parent) {\n      if (isKeepAlive(current.parent.vnode)) {\n        injectToKeepAliveRoot(wrappedHook, type, target, current);\n      }\n      current = current.parent;\n    }\n  }\n}\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\n  const injected = injectHook(\n    type,\n    hook,\n    keepAliveRoot,\n    true\n    /* prepend */\n  );\n  onUnmounted(() => {\n    remove(keepAliveRoot[type], injected);\n  }, target);\n}\nfunction resetShapeFlag(vnode) {\n  vnode.shapeFlag &= ~256;\n  vnode.shapeFlag &= ~512;\n}\nfunction getInnerChild(vnode) {\n  return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\n  if (target) {\n    const hooks = target[type] || (target[type] = []);\n    const wrappedHook = hook.__weh || (hook.__weh = (...args) => {\n      if (target.isUnmounted) {\n        return;\n      }\n      pauseTracking();\n      setCurrentInstance(target);\n      const res = callWithAsyncErrorHandling(hook, target, type, args);\n      unsetCurrentInstance();\n      resetTracking();\n      return res;\n    });\n    if (prepend) {\n      hooks.unshift(wrappedHook);\n    } else {\n      hooks.push(wrappedHook);\n    }\n    return wrappedHook;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, \"\"));\n    warn(\n      `${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().` + (` If you are using async setup(), make sure to register lifecycle hooks before the first await statement.` )\n    );\n  }\n}\nconst createHook = (lifecycle) => (hook, target = currentInstance) => (\n  // post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\n  (!isInSSRComponentSetup || lifecycle === \"sp\") && injectHook(lifecycle, (...args) => hook(...args), target)\n);\nconst onBeforeMount = createHook(\"bm\");\nconst onMounted = createHook(\"m\");\nconst onBeforeUpdate = createHook(\"bu\");\nconst onUpdated = createHook(\"u\");\nconst onBeforeUnmount = createHook(\"bum\");\nconst onUnmounted = createHook(\"um\");\nconst onServerPrefetch = createHook(\"sp\");\nconst onRenderTriggered = createHook(\n  \"rtg\"\n);\nconst onRenderTracked = createHook(\n  \"rtc\"\n);\nfunction onErrorCaptured(hook, target = currentInstance) {\n  injectHook(\"ec\", hook, target);\n}\n\nconst COMPONENTS = \"components\";\nconst DIRECTIVES = \"directives\";\nfunction resolveComponent(name, maybeSelfReference) {\n  return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\n}\nconst NULL_DYNAMIC_COMPONENT = Symbol.for(\"v-ndc\");\nfunction resolveDynamicComponent(component) {\n  if (isString(component)) {\n    return resolveAsset(COMPONENTS, component, false) || component;\n  } else {\n    return component || NULL_DYNAMIC_COMPONENT;\n  }\n}\nfunction resolveDirective(name) {\n  return resolveAsset(DIRECTIVES, name);\n}\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\n  const instance = currentRenderingInstance || currentInstance;\n  if (instance) {\n    const Component = instance.type;\n    if (type === COMPONENTS) {\n      const selfName = getComponentName(\n        Component,\n        false\n        /* do not include inferred name to avoid breaking existing code */\n      );\n      if (selfName && (selfName === name || selfName === camelize(name) || selfName === capitalize(camelize(name)))) {\n        return Component;\n      }\n    }\n    const res = (\n      // local registration\n      // check instance[type] first which is resolved for options API\n      resolve(instance[type] || Component[type], name) || // global registration\n      resolve(instance.appContext[type], name)\n    );\n    if (!res && maybeSelfReference) {\n      return Component;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") && warnMissing && !res) {\n      const extra = type === COMPONENTS ? `\nIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;\n      warn(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);\n    }\n    return res;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `resolve${capitalize(type.slice(0, -1))} can only be used in render() or setup().`\n    );\n  }\n}\nfunction resolve(registry, name) {\n  return registry && (registry[name] || registry[camelize(name)] || registry[capitalize(camelize(name))]);\n}\n\nfunction renderList(source, renderItem, cache, index) {\n  let ret;\n  const cached = cache && cache[index];\n  if (isArray(source) || isString(source)) {\n    ret = new Array(source.length);\n    for (let i = 0, l = source.length; i < l; i++) {\n      ret[i] = renderItem(source[i], i, void 0, cached && cached[i]);\n    }\n  } else if (typeof source === \"number\") {\n    if (!!(process.env.NODE_ENV !== \"production\") && !Number.isInteger(source)) {\n      warn(`The v-for range expect an integer value but got ${source}.`);\n    }\n    ret = new Array(source);\n    for (let i = 0; i < source; i++) {\n      ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);\n    }\n  } else if (isObject(source)) {\n    if (source[Symbol.iterator]) {\n      ret = Array.from(\n        source,\n        (item, i) => renderItem(item, i, void 0, cached && cached[i])\n      );\n    } else {\n      const keys = Object.keys(source);\n      ret = new Array(keys.length);\n      for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        ret[i] = renderItem(source[key], key, i, cached && cached[i]);\n      }\n    }\n  } else {\n    ret = [];\n  }\n  if (cache) {\n    cache[index] = ret;\n  }\n  return ret;\n}\n\nfunction createSlots(slots, dynamicSlots) {\n  for (let i = 0; i < dynamicSlots.length; i++) {\n    const slot = dynamicSlots[i];\n    if (isArray(slot)) {\n      for (let j = 0; j < slot.length; j++) {\n        slots[slot[j].name] = slot[j].fn;\n      }\n    } else if (slot) {\n      slots[slot.name] = slot.key ? (...args) => {\n        const res = slot.fn(...args);\n        if (res)\n          res.key = slot.key;\n        return res;\n      } : slot.fn;\n    }\n  }\n  return slots;\n}\n\nfunction renderSlot(slots, name, props = {}, fallback, noSlotted) {\n  if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {\n    if (name !== \"default\")\n      props.name = name;\n    return createVNode(\"slot\", props, fallback && fallback());\n  }\n  let slot = slots[name];\n  if (!!(process.env.NODE_ENV !== \"production\") && slot && slot.length > 1) {\n    warn(\n      `SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`\n    );\n    slot = () => [];\n  }\n  if (slot && slot._c) {\n    slot._d = false;\n  }\n  openBlock();\n  const validSlotContent = slot && ensureValidVNode(slot(props));\n  const rendered = createBlock(\n    Fragment,\n    {\n      key: props.key || // slot content array of a dynamic conditional slot may have a branch\n      // key attached in the `createSlots` helper, respect that\n      validSlotContent && validSlotContent.key || `_${name}`\n    },\n    validSlotContent || (fallback ? fallback() : []),\n    validSlotContent && slots._ === 1 ? 64 : -2\n  );\n  if (!noSlotted && rendered.scopeId) {\n    rendered.slotScopeIds = [rendered.scopeId + \"-s\"];\n  }\n  if (slot && slot._c) {\n    slot._d = true;\n  }\n  return rendered;\n}\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some((child) => {\n    if (!isVNode(child))\n      return true;\n    if (child.type === Comment)\n      return false;\n    if (child.type === Fragment && !ensureValidVNode(child.children))\n      return false;\n    return true;\n  }) ? vnodes : null;\n}\n\nfunction toHandlers(obj, preserveCaseIfNecessary) {\n  const ret = {};\n  if (!!(process.env.NODE_ENV !== \"production\") && !isObject(obj)) {\n    warn(`v-on with no argument expects an object value.`);\n    return ret;\n  }\n  for (const key in obj) {\n    ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : toHandlerKey(key)] = obj[key];\n  }\n  return ret;\n}\n\nconst getPublicInstance = (i) => {\n  if (!i)\n    return null;\n  if (isStatefulComponent(i))\n    return getExposeProxy(i) || i.proxy;\n  return getPublicInstance(i.parent);\n};\nconst publicPropertiesMap = (\n  // Move PURE marker to new line to workaround compiler discarding it\n  // due to type annotation\n  /* @__PURE__ */ extend(/* @__PURE__ */ Object.create(null), {\n    $: (i) => i,\n    $el: (i) => i.vnode.el,\n    $data: (i) => i.data,\n    $props: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.props) : i.props,\n    $attrs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.attrs) : i.attrs,\n    $slots: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.slots) : i.slots,\n    $refs: (i) => !!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(i.refs) : i.refs,\n    $parent: (i) => getPublicInstance(i.parent),\n    $root: (i) => getPublicInstance(i.root),\n    $emit: (i) => i.emit,\n    $options: (i) => __VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type,\n    $forceUpdate: (i) => i.f || (i.f = () => queueJob(i.update)),\n    $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),\n    $watch: (i) => __VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP\n  })\n);\nconst isReservedPrefix = (key) => key === \"_\" || key === \"$\";\nconst hasSetupBinding = (state, key) => state !== EMPTY_OBJ && !state.__isScriptSetup && hasOwn(state, key);\nconst PublicInstanceProxyHandlers = {\n  get({ _: instance }, key) {\n    const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\n    if (!!(process.env.NODE_ENV !== \"production\") && key === \"__isVue\") {\n      return true;\n    }\n    let normalizedProps;\n    if (key[0] !== \"$\") {\n      const n = accessCache[key];\n      if (n !== void 0) {\n        switch (n) {\n          case 1 /* SETUP */:\n            return setupState[key];\n          case 2 /* DATA */:\n            return data[key];\n          case 4 /* CONTEXT */:\n            return ctx[key];\n          case 3 /* PROPS */:\n            return props[key];\n        }\n      } else if (hasSetupBinding(setupState, key)) {\n        accessCache[key] = 1 /* SETUP */;\n        return setupState[key];\n      } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n        accessCache[key] = 2 /* DATA */;\n        return data[key];\n      } else if (\n        // only cache other properties when instance has declared (thus stable)\n        // props\n        (normalizedProps = instance.propsOptions[0]) && hasOwn(normalizedProps, key)\n      ) {\n        accessCache[key] = 3 /* PROPS */;\n        return props[key];\n      } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n        accessCache[key] = 4 /* CONTEXT */;\n        return ctx[key];\n      } else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\n        accessCache[key] = 0 /* OTHER */;\n      }\n    }\n    const publicGetter = publicPropertiesMap[key];\n    let cssModule, globalProperties;\n    if (publicGetter) {\n      if (key === \"$attrs\") {\n        track(instance, \"get\", key);\n        !!(process.env.NODE_ENV !== \"production\") && markAttrsAccessed();\n      } else if (!!(process.env.NODE_ENV !== \"production\") && key === \"$slots\") {\n        track(instance, \"get\", key);\n      }\n      return publicGetter(instance);\n    } else if (\n      // css module (injected by vue-loader)\n      (cssModule = type.__cssModules) && (cssModule = cssModule[key])\n    ) {\n      return cssModule;\n    } else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\n      accessCache[key] = 4 /* CONTEXT */;\n      return ctx[key];\n    } else if (\n      // global properties\n      globalProperties = appContext.config.globalProperties, hasOwn(globalProperties, key)\n    ) {\n      {\n        return globalProperties[key];\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\") && currentRenderingInstance && (!isString(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading\n    // to infinite warning loop\n    key.indexOf(\"__v\") !== 0)) {\n      if (data !== EMPTY_OBJ && isReservedPrefix(key[0]) && hasOwn(data, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} must be accessed via $data because it starts with a reserved character (\"$\" or \"_\") and is not proxied on the render context.`\n        );\n      } else if (instance === currentRenderingInstance) {\n        warn(\n          `Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`\n        );\n      }\n    }\n  },\n  set({ _: instance }, key, value) {\n    const { data, setupState, ctx } = instance;\n    if (hasSetupBinding(setupState, key)) {\n      setupState[key] = value;\n      return true;\n    } else if (!!(process.env.NODE_ENV !== \"production\") && setupState.__isScriptSetup && hasOwn(setupState, key)) {\n      warn(`Cannot mutate <script setup> binding \"${key}\" from Options API.`);\n      return false;\n    } else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\n      data[key] = value;\n      return true;\n    } else if (hasOwn(instance.props, key)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Attempting to mutate prop \"${key}\". Props are readonly.`);\n      return false;\n    }\n    if (key[0] === \"$\" && key.slice(1) in instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Attempting to mutate public property \"${key}\". Properties starting with $ are reserved and readonly.`\n      );\n      return false;\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && key in instance.appContext.config.globalProperties) {\n        Object.defineProperty(ctx, key, {\n          enumerable: true,\n          configurable: true,\n          value\n        });\n      } else {\n        ctx[key] = value;\n      }\n    }\n    return true;\n  },\n  has({\n    _: { data, setupState, accessCache, ctx, appContext, propsOptions }\n  }, key) {\n    let normalizedProps;\n    return !!accessCache[key] || data !== EMPTY_OBJ && hasOwn(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key) || hasOwn(ctx, key) || hasOwn(publicPropertiesMap, key) || hasOwn(appContext.config.globalProperties, key);\n  },\n  defineProperty(target, key, descriptor) {\n    if (descriptor.get != null) {\n      target._.accessCache[key] = 0;\n    } else if (hasOwn(descriptor, \"value\")) {\n      this.set(target, key, descriptor.value, null);\n    }\n    return Reflect.defineProperty(target, key, descriptor);\n  }\n};\nif (!!(process.env.NODE_ENV !== \"production\") && true) {\n  PublicInstanceProxyHandlers.ownKeys = (target) => {\n    warn(\n      `Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`\n    );\n    return Reflect.ownKeys(target);\n  };\n}\nconst RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ extend(\n  {},\n  PublicInstanceProxyHandlers,\n  {\n    get(target, key) {\n      if (key === Symbol.unscopables) {\n        return;\n      }\n      return PublicInstanceProxyHandlers.get(target, key, target);\n    },\n    has(_, key) {\n      const has = key[0] !== \"_\" && !isGloballyWhitelisted(key);\n      if (!!(process.env.NODE_ENV !== \"production\") && !has && PublicInstanceProxyHandlers.has(_, key)) {\n        warn(\n          `Property ${JSON.stringify(\n            key\n          )} should not start with _ which is a reserved prefix for Vue internals.`\n        );\n      }\n      return has;\n    }\n  }\n);\nfunction createDevRenderContext(instance) {\n  const target = {};\n  Object.defineProperty(target, `_`, {\n    configurable: true,\n    enumerable: false,\n    get: () => instance\n  });\n  Object.keys(publicPropertiesMap).forEach((key) => {\n    Object.defineProperty(target, key, {\n      configurable: true,\n      enumerable: false,\n      get: () => publicPropertiesMap[key](instance),\n      // intercepted by the proxy so no need for implementation,\n      // but needed to prevent set errors\n      set: NOOP\n    });\n  });\n  return target;\n}\nfunction exposePropsOnRenderContext(instance) {\n  const {\n    ctx,\n    propsOptions: [propsOptions]\n  } = instance;\n  if (propsOptions) {\n    Object.keys(propsOptions).forEach((key) => {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => instance.props[key],\n        set: NOOP\n      });\n    });\n  }\n}\nfunction exposeSetupStateOnRenderContext(instance) {\n  const { ctx, setupState } = instance;\n  Object.keys(toRaw(setupState)).forEach((key) => {\n    if (!setupState.__isScriptSetup) {\n      if (isReservedPrefix(key[0])) {\n        warn(\n          `setup() return property ${JSON.stringify(\n            key\n          )} should not start with \"$\" or \"_\" which are reserved prefixes for Vue internals.`\n        );\n        return;\n      }\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => setupState[key],\n        set: NOOP\n      });\n    }\n  });\n}\n\nconst warnRuntimeUsage = (method) => warn(\n  `${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`\n);\nfunction defineProps() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineProps`);\n  }\n  return null;\n}\nfunction defineEmits() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineEmits`);\n  }\n  return null;\n}\nfunction defineExpose(exposed) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineExpose`);\n  }\n}\nfunction defineOptions(options) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineOptions`);\n  }\n}\nfunction defineSlots() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`defineSlots`);\n  }\n  return null;\n}\nfunction defineModel() {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(\"defineModel\");\n  }\n}\nfunction withDefaults(props, defaults) {\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    warnRuntimeUsage(`withDefaults`);\n  }\n  return null;\n}\nfunction useSlots() {\n  return getContext().slots;\n}\nfunction useAttrs() {\n  return getContext().attrs;\n}\nfunction useModel(props, name, options) {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn(`useModel() called without active instance.`);\n    return ref();\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !i.propsOptions[0][name]) {\n    warn(`useModel() called with prop \"${name}\" which is not declared.`);\n    return ref();\n  }\n  if (options && options.local) {\n    const proxy = ref(props[name]);\n    watch(\n      () => props[name],\n      (v) => proxy.value = v\n    );\n    watch(proxy, (value) => {\n      if (value !== props[name]) {\n        i.emit(`update:${name}`, value);\n      }\n    });\n    return proxy;\n  } else {\n    return {\n      __v_isRef: true,\n      get value() {\n        return props[name];\n      },\n      set value(value) {\n        i.emit(`update:${name}`, value);\n      }\n    };\n  }\n}\nfunction getContext() {\n  const i = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !i) {\n    warn(`useContext() called without active instance.`);\n  }\n  return i.setupContext || (i.setupContext = createSetupContext(i));\n}\nfunction normalizePropsOrEmits(props) {\n  return isArray(props) ? props.reduce(\n    (normalized, p) => (normalized[p] = null, normalized),\n    {}\n  ) : props;\n}\nfunction mergeDefaults(raw, defaults) {\n  const props = normalizePropsOrEmits(raw);\n  for (const key in defaults) {\n    if (key.startsWith(\"__skip\"))\n      continue;\n    let opt = props[key];\n    if (opt) {\n      if (isArray(opt) || isFunction(opt)) {\n        opt = props[key] = { type: opt, default: defaults[key] };\n      } else {\n        opt.default = defaults[key];\n      }\n    } else if (opt === null) {\n      opt = props[key] = { default: defaults[key] };\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`props default key \"${key}\" has no corresponding declaration.`);\n    }\n    if (opt && defaults[`__skip_${key}`]) {\n      opt.skipFactory = true;\n    }\n  }\n  return props;\n}\nfunction mergeModels(a, b) {\n  if (!a || !b)\n    return a || b;\n  if (isArray(a) && isArray(b))\n    return a.concat(b);\n  return extend({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));\n}\nfunction createPropsRestProxy(props, excludedKeys) {\n  const ret = {};\n  for (const key in props) {\n    if (!excludedKeys.includes(key)) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        get: () => props[key]\n      });\n    }\n  }\n  return ret;\n}\nfunction withAsyncContext(getAwaitable) {\n  const ctx = getCurrentInstance();\n  if (!!(process.env.NODE_ENV !== \"production\") && !ctx) {\n    warn(\n      `withAsyncContext called without active current instance. This is likely a bug.`\n    );\n  }\n  let awaitable = getAwaitable();\n  unsetCurrentInstance();\n  if (isPromise(awaitable)) {\n    awaitable = awaitable.catch((e) => {\n      setCurrentInstance(ctx);\n      throw e;\n    });\n  }\n  return [awaitable, () => setCurrentInstance(ctx)];\n}\n\nfunction createDuplicateChecker() {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (type, key) => {\n    if (cache[key]) {\n      warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\n    } else {\n      cache[key] = type;\n    }\n  };\n}\nlet shouldCacheAccess = true;\nfunction applyOptions(instance) {\n  const options = resolveMergedOptions(instance);\n  const publicThis = instance.proxy;\n  const ctx = instance.ctx;\n  shouldCacheAccess = false;\n  if (options.beforeCreate) {\n    callHook(options.beforeCreate, instance, \"bc\");\n  }\n  const {\n    // state\n    data: dataOptions,\n    computed: computedOptions,\n    methods,\n    watch: watchOptions,\n    provide: provideOptions,\n    inject: injectOptions,\n    // lifecycle\n    created,\n    beforeMount,\n    mounted,\n    beforeUpdate,\n    updated,\n    activated,\n    deactivated,\n    beforeDestroy,\n    beforeUnmount,\n    destroyed,\n    unmounted,\n    render,\n    renderTracked,\n    renderTriggered,\n    errorCaptured,\n    serverPrefetch,\n    // public API\n    expose,\n    inheritAttrs,\n    // assets\n    components,\n    directives,\n    filters\n  } = options;\n  const checkDuplicateProperties = !!(process.env.NODE_ENV !== \"production\") ? createDuplicateChecker() : null;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    const [propsOptions] = instance.propsOptions;\n    if (propsOptions) {\n      for (const key in propsOptions) {\n        checkDuplicateProperties(\"Props\" /* PROPS */, key);\n      }\n    }\n  }\n  if (injectOptions) {\n    resolveInjections(injectOptions, ctx, checkDuplicateProperties);\n  }\n  if (methods) {\n    for (const key in methods) {\n      const methodHandler = methods[key];\n      if (isFunction(methodHandler)) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          Object.defineProperty(ctx, key, {\n            value: methodHandler.bind(publicThis),\n            configurable: true,\n            enumerable: true,\n            writable: true\n          });\n        } else {\n          ctx[key] = methodHandler.bind(publicThis);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          checkDuplicateProperties(\"Methods\" /* METHODS */, key);\n        }\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn(\n          `Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. Did you reference the function correctly?`\n        );\n      }\n    }\n  }\n  if (dataOptions) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isFunction(dataOptions)) {\n      warn(\n        `The data option must be a function. Plain object usage is no longer supported.`\n      );\n    }\n    const data = dataOptions.call(publicThis, publicThis);\n    if (!!(process.env.NODE_ENV !== \"production\") && isPromise(data)) {\n      warn(\n        `data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`\n      );\n    }\n    if (!isObject(data)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`data() should return an object.`);\n    } else {\n      instance.data = reactive(data);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        for (const key in data) {\n          checkDuplicateProperties(\"Data\" /* DATA */, key);\n          if (!isReservedPrefix(key[0])) {\n            Object.defineProperty(ctx, key, {\n              configurable: true,\n              enumerable: true,\n              get: () => data[key],\n              set: NOOP\n            });\n          }\n        }\n      }\n    }\n  }\n  shouldCacheAccess = true;\n  if (computedOptions) {\n    for (const key in computedOptions) {\n      const opt = computedOptions[key];\n      const get = isFunction(opt) ? opt.bind(publicThis, publicThis) : isFunction(opt.get) ? opt.get.bind(publicThis, publicThis) : NOOP;\n      if (!!(process.env.NODE_ENV !== \"production\") && get === NOOP) {\n        warn(`Computed property \"${key}\" has no getter.`);\n      }\n      const set = !isFunction(opt) && isFunction(opt.set) ? opt.set.bind(publicThis) : !!(process.env.NODE_ENV !== \"production\") ? () => {\n        warn(\n          `Write operation failed: computed property \"${key}\" is readonly.`\n        );\n      } : NOOP;\n      const c = computed({\n        get,\n        set\n      });\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => c.value,\n        set: (v) => c.value = v\n      });\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\n      }\n    }\n  }\n  if (watchOptions) {\n    for (const key in watchOptions) {\n      createWatcher(watchOptions[key], ctx, publicThis, key);\n    }\n  }\n  if (provideOptions) {\n    const provides = isFunction(provideOptions) ? provideOptions.call(publicThis) : provideOptions;\n    Reflect.ownKeys(provides).forEach((key) => {\n      provide(key, provides[key]);\n    });\n  }\n  if (created) {\n    callHook(created, instance, \"c\");\n  }\n  function registerLifecycleHook(register, hook) {\n    if (isArray(hook)) {\n      hook.forEach((_hook) => register(_hook.bind(publicThis)));\n    } else if (hook) {\n      register(hook.bind(publicThis));\n    }\n  }\n  registerLifecycleHook(onBeforeMount, beforeMount);\n  registerLifecycleHook(onMounted, mounted);\n  registerLifecycleHook(onBeforeUpdate, beforeUpdate);\n  registerLifecycleHook(onUpdated, updated);\n  registerLifecycleHook(onActivated, activated);\n  registerLifecycleHook(onDeactivated, deactivated);\n  registerLifecycleHook(onErrorCaptured, errorCaptured);\n  registerLifecycleHook(onRenderTracked, renderTracked);\n  registerLifecycleHook(onRenderTriggered, renderTriggered);\n  registerLifecycleHook(onBeforeUnmount, beforeUnmount);\n  registerLifecycleHook(onUnmounted, unmounted);\n  registerLifecycleHook(onServerPrefetch, serverPrefetch);\n  if (isArray(expose)) {\n    if (expose.length) {\n      const exposed = instance.exposed || (instance.exposed = {});\n      expose.forEach((key) => {\n        Object.defineProperty(exposed, key, {\n          get: () => publicThis[key],\n          set: (val) => publicThis[key] = val\n        });\n      });\n    } else if (!instance.exposed) {\n      instance.exposed = {};\n    }\n  }\n  if (render && instance.render === NOOP) {\n    instance.render = render;\n  }\n  if (inheritAttrs != null) {\n    instance.inheritAttrs = inheritAttrs;\n  }\n  if (components)\n    instance.components = components;\n  if (directives)\n    instance.directives = directives;\n}\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\n  if (isArray(injectOptions)) {\n    injectOptions = normalizeInject(injectOptions);\n  }\n  for (const key in injectOptions) {\n    const opt = injectOptions[key];\n    let injected;\n    if (isObject(opt)) {\n      if (\"default\" in opt) {\n        injected = inject(\n          opt.from || key,\n          opt.default,\n          true\n          /* treat default function as factory */\n        );\n      } else {\n        injected = inject(opt.from || key);\n      }\n    } else {\n      injected = inject(opt);\n    }\n    if (isRef(injected)) {\n      Object.defineProperty(ctx, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => injected.value,\n        set: (v) => injected.value = v\n      });\n    } else {\n      ctx[key] = injected;\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      checkDuplicateProperties(\"Inject\" /* INJECT */, key);\n    }\n  }\n}\nfunction callHook(hook, instance, type) {\n  callWithAsyncErrorHandling(\n    isArray(hook) ? hook.map((h) => h.bind(instance.proxy)) : hook.bind(instance.proxy),\n    instance,\n    type\n  );\n}\nfunction createWatcher(raw, ctx, publicThis, key) {\n  const getter = key.includes(\".\") ? createPathGetter(publicThis, key) : () => publicThis[key];\n  if (isString(raw)) {\n    const handler = ctx[raw];\n    if (isFunction(handler)) {\n      watch(getter, handler);\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\n    }\n  } else if (isFunction(raw)) {\n    watch(getter, raw.bind(publicThis));\n  } else if (isObject(raw)) {\n    if (isArray(raw)) {\n      raw.forEach((r) => createWatcher(r, ctx, publicThis, key));\n    } else {\n      const handler = isFunction(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];\n      if (isFunction(handler)) {\n        watch(getter, handler, raw);\n      } else if (!!(process.env.NODE_ENV !== \"production\")) {\n        warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\n      }\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`Invalid watch option: \"${key}\"`, raw);\n  }\n}\nfunction resolveMergedOptions(instance) {\n  const base = instance.type;\n  const { mixins, extends: extendsOptions } = base;\n  const {\n    mixins: globalMixins,\n    optionsCache: cache,\n    config: { optionMergeStrategies }\n  } = instance.appContext;\n  const cached = cache.get(base);\n  let resolved;\n  if (cached) {\n    resolved = cached;\n  } else if (!globalMixins.length && !mixins && !extendsOptions) {\n    {\n      resolved = base;\n    }\n  } else {\n    resolved = {};\n    if (globalMixins.length) {\n      globalMixins.forEach(\n        (m) => mergeOptions(resolved, m, optionMergeStrategies, true)\n      );\n    }\n    mergeOptions(resolved, base, optionMergeStrategies);\n  }\n  if (isObject(base)) {\n    cache.set(base, resolved);\n  }\n  return resolved;\n}\nfunction mergeOptions(to, from, strats, asMixin = false) {\n  const { mixins, extends: extendsOptions } = from;\n  if (extendsOptions) {\n    mergeOptions(to, extendsOptions, strats, true);\n  }\n  if (mixins) {\n    mixins.forEach(\n      (m) => mergeOptions(to, m, strats, true)\n    );\n  }\n  for (const key in from) {\n    if (asMixin && key === \"expose\") {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `\"expose\" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`\n      );\n    } else {\n      const strat = internalOptionMergeStrats[key] || strats && strats[key];\n      to[key] = strat ? strat(to[key], from[key]) : from[key];\n    }\n  }\n  return to;\n}\nconst internalOptionMergeStrats = {\n  data: mergeDataFn,\n  props: mergeEmitsOrPropsOptions,\n  emits: mergeEmitsOrPropsOptions,\n  // objects\n  methods: mergeObjectOptions,\n  computed: mergeObjectOptions,\n  // lifecycle\n  beforeCreate: mergeAsArray,\n  created: mergeAsArray,\n  beforeMount: mergeAsArray,\n  mounted: mergeAsArray,\n  beforeUpdate: mergeAsArray,\n  updated: mergeAsArray,\n  beforeDestroy: mergeAsArray,\n  beforeUnmount: mergeAsArray,\n  destroyed: mergeAsArray,\n  unmounted: mergeAsArray,\n  activated: mergeAsArray,\n  deactivated: mergeAsArray,\n  errorCaptured: mergeAsArray,\n  serverPrefetch: mergeAsArray,\n  // assets\n  components: mergeObjectOptions,\n  directives: mergeObjectOptions,\n  // watch\n  watch: mergeWatchOptions,\n  // provide / inject\n  provide: mergeDataFn,\n  inject: mergeInject\n};\nfunction mergeDataFn(to, from) {\n  if (!from) {\n    return to;\n  }\n  if (!to) {\n    return from;\n  }\n  return function mergedDataFn() {\n    return (extend)(\n      isFunction(to) ? to.call(this, this) : to,\n      isFunction(from) ? from.call(this, this) : from\n    );\n  };\n}\nfunction mergeInject(to, from) {\n  return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\n}\nfunction normalizeInject(raw) {\n  if (isArray(raw)) {\n    const res = {};\n    for (let i = 0; i < raw.length; i++) {\n      res[raw[i]] = raw[i];\n    }\n    return res;\n  }\n  return raw;\n}\nfunction mergeAsArray(to, from) {\n  return to ? [...new Set([].concat(to, from))] : from;\n}\nfunction mergeObjectOptions(to, from) {\n  return to ? extend(/* @__PURE__ */ Object.create(null), to, from) : from;\n}\nfunction mergeEmitsOrPropsOptions(to, from) {\n  if (to) {\n    if (isArray(to) && isArray(from)) {\n      return [.../* @__PURE__ */ new Set([...to, ...from])];\n    }\n    return extend(\n      /* @__PURE__ */ Object.create(null),\n      normalizePropsOrEmits(to),\n      normalizePropsOrEmits(from != null ? from : {})\n    );\n  } else {\n    return from;\n  }\n}\nfunction mergeWatchOptions(to, from) {\n  if (!to)\n    return from;\n  if (!from)\n    return to;\n  const merged = extend(/* @__PURE__ */ Object.create(null), to);\n  for (const key in from) {\n    merged[key] = mergeAsArray(to[key], from[key]);\n  }\n  return merged;\n}\n\nfunction createAppContext() {\n  return {\n    app: null,\n    config: {\n      isNativeTag: NO,\n      performance: false,\n      globalProperties: {},\n      optionMergeStrategies: {},\n      errorHandler: void 0,\n      warnHandler: void 0,\n      compilerOptions: {}\n    },\n    mixins: [],\n    components: {},\n    directives: {},\n    provides: /* @__PURE__ */ Object.create(null),\n    optionsCache: /* @__PURE__ */ new WeakMap(),\n    propsCache: /* @__PURE__ */ new WeakMap(),\n    emitsCache: /* @__PURE__ */ new WeakMap()\n  };\n}\nlet uid$1 = 0;\nfunction createAppAPI(render, hydrate) {\n  return function createApp(rootComponent, rootProps = null) {\n    if (!isFunction(rootComponent)) {\n      rootComponent = extend({}, rootComponent);\n    }\n    if (rootProps != null && !isObject(rootProps)) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`root props passed to app.mount() must be an object.`);\n      rootProps = null;\n    }\n    const context = createAppContext();\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      Object.defineProperty(context.config, \"unwrapInjectedRef\", {\n        get() {\n          return true;\n        },\n        set() {\n          warn(\n            `app.config.unwrapInjectedRef has been deprecated. 3.3 now alawys unwraps injected refs in Options API.`\n          );\n        }\n      });\n    }\n    const installedPlugins = /* @__PURE__ */ new Set();\n    let isMounted = false;\n    const app = context.app = {\n      _uid: uid$1++,\n      _component: rootComponent,\n      _props: rootProps,\n      _container: null,\n      _context: context,\n      _instance: null,\n      version,\n      get config() {\n        return context.config;\n      },\n      set config(v) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `app.config cannot be replaced. Modify individual options instead.`\n          );\n        }\n      },\n      use(plugin, ...options) {\n        if (installedPlugins.has(plugin)) {\n          !!(process.env.NODE_ENV !== \"production\") && warn(`Plugin has already been applied to target app.`);\n        } else if (plugin && isFunction(plugin.install)) {\n          installedPlugins.add(plugin);\n          plugin.install(app, ...options);\n        } else if (isFunction(plugin)) {\n          installedPlugins.add(plugin);\n          plugin(app, ...options);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `A plugin must either be a function or an object with an \"install\" function.`\n          );\n        }\n        return app;\n      },\n      mixin(mixin) {\n        if (__VUE_OPTIONS_API__) {\n          if (!context.mixins.includes(mixin)) {\n            context.mixins.push(mixin);\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn(\n              \"Mixin has already been applied to target app\" + (mixin.name ? `: ${mixin.name}` : \"\")\n            );\n          }\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Mixins are only available in builds supporting Options API\");\n        }\n        return app;\n      },\n      component(name, component) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateComponentName(name, context.config);\n        }\n        if (!component) {\n          return context.components[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.components[name]) {\n          warn(`Component \"${name}\" has already been registered in target app.`);\n        }\n        context.components[name] = component;\n        return app;\n      },\n      directive(name, directive) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          validateDirectiveName(name);\n        }\n        if (!directive) {\n          return context.directives[name];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") && context.directives[name]) {\n          warn(`Directive \"${name}\" has already been registered in target app.`);\n        }\n        context.directives[name] = directive;\n        return app;\n      },\n      mount(rootContainer, isHydrate, isSVG) {\n        if (!isMounted) {\n          if (!!(process.env.NODE_ENV !== \"production\") && rootContainer.__vue_app__) {\n            warn(\n              `There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling \\`app.unmount()\\` first.`\n            );\n          }\n          const vnode = createVNode(\n            rootComponent,\n            rootProps\n          );\n          vnode.appContext = context;\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            context.reload = () => {\n              render(cloneVNode(vnode), rootContainer, isSVG);\n            };\n          }\n          if (isHydrate && hydrate) {\n            hydrate(vnode, rootContainer);\n          } else {\n            render(vnode, rootContainer, isSVG);\n          }\n          isMounted = true;\n          app._container = rootContainer;\n          rootContainer.__vue_app__ = app;\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = vnode.component;\n            devtoolsInitApp(app, version);\n          }\n          return getExposeProxy(vnode.component) || vnode.component.proxy;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\n            `App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \\`const createMyApp = () => createApp(App)\\``\n          );\n        }\n      },\n      unmount() {\n        if (isMounted) {\n          render(null, app._container);\n          if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n            app._instance = null;\n            devtoolsUnmountApp(app);\n          }\n          delete app._container.__vue_app__;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`Cannot unmount an app that is not mounted.`);\n        }\n      },\n      provide(key, value) {\n        if (!!(process.env.NODE_ENV !== \"production\") && key in context.provides) {\n          warn(\n            `App already provides property with key \"${String(key)}\". It will be overwritten with the new value.`\n          );\n        }\n        context.provides[key] = value;\n        return app;\n      },\n      runWithContext(fn) {\n        currentApp = app;\n        try {\n          return fn();\n        } finally {\n          currentApp = null;\n        }\n      }\n    };\n    return app;\n  };\n}\nlet currentApp = null;\n\nfunction provide(key, value) {\n  if (!currentInstance) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`provide() can only be used inside setup().`);\n    }\n  } else {\n    let provides = currentInstance.provides;\n    const parentProvides = currentInstance.parent && currentInstance.parent.provides;\n    if (parentProvides === provides) {\n      provides = currentInstance.provides = Object.create(parentProvides);\n    }\n    provides[key] = value;\n  }\n}\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\n  const instance = currentInstance || currentRenderingInstance;\n  if (instance || currentApp) {\n    const provides = instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : currentApp._context.provides;\n    if (provides && key in provides) {\n      return provides[key];\n    } else if (arguments.length > 1) {\n      return treatDefaultAsFactory && isFunction(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`injection \"${String(key)}\" not found.`);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`inject() can only be used inside setup() or functional components.`);\n  }\n}\nfunction hasInjectionContext() {\n  return !!(currentInstance || currentRenderingInstance || currentApp);\n}\n\nfunction initProps(instance, rawProps, isStateful, isSSR = false) {\n  const props = {};\n  const attrs = {};\n  def(attrs, InternalObjectKey, 1);\n  instance.propsDefaults = /* @__PURE__ */ Object.create(null);\n  setFullProps(instance, rawProps, props, attrs);\n  for (const key in instance.propsOptions[0]) {\n    if (!(key in props)) {\n      props[key] = void 0;\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n  if (isStateful) {\n    instance.props = isSSR ? props : shallowReactive(props);\n  } else {\n    if (!instance.type.props) {\n      instance.props = attrs;\n    } else {\n      instance.props = props;\n    }\n  }\n  instance.attrs = attrs;\n}\nfunction isInHmrContext(instance) {\n  while (instance) {\n    if (instance.type.__hmrId)\n      return true;\n    instance = instance.parent;\n  }\n}\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\n  const {\n    props,\n    attrs,\n    vnode: { patchFlag }\n  } = instance;\n  const rawCurrentProps = toRaw(props);\n  const [options] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  if (\n    // always force full diff in dev\n    // - #1942 if hmr is enabled with sfc component\n    // - vite#872 non-sfc component used by sfc component\n    !(!!(process.env.NODE_ENV !== \"production\") && isInHmrContext(instance)) && (optimized || patchFlag > 0) && !(patchFlag & 16)\n  ) {\n    if (patchFlag & 8) {\n      const propsToUpdate = instance.vnode.dynamicProps;\n      for (let i = 0; i < propsToUpdate.length; i++) {\n        let key = propsToUpdate[i];\n        if (isEmitListener(instance.emitsOptions, key)) {\n          continue;\n        }\n        const value = rawProps[key];\n        if (options) {\n          if (hasOwn(attrs, key)) {\n            if (value !== attrs[key]) {\n              attrs[key] = value;\n              hasAttrsChanged = true;\n            }\n          } else {\n            const camelizedKey = camelize(key);\n            props[camelizedKey] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              camelizedKey,\n              value,\n              instance,\n              false\n              /* isAbsent */\n            );\n          }\n        } else {\n          if (value !== attrs[key]) {\n            attrs[key] = value;\n            hasAttrsChanged = true;\n          }\n        }\n      }\n    }\n  } else {\n    if (setFullProps(instance, rawProps, props, attrs)) {\n      hasAttrsChanged = true;\n    }\n    let kebabKey;\n    for (const key in rawCurrentProps) {\n      if (!rawProps || // for camelCase\n      !hasOwn(rawProps, key) && // it's possible the original props was passed in as kebab-case\n      // and converted to camelCase (#955)\n      ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey))) {\n        if (options) {\n          if (rawPrevProps && // for camelCase\n          (rawPrevProps[key] !== void 0 || // for kebab-case\n          rawPrevProps[kebabKey] !== void 0)) {\n            props[key] = resolvePropValue(\n              options,\n              rawCurrentProps,\n              key,\n              void 0,\n              instance,\n              true\n              /* isAbsent */\n            );\n          }\n        } else {\n          delete props[key];\n        }\n      }\n    }\n    if (attrs !== rawCurrentProps) {\n      for (const key in attrs) {\n        if (!rawProps || !hasOwn(rawProps, key) && true) {\n          delete attrs[key];\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (hasAttrsChanged) {\n    trigger(instance, \"set\", \"$attrs\");\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    validateProps(rawProps || {}, props, instance);\n  }\n}\nfunction setFullProps(instance, rawProps, props, attrs) {\n  const [options, needCastKeys] = instance.propsOptions;\n  let hasAttrsChanged = false;\n  let rawCastValues;\n  if (rawProps) {\n    for (let key in rawProps) {\n      if (isReservedProp(key)) {\n        continue;\n      }\n      const value = rawProps[key];\n      let camelKey;\n      if (options && hasOwn(options, camelKey = camelize(key))) {\n        if (!needCastKeys || !needCastKeys.includes(camelKey)) {\n          props[camelKey] = value;\n        } else {\n          (rawCastValues || (rawCastValues = {}))[camelKey] = value;\n        }\n      } else if (!isEmitListener(instance.emitsOptions, key)) {\n        if (!(key in attrs) || value !== attrs[key]) {\n          attrs[key] = value;\n          hasAttrsChanged = true;\n        }\n      }\n    }\n  }\n  if (needCastKeys) {\n    const rawCurrentProps = toRaw(props);\n    const castValues = rawCastValues || EMPTY_OBJ;\n    for (let i = 0; i < needCastKeys.length; i++) {\n      const key = needCastKeys[i];\n      props[key] = resolvePropValue(\n        options,\n        rawCurrentProps,\n        key,\n        castValues[key],\n        instance,\n        !hasOwn(castValues, key)\n      );\n    }\n  }\n  return hasAttrsChanged;\n}\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\n  const opt = options[key];\n  if (opt != null) {\n    const hasDefault = hasOwn(opt, \"default\");\n    if (hasDefault && value === void 0) {\n      const defaultValue = opt.default;\n      if (opt.type !== Function && !opt.skipFactory && isFunction(defaultValue)) {\n        const { propsDefaults } = instance;\n        if (key in propsDefaults) {\n          value = propsDefaults[key];\n        } else {\n          setCurrentInstance(instance);\n          value = propsDefaults[key] = defaultValue.call(\n            null,\n            props\n          );\n          unsetCurrentInstance();\n        }\n      } else {\n        value = defaultValue;\n      }\n    }\n    if (opt[0 /* shouldCast */]) {\n      if (isAbsent && !hasDefault) {\n        value = false;\n      } else if (opt[1 /* shouldCastTrue */] && (value === \"\" || value === hyphenate(key))) {\n        value = true;\n      }\n    }\n  }\n  return value;\n}\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\n  const cache = appContext.propsCache;\n  const cached = cache.get(comp);\n  if (cached) {\n    return cached;\n  }\n  const raw = comp.props;\n  const normalized = {};\n  const needCastKeys = [];\n  let hasExtends = false;\n  if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\n    const extendProps = (raw2) => {\n      hasExtends = true;\n      const [props, keys] = normalizePropsOptions(raw2, appContext, true);\n      extend(normalized, props);\n      if (keys)\n        needCastKeys.push(...keys);\n    };\n    if (!asMixin && appContext.mixins.length) {\n      appContext.mixins.forEach(extendProps);\n    }\n    if (comp.extends) {\n      extendProps(comp.extends);\n    }\n    if (comp.mixins) {\n      comp.mixins.forEach(extendProps);\n    }\n  }\n  if (!raw && !hasExtends) {\n    if (isObject(comp)) {\n      cache.set(comp, EMPTY_ARR);\n    }\n    return EMPTY_ARR;\n  }\n  if (isArray(raw)) {\n    for (let i = 0; i < raw.length; i++) {\n      if (!!(process.env.NODE_ENV !== \"production\") && !isString(raw[i])) {\n        warn(`props must be strings when using array syntax.`, raw[i]);\n      }\n      const normalizedKey = camelize(raw[i]);\n      if (validatePropName(normalizedKey)) {\n        normalized[normalizedKey] = EMPTY_OBJ;\n      }\n    }\n  } else if (raw) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !isObject(raw)) {\n      warn(`invalid props options`, raw);\n    }\n    for (const key in raw) {\n      const normalizedKey = camelize(key);\n      if (validatePropName(normalizedKey)) {\n        const opt = raw[key];\n        const prop = normalized[normalizedKey] = isArray(opt) || isFunction(opt) ? { type: opt } : extend({}, opt);\n        if (prop) {\n          const booleanIndex = getTypeIndex(Boolean, prop.type);\n          const stringIndex = getTypeIndex(String, prop.type);\n          prop[0 /* shouldCast */] = booleanIndex > -1;\n          prop[1 /* shouldCastTrue */] = stringIndex < 0 || booleanIndex < stringIndex;\n          if (booleanIndex > -1 || hasOwn(prop, \"default\")) {\n            needCastKeys.push(normalizedKey);\n          }\n        }\n      }\n    }\n  }\n  const res = [normalized, needCastKeys];\n  if (isObject(comp)) {\n    cache.set(comp, res);\n  }\n  return res;\n}\nfunction validatePropName(key) {\n  if (key[0] !== \"$\") {\n    return true;\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(`Invalid prop name: \"${key}\" is a reserved property.`);\n  }\n  return false;\n}\nfunction getType(ctor) {\n  const match = ctor && ctor.toString().match(/^\\s*(function|class) (\\w+)/);\n  return match ? match[2] : ctor === null ? \"null\" : \"\";\n}\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\nfunction getTypeIndex(type, expectedTypes) {\n  if (isArray(expectedTypes)) {\n    return expectedTypes.findIndex((t) => isSameType(t, type));\n  } else if (isFunction(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n  return -1;\n}\nfunction validateProps(rawProps, props, instance) {\n  const resolvedValues = toRaw(props);\n  const options = instance.propsOptions[0];\n  for (const key in options) {\n    let opt = options[key];\n    if (opt == null)\n      continue;\n    validateProp(\n      key,\n      resolvedValues[key],\n      opt,\n      !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key))\n    );\n  }\n}\nfunction validateProp(name, value, prop, isAbsent) {\n  const { type, required, validator, skipCheck } = prop;\n  if (required && isAbsent) {\n    warn('Missing required prop: \"' + name + '\"');\n    return;\n  }\n  if (value == null && !required) {\n    return;\n  }\n  if (type != null && type !== true && !skipCheck) {\n    let isValid = false;\n    const types = isArray(type) ? type : [type];\n    const expectedTypes = [];\n    for (let i = 0; i < types.length && !isValid; i++) {\n      const { valid, expectedType } = assertType(value, types[i]);\n      expectedTypes.push(expectedType || \"\");\n      isValid = valid;\n    }\n    if (!isValid) {\n      warn(getInvalidTypeMessage(name, value, expectedTypes));\n      return;\n    }\n  }\n  if (validator && !validator(value)) {\n    warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\n  }\n}\nconst isSimpleType = /* @__PURE__ */ makeMap(\n  \"String,Number,Boolean,Function,Symbol,BigInt\"\n);\nfunction assertType(value, type) {\n  let valid;\n  const expectedType = getType(type);\n  if (isSimpleType(expectedType)) {\n    const t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    if (!valid && t === \"object\") {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === \"Object\") {\n    valid = isObject(value);\n  } else if (expectedType === \"Array\") {\n    valid = isArray(value);\n  } else if (expectedType === \"null\") {\n    valid = value === null;\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid,\n    expectedType\n  };\n}\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\n  let message = `Invalid prop: type check failed for prop \"${name}\". Expected ${expectedTypes.map(capitalize).join(\" | \")}`;\n  const expectedType = expectedTypes[0];\n  const receivedType = toRawType(value);\n  const expectedValue = styleValue(value, expectedType);\n  const receivedValue = styleValue(value, receivedType);\n  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {\n    message += ` with value ${expectedValue}`;\n  }\n  message += `, got ${receivedType} `;\n  if (isExplicable(receivedType)) {\n    message += `with value ${receivedValue}.`;\n  }\n  return message;\n}\nfunction styleValue(value, type) {\n  if (type === \"String\") {\n    return `\"${value}\"`;\n  } else if (type === \"Number\") {\n    return `${Number(value)}`;\n  } else {\n    return `${value}`;\n  }\n}\nfunction isExplicable(type) {\n  const explicitTypes = [\"string\", \"number\", \"boolean\"];\n  return explicitTypes.some((elem) => type.toLowerCase() === elem);\n}\nfunction isBoolean(...args) {\n  return args.some((elem) => elem.toLowerCase() === \"boolean\");\n}\n\nconst isInternalKey = (key) => key[0] === \"_\" || key === \"$stable\";\nconst normalizeSlotValue = (value) => isArray(value) ? value.map(normalizeVNode) : [normalizeVNode(value)];\nconst normalizeSlot = (key, rawSlot, ctx) => {\n  if (rawSlot._n) {\n    return rawSlot;\n  }\n  const normalized = withCtx((...args) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && currentInstance) {\n      warn(\n        `Slot \"${key}\" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`\n      );\n    }\n    return normalizeSlotValue(rawSlot(...args));\n  }, ctx);\n  normalized._c = false;\n  return normalized;\n};\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\n  const ctx = rawSlots._ctx;\n  for (const key in rawSlots) {\n    if (isInternalKey(key))\n      continue;\n    const value = rawSlots[key];\n    if (isFunction(value)) {\n      slots[key] = normalizeSlot(key, value, ctx);\n    } else if (value != null) {\n      if (!!(process.env.NODE_ENV !== \"production\") && true) {\n        warn(\n          `Non-function value encountered for slot \"${key}\". Prefer function slots for better performance.`\n        );\n      }\n      const normalized = normalizeSlotValue(value);\n      slots[key] = () => normalized;\n    }\n  }\n};\nconst normalizeVNodeSlots = (instance, children) => {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isKeepAlive(instance.vnode) && true) {\n    warn(\n      `Non-function value encountered for default slot. Prefer function slots for better performance.`\n    );\n  }\n  const normalized = normalizeSlotValue(children);\n  instance.slots.default = () => normalized;\n};\nconst initSlots = (instance, children) => {\n  if (instance.vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      instance.slots = toRaw(children);\n      def(children, \"_\", type);\n    } else {\n      normalizeObjectSlots(\n        children,\n        instance.slots = {});\n    }\n  } else {\n    instance.slots = {};\n    if (children) {\n      normalizeVNodeSlots(instance, children);\n    }\n  }\n  def(instance.slots, InternalObjectKey, 1);\n};\nconst updateSlots = (instance, children, optimized) => {\n  const { vnode, slots } = instance;\n  let needDeletionCheck = true;\n  let deletionComparisonTarget = EMPTY_OBJ;\n  if (vnode.shapeFlag & 32) {\n    const type = children._;\n    if (type) {\n      if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n        extend(slots, children);\n        trigger(instance, \"set\", \"$slots\");\n      } else if (optimized && type === 1) {\n        needDeletionCheck = false;\n      } else {\n        extend(slots, children);\n        if (!optimized && type === 1) {\n          delete slots._;\n        }\n      }\n    } else {\n      needDeletionCheck = !children.$stable;\n      normalizeObjectSlots(children, slots);\n    }\n    deletionComparisonTarget = children;\n  } else if (children) {\n    normalizeVNodeSlots(instance, children);\n    deletionComparisonTarget = { default: 1 };\n  }\n  if (needDeletionCheck) {\n    for (const key in slots) {\n      if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\n        delete slots[key];\n      }\n    }\n  }\n};\n\nfunction setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {\n  if (isArray(rawRef)) {\n    rawRef.forEach(\n      (r, i) => setRef(\n        r,\n        oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef),\n        parentSuspense,\n        vnode,\n        isUnmount\n      )\n    );\n    return;\n  }\n  if (isAsyncWrapper(vnode) && !isUnmount) {\n    return;\n  }\n  const refValue = vnode.shapeFlag & 4 ? getExposeProxy(vnode.component) || vnode.component.proxy : vnode.el;\n  const value = isUnmount ? null : refValue;\n  const { i: owner, r: ref } = rawRef;\n  if (!!(process.env.NODE_ENV !== \"production\") && !owner) {\n    warn(\n      `Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`\n    );\n    return;\n  }\n  const oldRef = oldRawRef && oldRawRef.r;\n  const refs = owner.refs === EMPTY_OBJ ? owner.refs = {} : owner.refs;\n  const setupState = owner.setupState;\n  if (oldRef != null && oldRef !== ref) {\n    if (isString(oldRef)) {\n      refs[oldRef] = null;\n      if (hasOwn(setupState, oldRef)) {\n        setupState[oldRef] = null;\n      }\n    } else if (isRef(oldRef)) {\n      oldRef.value = null;\n    }\n  }\n  if (isFunction(ref)) {\n    callWithErrorHandling(ref, owner, 12, [value, refs]);\n  } else {\n    const _isString = isString(ref);\n    const _isRef = isRef(ref);\n    if (_isString || _isRef) {\n      const doSet = () => {\n        if (rawRef.f) {\n          const existing = _isString ? hasOwn(setupState, ref) ? setupState[ref] : refs[ref] : ref.value;\n          if (isUnmount) {\n            isArray(existing) && remove(existing, refValue);\n          } else {\n            if (!isArray(existing)) {\n              if (_isString) {\n                refs[ref] = [refValue];\n                if (hasOwn(setupState, ref)) {\n                  setupState[ref] = refs[ref];\n                }\n              } else {\n                ref.value = [refValue];\n                if (rawRef.k)\n                  refs[rawRef.k] = ref.value;\n              }\n            } else if (!existing.includes(refValue)) {\n              existing.push(refValue);\n            }\n          }\n        } else if (_isString) {\n          refs[ref] = value;\n          if (hasOwn(setupState, ref)) {\n            setupState[ref] = value;\n          }\n        } else if (_isRef) {\n          ref.value = value;\n          if (rawRef.k)\n            refs[rawRef.k] = value;\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n        }\n      };\n      if (value) {\n        doSet.id = -1;\n        queuePostRenderEffect(doSet, parentSuspense);\n      } else {\n        doSet();\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\"Invalid template ref type:\", ref, `(${typeof ref})`);\n    }\n  }\n}\n\nlet hasMismatch = false;\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== \"foreignObject\";\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\nfunction createHydrationFunctions(rendererInternals) {\n  const {\n    mt: mountComponent,\n    p: patch,\n    o: {\n      patchProp,\n      createText,\n      nextSibling,\n      parentNode,\n      remove,\n      insert,\n      createComment\n    }\n  } = rendererInternals;\n  const hydrate = (vnode, container) => {\n    if (!container.hasChildNodes()) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Attempting to hydrate existing markup but container is empty. Performing full mount instead.`\n      );\n      patch(null, vnode, container);\n      flushPostFlushCbs();\n      container._vnode = vnode;\n      return;\n    }\n    hasMismatch = false;\n    hydrateNode(container.firstChild, vnode, null, null, null);\n    flushPostFlushCbs();\n    container._vnode = vnode;\n    if (hasMismatch && true) {\n      console.error(`Hydration completed but contains mismatches.`);\n    }\n  };\n  const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\n    const isFragmentStart = isComment(node) && node.data === \"[\";\n    const onMismatch = () => handleMismatch(\n      node,\n      vnode,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      isFragmentStart\n    );\n    const { type, ref, shapeFlag, patchFlag } = vnode;\n    let domType = node.nodeType;\n    vnode.el = node;\n    if (patchFlag === -2) {\n      optimized = false;\n      vnode.dynamicChildren = null;\n    }\n    let nextNode = null;\n    switch (type) {\n      case Text:\n        if (domType !== 3 /* TEXT */) {\n          if (vnode.children === \"\") {\n            insert(vnode.el = createText(\"\"), parentNode(node), node);\n            nextNode = node;\n          } else {\n            nextNode = onMismatch();\n          }\n        } else {\n          if (node.data !== vnode.children) {\n            hasMismatch = true;\n            !!(process.env.NODE_ENV !== \"production\") && warn(\n              `Hydration text mismatch:\n- Client: ${JSON.stringify(node.data)}\n- Server: ${JSON.stringify(vnode.children)}`\n            );\n            node.data = vnode.children;\n          }\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Comment:\n        if (domType !== 8 /* COMMENT */ || isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = nextSibling(node);\n        }\n        break;\n      case Static:\n        if (isFragmentStart) {\n          node = nextSibling(node);\n          domType = node.nodeType;\n        }\n        if (domType === 1 /* ELEMENT */ || domType === 3 /* TEXT */) {\n          nextNode = node;\n          const needToAdoptContent = !vnode.children.length;\n          for (let i = 0; i < vnode.staticCount; i++) {\n            if (needToAdoptContent)\n              vnode.children += nextNode.nodeType === 1 /* ELEMENT */ ? nextNode.outerHTML : nextNode.data;\n            if (i === vnode.staticCount - 1) {\n              vnode.anchor = nextNode;\n            }\n            nextNode = nextSibling(nextNode);\n          }\n          return isFragmentStart ? nextSibling(nextNode) : nextNode;\n        } else {\n          onMismatch();\n        }\n        break;\n      case Fragment:\n        if (!isFragmentStart) {\n          nextNode = onMismatch();\n        } else {\n          nextNode = hydrateFragment(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            slotScopeIds,\n            optimized\n          );\n        }\n        break;\n      default:\n        if (shapeFlag & 1) {\n          if (domType !== 1 /* ELEMENT */ || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = hydrateElement(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized\n            );\n          }\n        } else if (shapeFlag & 6) {\n          vnode.slotScopeIds = slotScopeIds;\n          const container = parentNode(node);\n          mountComponent(\n            vnode,\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(container),\n            optimized\n          );\n          nextNode = isFragmentStart ? locateClosingAsyncAnchor(node) : nextSibling(node);\n          if (nextNode && isComment(nextNode) && nextNode.data === \"teleport end\") {\n            nextNode = nextSibling(nextNode);\n          }\n          if (isAsyncWrapper(vnode)) {\n            let subTree;\n            if (isFragmentStart) {\n              subTree = createVNode(Fragment);\n              subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;\n            } else {\n              subTree = node.nodeType === 3 ? createTextVNode(\"\") : createVNode(\"div\");\n            }\n            subTree.el = node;\n            vnode.component.subTree = subTree;\n          }\n        } else if (shapeFlag & 64) {\n          if (domType !== 8 /* COMMENT */) {\n            nextNode = onMismatch();\n          } else {\n            nextNode = vnode.type.hydrate(\n              node,\n              vnode,\n              parentComponent,\n              parentSuspense,\n              slotScopeIds,\n              optimized,\n              rendererInternals,\n              hydrateChildren\n            );\n          }\n        } else if (shapeFlag & 128) {\n          nextNode = vnode.type.hydrate(\n            node,\n            vnode,\n            parentComponent,\n            parentSuspense,\n            isSVGContainer(parentNode(node)),\n            slotScopeIds,\n            optimized,\n            rendererInternals,\n            hydrateNode\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid HostVNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode);\n    }\n    return nextNode;\n  };\n  const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!vnode.dynamicChildren;\n    const { type, props, patchFlag, shapeFlag, dirs } = vnode;\n    const forcePatchValue = type === \"input\" && dirs || type === \"option\";\n    if (!!(process.env.NODE_ENV !== \"production\") || forcePatchValue || patchFlag !== -1) {\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n      }\n      if (props) {\n        if (forcePatchValue || !optimized || patchFlag & (16 | 32)) {\n          for (const key in props) {\n            if (forcePatchValue && key.endsWith(\"value\") || isOn(key) && !isReservedProp(key)) {\n              patchProp(\n                el,\n                key,\n                null,\n                props[key],\n                false,\n                void 0,\n                parentComponent\n              );\n            }\n          }\n        } else if (props.onClick) {\n          patchProp(\n            el,\n            \"onClick\",\n            null,\n            props.onClick,\n            false,\n            void 0,\n            parentComponent\n          );\n        }\n      }\n      let vnodeHooks;\n      if (vnodeHooks = props && props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n      }\n      if (dirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n      }\n      if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\n        queueEffectWithSuspense(() => {\n          vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\n          dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n        }, parentSuspense);\n      }\n      if (shapeFlag & 16 && // skip if element has innerHTML / textContent\n      !(props && (props.innerHTML || props.textContent))) {\n        let next = hydrateChildren(\n          el.firstChild,\n          vnode,\n          el,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        let hasWarned = false;\n        while (next) {\n          hasMismatch = true;\n          if (!!(process.env.NODE_ENV !== \"production\") && !hasWarned) {\n            warn(\n              `Hydration children mismatch in <${vnode.type}>: server rendered element contains more child nodes than client vdom.`\n            );\n            hasWarned = true;\n          }\n          const cur = next;\n          next = next.nextSibling;\n          remove(cur);\n        }\n      } else if (shapeFlag & 8) {\n        if (el.textContent !== vnode.children) {\n          hasMismatch = true;\n          !!(process.env.NODE_ENV !== \"production\") && warn(\n            `Hydration text content mismatch in <${vnode.type}>:\n- Client: ${el.textContent}\n- Server: ${vnode.children}`\n          );\n          el.textContent = vnode.children;\n        }\n      }\n    }\n    return el.nextSibling;\n  };\n  const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    optimized = optimized || !!parentVNode.dynamicChildren;\n    const children = parentVNode.children;\n    const l = children.length;\n    let hasWarned = false;\n    for (let i = 0; i < l; i++) {\n      const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);\n      if (node) {\n        node = hydrateNode(\n          node,\n          vnode,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      } else if (vnode.type === Text && !vnode.children) {\n        continue;\n      } else {\n        hasMismatch = true;\n        if (!!(process.env.NODE_ENV !== \"production\") && !hasWarned) {\n          warn(\n            `Hydration children mismatch in <${container.tagName.toLowerCase()}>: server rendered element contains fewer child nodes than client vdom.`\n          );\n          hasWarned = true;\n        }\n        patch(\n          null,\n          vnode,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVGContainer(container),\n          slotScopeIds\n        );\n      }\n    }\n    return node;\n  };\n  const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\n    const { slotScopeIds: fragmentSlotScopeIds } = vnode;\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    const container = parentNode(node);\n    const next = hydrateChildren(\n      nextSibling(node),\n      vnode,\n      container,\n      parentComponent,\n      parentSuspense,\n      slotScopeIds,\n      optimized\n    );\n    if (next && isComment(next) && next.data === \"]\") {\n      return nextSibling(vnode.anchor = next);\n    } else {\n      hasMismatch = true;\n      insert(vnode.anchor = createComment(`]`), container, next);\n      return next;\n    }\n  };\n  const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\n    hasMismatch = true;\n    !!(process.env.NODE_ENV !== \"production\") && warn(\n      `Hydration node mismatch:\n- Client vnode:`,\n      vnode.type,\n      `\n- Server rendered DOM:`,\n      node,\n      node.nodeType === 3 /* TEXT */ ? `(text)` : isComment(node) && node.data === \"[\" ? `(start of fragment)` : ``\n    );\n    vnode.el = null;\n    if (isFragment) {\n      const end = locateClosingAsyncAnchor(node);\n      while (true) {\n        const next2 = nextSibling(node);\n        if (next2 && next2 !== end) {\n          remove(next2);\n        } else {\n          break;\n        }\n      }\n    }\n    const next = nextSibling(node);\n    const container = parentNode(node);\n    remove(node);\n    patch(\n      null,\n      vnode,\n      container,\n      next,\n      parentComponent,\n      parentSuspense,\n      isSVGContainer(container),\n      slotScopeIds\n    );\n    return next;\n  };\n  const locateClosingAsyncAnchor = (node) => {\n    let match = 0;\n    while (node) {\n      node = nextSibling(node);\n      if (node && isComment(node)) {\n        if (node.data === \"[\")\n          match++;\n        if (node.data === \"]\") {\n          if (match === 0) {\n            return nextSibling(node);\n          } else {\n            match--;\n          }\n        }\n      }\n    }\n    return node;\n  };\n  return [hydrate, hydrateNode];\n}\n\nlet supported;\nlet perf;\nfunction startMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    perf.mark(`vue-${type}-${instance.uid}`);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction endMeasure(instance, type) {\n  if (instance.appContext.config.performance && isSupported()) {\n    const startTag = `vue-${type}-${instance.uid}`;\n    const endTag = startTag + `:end`;\n    perf.mark(endTag);\n    perf.measure(\n      `<${formatComponentName(instance, instance.type)}> ${type}`,\n      startTag,\n      endTag\n    );\n    perf.clearMarks(startTag);\n    perf.clearMarks(endTag);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());\n  }\n}\nfunction isSupported() {\n  if (supported !== void 0) {\n    return supported;\n  }\n  if (typeof window !== \"undefined\" && window.performance) {\n    supported = true;\n    perf = window.performance;\n  } else {\n    supported = false;\n  }\n  return supported;\n}\n\nfunction initFeatureFlags() {\n  const needWarn = [];\n  if (typeof __VUE_OPTIONS_API__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_OPTIONS_API__`);\n    getGlobalThis().__VUE_OPTIONS_API__ = true;\n  }\n  if (typeof __VUE_PROD_DEVTOOLS__ !== \"boolean\") {\n    !!(process.env.NODE_ENV !== \"production\") && needWarn.push(`__VUE_PROD_DEVTOOLS__`);\n    getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && needWarn.length) {\n    const multi = needWarn.length > 1;\n    console.warn(\n      `Feature flag${multi ? `s` : ``} ${needWarn.join(\", \")} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.\n\nFor more details, see https://link.vuejs.org/feature-flags.`\n    );\n  }\n}\n\nconst queuePostRenderEffect = queueEffectWithSuspense ;\nfunction createRenderer(options) {\n  return baseCreateRenderer(options);\n}\nfunction createHydrationRenderer(options) {\n  return baseCreateRenderer(options, createHydrationFunctions);\n}\nfunction baseCreateRenderer(options, createHydrationFns) {\n  {\n    initFeatureFlags();\n  }\n  const target = getGlobalThis();\n  target.__VUE__ = true;\n  if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n    setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);\n  }\n  const {\n    insert: hostInsert,\n    remove: hostRemove,\n    patchProp: hostPatchProp,\n    createElement: hostCreateElement,\n    createText: hostCreateText,\n    createComment: hostCreateComment,\n    setText: hostSetText,\n    setElementText: hostSetElementText,\n    parentNode: hostParentNode,\n    nextSibling: hostNextSibling,\n    setScopeId: hostSetScopeId = NOOP,\n    insertStaticContent: hostInsertStaticContent\n  } = options;\n  const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = !!(process.env.NODE_ENV !== \"production\") && isHmrUpdating ? false : !!n2.dynamicChildren) => {\n    if (n1 === n2) {\n      return;\n    }\n    if (n1 && !isSameVNodeType(n1, n2)) {\n      anchor = getNextHostNode(n1);\n      unmount(n1, parentComponent, parentSuspense, true);\n      n1 = null;\n    }\n    if (n2.patchFlag === -2) {\n      optimized = false;\n      n2.dynamicChildren = null;\n    }\n    const { type, ref, shapeFlag } = n2;\n    switch (type) {\n      case Text:\n        processText(n1, n2, container, anchor);\n        break;\n      case Comment:\n        processCommentNode(n1, n2, container, anchor);\n        break;\n      case Static:\n        if (n1 == null) {\n          mountStaticNode(n2, container, anchor, isSVG);\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          patchStaticNode(n1, n2, container, isSVG);\n        }\n        break;\n      case Fragment:\n        processFragment(\n          n1,\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        break;\n      default:\n        if (shapeFlag & 1) {\n          processElement(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 6) {\n          processComponent(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (shapeFlag & 64) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (shapeFlag & 128) {\n          type.process(\n            n1,\n            n2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized,\n            internals\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(\"Invalid VNode type:\", type, `(${typeof type})`);\n        }\n    }\n    if (ref != null && parentComponent) {\n      setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\n    }\n  };\n  const processText = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateText(n2.children),\n        container,\n        anchor\n      );\n    } else {\n      const el = n2.el = n1.el;\n      if (n2.children !== n1.children) {\n        hostSetText(el, n2.children);\n      }\n    }\n  };\n  const processCommentNode = (n1, n2, container, anchor) => {\n    if (n1 == null) {\n      hostInsert(\n        n2.el = hostCreateComment(n2.children || \"\"),\n        container,\n        anchor\n      );\n    } else {\n      n2.el = n1.el;\n    }\n  };\n  const mountStaticNode = (n2, container, anchor, isSVG) => {\n    [n2.el, n2.anchor] = hostInsertStaticContent(\n      n2.children,\n      container,\n      anchor,\n      isSVG,\n      n2.el,\n      n2.anchor\n    );\n  };\n  const patchStaticNode = (n1, n2, container, isSVG) => {\n    if (n2.children !== n1.children) {\n      const anchor = hostNextSibling(n1.anchor);\n      removeStaticNode(n1);\n      [n2.el, n2.anchor] = hostInsertStaticContent(\n        n2.children,\n        container,\n        anchor,\n        isSVG\n      );\n    } else {\n      n2.el = n1.el;\n      n2.anchor = n1.anchor;\n    }\n  };\n  const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostInsert(el, container, nextSibling);\n      el = next;\n    }\n    hostInsert(anchor, container, nextSibling);\n  };\n  const removeStaticNode = ({ el, anchor }) => {\n    let next;\n    while (el && el !== anchor) {\n      next = hostNextSibling(el);\n      hostRemove(el);\n      el = next;\n    }\n    hostRemove(anchor);\n  };\n  const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    isSVG = isSVG || n2.type === \"svg\";\n    if (n1 == null) {\n      mountElement(\n        n2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      patchElement(\n        n1,\n        n2,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let el;\n    let vnodeHook;\n    const { type, props, shapeFlag, transition, dirs } = vnode;\n    el = vnode.el = hostCreateElement(\n      vnode.type,\n      isSVG,\n      props && props.is,\n      props\n    );\n    if (shapeFlag & 8) {\n      hostSetElementText(el, vnode.children);\n    } else if (shapeFlag & 16) {\n      mountChildren(\n        vnode.children,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG && type !== \"foreignObject\",\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"created\");\n    }\n    setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\n    if (props) {\n      for (const key in props) {\n        if (key !== \"value\" && !isReservedProp(key)) {\n          hostPatchProp(\n            el,\n            key,\n            null,\n            props[key],\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in props) {\n        hostPatchProp(el, \"value\", null, props.value);\n      }\n      if (vnodeHook = props.onVnodeBeforeMount) {\n        invokeVNodeHook(vnodeHook, parentComponent, vnode);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      Object.defineProperty(el, \"__vnode\", {\n        value: vnode,\n        enumerable: false\n      });\n      Object.defineProperty(el, \"__vueParentComponent\", {\n        value: parentComponent,\n        enumerable: false\n      });\n    }\n    if (dirs) {\n      invokeDirectiveHook(vnode, null, parentComponent, \"beforeMount\");\n    }\n    const needCallTransitionHooks = (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;\n    if (needCallTransitionHooks) {\n      transition.beforeEnter(el);\n    }\n    hostInsert(el, container, anchor);\n    if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        needCallTransitionHooks && transition.enter(el);\n        dirs && invokeDirectiveHook(vnode, null, parentComponent, \"mounted\");\n      }, parentSuspense);\n    }\n  };\n  const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\n    if (scopeId) {\n      hostSetScopeId(el, scopeId);\n    }\n    if (slotScopeIds) {\n      for (let i = 0; i < slotScopeIds.length; i++) {\n        hostSetScopeId(el, slotScopeIds[i]);\n      }\n    }\n    if (parentComponent) {\n      let subTree = parentComponent.subTree;\n      if (!!(process.env.NODE_ENV !== \"production\") && subTree.patchFlag > 0 && subTree.patchFlag & 2048) {\n        subTree = filterSingleRoot(subTree.children) || subTree;\n      }\n      if (vnode === subTree) {\n        const parentVNode = parentComponent.vnode;\n        setScopeId(\n          el,\n          parentVNode,\n          parentVNode.scopeId,\n          parentVNode.slotScopeIds,\n          parentComponent.parent\n        );\n      }\n    }\n  };\n  const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);\n      patch(\n        null,\n        child,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n  };\n  const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const el = n2.el = n1.el;\n    let { patchFlag, dynamicChildren, dirs } = n2;\n    patchFlag |= n1.patchFlag & 16;\n    const oldProps = n1.props || EMPTY_OBJ;\n    const newProps = n2.props || EMPTY_OBJ;\n    let vnodeHook;\n    parentComponent && toggleRecurse(parentComponent, false);\n    if (vnodeHook = newProps.onVnodeBeforeUpdate) {\n      invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n    }\n    if (dirs) {\n      invokeDirectiveHook(n2, n1, parentComponent, \"beforeUpdate\");\n    }\n    parentComponent && toggleRecurse(parentComponent, true);\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    const areChildrenSVG = isSVG && n2.type !== \"foreignObject\";\n    if (dynamicChildren) {\n      patchBlockChildren(\n        n1.dynamicChildren,\n        dynamicChildren,\n        el,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds\n      );\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        traverseStaticChildren(n1, n2);\n      }\n    } else if (!optimized) {\n      patchChildren(\n        n1,\n        n2,\n        el,\n        null,\n        parentComponent,\n        parentSuspense,\n        areChildrenSVG,\n        slotScopeIds,\n        false\n      );\n    }\n    if (patchFlag > 0) {\n      if (patchFlag & 16) {\n        patchProps(\n          el,\n          n2,\n          oldProps,\n          newProps,\n          parentComponent,\n          parentSuspense,\n          isSVG\n        );\n      } else {\n        if (patchFlag & 2) {\n          if (oldProps.class !== newProps.class) {\n            hostPatchProp(el, \"class\", null, newProps.class, isSVG);\n          }\n        }\n        if (patchFlag & 4) {\n          hostPatchProp(el, \"style\", oldProps.style, newProps.style, isSVG);\n        }\n        if (patchFlag & 8) {\n          const propsToUpdate = n2.dynamicProps;\n          for (let i = 0; i < propsToUpdate.length; i++) {\n            const key = propsToUpdate[i];\n            const prev = oldProps[key];\n            const next = newProps[key];\n            if (next !== prev || key === \"value\") {\n              hostPatchProp(\n                el,\n                key,\n                prev,\n                next,\n                isSVG,\n                n1.children,\n                parentComponent,\n                parentSuspense,\n                unmountChildren\n              );\n            }\n          }\n        }\n      }\n      if (patchFlag & 1) {\n        if (n1.children !== n2.children) {\n          hostSetElementText(el, n2.children);\n        }\n      }\n    } else if (!optimized && dynamicChildren == null) {\n      patchProps(\n        el,\n        n2,\n        oldProps,\n        newProps,\n        parentComponent,\n        parentSuspense,\n        isSVG\n      );\n    }\n    if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\n        dirs && invokeDirectiveHook(n2, n1, parentComponent, \"updated\");\n      }, parentSuspense);\n    }\n  };\n  const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\n    for (let i = 0; i < newChildren.length; i++) {\n      const oldVNode = oldChildren[i];\n      const newVNode = newChildren[i];\n      const container = (\n        // oldVNode may be an errored async setup() component inside Suspense\n        // which will not have a mounted element\n        oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent\n        // of the Fragment itself so it can move its children.\n        (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement\n        // which also requires the correct parent container\n        !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.\n        oldVNode.shapeFlag & (6 | 64)) ? hostParentNode(oldVNode.el) : (\n          // In other cases, the parent container is not actually used so we\n          // just pass the block element here to avoid a DOM parentNode call.\n          fallbackContainer\n        )\n      );\n      patch(\n        oldVNode,\n        newVNode,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        true\n      );\n    }\n  };\n  const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\n    if (oldProps !== newProps) {\n      if (oldProps !== EMPTY_OBJ) {\n        for (const key in oldProps) {\n          if (!isReservedProp(key) && !(key in newProps)) {\n            hostPatchProp(\n              el,\n              key,\n              oldProps[key],\n              null,\n              isSVG,\n              vnode.children,\n              parentComponent,\n              parentSuspense,\n              unmountChildren\n            );\n          }\n        }\n      }\n      for (const key in newProps) {\n        if (isReservedProp(key))\n          continue;\n        const next = newProps[key];\n        const prev = oldProps[key];\n        if (next !== prev && key !== \"value\") {\n          hostPatchProp(\n            el,\n            key,\n            prev,\n            next,\n            isSVG,\n            vnode.children,\n            parentComponent,\n            parentSuspense,\n            unmountChildren\n          );\n        }\n      }\n      if (\"value\" in newProps) {\n        hostPatchProp(el, \"value\", oldProps.value, newProps.value);\n      }\n    }\n  };\n  const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText(\"\");\n    const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText(\"\");\n    let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && // #5523 dev root fragment may inherit directives\n    (isHmrUpdating || patchFlag & 2048)) {\n      patchFlag = 0;\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (fragmentSlotScopeIds) {\n      slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;\n    }\n    if (n1 == null) {\n      hostInsert(fragmentStartAnchor, container, anchor);\n      hostInsert(fragmentEndAnchor, container, anchor);\n      mountChildren(\n        n2.children,\n        container,\n        fragmentEndAnchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    } else {\n      if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result\n      // of renderSlot() with no valid children\n      n1.dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          container,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          traverseStaticChildren(n1, n2);\n        } else if (\n          // #2080 if the stable fragment has a key, it's a <template v-for> that may\n          //  get moved around. Make sure all root level vnodes inherit el.\n          // #2134 or if it's a component root, it may also get moved around\n          // as the component is being moved.\n          n2.key != null || parentComponent && n2 === parentComponent.subTree\n        ) {\n          traverseStaticChildren(\n            n1,\n            n2,\n            true\n            /* shallow */\n          );\n        }\n      } else {\n        patchChildren(\n          n1,\n          n2,\n          container,\n          fragmentEndAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n  };\n  const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    n2.slotScopeIds = slotScopeIds;\n    if (n1 == null) {\n      if (n2.shapeFlag & 512) {\n        parentComponent.ctx.activate(\n          n2,\n          container,\n          anchor,\n          isSVG,\n          optimized\n        );\n      } else {\n        mountComponent(\n          n2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          optimized\n        );\n      }\n    } else {\n      updateComponent(n1, n2, optimized);\n    }\n  };\n  const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\n    const instance = (initialVNode.component = createComponentInstance(\n      initialVNode,\n      parentComponent,\n      parentSuspense\n    ));\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      registerHMR(instance);\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      pushWarningContext(initialVNode);\n      startMeasure(instance, `mount`);\n    }\n    if (isKeepAlive(initialVNode)) {\n      instance.ctx.renderer = internals;\n    }\n    {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        startMeasure(instance, `init`);\n      }\n      setupComponent(instance);\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        endMeasure(instance, `init`);\n      }\n    }\n    if (instance.asyncDep) {\n      parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\n      if (!initialVNode.el) {\n        const placeholder = instance.subTree = createVNode(Comment);\n        processCommentNode(null, placeholder, container, anchor);\n      }\n      return;\n    }\n    setupRenderEffect(\n      instance,\n      initialVNode,\n      container,\n      anchor,\n      parentSuspense,\n      isSVG,\n      optimized\n    );\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      popWarningContext();\n      endMeasure(instance, `mount`);\n    }\n  };\n  const updateComponent = (n1, n2, optimized) => {\n    const instance = n2.component = n1.component;\n    if (shouldUpdateComponent(n1, n2, optimized)) {\n      if (instance.asyncDep && !instance.asyncResolved) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(n2);\n        }\n        updateComponentPreRender(instance, n2, optimized);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n        return;\n      } else {\n        instance.next = n2;\n        invalidateJob(instance.update);\n        instance.update();\n      }\n    } else {\n      n2.el = n1.el;\n      instance.vnode = n2;\n    }\n  };\n  const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\n    const componentUpdateFn = () => {\n      if (!instance.isMounted) {\n        let vnodeHook;\n        const { el, props } = initialVNode;\n        const { bm, m, parent } = instance;\n        const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);\n        toggleRecurse(instance, false);\n        if (bm) {\n          invokeArrayFns(bm);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) {\n          invokeVNodeHook(vnodeHook, parent, initialVNode);\n        }\n        toggleRecurse(instance, true);\n        if (el && hydrateNode) {\n          const hydrateSubTree = () => {\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `render`);\n            }\n            instance.subTree = renderComponentRoot(instance);\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `render`);\n            }\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              startMeasure(instance, `hydrate`);\n            }\n            hydrateNode(\n              el,\n              instance.subTree,\n              instance,\n              parentSuspense,\n              null\n            );\n            if (!!(process.env.NODE_ENV !== \"production\")) {\n              endMeasure(instance, `hydrate`);\n            }\n          };\n          if (isAsyncWrapperVNode) {\n            initialVNode.type.__asyncLoader().then(\n              // note: we are moving the render call into an async callback,\n              // which means it won't track dependencies - but it's ok because\n              // a server-rendered async wrapper is already in resolved state\n              // and it will never need to change.\n              () => !instance.isUnmounted && hydrateSubTree()\n            );\n          } else {\n            hydrateSubTree();\n          }\n        } else {\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `render`);\n          }\n          const subTree = instance.subTree = renderComponentRoot(instance);\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `render`);\n          }\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            startMeasure(instance, `patch`);\n          }\n          patch(\n            null,\n            subTree,\n            container,\n            anchor,\n            instance,\n            parentSuspense,\n            isSVG\n          );\n          if (!!(process.env.NODE_ENV !== \"production\")) {\n            endMeasure(instance, `patch`);\n          }\n          initialVNode.el = subTree.el;\n        }\n        if (m) {\n          queuePostRenderEffect(m, parentSuspense);\n        }\n        if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {\n          const scopedInitialVNode = initialVNode;\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode),\n            parentSuspense\n          );\n        }\n        if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) {\n          instance.a && queuePostRenderEffect(instance.a, parentSuspense);\n        }\n        instance.isMounted = true;\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentAdded(instance);\n        }\n        initialVNode = container = anchor = null;\n      } else {\n        let { next, bu, u, parent, vnode } = instance;\n        let originNext = next;\n        let vnodeHook;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          pushWarningContext(next || instance.vnode);\n        }\n        toggleRecurse(instance, false);\n        if (next) {\n          next.el = vnode.el;\n          updateComponentPreRender(instance, next, optimized);\n        } else {\n          next = vnode;\n        }\n        if (bu) {\n          invokeArrayFns(bu);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) {\n          invokeVNodeHook(vnodeHook, parent, next, vnode);\n        }\n        toggleRecurse(instance, true);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `render`);\n        }\n        const nextTree = renderComponentRoot(instance);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `render`);\n        }\n        const prevTree = instance.subTree;\n        instance.subTree = nextTree;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `patch`);\n        }\n        patch(\n          prevTree,\n          nextTree,\n          // parent may have changed if it's in a teleport\n          hostParentNode(prevTree.el),\n          // anchor may have changed if it's in a fragment\n          getNextHostNode(prevTree),\n          instance,\n          parentSuspense,\n          isSVG\n        );\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `patch`);\n        }\n        next.el = nextTree.el;\n        if (originNext === null) {\n          updateHOCHostEl(instance, nextTree.el);\n        }\n        if (u) {\n          queuePostRenderEffect(u, parentSuspense);\n        }\n        if (vnodeHook = next.props && next.props.onVnodeUpdated) {\n          queuePostRenderEffect(\n            () => invokeVNodeHook(vnodeHook, parent, next, vnode),\n            parentSuspense\n          );\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n          devtoolsComponentUpdated(instance);\n        }\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          popWarningContext();\n        }\n      }\n    };\n    const effect = instance.effect = new ReactiveEffect(\n      componentUpdateFn,\n      () => queueJob(update),\n      instance.scope\n      // track it in component's effect scope\n    );\n    const update = instance.update = () => effect.run();\n    update.id = instance.uid;\n    toggleRecurse(instance, true);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      effect.onTrack = instance.rtc ? (e) => invokeArrayFns(instance.rtc, e) : void 0;\n      effect.onTrigger = instance.rtg ? (e) => invokeArrayFns(instance.rtg, e) : void 0;\n      update.ownerInstance = instance;\n    }\n    update();\n  };\n  const updateComponentPreRender = (instance, nextVNode, optimized) => {\n    nextVNode.component = instance;\n    const prevProps = instance.vnode.props;\n    instance.vnode = nextVNode;\n    instance.next = null;\n    updateProps(instance, nextVNode.props, prevProps, optimized);\n    updateSlots(instance, nextVNode.children, optimized);\n    pauseTracking();\n    flushPreFlushCbs();\n    resetTracking();\n  };\n  const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\n    const c1 = n1 && n1.children;\n    const prevShapeFlag = n1 ? n1.shapeFlag : 0;\n    const c2 = n2.children;\n    const { patchFlag, shapeFlag } = n2;\n    if (patchFlag > 0) {\n      if (patchFlag & 128) {\n        patchKeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      } else if (patchFlag & 256) {\n        patchUnkeyedChildren(\n          c1,\n          c2,\n          container,\n          anchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n        return;\n      }\n    }\n    if (shapeFlag & 8) {\n      if (prevShapeFlag & 16) {\n        unmountChildren(c1, parentComponent, parentSuspense);\n      }\n      if (c2 !== c1) {\n        hostSetElementText(container, c2);\n      }\n    } else {\n      if (prevShapeFlag & 16) {\n        if (shapeFlag & 16) {\n          patchKeyedChildren(\n            c1,\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else {\n          unmountChildren(c1, parentComponent, parentSuspense, true);\n        }\n      } else {\n        if (prevShapeFlag & 8) {\n          hostSetElementText(container, \"\");\n        }\n        if (shapeFlag & 16) {\n          mountChildren(\n            c2,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      }\n    }\n  };\n  const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    c1 = c1 || EMPTY_ARR;\n    c2 = c2 || EMPTY_ARR;\n    const oldLength = c1.length;\n    const newLength = c2.length;\n    const commonLength = Math.min(oldLength, newLength);\n    let i;\n    for (i = 0; i < commonLength; i++) {\n      const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      patch(\n        c1[i],\n        nextChild,\n        container,\n        null,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized\n      );\n    }\n    if (oldLength > newLength) {\n      unmountChildren(\n        c1,\n        parentComponent,\n        parentSuspense,\n        true,\n        false,\n        commonLength\n      );\n    } else {\n      mountChildren(\n        c2,\n        container,\n        anchor,\n        parentComponent,\n        parentSuspense,\n        isSVG,\n        slotScopeIds,\n        optimized,\n        commonLength\n      );\n    }\n  };\n  const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\n    let i = 0;\n    const l2 = c2.length;\n    let e1 = c1.length - 1;\n    let e2 = l2 - 1;\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[i];\n      const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      i++;\n    }\n    while (i <= e1 && i <= e2) {\n      const n1 = c1[e1];\n      const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);\n      if (isSameVNodeType(n1, n2)) {\n        patch(\n          n1,\n          n2,\n          container,\n          null,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          optimized\n        );\n      } else {\n        break;\n      }\n      e1--;\n      e2--;\n    }\n    if (i > e1) {\n      if (i <= e2) {\n        const nextPos = e2 + 1;\n        const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\n        while (i <= e2) {\n          patch(\n            null,\n            c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]),\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          i++;\n        }\n      }\n    } else if (i > e2) {\n      while (i <= e1) {\n        unmount(c1[i], parentComponent, parentSuspense, true);\n        i++;\n      }\n    } else {\n      const s1 = i;\n      const s2 = i;\n      const keyToNewIndexMap = /* @__PURE__ */ new Map();\n      for (i = s2; i <= e2; i++) {\n        const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);\n        if (nextChild.key != null) {\n          if (!!(process.env.NODE_ENV !== \"production\") && keyToNewIndexMap.has(nextChild.key)) {\n            warn(\n              `Duplicate keys found during update:`,\n              JSON.stringify(nextChild.key),\n              `Make sure keys are unique.`\n            );\n          }\n          keyToNewIndexMap.set(nextChild.key, i);\n        }\n      }\n      let j;\n      let patched = 0;\n      const toBePatched = e2 - s2 + 1;\n      let moved = false;\n      let maxNewIndexSoFar = 0;\n      const newIndexToOldIndexMap = new Array(toBePatched);\n      for (i = 0; i < toBePatched; i++)\n        newIndexToOldIndexMap[i] = 0;\n      for (i = s1; i <= e1; i++) {\n        const prevChild = c1[i];\n        if (patched >= toBePatched) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n          continue;\n        }\n        let newIndex;\n        if (prevChild.key != null) {\n          newIndex = keyToNewIndexMap.get(prevChild.key);\n        } else {\n          for (j = s2; j <= e2; j++) {\n            if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {\n              newIndex = j;\n              break;\n            }\n          }\n        }\n        if (newIndex === void 0) {\n          unmount(prevChild, parentComponent, parentSuspense, true);\n        } else {\n          newIndexToOldIndexMap[newIndex - s2] = i + 1;\n          if (newIndex >= maxNewIndexSoFar) {\n            maxNewIndexSoFar = newIndex;\n          } else {\n            moved = true;\n          }\n          patch(\n            prevChild,\n            c2[newIndex],\n            container,\n            null,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n          patched++;\n        }\n      }\n      const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : EMPTY_ARR;\n      j = increasingNewIndexSequence.length - 1;\n      for (i = toBePatched - 1; i >= 0; i--) {\n        const nextIndex = s2 + i;\n        const nextChild = c2[nextIndex];\n        const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\n        if (newIndexToOldIndexMap[i] === 0) {\n          patch(\n            null,\n            nextChild,\n            container,\n            anchor,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        } else if (moved) {\n          if (j < 0 || i !== increasingNewIndexSequence[j]) {\n            move(nextChild, container, anchor, 2);\n          } else {\n            j--;\n          }\n        }\n      }\n    }\n  };\n  const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\n    const { el, type, transition, children, shapeFlag } = vnode;\n    if (shapeFlag & 6) {\n      move(vnode.component.subTree, container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 128) {\n      vnode.suspense.move(container, anchor, moveType);\n      return;\n    }\n    if (shapeFlag & 64) {\n      type.move(vnode, container, anchor, internals);\n      return;\n    }\n    if (type === Fragment) {\n      hostInsert(el, container, anchor);\n      for (let i = 0; i < children.length; i++) {\n        move(children[i], container, anchor, moveType);\n      }\n      hostInsert(vnode.anchor, container, anchor);\n      return;\n    }\n    if (type === Static) {\n      moveStaticNode(vnode, container, anchor);\n      return;\n    }\n    const needTransition = moveType !== 2 && shapeFlag & 1 && transition;\n    if (needTransition) {\n      if (moveType === 0) {\n        transition.beforeEnter(el);\n        hostInsert(el, container, anchor);\n        queuePostRenderEffect(() => transition.enter(el), parentSuspense);\n      } else {\n        const { leave, delayLeave, afterLeave } = transition;\n        const remove2 = () => hostInsert(el, container, anchor);\n        const performLeave = () => {\n          leave(el, () => {\n            remove2();\n            afterLeave && afterLeave();\n          });\n        };\n        if (delayLeave) {\n          delayLeave(el, remove2, performLeave);\n        } else {\n          performLeave();\n        }\n      }\n    } else {\n      hostInsert(el, container, anchor);\n    }\n  };\n  const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\n    const {\n      type,\n      props,\n      ref,\n      children,\n      dynamicChildren,\n      shapeFlag,\n      patchFlag,\n      dirs\n    } = vnode;\n    if (ref != null) {\n      setRef(ref, null, parentSuspense, vnode, true);\n    }\n    if (shapeFlag & 256) {\n      parentComponent.ctx.deactivate(vnode);\n      return;\n    }\n    const shouldInvokeDirs = shapeFlag & 1 && dirs;\n    const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);\n    let vnodeHook;\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) {\n      invokeVNodeHook(vnodeHook, parentComponent, vnode);\n    }\n    if (shapeFlag & 6) {\n      unmountComponent(vnode.component, parentSuspense, doRemove);\n    } else {\n      if (shapeFlag & 128) {\n        vnode.suspense.unmount(parentSuspense, doRemove);\n        return;\n      }\n      if (shouldInvokeDirs) {\n        invokeDirectiveHook(vnode, null, parentComponent, \"beforeUnmount\");\n      }\n      if (shapeFlag & 64) {\n        vnode.type.remove(\n          vnode,\n          parentComponent,\n          parentSuspense,\n          optimized,\n          internals,\n          doRemove\n        );\n      } else if (dynamicChildren && // #1153: fast path should not be taken for non-stable (v-for) fragments\n      (type !== Fragment || patchFlag > 0 && patchFlag & 64)) {\n        unmountChildren(\n          dynamicChildren,\n          parentComponent,\n          parentSuspense,\n          false,\n          true\n        );\n      } else if (type === Fragment && patchFlag & (128 | 256) || !optimized && shapeFlag & 16) {\n        unmountChildren(children, parentComponent, parentSuspense);\n      }\n      if (doRemove) {\n        remove(vnode);\n      }\n    }\n    if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\n      queuePostRenderEffect(() => {\n        vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\n        shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, \"unmounted\");\n      }, parentSuspense);\n    }\n  };\n  const remove = (vnode) => {\n    const { type, el, anchor, transition } = vnode;\n    if (type === Fragment) {\n      if (!!(process.env.NODE_ENV !== \"production\") && vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) {\n        vnode.children.forEach((child) => {\n          if (child.type === Comment) {\n            hostRemove(child.el);\n          } else {\n            remove(child);\n          }\n        });\n      } else {\n        removeFragment(el, anchor);\n      }\n      return;\n    }\n    if (type === Static) {\n      removeStaticNode(vnode);\n      return;\n    }\n    const performRemove = () => {\n      hostRemove(el);\n      if (transition && !transition.persisted && transition.afterLeave) {\n        transition.afterLeave();\n      }\n    };\n    if (vnode.shapeFlag & 1 && transition && !transition.persisted) {\n      const { leave, delayLeave } = transition;\n      const performLeave = () => leave(el, performRemove);\n      if (delayLeave) {\n        delayLeave(vnode.el, performRemove, performLeave);\n      } else {\n        performLeave();\n      }\n    } else {\n      performRemove();\n    }\n  };\n  const removeFragment = (cur, end) => {\n    let next;\n    while (cur !== end) {\n      next = hostNextSibling(cur);\n      hostRemove(cur);\n      cur = next;\n    }\n    hostRemove(end);\n  };\n  const unmountComponent = (instance, parentSuspense, doRemove) => {\n    if (!!(process.env.NODE_ENV !== \"production\") && instance.type.__hmrId) {\n      unregisterHMR(instance);\n    }\n    const { bum, scope, update, subTree, um } = instance;\n    if (bum) {\n      invokeArrayFns(bum);\n    }\n    scope.stop();\n    if (update) {\n      update.active = false;\n      unmount(subTree, instance, parentSuspense, doRemove);\n    }\n    if (um) {\n      queuePostRenderEffect(um, parentSuspense);\n    }\n    queuePostRenderEffect(() => {\n      instance.isUnmounted = true;\n    }, parentSuspense);\n    if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {\n      parentSuspense.deps--;\n      if (parentSuspense.deps === 0) {\n        parentSuspense.resolve();\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      devtoolsComponentRemoved(instance);\n    }\n  };\n  const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\n    for (let i = start; i < children.length; i++) {\n      unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\n    }\n  };\n  const getNextHostNode = (vnode) => {\n    if (vnode.shapeFlag & 6) {\n      return getNextHostNode(vnode.component.subTree);\n    }\n    if (vnode.shapeFlag & 128) {\n      return vnode.suspense.next();\n    }\n    return hostNextSibling(vnode.anchor || vnode.el);\n  };\n  const render = (vnode, container, isSVG) => {\n    if (vnode == null) {\n      if (container._vnode) {\n        unmount(container._vnode, null, null, true);\n      }\n    } else {\n      patch(container._vnode || null, vnode, container, null, null, null, isSVG);\n    }\n    flushPreFlushCbs();\n    flushPostFlushCbs();\n    container._vnode = vnode;\n  };\n  const internals = {\n    p: patch,\n    um: unmount,\n    m: move,\n    r: remove,\n    mt: mountComponent,\n    mc: mountChildren,\n    pc: patchChildren,\n    pbc: patchBlockChildren,\n    n: getNextHostNode,\n    o: options\n  };\n  let hydrate;\n  let hydrateNode;\n  if (createHydrationFns) {\n    [hydrate, hydrateNode] = createHydrationFns(\n      internals\n    );\n  }\n  return {\n    render,\n    hydrate,\n    createApp: createAppAPI(render, hydrate)\n  };\n}\nfunction toggleRecurse({ effect, update }, allowed) {\n  effect.allowRecurse = update.allowRecurse = allowed;\n}\nfunction traverseStaticChildren(n1, n2, shallow = false) {\n  const ch1 = n1.children;\n  const ch2 = n2.children;\n  if (isArray(ch1) && isArray(ch2)) {\n    for (let i = 0; i < ch1.length; i++) {\n      const c1 = ch1[i];\n      let c2 = ch2[i];\n      if (c2.shapeFlag & 1 && !c2.dynamicChildren) {\n        if (c2.patchFlag <= 0 || c2.patchFlag === 32) {\n          c2 = ch2[i] = cloneIfMounted(ch2[i]);\n          c2.el = c1.el;\n        }\n        if (!shallow)\n          traverseStaticChildren(c1, c2);\n      }\n      if (c2.type === Text) {\n        c2.el = c1.el;\n      }\n      if (!!(process.env.NODE_ENV !== \"production\") && c2.type === Comment && !c2.el) {\n        c2.el = c1.el;\n      }\n    }\n  }\n}\nfunction getSequence(arr) {\n  const p = arr.slice();\n  const result = [0];\n  let i, j, u, v, c;\n  const len = arr.length;\n  for (i = 0; i < len; i++) {\n    const arrI = arr[i];\n    if (arrI !== 0) {\n      j = result[result.length - 1];\n      if (arr[j] < arrI) {\n        p[i] = j;\n        result.push(i);\n        continue;\n      }\n      u = 0;\n      v = result.length - 1;\n      while (u < v) {\n        c = u + v >> 1;\n        if (arr[result[c]] < arrI) {\n          u = c + 1;\n        } else {\n          v = c;\n        }\n      }\n      if (arrI < arr[result[u]]) {\n        if (u > 0) {\n          p[i] = result[u - 1];\n        }\n        result[u] = i;\n      }\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\n\nconst isTeleport = (type) => type.__isTeleport;\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === \"\");\nconst isTargetSVG = (target) => typeof SVGElement !== \"undefined\" && target instanceof SVGElement;\nconst resolveTarget = (props, select) => {\n  const targetSelector = props && props.to;\n  if (isString(targetSelector)) {\n    if (!select) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Current renderer does not support string target for Teleports. (missing querySelector renderer option)`\n      );\n      return null;\n    } else {\n      const target = select(targetSelector);\n      if (!target) {\n        !!(process.env.NODE_ENV !== \"production\") && warn(\n          `Failed to locate Teleport target with selector \"${targetSelector}\". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`\n        );\n      }\n      return target;\n    }\n  } else {\n    if (!!(process.env.NODE_ENV !== \"production\") && !targetSelector && !isTeleportDisabled(props)) {\n      warn(`Invalid Teleport target: ${targetSelector}`);\n    }\n    return targetSelector;\n  }\n};\nconst TeleportImpl = {\n  __isTeleport: true,\n  process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\n    const {\n      mc: mountChildren,\n      pc: patchChildren,\n      pbc: patchBlockChildren,\n      o: { insert, querySelector, createText, createComment }\n    } = internals;\n    const disabled = isTeleportDisabled(n2.props);\n    let { shapeFlag, children, dynamicChildren } = n2;\n    if (!!(process.env.NODE_ENV !== \"production\") && isHmrUpdating) {\n      optimized = false;\n      dynamicChildren = null;\n    }\n    if (n1 == null) {\n      const placeholder = n2.el = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport start\") : createText(\"\");\n      const mainAnchor = n2.anchor = !!(process.env.NODE_ENV !== \"production\") ? createComment(\"teleport end\") : createText(\"\");\n      insert(placeholder, container, anchor);\n      insert(mainAnchor, container, anchor);\n      const target = n2.target = resolveTarget(n2.props, querySelector);\n      const targetAnchor = n2.targetAnchor = createText(\"\");\n      if (target) {\n        insert(targetAnchor, target);\n        isSVG = isSVG || isTargetSVG(target);\n      } else if (!!(process.env.NODE_ENV !== \"production\") && !disabled) {\n        warn(\"Invalid Teleport target on mount:\", target, `(${typeof target})`);\n      }\n      const mount = (container2, anchor2) => {\n        if (shapeFlag & 16) {\n          mountChildren(\n            children,\n            container2,\n            anchor2,\n            parentComponent,\n            parentSuspense,\n            isSVG,\n            slotScopeIds,\n            optimized\n          );\n        }\n      };\n      if (disabled) {\n        mount(container, mainAnchor);\n      } else if (target) {\n        mount(target, targetAnchor);\n      }\n    } else {\n      n2.el = n1.el;\n      const mainAnchor = n2.anchor = n1.anchor;\n      const target = n2.target = n1.target;\n      const targetAnchor = n2.targetAnchor = n1.targetAnchor;\n      const wasDisabled = isTeleportDisabled(n1.props);\n      const currentContainer = wasDisabled ? container : target;\n      const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\n      isSVG = isSVG || isTargetSVG(target);\n      if (dynamicChildren) {\n        patchBlockChildren(\n          n1.dynamicChildren,\n          dynamicChildren,\n          currentContainer,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds\n        );\n        traverseStaticChildren(n1, n2, true);\n      } else if (!optimized) {\n        patchChildren(\n          n1,\n          n2,\n          currentContainer,\n          currentAnchor,\n          parentComponent,\n          parentSuspense,\n          isSVG,\n          slotScopeIds,\n          false\n        );\n      }\n      if (disabled) {\n        if (!wasDisabled) {\n          moveTeleport(\n            n2,\n            container,\n            mainAnchor,\n            internals,\n            1\n          );\n        }\n      } else {\n        if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\n          const nextTarget = n2.target = resolveTarget(\n            n2.props,\n            querySelector\n          );\n          if (nextTarget) {\n            moveTeleport(\n              n2,\n              nextTarget,\n              null,\n              internals,\n              0\n            );\n          } else if (!!(process.env.NODE_ENV !== \"production\")) {\n            warn(\n              \"Invalid Teleport target on update:\",\n              target,\n              `(${typeof target})`\n            );\n          }\n        } else if (wasDisabled) {\n          moveTeleport(\n            n2,\n            target,\n            targetAnchor,\n            internals,\n            1\n          );\n        }\n      }\n    }\n    updateCssVars(n2);\n  },\n  remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\n    const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\n    if (target) {\n      hostRemove(targetAnchor);\n    }\n    if (doRemove || !isTeleportDisabled(props)) {\n      hostRemove(anchor);\n      if (shapeFlag & 16) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n          unmount(\n            child,\n            parentComponent,\n            parentSuspense,\n            true,\n            !!child.dynamicChildren\n          );\n        }\n      }\n    }\n  },\n  move: moveTeleport,\n  hydrate: hydrateTeleport\n};\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {\n  if (moveType === 0) {\n    insert(vnode.targetAnchor, container, parentAnchor);\n  }\n  const { el, anchor, shapeFlag, children, props } = vnode;\n  const isReorder = moveType === 2;\n  if (isReorder) {\n    insert(el, container, parentAnchor);\n  }\n  if (!isReorder || isTeleportDisabled(props)) {\n    if (shapeFlag & 16) {\n      for (let i = 0; i < children.length; i++) {\n        move(\n          children[i],\n          container,\n          parentAnchor,\n          2\n        );\n      }\n    }\n  }\n  if (isReorder) {\n    insert(anchor, container, parentAnchor);\n  }\n}\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, {\n  o: { nextSibling, parentNode, querySelector }\n}, hydrateChildren) {\n  const target = vnode.target = resolveTarget(\n    vnode.props,\n    querySelector\n  );\n  if (target) {\n    const targetNode = target._lpa || target.firstChild;\n    if (vnode.shapeFlag & 16) {\n      if (isTeleportDisabled(vnode.props)) {\n        vnode.anchor = hydrateChildren(\n          nextSibling(node),\n          vnode,\n          parentNode(node),\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n        vnode.targetAnchor = targetNode;\n      } else {\n        vnode.anchor = nextSibling(node);\n        let targetAnchor = targetNode;\n        while (targetAnchor) {\n          targetAnchor = nextSibling(targetAnchor);\n          if (targetAnchor && targetAnchor.nodeType === 8 && targetAnchor.data === \"teleport anchor\") {\n            vnode.targetAnchor = targetAnchor;\n            target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);\n            break;\n          }\n        }\n        hydrateChildren(\n          targetNode,\n          vnode,\n          target,\n          parentComponent,\n          parentSuspense,\n          slotScopeIds,\n          optimized\n        );\n      }\n    }\n    updateCssVars(vnode);\n  }\n  return vnode.anchor && nextSibling(vnode.anchor);\n}\nconst Teleport = TeleportImpl;\nfunction updateCssVars(vnode) {\n  const ctx = vnode.ctx;\n  if (ctx && ctx.ut) {\n    let node = vnode.children[0].el;\n    while (node !== vnode.targetAnchor) {\n      if (node.nodeType === 1)\n        node.setAttribute(\"data-v-owner\", ctx.uid);\n      node = node.nextSibling;\n    }\n    ctx.ut();\n  }\n}\n\nconst Fragment = Symbol.for(\"v-fgt\");\nconst Text = Symbol.for(\"v-txt\");\nconst Comment = Symbol.for(\"v-cmt\");\nconst Static = Symbol.for(\"v-stc\");\nconst blockStack = [];\nlet currentBlock = null;\nfunction openBlock(disableTracking = false) {\n  blockStack.push(currentBlock = disableTracking ? null : []);\n}\nfunction closeBlock() {\n  blockStack.pop();\n  currentBlock = blockStack[blockStack.length - 1] || null;\n}\nlet isBlockTreeEnabled = 1;\nfunction setBlockTracking(value) {\n  isBlockTreeEnabled += value;\n}\nfunction setupBlock(vnode) {\n  vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\n  closeBlock();\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nfunction createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {\n  return setupBlock(\n    createBaseVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      shapeFlag,\n      true\n      /* isBlock */\n    )\n  );\n}\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\n  return setupBlock(\n    createVNode(\n      type,\n      props,\n      children,\n      patchFlag,\n      dynamicProps,\n      true\n      /* isBlock: prevent a block from tracking itself */\n    )\n  );\n}\nfunction isVNode(value) {\n  return value ? value.__v_isVNode === true : false;\n}\nfunction isSameVNodeType(n1, n2) {\n  if (!!(process.env.NODE_ENV !== \"production\") && n2.shapeFlag & 6 && hmrDirtyComponents.has(n2.type)) {\n    n1.shapeFlag &= ~256;\n    n2.shapeFlag &= ~512;\n    return false;\n  }\n  return n1.type === n2.type && n1.key === n2.key;\n}\nlet vnodeArgsTransformer;\nfunction transformVNodeArgs(transformer) {\n  vnodeArgsTransformer = transformer;\n}\nconst createVNodeWithArgsTransform = (...args) => {\n  return _createVNode(\n    ...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args\n  );\n};\nconst InternalObjectKey = `__vInternal`;\nconst normalizeKey = ({ key }) => key != null ? key : null;\nconst normalizeRef = ({\n  ref,\n  ref_key,\n  ref_for\n}) => {\n  if (typeof ref === \"number\") {\n    ref = \"\" + ref;\n  }\n  return ref != null ? isString(ref) || isRef(ref) || isFunction(ref) ? { i: currentRenderingInstance, r: ref, k: ref_key, f: !!ref_for } : ref : null;\n};\nfunction createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {\n  const vnode = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type,\n    props,\n    key: props && normalizeKey(props),\n    ref: props && normalizeRef(props),\n    scopeId: currentScopeId,\n    slotScopeIds: null,\n    children,\n    component: null,\n    suspense: null,\n    ssContent: null,\n    ssFallback: null,\n    dirs: null,\n    transition: null,\n    el: null,\n    anchor: null,\n    target: null,\n    targetAnchor: null,\n    staticCount: 0,\n    shapeFlag,\n    patchFlag,\n    dynamicProps,\n    dynamicChildren: null,\n    appContext: null,\n    ctx: currentRenderingInstance\n  };\n  if (needFullChildrenNormalization) {\n    normalizeChildren(vnode, children);\n    if (shapeFlag & 128) {\n      type.normalize(vnode);\n    }\n  } else if (children) {\n    vnode.shapeFlag |= isString(children) ? 8 : 16;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && vnode.key !== vnode.key) {\n    warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\n  }\n  if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself\n  !isBlockNode && // has current parent block\n  currentBlock && // presence of a patch flag indicates this node needs patching on updates.\n  // component nodes also should always be patched, because even if the\n  // component doesn't need to update, it needs to persist the instance on to\n  // the next vnode so that it can be properly unmounted later.\n  (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the\n  // vnode should not be considered dynamic due to handler caching.\n  vnode.patchFlag !== 32) {\n    currentBlock.push(vnode);\n  }\n  return vnode;\n}\nconst createVNode = !!(process.env.NODE_ENV !== \"production\") ? createVNodeWithArgsTransform : _createVNode;\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\n  if (!type || type === NULL_DYNAMIC_COMPONENT) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !type) {\n      warn(`Invalid vnode type when creating vnode: ${type}.`);\n    }\n    type = Comment;\n  }\n  if (isVNode(type)) {\n    const cloned = cloneVNode(\n      type,\n      props,\n      true\n      /* mergeRef: true */\n    );\n    if (children) {\n      normalizeChildren(cloned, children);\n    }\n    if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {\n      if (cloned.shapeFlag & 6) {\n        currentBlock[currentBlock.indexOf(type)] = cloned;\n      } else {\n        currentBlock.push(cloned);\n      }\n    }\n    cloned.patchFlag |= -2;\n    return cloned;\n  }\n  if (isClassComponent(type)) {\n    type = type.__vccOpts;\n  }\n  if (props) {\n    props = guardReactiveProps(props);\n    let { class: klass, style } = props;\n    if (klass && !isString(klass)) {\n      props.class = normalizeClass(klass);\n    }\n    if (isObject(style)) {\n      if (isProxy(style) && !isArray(style)) {\n        style = extend({}, style);\n      }\n      props.style = normalizeStyle(style);\n    }\n  }\n  const shapeFlag = isString(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : isObject(type) ? 4 : isFunction(type) ? 2 : 0;\n  if (!!(process.env.NODE_ENV !== \"production\") && shapeFlag & 4 && isProxy(type)) {\n    type = toRaw(type);\n    warn(\n      `Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with \\`markRaw\\` or using \\`shallowRef\\` instead of \\`ref\\`.`,\n      `\nComponent that was made reactive: `,\n      type\n    );\n  }\n  return createBaseVNode(\n    type,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    shapeFlag,\n    isBlockNode,\n    true\n  );\n}\nfunction guardReactiveProps(props) {\n  if (!props)\n    return null;\n  return isProxy(props) || InternalObjectKey in props ? extend({}, props) : props;\n}\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\n  const { props, ref, patchFlag, children } = vnode;\n  const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\n  const cloned = {\n    __v_isVNode: true,\n    __v_skip: true,\n    type: vnode.type,\n    props: mergedProps,\n    key: mergedProps && normalizeKey(mergedProps),\n    ref: extraProps && extraProps.ref ? (\n      // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\n      // if the vnode itself already has a ref, cloneVNode will need to merge\n      // the refs so the single vnode can be set on multiple refs\n      mergeRef && ref ? isArray(ref) ? ref.concat(normalizeRef(extraProps)) : [ref, normalizeRef(extraProps)] : normalizeRef(extraProps)\n    ) : ref,\n    scopeId: vnode.scopeId,\n    slotScopeIds: vnode.slotScopeIds,\n    children: !!(process.env.NODE_ENV !== \"production\") && patchFlag === -1 && isArray(children) ? children.map(deepCloneVNode) : children,\n    target: vnode.target,\n    targetAnchor: vnode.targetAnchor,\n    staticCount: vnode.staticCount,\n    shapeFlag: vnode.shapeFlag,\n    // if the vnode is cloned with extra props, we can no longer assume its\n    // existing patch flag to be reliable and need to add the FULL_PROPS flag.\n    // note: preserve flag for fragments since they use the flag for children\n    // fast paths only.\n    patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,\n    dynamicProps: vnode.dynamicProps,\n    dynamicChildren: vnode.dynamicChildren,\n    appContext: vnode.appContext,\n    dirs: vnode.dirs,\n    transition: vnode.transition,\n    // These should technically only be non-null on mounted VNodes. However,\n    // they *should* be copied for kept-alive vnodes. So we just always copy\n    // them since them being non-null during a mount doesn't affect the logic as\n    // they will simply be overwritten.\n    component: vnode.component,\n    suspense: vnode.suspense,\n    ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\n    ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\n    el: vnode.el,\n    anchor: vnode.anchor,\n    ctx: vnode.ctx,\n    ce: vnode.ce\n  };\n  return cloned;\n}\nfunction deepCloneVNode(vnode) {\n  const cloned = cloneVNode(vnode);\n  if (isArray(vnode.children)) {\n    cloned.children = vnode.children.map(deepCloneVNode);\n  }\n  return cloned;\n}\nfunction createTextVNode(text = \" \", flag = 0) {\n  return createVNode(Text, null, text, flag);\n}\nfunction createStaticVNode(content, numberOfNodes) {\n  const vnode = createVNode(Static, null, content);\n  vnode.staticCount = numberOfNodes;\n  return vnode;\n}\nfunction createCommentVNode(text = \"\", asBlock = false) {\n  return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);\n}\nfunction normalizeVNode(child) {\n  if (child == null || typeof child === \"boolean\") {\n    return createVNode(Comment);\n  } else if (isArray(child)) {\n    return createVNode(\n      Fragment,\n      null,\n      // #3666, avoid reference pollution when reusing vnode\n      child.slice()\n    );\n  } else if (typeof child === \"object\") {\n    return cloneIfMounted(child);\n  } else {\n    return createVNode(Text, null, String(child));\n  }\n}\nfunction cloneIfMounted(child) {\n  return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);\n}\nfunction normalizeChildren(vnode, children) {\n  let type = 0;\n  const { shapeFlag } = vnode;\n  if (children == null) {\n    children = null;\n  } else if (isArray(children)) {\n    type = 16;\n  } else if (typeof children === \"object\") {\n    if (shapeFlag & (1 | 64)) {\n      const slot = children.default;\n      if (slot) {\n        slot._c && (slot._d = false);\n        normalizeChildren(vnode, slot());\n        slot._c && (slot._d = true);\n      }\n      return;\n    } else {\n      type = 32;\n      const slotFlag = children._;\n      if (!slotFlag && !(InternalObjectKey in children)) {\n        children._ctx = currentRenderingInstance;\n      } else if (slotFlag === 3 && currentRenderingInstance) {\n        if (currentRenderingInstance.slots._ === 1) {\n          children._ = 1;\n        } else {\n          children._ = 2;\n          vnode.patchFlag |= 1024;\n        }\n      }\n    }\n  } else if (isFunction(children)) {\n    children = { default: children, _ctx: currentRenderingInstance };\n    type = 32;\n  } else {\n    children = String(children);\n    if (shapeFlag & 64) {\n      type = 16;\n      children = [createTextVNode(children)];\n    } else {\n      type = 8;\n    }\n  }\n  vnode.children = children;\n  vnode.shapeFlag |= type;\n}\nfunction mergeProps(...args) {\n  const ret = {};\n  for (let i = 0; i < args.length; i++) {\n    const toMerge = args[i];\n    for (const key in toMerge) {\n      if (key === \"class\") {\n        if (ret.class !== toMerge.class) {\n          ret.class = normalizeClass([ret.class, toMerge.class]);\n        }\n      } else if (key === \"style\") {\n        ret.style = normalizeStyle([ret.style, toMerge.style]);\n      } else if (isOn(key)) {\n        const existing = ret[key];\n        const incoming = toMerge[key];\n        if (incoming && existing !== incoming && !(isArray(existing) && existing.includes(incoming))) {\n          ret[key] = existing ? [].concat(existing, incoming) : incoming;\n        }\n      } else if (key !== \"\") {\n        ret[key] = toMerge[key];\n      }\n    }\n  }\n  return ret;\n}\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\n  callWithAsyncErrorHandling(hook, instance, 7, [\n    vnode,\n    prevVNode\n  ]);\n}\n\nconst emptyAppContext = createAppContext();\nlet uid = 0;\nfunction createComponentInstance(vnode, parent, suspense) {\n  const type = vnode.type;\n  const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\n  const instance = {\n    uid: uid++,\n    vnode,\n    type,\n    parent,\n    appContext,\n    root: null,\n    // to be immediately set\n    next: null,\n    subTree: null,\n    // will be set synchronously right after creation\n    effect: null,\n    update: null,\n    // will be set synchronously right after creation\n    scope: new EffectScope(\n      true\n      /* detached */\n    ),\n    render: null,\n    proxy: null,\n    exposed: null,\n    exposeProxy: null,\n    withProxy: null,\n    provides: parent ? parent.provides : Object.create(appContext.provides),\n    accessCache: null,\n    renderCache: [],\n    // local resolved assets\n    components: null,\n    directives: null,\n    // resolved props and emits options\n    propsOptions: normalizePropsOptions(type, appContext),\n    emitsOptions: normalizeEmitsOptions(type, appContext),\n    // emit\n    emit: null,\n    // to be set immediately\n    emitted: null,\n    // props default value\n    propsDefaults: EMPTY_OBJ,\n    // inheritAttrs\n    inheritAttrs: type.inheritAttrs,\n    // state\n    ctx: EMPTY_OBJ,\n    data: EMPTY_OBJ,\n    props: EMPTY_OBJ,\n    attrs: EMPTY_OBJ,\n    slots: EMPTY_OBJ,\n    refs: EMPTY_OBJ,\n    setupState: EMPTY_OBJ,\n    setupContext: null,\n    attrsProxy: null,\n    slotsProxy: null,\n    // suspense related\n    suspense,\n    suspenseId: suspense ? suspense.pendingId : 0,\n    asyncDep: null,\n    asyncResolved: false,\n    // lifecycle hooks\n    // not using enums here because it results in computed properties\n    isMounted: false,\n    isUnmounted: false,\n    isDeactivated: false,\n    bc: null,\n    c: null,\n    bm: null,\n    m: null,\n    bu: null,\n    u: null,\n    um: null,\n    bum: null,\n    da: null,\n    a: null,\n    rtg: null,\n    rtc: null,\n    ec: null,\n    sp: null\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    instance.ctx = createDevRenderContext(instance);\n  } else {\n    instance.ctx = { _: instance };\n  }\n  instance.root = parent ? parent.root : instance;\n  instance.emit = emit.bind(null, instance);\n  if (vnode.ce) {\n    vnode.ce(instance);\n  }\n  return instance;\n}\nlet currentInstance = null;\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\nlet internalSetCurrentInstance;\nlet globalCurrentInstanceSetters;\nlet settersKey = \"__VUE_INSTANCE_SETTERS__\";\n{\n  if (!(globalCurrentInstanceSetters = getGlobalThis()[settersKey])) {\n    globalCurrentInstanceSetters = getGlobalThis()[settersKey] = [];\n  }\n  globalCurrentInstanceSetters.push((i) => currentInstance = i);\n  internalSetCurrentInstance = (instance) => {\n    if (globalCurrentInstanceSetters.length > 1) {\n      globalCurrentInstanceSetters.forEach((s) => s(instance));\n    } else {\n      globalCurrentInstanceSetters[0](instance);\n    }\n  };\n}\nconst setCurrentInstance = (instance) => {\n  internalSetCurrentInstance(instance);\n  instance.scope.on();\n};\nconst unsetCurrentInstance = () => {\n  currentInstance && currentInstance.scope.off();\n  internalSetCurrentInstance(null);\n};\nconst isBuiltInTag = /* @__PURE__ */ makeMap(\"slot,component\");\nfunction validateComponentName(name, config) {\n  const appIsNativeTag = config.isNativeTag || NO;\n  if (isBuiltInTag(name) || appIsNativeTag(name)) {\n    warn(\n      \"Do not use built-in or reserved HTML elements as component id: \" + name\n    );\n  }\n}\nfunction isStatefulComponent(instance) {\n  return instance.vnode.shapeFlag & 4;\n}\nlet isInSSRComponentSetup = false;\nfunction setupComponent(instance, isSSR = false) {\n  isInSSRComponentSetup = isSSR;\n  const { props, children } = instance.vnode;\n  const isStateful = isStatefulComponent(instance);\n  initProps(instance, props, isStateful, isSSR);\n  initSlots(instance, children);\n  const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;\n  isInSSRComponentSetup = false;\n  return setupResult;\n}\nfunction setupStatefulComponent(instance, isSSR) {\n  var _a;\n  const Component = instance.type;\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    if (Component.name) {\n      validateComponentName(Component.name, instance.appContext.config);\n    }\n    if (Component.components) {\n      const names = Object.keys(Component.components);\n      for (let i = 0; i < names.length; i++) {\n        validateComponentName(names[i], instance.appContext.config);\n      }\n    }\n    if (Component.directives) {\n      const names = Object.keys(Component.directives);\n      for (let i = 0; i < names.length; i++) {\n        validateDirectiveName(names[i]);\n      }\n    }\n    if (Component.compilerOptions && isRuntimeOnly()) {\n      warn(\n        `\"compilerOptions\" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`\n      );\n    }\n  }\n  instance.accessCache = /* @__PURE__ */ Object.create(null);\n  instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    exposePropsOnRenderContext(instance);\n  }\n  const { setup } = Component;\n  if (setup) {\n    const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;\n    setCurrentInstance(instance);\n    pauseTracking();\n    const setupResult = callWithErrorHandling(\n      setup,\n      instance,\n      0,\n      [!!(process.env.NODE_ENV !== \"production\") ? shallowReadonly(instance.props) : instance.props, setupContext]\n    );\n    resetTracking();\n    unsetCurrentInstance();\n    if (isPromise(setupResult)) {\n      setupResult.then(unsetCurrentInstance, unsetCurrentInstance);\n      if (isSSR) {\n        return setupResult.then((resolvedResult) => {\n          handleSetupResult(instance, resolvedResult, isSSR);\n        }).catch((e) => {\n          handleError(e, instance, 0);\n        });\n      } else {\n        instance.asyncDep = setupResult;\n        if (!!(process.env.NODE_ENV !== \"production\") && !instance.suspense) {\n          const name = (_a = Component.name) != null ? _a : \"Anonymous\";\n          warn(\n            `Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`\n          );\n        }\n      }\n    } else {\n      handleSetupResult(instance, setupResult, isSSR);\n    }\n  } else {\n    finishComponentSetup(instance, isSSR);\n  }\n}\nfunction handleSetupResult(instance, setupResult, isSSR) {\n  if (isFunction(setupResult)) {\n    if (instance.type.__ssrInlineRender) {\n      instance.ssrRender = setupResult;\n    } else {\n      instance.render = setupResult;\n    }\n  } else if (isObject(setupResult)) {\n    if (!!(process.env.NODE_ENV !== \"production\") && isVNode(setupResult)) {\n      warn(\n        `setup() should not return VNodes directly - return a render function instead.`\n      );\n    }\n    if (!!(process.env.NODE_ENV !== \"production\") || __VUE_PROD_DEVTOOLS__) {\n      instance.devtoolsRawSetupState = setupResult;\n    }\n    instance.setupState = proxyRefs(setupResult);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      exposeSetupStateOnRenderContext(instance);\n    }\n  } else if (!!(process.env.NODE_ENV !== \"production\") && setupResult !== void 0) {\n    warn(\n      `setup() should return an object. Received: ${setupResult === null ? \"null\" : typeof setupResult}`\n    );\n  }\n  finishComponentSetup(instance, isSSR);\n}\nlet compile;\nlet installWithProxy;\nfunction registerRuntimeCompiler(_compile) {\n  compile = _compile;\n  installWithProxy = (i) => {\n    if (i.render._rc) {\n      i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\n    }\n  };\n}\nconst isRuntimeOnly = () => !compile;\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\n  const Component = instance.type;\n  if (!instance.render) {\n    if (!isSSR && compile && !Component.render) {\n      const template = Component.template || resolveMergedOptions(instance).template;\n      if (template) {\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          startMeasure(instance, `compile`);\n        }\n        const { isCustomElement, compilerOptions } = instance.appContext.config;\n        const { delimiters, compilerOptions: componentCompilerOptions } = Component;\n        const finalCompilerOptions = extend(\n          extend(\n            {\n              isCustomElement,\n              delimiters\n            },\n            compilerOptions\n          ),\n          componentCompilerOptions\n        );\n        Component.render = compile(template, finalCompilerOptions);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          endMeasure(instance, `compile`);\n        }\n      }\n    }\n    instance.render = Component.render || NOOP;\n    if (installWithProxy) {\n      installWithProxy(instance);\n    }\n  }\n  if (__VUE_OPTIONS_API__ && true) {\n    setCurrentInstance(instance);\n    pauseTracking();\n    applyOptions(instance);\n    resetTracking();\n    unsetCurrentInstance();\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && !Component.render && instance.render === NOOP && !isSSR) {\n    if (!compile && Component.template) {\n      warn(\n        `Component provided template option but runtime compilation is not supported in this build of Vue.` + (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".` )\n        /* should not happen */\n      );\n    } else {\n      warn(`Component is missing template or render function.`);\n    }\n  }\n}\nfunction getAttrsProxy(instance) {\n  return instance.attrsProxy || (instance.attrsProxy = new Proxy(\n    instance.attrs,\n    !!(process.env.NODE_ENV !== \"production\") ? {\n      get(target, key) {\n        markAttrsAccessed();\n        track(instance, \"get\", \"$attrs\");\n        return target[key];\n      },\n      set() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      },\n      deleteProperty() {\n        warn(`setupContext.attrs is readonly.`);\n        return false;\n      }\n    } : {\n      get(target, key) {\n        track(instance, \"get\", \"$attrs\");\n        return target[key];\n      }\n    }\n  ));\n}\nfunction getSlotsProxy(instance) {\n  return instance.slotsProxy || (instance.slotsProxy = new Proxy(instance.slots, {\n    get(target, key) {\n      track(instance, \"get\", \"$slots\");\n      return target[key];\n    }\n  }));\n}\nfunction createSetupContext(instance) {\n  const expose = (exposed) => {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (instance.exposed) {\n        warn(`expose() should be called only once per setup().`);\n      }\n      if (exposed != null) {\n        let exposedType = typeof exposed;\n        if (exposedType === \"object\") {\n          if (isArray(exposed)) {\n            exposedType = \"array\";\n          } else if (isRef(exposed)) {\n            exposedType = \"ref\";\n          }\n        }\n        if (exposedType !== \"object\") {\n          warn(\n            `expose() should be passed a plain object, received ${exposedType}.`\n          );\n        }\n      }\n    }\n    instance.exposed = exposed || {};\n  };\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    return Object.freeze({\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      get slots() {\n        return getSlotsProxy(instance);\n      },\n      get emit() {\n        return (event, ...args) => instance.emit(event, ...args);\n      },\n      expose\n    });\n  } else {\n    return {\n      get attrs() {\n        return getAttrsProxy(instance);\n      },\n      slots: instance.slots,\n      emit: instance.emit,\n      expose\n    };\n  }\n}\nfunction getExposeProxy(instance) {\n  if (instance.exposed) {\n    return instance.exposeProxy || (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\n      get(target, key) {\n        if (key in target) {\n          return target[key];\n        } else if (key in publicPropertiesMap) {\n          return publicPropertiesMap[key](instance);\n        }\n      },\n      has(target, key) {\n        return key in target || key in publicPropertiesMap;\n      }\n    }));\n  }\n}\nconst classifyRE = /(?:^|[-_])(\\w)/g;\nconst classify = (str) => str.replace(classifyRE, (c) => c.toUpperCase()).replace(/[-_]/g, \"\");\nfunction getComponentName(Component, includeInferred = true) {\n  return isFunction(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;\n}\nfunction formatComponentName(instance, Component, isRoot = false) {\n  let name = getComponentName(Component);\n  if (!name && Component.__file) {\n    const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      name = match[1];\n    }\n  }\n  if (!name && instance && instance.parent) {\n    const inferFromRegistry = (registry) => {\n      for (const key in registry) {\n        if (registry[key] === Component) {\n          return key;\n        }\n      }\n    };\n    name = inferFromRegistry(\n      instance.components || instance.parent.type.components\n    ) || inferFromRegistry(instance.appContext.components);\n  }\n  return name ? classify(name) : isRoot ? `App` : `Anonymous`;\n}\nfunction isClassComponent(value) {\n  return isFunction(value) && \"__vccOpts\" in value;\n}\n\nconst computed = (getterOrOptions, debugOptions) => {\n  return computed$1(getterOrOptions, debugOptions, isInSSRComponentSetup);\n};\n\nfunction h(type, propsOrChildren, children) {\n  const l = arguments.length;\n  if (l === 2) {\n    if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\n      if (isVNode(propsOrChildren)) {\n        return createVNode(type, null, [propsOrChildren]);\n      }\n      return createVNode(type, propsOrChildren);\n    } else {\n      return createVNode(type, null, propsOrChildren);\n    }\n  } else {\n    if (l > 3) {\n      children = Array.prototype.slice.call(arguments, 2);\n    } else if (l === 3 && isVNode(children)) {\n      children = [children];\n    }\n    return createVNode(type, propsOrChildren, children);\n  }\n}\n\nconst ssrContextKey = Symbol.for(\"v-scx\");\nconst useSSRContext = () => {\n  {\n    const ctx = inject(ssrContextKey);\n    if (!ctx) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(\n        `Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`\n      );\n    }\n    return ctx;\n  }\n};\n\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\n\nfunction initCustomFormatter() {\n  if (!!!(process.env.NODE_ENV !== \"production\") || typeof window === \"undefined\") {\n    return;\n  }\n  const vueStyle = { style: \"color:#3ba776\" };\n  const numberStyle = { style: \"color:#0b1bc9\" };\n  const stringStyle = { style: \"color:#b62e24\" };\n  const keywordStyle = { style: \"color:#9d288c\" };\n  const formatter = {\n    header(obj) {\n      if (!isObject(obj)) {\n        return null;\n      }\n      if (obj.__isVue) {\n        return [\"div\", vueStyle, `VueInstance`];\n      } else if (isRef(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, genRefFlag(obj)],\n          \"<\",\n          formatValue(obj.value),\n          `>`\n        ];\n      } else if (isReactive(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReactive\" : \"Reactive\"],\n          \"<\",\n          formatValue(obj),\n          `>${isReadonly(obj) ? ` (readonly)` : ``}`\n        ];\n      } else if (isReadonly(obj)) {\n        return [\n          \"div\",\n          {},\n          [\"span\", vueStyle, isShallow(obj) ? \"ShallowReadonly\" : \"Readonly\"],\n          \"<\",\n          formatValue(obj),\n          \">\"\n        ];\n      }\n      return null;\n    },\n    hasBody(obj) {\n      return obj && obj.__isVue;\n    },\n    body(obj) {\n      if (obj && obj.__isVue) {\n        return [\n          \"div\",\n          {},\n          ...formatInstance(obj.$)\n        ];\n      }\n    }\n  };\n  function formatInstance(instance) {\n    const blocks = [];\n    if (instance.type.props && instance.props) {\n      blocks.push(createInstanceBlock(\"props\", toRaw(instance.props)));\n    }\n    if (instance.setupState !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"setup\", instance.setupState));\n    }\n    if (instance.data !== EMPTY_OBJ) {\n      blocks.push(createInstanceBlock(\"data\", toRaw(instance.data)));\n    }\n    const computed = extractKeys(instance, \"computed\");\n    if (computed) {\n      blocks.push(createInstanceBlock(\"computed\", computed));\n    }\n    const injected = extractKeys(instance, \"inject\");\n    if (injected) {\n      blocks.push(createInstanceBlock(\"injected\", injected));\n    }\n    blocks.push([\n      \"div\",\n      {},\n      [\n        \"span\",\n        {\n          style: keywordStyle.style + \";opacity:0.66\"\n        },\n        \"$ (internal): \"\n      ],\n      [\"object\", { object: instance }]\n    ]);\n    return blocks;\n  }\n  function createInstanceBlock(type, target) {\n    target = extend({}, target);\n    if (!Object.keys(target).length) {\n      return [\"span\", {}];\n    }\n    return [\n      \"div\",\n      { style: \"line-height:1.25em;margin-bottom:0.6em\" },\n      [\n        \"div\",\n        {\n          style: \"color:#476582\"\n        },\n        type\n      ],\n      [\n        \"div\",\n        {\n          style: \"padding-left:1.25em\"\n        },\n        ...Object.keys(target).map((key) => {\n          return [\n            \"div\",\n            {},\n            [\"span\", keywordStyle, key + \": \"],\n            formatValue(target[key], false)\n          ];\n        })\n      ]\n    ];\n  }\n  function formatValue(v, asRaw = true) {\n    if (typeof v === \"number\") {\n      return [\"span\", numberStyle, v];\n    } else if (typeof v === \"string\") {\n      return [\"span\", stringStyle, JSON.stringify(v)];\n    } else if (typeof v === \"boolean\") {\n      return [\"span\", keywordStyle, v];\n    } else if (isObject(v)) {\n      return [\"object\", { object: asRaw ? toRaw(v) : v }];\n    } else {\n      return [\"span\", stringStyle, String(v)];\n    }\n  }\n  function extractKeys(instance, type) {\n    const Comp = instance.type;\n    if (isFunction(Comp)) {\n      return;\n    }\n    const extracted = {};\n    for (const key in instance.ctx) {\n      if (isKeyOfType(Comp, key, type)) {\n        extracted[key] = instance.ctx[key];\n      }\n    }\n    return extracted;\n  }\n  function isKeyOfType(Comp, key, type) {\n    const opts = Comp[type];\n    if (isArray(opts) && opts.includes(key) || isObject(opts) && key in opts) {\n      return true;\n    }\n    if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\n      return true;\n    }\n    if (Comp.mixins && Comp.mixins.some((m) => isKeyOfType(m, key, type))) {\n      return true;\n    }\n  }\n  function genRefFlag(v) {\n    if (isShallow(v)) {\n      return `ShallowRef`;\n    }\n    if (v.effect) {\n      return `ComputedRef`;\n    }\n    return `Ref`;\n  }\n  if (window.devtoolsFormatters) {\n    window.devtoolsFormatters.push(formatter);\n  } else {\n    window.devtoolsFormatters = [formatter];\n  }\n}\n\nfunction withMemo(memo, render, cache, index) {\n  const cached = cache[index];\n  if (cached && isMemoSame(cached, memo)) {\n    return cached;\n  }\n  const ret = render();\n  ret.memo = memo.slice();\n  return cache[index] = ret;\n}\nfunction isMemoSame(cached, memo) {\n  const prev = cached.memo;\n  if (prev.length != memo.length) {\n    return false;\n  }\n  for (let i = 0; i < prev.length; i++) {\n    if (hasChanged(prev[i], memo[i])) {\n      return false;\n    }\n  }\n  if (isBlockTreeEnabled > 0 && currentBlock) {\n    currentBlock.push(cached);\n  }\n  return true;\n}\n\nconst version = \"3.3.4\";\nconst _ssrUtils = {\n  createComponentInstance,\n  setupComponent,\n  renderComponentRoot,\n  setCurrentRenderingInstance,\n  isVNode: isVNode,\n  normalizeVNode\n};\nconst ssrUtils = _ssrUtils ;\nconst resolveFilter = null;\nconst compatUtils = null;\n\nexport { BaseTransition, BaseTransitionPropsValidators, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, assertNumber, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createElementBlock, createBaseVNode as createElementVNode, createHydrationRenderer, createPropsRestProxy, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmits, defineExpose, defineModel, defineOptions, defineProps, defineSlots, devtools, getCurrentInstance, getTransitionRawChildren, guardReactiveProps, h, handleError, hasInjectionContext, initCustomFormatter, inject, isMemoSame, isRuntimeOnly, isVNode, mergeDefaults, mergeModels, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useModel, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, watchPostEffect, watchSyncEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withMemo, withScopeId };\n","import { warn, camelize, callWithAsyncErrorHandling, defineComponent, nextTick, createVNode, getCurrentInstance, watchPostEffect, onMounted, onUnmounted, Fragment, Static, h, BaseTransition, BaseTransitionPropsValidators, assertNumber, useTransitionState, onUpdated, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, isRuntimeOnly, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, includeBooleanAttr, isOn, isModelListener, isFunction, camelize as camelize$1, toNumber, extend, EMPTY_OBJ, isObject, looseToNumber, looseIndexOf, isSet, looseEqual, invokeArrayFns, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\nconst doc = typeof document !== \"undefined\" ? document : null;\nconst templateContainer = doc && /* @__PURE__ */ doc.createElement(\"template\");\nconst nodeOps = {\n  insert: (child, parent, anchor) => {\n    parent.insertBefore(child, anchor || null);\n  },\n  remove: (child) => {\n    const parent = child.parentNode;\n    if (parent) {\n      parent.removeChild(child);\n    }\n  },\n  createElement: (tag, isSVG, is, props) => {\n    const el = isSVG ? doc.createElementNS(svgNS, tag) : doc.createElement(tag, is ? { is } : void 0);\n    if (tag === \"select\" && props && props.multiple != null) {\n      el.setAttribute(\"multiple\", props.multiple);\n    }\n    return el;\n  },\n  createText: (text) => doc.createTextNode(text),\n  createComment: (text) => doc.createComment(text),\n  setText: (node, text) => {\n    node.nodeValue = text;\n  },\n  setElementText: (el, text) => {\n    el.textContent = text;\n  },\n  parentNode: (node) => node.parentNode,\n  nextSibling: (node) => node.nextSibling,\n  querySelector: (selector) => doc.querySelector(selector),\n  setScopeId(el, id) {\n    el.setAttribute(id, \"\");\n  },\n  // __UNSAFE__\n  // Reason: innerHTML.\n  // Static content here can only come from compiled templates.\n  // As long as the user only uses trusted templates, this is safe.\n  insertStaticContent(content, parent, anchor, isSVG, start, end) {\n    const before = anchor ? anchor.previousSibling : parent.lastChild;\n    if (start && (start === end || start.nextSibling)) {\n      while (true) {\n        parent.insertBefore(start.cloneNode(true), anchor);\n        if (start === end || !(start = start.nextSibling))\n          break;\n      }\n    } else {\n      templateContainer.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\n      const template = templateContainer.content;\n      if (isSVG) {\n        const wrapper = template.firstChild;\n        while (wrapper.firstChild) {\n          template.appendChild(wrapper.firstChild);\n        }\n        template.removeChild(wrapper);\n      }\n      parent.insertBefore(template, anchor);\n    }\n    return [\n      // first\n      before ? before.nextSibling : parent.firstChild,\n      // last\n      anchor ? anchor.previousSibling : parent.lastChild\n    ];\n  }\n};\n\nfunction patchClass(el, value, isSVG) {\n  const transitionClasses = el._vtc;\n  if (transitionClasses) {\n    value = (value ? [value, ...transitionClasses] : [...transitionClasses]).join(\" \");\n  }\n  if (value == null) {\n    el.removeAttribute(\"class\");\n  } else if (isSVG) {\n    el.setAttribute(\"class\", value);\n  } else {\n    el.className = value;\n  }\n}\n\nfunction patchStyle(el, prev, next) {\n  const style = el.style;\n  const isCssString = isString(next);\n  if (next && !isCssString) {\n    if (prev && !isString(prev)) {\n      for (const key in prev) {\n        if (next[key] == null) {\n          setStyle(style, key, \"\");\n        }\n      }\n    }\n    for (const key in next) {\n      setStyle(style, key, next[key]);\n    }\n  } else {\n    const currentDisplay = style.display;\n    if (isCssString) {\n      if (prev !== next) {\n        style.cssText = next;\n      }\n    } else if (prev) {\n      el.removeAttribute(\"style\");\n    }\n    if (\"_vod\" in el) {\n      style.display = currentDisplay;\n    }\n  }\n}\nconst semicolonRE = /[^\\\\];\\s*$/;\nconst importantRE = /\\s*!important$/;\nfunction setStyle(style, name, val) {\n  if (isArray(val)) {\n    val.forEach((v) => setStyle(style, name, v));\n  } else {\n    if (val == null)\n      val = \"\";\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (semicolonRE.test(val)) {\n        warn(\n          `Unexpected semicolon at the end of '${name}' style value: '${val}'`\n        );\n      }\n    }\n    if (name.startsWith(\"--\")) {\n      style.setProperty(name, val);\n    } else {\n      const prefixed = autoPrefix(style, name);\n      if (importantRE.test(val)) {\n        style.setProperty(\n          hyphenate(prefixed),\n          val.replace(importantRE, \"\"),\n          \"important\"\n        );\n      } else {\n        style[prefixed] = val;\n      }\n    }\n  }\n}\nconst prefixes = [\"Webkit\", \"Moz\", \"ms\"];\nconst prefixCache = {};\nfunction autoPrefix(style, rawName) {\n  const cached = prefixCache[rawName];\n  if (cached) {\n    return cached;\n  }\n  let name = camelize(rawName);\n  if (name !== \"filter\" && name in style) {\n    return prefixCache[rawName] = name;\n  }\n  name = capitalize(name);\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefixed = prefixes[i] + name;\n    if (prefixed in style) {\n      return prefixCache[rawName] = prefixed;\n    }\n  }\n  return rawName;\n}\n\nconst xlinkNS = \"http://www.w3.org/1999/xlink\";\nfunction patchAttr(el, key, value, isSVG, instance) {\n  if (isSVG && key.startsWith(\"xlink:\")) {\n    if (value == null) {\n      el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    const isBoolean = isSpecialBooleanAttr(key);\n    if (value == null || isBoolean && !includeBooleanAttr(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, isBoolean ? \"\" : value);\n    }\n  }\n}\n\nfunction patchDOMProp(el, key, value, prevChildren, parentComponent, parentSuspense, unmountChildren) {\n  if (key === \"innerHTML\" || key === \"textContent\") {\n    if (prevChildren) {\n      unmountChildren(prevChildren, parentComponent, parentSuspense);\n    }\n    el[key] = value == null ? \"\" : value;\n    return;\n  }\n  const tag = el.tagName;\n  if (key === \"value\" && tag !== \"PROGRESS\" && // custom elements may use _value internally\n  !tag.includes(\"-\")) {\n    el._value = value;\n    const oldValue = tag === \"OPTION\" ? el.getAttribute(\"value\") : el.value;\n    const newValue = value == null ? \"\" : value;\n    if (oldValue !== newValue) {\n      el.value = newValue;\n    }\n    if (value == null) {\n      el.removeAttribute(key);\n    }\n    return;\n  }\n  let needRemove = false;\n  if (value === \"\" || value == null) {\n    const type = typeof el[key];\n    if (type === \"boolean\") {\n      value = includeBooleanAttr(value);\n    } else if (value == null && type === \"string\") {\n      value = \"\";\n      needRemove = true;\n    } else if (type === \"number\") {\n      value = 0;\n      needRemove = true;\n    }\n  }\n  try {\n    el[key] = value;\n  } catch (e) {\n    if (!!(process.env.NODE_ENV !== \"production\") && !needRemove) {\n      warn(\n        `Failed setting prop \"${key}\" on <${tag.toLowerCase()}>: value ${value} is invalid.`,\n        e\n      );\n    }\n  }\n  needRemove && el.removeAttribute(key);\n}\n\nfunction addEventListener(el, event, handler, options) {\n  el.addEventListener(event, handler, options);\n}\nfunction removeEventListener(el, event, handler, options) {\n  el.removeEventListener(event, handler, options);\n}\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\n  const invokers = el._vei || (el._vei = {});\n  const existingInvoker = invokers[rawName];\n  if (nextValue && existingInvoker) {\n    existingInvoker.value = nextValue;\n  } else {\n    const [name, options] = parseName(rawName);\n    if (nextValue) {\n      const invoker = invokers[rawName] = createInvoker(nextValue, instance);\n      addEventListener(el, name, invoker, options);\n    } else if (existingInvoker) {\n      removeEventListener(el, name, existingInvoker, options);\n      invokers[rawName] = void 0;\n    }\n  }\n}\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\nfunction parseName(name) {\n  let options;\n  if (optionsModifierRE.test(name)) {\n    options = {};\n    let m;\n    while (m = name.match(optionsModifierRE)) {\n      name = name.slice(0, name.length - m[0].length);\n      options[m[0].toLowerCase()] = true;\n    }\n  }\n  const event = name[2] === \":\" ? name.slice(3) : hyphenate(name.slice(2));\n  return [event, options];\n}\nlet cachedNow = 0;\nconst p = /* @__PURE__ */ Promise.resolve();\nconst getNow = () => cachedNow || (p.then(() => cachedNow = 0), cachedNow = Date.now());\nfunction createInvoker(initialValue, instance) {\n  const invoker = (e) => {\n    if (!e._vts) {\n      e._vts = Date.now();\n    } else if (e._vts <= invoker.attached) {\n      return;\n    }\n    callWithAsyncErrorHandling(\n      patchStopImmediatePropagation(e, invoker.value),\n      instance,\n      5,\n      [e]\n    );\n  };\n  invoker.value = initialValue;\n  invoker.attached = getNow();\n  return invoker;\n}\nfunction patchStopImmediatePropagation(e, value) {\n  if (isArray(value)) {\n    const originalStop = e.stopImmediatePropagation;\n    e.stopImmediatePropagation = () => {\n      originalStop.call(e);\n      e._stopped = true;\n    };\n    return value.map((fn) => (e2) => !e2._stopped && fn && fn(e2));\n  } else {\n    return value;\n  }\n}\n\nconst nativeOnRE = /^on[a-z]/;\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\n  if (key === \"class\") {\n    patchClass(el, nextValue, isSVG);\n  } else if (key === \"style\") {\n    patchStyle(el, prevValue, nextValue);\n  } else if (isOn(key)) {\n    if (!isModelListener(key)) {\n      patchEvent(el, key, prevValue, nextValue, parentComponent);\n    }\n  } else if (key[0] === \".\" ? (key = key.slice(1), true) : key[0] === \"^\" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {\n    patchDOMProp(\n      el,\n      key,\n      nextValue,\n      prevChildren,\n      parentComponent,\n      parentSuspense,\n      unmountChildren\n    );\n  } else {\n    if (key === \"true-value\") {\n      el._trueValue = nextValue;\n    } else if (key === \"false-value\") {\n      el._falseValue = nextValue;\n    }\n    patchAttr(el, key, nextValue, isSVG);\n  }\n};\nfunction shouldSetAsProp(el, key, value, isSVG) {\n  if (isSVG) {\n    if (key === \"innerHTML\" || key === \"textContent\") {\n      return true;\n    }\n    if (key in el && nativeOnRE.test(key) && isFunction(value)) {\n      return true;\n    }\n    return false;\n  }\n  if (key === \"spellcheck\" || key === \"draggable\" || key === \"translate\") {\n    return false;\n  }\n  if (key === \"form\") {\n    return false;\n  }\n  if (key === \"list\" && el.tagName === \"INPUT\") {\n    return false;\n  }\n  if (key === \"type\" && el.tagName === \"TEXTAREA\") {\n    return false;\n  }\n  if (nativeOnRE.test(key) && isString(value)) {\n    return false;\n  }\n  return key in el;\n}\n\nfunction defineCustomElement(options, hydrate2) {\n  const Comp = defineComponent(options);\n  class VueCustomElement extends VueElement {\n    constructor(initialProps) {\n      super(Comp, initialProps, hydrate2);\n    }\n  }\n  VueCustomElement.def = Comp;\n  return VueCustomElement;\n}\nconst defineSSRCustomElement = (options) => {\n  return defineCustomElement(options, hydrate);\n};\nconst BaseClass = typeof HTMLElement !== \"undefined\" ? HTMLElement : class {\n};\nclass VueElement extends BaseClass {\n  constructor(_def, _props = {}, hydrate2) {\n    super();\n    this._def = _def;\n    this._props = _props;\n    /**\n     * @internal\n     */\n    this._instance = null;\n    this._connected = false;\n    this._resolved = false;\n    this._numberProps = null;\n    if (this.shadowRoot && hydrate2) {\n      hydrate2(this._createVNode(), this.shadowRoot);\n    } else {\n      if (!!(process.env.NODE_ENV !== \"production\") && this.shadowRoot) {\n        warn(\n          `Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \\`defineSSRCustomElement\\`.`\n        );\n      }\n      this.attachShadow({ mode: \"open\" });\n      if (!this._def.__asyncLoader) {\n        this._resolveProps(this._def);\n      }\n    }\n  }\n  connectedCallback() {\n    this._connected = true;\n    if (!this._instance) {\n      if (this._resolved) {\n        this._update();\n      } else {\n        this._resolveDef();\n      }\n    }\n  }\n  disconnectedCallback() {\n    this._connected = false;\n    nextTick(() => {\n      if (!this._connected) {\n        render(null, this.shadowRoot);\n        this._instance = null;\n      }\n    });\n  }\n  /**\n   * resolve inner component definition (handle possible async component)\n   */\n  _resolveDef() {\n    this._resolved = true;\n    for (let i = 0; i < this.attributes.length; i++) {\n      this._setAttr(this.attributes[i].name);\n    }\n    new MutationObserver((mutations) => {\n      for (const m of mutations) {\n        this._setAttr(m.attributeName);\n      }\n    }).observe(this, { attributes: true });\n    const resolve = (def, isAsync = false) => {\n      const { props, styles } = def;\n      let numberProps;\n      if (props && !isArray(props)) {\n        for (const key in props) {\n          const opt = props[key];\n          if (opt === Number || opt && opt.type === Number) {\n            if (key in this._props) {\n              this._props[key] = toNumber(this._props[key]);\n            }\n            (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[camelize$1(key)] = true;\n          }\n        }\n      }\n      this._numberProps = numberProps;\n      if (isAsync) {\n        this._resolveProps(def);\n      }\n      this._applyStyles(styles);\n      this._update();\n    };\n    const asyncDef = this._def.__asyncLoader;\n    if (asyncDef) {\n      asyncDef().then((def) => resolve(def, true));\n    } else {\n      resolve(this._def);\n    }\n  }\n  _resolveProps(def) {\n    const { props } = def;\n    const declaredPropKeys = isArray(props) ? props : Object.keys(props || {});\n    for (const key of Object.keys(this)) {\n      if (key[0] !== \"_\" && declaredPropKeys.includes(key)) {\n        this._setProp(key, this[key], true, false);\n      }\n    }\n    for (const key of declaredPropKeys.map(camelize$1)) {\n      Object.defineProperty(this, key, {\n        get() {\n          return this._getProp(key);\n        },\n        set(val) {\n          this._setProp(key, val);\n        }\n      });\n    }\n  }\n  _setAttr(key) {\n    let value = this.getAttribute(key);\n    const camelKey = camelize$1(key);\n    if (this._numberProps && this._numberProps[camelKey]) {\n      value = toNumber(value);\n    }\n    this._setProp(camelKey, value, false);\n  }\n  /**\n   * @internal\n   */\n  _getProp(key) {\n    return this._props[key];\n  }\n  /**\n   * @internal\n   */\n  _setProp(key, val, shouldReflect = true, shouldUpdate = true) {\n    if (val !== this._props[key]) {\n      this._props[key] = val;\n      if (shouldUpdate && this._instance) {\n        this._update();\n      }\n      if (shouldReflect) {\n        if (val === true) {\n          this.setAttribute(hyphenate(key), \"\");\n        } else if (typeof val === \"string\" || typeof val === \"number\") {\n          this.setAttribute(hyphenate(key), val + \"\");\n        } else if (!val) {\n          this.removeAttribute(hyphenate(key));\n        }\n      }\n    }\n  }\n  _update() {\n    render(this._createVNode(), this.shadowRoot);\n  }\n  _createVNode() {\n    const vnode = createVNode(this._def, extend({}, this._props));\n    if (!this._instance) {\n      vnode.ce = (instance) => {\n        this._instance = instance;\n        instance.isCE = true;\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          instance.ceReload = (newStyles) => {\n            if (this._styles) {\n              this._styles.forEach((s) => this.shadowRoot.removeChild(s));\n              this._styles.length = 0;\n            }\n            this._applyStyles(newStyles);\n            this._instance = null;\n            this._update();\n          };\n        }\n        const dispatch = (event, args) => {\n          this.dispatchEvent(\n            new CustomEvent(event, {\n              detail: args\n            })\n          );\n        };\n        instance.emit = (event, ...args) => {\n          dispatch(event, args);\n          if (hyphenate(event) !== event) {\n            dispatch(hyphenate(event), args);\n          }\n        };\n        let parent = this;\n        while (parent = parent && (parent.parentNode || parent.host)) {\n          if (parent instanceof VueElement) {\n            instance.parent = parent._instance;\n            instance.provides = parent._instance.provides;\n            break;\n          }\n        }\n      };\n    }\n    return vnode;\n  }\n  _applyStyles(styles) {\n    if (styles) {\n      styles.forEach((css) => {\n        const s = document.createElement(\"style\");\n        s.textContent = css;\n        this.shadowRoot.appendChild(s);\n        if (!!(process.env.NODE_ENV !== \"production\")) {\n          (this._styles || (this._styles = [])).push(s);\n        }\n      });\n    }\n  }\n}\n\nfunction useCssModule(name = \"$style\") {\n  {\n    const instance = getCurrentInstance();\n    if (!instance) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`useCssModule must be called inside setup()`);\n      return EMPTY_OBJ;\n    }\n    const modules = instance.type.__cssModules;\n    if (!modules) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS modules injected.`);\n      return EMPTY_OBJ;\n    }\n    const mod = modules[name];\n    if (!mod) {\n      !!(process.env.NODE_ENV !== \"production\") && warn(`Current instance does not have CSS module named \"${name}\".`);\n      return EMPTY_OBJ;\n    }\n    return mod;\n  }\n}\n\nfunction useCssVars(getter) {\n  const instance = getCurrentInstance();\n  if (!instance) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(`useCssVars is called without current active component instance.`);\n    return;\n  }\n  const updateTeleports = instance.ut = (vars = getter(instance.proxy)) => {\n    Array.from(\n      document.querySelectorAll(`[data-v-owner=\"${instance.uid}\"]`)\n    ).forEach((node) => setVarsOnNode(node, vars));\n  };\n  const setVars = () => {\n    const vars = getter(instance.proxy);\n    setVarsOnVNode(instance.subTree, vars);\n    updateTeleports(vars);\n  };\n  watchPostEffect(setVars);\n  onMounted(() => {\n    const ob = new MutationObserver(setVars);\n    ob.observe(instance.subTree.el.parentNode, { childList: true });\n    onUnmounted(() => ob.disconnect());\n  });\n}\nfunction setVarsOnVNode(vnode, vars) {\n  if (vnode.shapeFlag & 128) {\n    const suspense = vnode.suspense;\n    vnode = suspense.activeBranch;\n    if (suspense.pendingBranch && !suspense.isHydrating) {\n      suspense.effects.push(() => {\n        setVarsOnVNode(suspense.activeBranch, vars);\n      });\n    }\n  }\n  while (vnode.component) {\n    vnode = vnode.component.subTree;\n  }\n  if (vnode.shapeFlag & 1 && vnode.el) {\n    setVarsOnNode(vnode.el, vars);\n  } else if (vnode.type === Fragment) {\n    vnode.children.forEach((c) => setVarsOnVNode(c, vars));\n  } else if (vnode.type === Static) {\n    let { el, anchor } = vnode;\n    while (el) {\n      setVarsOnNode(el, vars);\n      if (el === anchor)\n        break;\n      el = el.nextSibling;\n    }\n  }\n}\nfunction setVarsOnNode(el, vars) {\n  if (el.nodeType === 1) {\n    const style = el.style;\n    for (const key in vars) {\n      style.setProperty(`--${key}`, vars[key]);\n    }\n  }\n}\n\nconst TRANSITION = \"transition\";\nconst ANIMATION = \"animation\";\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\nTransition.displayName = \"Transition\";\nconst DOMTransitionPropsValidators = {\n  name: String,\n  type: String,\n  css: {\n    type: Boolean,\n    default: true\n  },\n  duration: [String, Number, Object],\n  enterFromClass: String,\n  enterActiveClass: String,\n  enterToClass: String,\n  appearFromClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  leaveFromClass: String,\n  leaveActiveClass: String,\n  leaveToClass: String\n};\nconst TransitionPropsValidators = Transition.props = /* @__PURE__ */ extend(\n  {},\n  BaseTransitionPropsValidators,\n  DOMTransitionPropsValidators\n);\nconst callHook = (hook, args = []) => {\n  if (isArray(hook)) {\n    hook.forEach((h2) => h2(...args));\n  } else if (hook) {\n    hook(...args);\n  }\n};\nconst hasExplicitCallback = (hook) => {\n  return hook ? isArray(hook) ? hook.some((h2) => h2.length > 1) : hook.length > 1 : false;\n};\nfunction resolveTransitionProps(rawProps) {\n  const baseProps = {};\n  for (const key in rawProps) {\n    if (!(key in DOMTransitionPropsValidators)) {\n      baseProps[key] = rawProps[key];\n    }\n  }\n  if (rawProps.css === false) {\n    return baseProps;\n  }\n  const {\n    name = \"v\",\n    type,\n    duration,\n    enterFromClass = `${name}-enter-from`,\n    enterActiveClass = `${name}-enter-active`,\n    enterToClass = `${name}-enter-to`,\n    appearFromClass = enterFromClass,\n    appearActiveClass = enterActiveClass,\n    appearToClass = enterToClass,\n    leaveFromClass = `${name}-leave-from`,\n    leaveActiveClass = `${name}-leave-active`,\n    leaveToClass = `${name}-leave-to`\n  } = rawProps;\n  const durations = normalizeDuration(duration);\n  const enterDuration = durations && durations[0];\n  const leaveDuration = durations && durations[1];\n  const {\n    onBeforeEnter,\n    onEnter,\n    onEnterCancelled,\n    onLeave,\n    onLeaveCancelled,\n    onBeforeAppear = onBeforeEnter,\n    onAppear = onEnter,\n    onAppearCancelled = onEnterCancelled\n  } = baseProps;\n  const finishEnter = (el, isAppear, done) => {\n    removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\n    removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\n    done && done();\n  };\n  const finishLeave = (el, done) => {\n    el._isLeaving = false;\n    removeTransitionClass(el, leaveFromClass);\n    removeTransitionClass(el, leaveToClass);\n    removeTransitionClass(el, leaveActiveClass);\n    done && done();\n  };\n  const makeEnterHook = (isAppear) => {\n    return (el, done) => {\n      const hook = isAppear ? onAppear : onEnter;\n      const resolve = () => finishEnter(el, isAppear, done);\n      callHook(hook, [el, resolve]);\n      nextFrame(() => {\n        removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\n        addTransitionClass(el, isAppear ? appearToClass : enterToClass);\n        if (!hasExplicitCallback(hook)) {\n          whenTransitionEnds(el, type, enterDuration, resolve);\n        }\n      });\n    };\n  };\n  return extend(baseProps, {\n    onBeforeEnter(el) {\n      callHook(onBeforeEnter, [el]);\n      addTransitionClass(el, enterFromClass);\n      addTransitionClass(el, enterActiveClass);\n    },\n    onBeforeAppear(el) {\n      callHook(onBeforeAppear, [el]);\n      addTransitionClass(el, appearFromClass);\n      addTransitionClass(el, appearActiveClass);\n    },\n    onEnter: makeEnterHook(false),\n    onAppear: makeEnterHook(true),\n    onLeave(el, done) {\n      el._isLeaving = true;\n      const resolve = () => finishLeave(el, done);\n      addTransitionClass(el, leaveFromClass);\n      forceReflow();\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(() => {\n        if (!el._isLeaving) {\n          return;\n        }\n        removeTransitionClass(el, leaveFromClass);\n        addTransitionClass(el, leaveToClass);\n        if (!hasExplicitCallback(onLeave)) {\n          whenTransitionEnds(el, type, leaveDuration, resolve);\n        }\n      });\n      callHook(onLeave, [el, resolve]);\n    },\n    onEnterCancelled(el) {\n      finishEnter(el, false);\n      callHook(onEnterCancelled, [el]);\n    },\n    onAppearCancelled(el) {\n      finishEnter(el, true);\n      callHook(onAppearCancelled, [el]);\n    },\n    onLeaveCancelled(el) {\n      finishLeave(el);\n      callHook(onLeaveCancelled, [el]);\n    }\n  });\n}\nfunction normalizeDuration(duration) {\n  if (duration == null) {\n    return null;\n  } else if (isObject(duration)) {\n    return [NumberOf(duration.enter), NumberOf(duration.leave)];\n  } else {\n    const n = NumberOf(duration);\n    return [n, n];\n  }\n}\nfunction NumberOf(val) {\n  const res = toNumber(val);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    assertNumber(res, \"<transition> explicit duration\");\n  }\n  return res;\n}\nfunction addTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.add(c));\n  (el._vtc || (el._vtc = /* @__PURE__ */ new Set())).add(cls);\n}\nfunction removeTransitionClass(el, cls) {\n  cls.split(/\\s+/).forEach((c) => c && el.classList.remove(c));\n  const { _vtc } = el;\n  if (_vtc) {\n    _vtc.delete(cls);\n    if (!_vtc.size) {\n      el._vtc = void 0;\n    }\n  }\n}\nfunction nextFrame(cb) {\n  requestAnimationFrame(() => {\n    requestAnimationFrame(cb);\n  });\n}\nlet endId = 0;\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\n  const id = el._endId = ++endId;\n  const resolveIfNotStale = () => {\n    if (id === el._endId) {\n      resolve();\n    }\n  };\n  if (explicitTimeout) {\n    return setTimeout(resolveIfNotStale, explicitTimeout);\n  }\n  const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\n  if (!type) {\n    return resolve();\n  }\n  const endEvent = type + \"end\";\n  let ended = 0;\n  const end = () => {\n    el.removeEventListener(endEvent, onEnd);\n    resolveIfNotStale();\n  };\n  const onEnd = (e) => {\n    if (e.target === el && ++ended >= propCount) {\n      end();\n    }\n  };\n  setTimeout(() => {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(endEvent, onEnd);\n}\nfunction getTransitionInfo(el, expectedType) {\n  const styles = window.getComputedStyle(el);\n  const getStyleProperties = (key) => (styles[key] || \"\").split(\", \");\n  const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);\n  const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);\n  const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  const animationDelays = getStyleProperties(`${ANIMATION}Delay`);\n  const animationDurations = getStyleProperties(`${ANIMATION}Duration`);\n  const animationTimeout = getTimeout(animationDelays, animationDurations);\n  let type = null;\n  let timeout = 0;\n  let propCount = 0;\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n  const hasTransform = type === TRANSITION && /\\b(transform|all)(,|$)/.test(\n    getStyleProperties(`${TRANSITION}Property`).toString()\n  );\n  return {\n    type,\n    timeout,\n    propCount,\n    hasTransform\n  };\n}\nfunction getTimeout(delays, durations) {\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n  return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\n}\nfunction toMs(s) {\n  return Number(s.slice(0, -1).replace(\",\", \".\")) * 1e3;\n}\nfunction forceReflow() {\n  return document.body.offsetHeight;\n}\n\nconst positionMap = /* @__PURE__ */ new WeakMap();\nconst newPositionMap = /* @__PURE__ */ new WeakMap();\nconst TransitionGroupImpl = {\n  name: \"TransitionGroup\",\n  props: /* @__PURE__ */ extend({}, TransitionPropsValidators, {\n    tag: String,\n    moveClass: String\n  }),\n  setup(props, { slots }) {\n    const instance = getCurrentInstance();\n    const state = useTransitionState();\n    let prevChildren;\n    let children;\n    onUpdated(() => {\n      if (!prevChildren.length) {\n        return;\n      }\n      const moveClass = props.moveClass || `${props.name || \"v\"}-move`;\n      if (!hasCSSTransform(\n        prevChildren[0].el,\n        instance.vnode.el,\n        moveClass\n      )) {\n        return;\n      }\n      prevChildren.forEach(callPendingCbs);\n      prevChildren.forEach(recordPosition);\n      const movedChildren = prevChildren.filter(applyTranslation);\n      forceReflow();\n      movedChildren.forEach((c) => {\n        const el = c.el;\n        const style = el.style;\n        addTransitionClass(el, moveClass);\n        style.transform = style.webkitTransform = style.transitionDuration = \"\";\n        const cb = el._moveCb = (e) => {\n          if (e && e.target !== el) {\n            return;\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(\"transitionend\", cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        };\n        el.addEventListener(\"transitionend\", cb);\n      });\n    });\n    return () => {\n      const rawProps = toRaw(props);\n      const cssTransitionProps = resolveTransitionProps(rawProps);\n      let tag = rawProps.tag || Fragment;\n      prevChildren = children;\n      children = slots.default ? getTransitionRawChildren(slots.default()) : [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (child.key != null) {\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n        } else if (!!(process.env.NODE_ENV !== \"production\")) {\n          warn(`<TransitionGroup> children must be keyed.`);\n        }\n      }\n      if (prevChildren) {\n        for (let i = 0; i < prevChildren.length; i++) {\n          const child = prevChildren[i];\n          setTransitionHooks(\n            child,\n            resolveTransitionHooks(child, cssTransitionProps, state, instance)\n          );\n          positionMap.set(child, child.el.getBoundingClientRect());\n        }\n      }\n      return createVNode(tag, null, children);\n    };\n  }\n};\nconst removeMode = (props) => delete props.mode;\n/* @__PURE__ */ removeMode(TransitionGroupImpl.props);\nconst TransitionGroup = TransitionGroupImpl;\nfunction callPendingCbs(c) {\n  const el = c.el;\n  if (el._moveCb) {\n    el._moveCb();\n  }\n  if (el._enterCb) {\n    el._enterCb();\n  }\n}\nfunction recordPosition(c) {\n  newPositionMap.set(c, c.el.getBoundingClientRect());\n}\nfunction applyTranslation(c) {\n  const oldPos = positionMap.get(c);\n  const newPos = newPositionMap.get(c);\n  const dx = oldPos.left - newPos.left;\n  const dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    const s = c.el.style;\n    s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\n    s.transitionDuration = \"0s\";\n    return c;\n  }\n}\nfunction hasCSSTransform(el, root, moveClass) {\n  const clone = el.cloneNode();\n  if (el._vtc) {\n    el._vtc.forEach((cls) => {\n      cls.split(/\\s+/).forEach((c) => c && clone.classList.remove(c));\n    });\n  }\n  moveClass.split(/\\s+/).forEach((c) => c && clone.classList.add(c));\n  clone.style.display = \"none\";\n  const container = root.nodeType === 1 ? root : root.parentNode;\n  container.appendChild(clone);\n  const { hasTransform } = getTransitionInfo(clone);\n  container.removeChild(clone);\n  return hasTransform;\n}\n\nconst getModelAssigner = (vnode) => {\n  const fn = vnode.props[\"onUpdate:modelValue\"] || false;\n  return isArray(fn) ? (value) => invokeArrayFns(fn, value) : fn;\n};\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\nfunction onCompositionEnd(e) {\n  const target = e.target;\n  if (target.composing) {\n    target.composing = false;\n    target.dispatchEvent(new Event(\"input\"));\n  }\n}\nconst vModelText = {\n  created(el, { modifiers: { lazy, trim, number } }, vnode) {\n    el._assign = getModelAssigner(vnode);\n    const castToNumber = number || vnode.props && vnode.props.type === \"number\";\n    addEventListener(el, lazy ? \"change\" : \"input\", (e) => {\n      if (e.target.composing)\n        return;\n      let domValue = el.value;\n      if (trim) {\n        domValue = domValue.trim();\n      }\n      if (castToNumber) {\n        domValue = looseToNumber(domValue);\n      }\n      el._assign(domValue);\n    });\n    if (trim) {\n      addEventListener(el, \"change\", () => {\n        el.value = el.value.trim();\n      });\n    }\n    if (!lazy) {\n      addEventListener(el, \"compositionstart\", onCompositionStart);\n      addEventListener(el, \"compositionend\", onCompositionEnd);\n      addEventListener(el, \"change\", onCompositionEnd);\n    }\n  },\n  // set value on mounted so it's after min/max for type=\"range\"\n  mounted(el, { value }) {\n    el.value = value == null ? \"\" : value;\n  },\n  beforeUpdate(el, { value, modifiers: { lazy, trim, number } }, vnode) {\n    el._assign = getModelAssigner(vnode);\n    if (el.composing)\n      return;\n    if (document.activeElement === el && el.type !== \"range\") {\n      if (lazy) {\n        return;\n      }\n      if (trim && el.value.trim() === value) {\n        return;\n      }\n      if ((number || el.type === \"number\") && looseToNumber(el.value) === value) {\n        return;\n      }\n    }\n    const newValue = value == null ? \"\" : value;\n    if (el.value !== newValue) {\n      el.value = newValue;\n    }\n  }\n};\nconst vModelCheckbox = {\n  // #4096 array checkboxes need to be deep traversed\n  deep: true,\n  created(el, _, vnode) {\n    el._assign = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      const modelValue = el._modelValue;\n      const elementValue = getValue(el);\n      const checked = el.checked;\n      const assign = el._assign;\n      if (isArray(modelValue)) {\n        const index = looseIndexOf(modelValue, elementValue);\n        const found = index !== -1;\n        if (checked && !found) {\n          assign(modelValue.concat(elementValue));\n        } else if (!checked && found) {\n          const filtered = [...modelValue];\n          filtered.splice(index, 1);\n          assign(filtered);\n        }\n      } else if (isSet(modelValue)) {\n        const cloned = new Set(modelValue);\n        if (checked) {\n          cloned.add(elementValue);\n        } else {\n          cloned.delete(elementValue);\n        }\n        assign(cloned);\n      } else {\n        assign(getCheckboxValue(el, checked));\n      }\n    });\n  },\n  // set initial checked on mount to wait for true-value/false-value\n  mounted: setChecked,\n  beforeUpdate(el, binding, vnode) {\n    el._assign = getModelAssigner(vnode);\n    setChecked(el, binding, vnode);\n  }\n};\nfunction setChecked(el, { value, oldValue }, vnode) {\n  el._modelValue = value;\n  if (isArray(value)) {\n    el.checked = looseIndexOf(value, vnode.props.value) > -1;\n  } else if (isSet(value)) {\n    el.checked = value.has(vnode.props.value);\n  } else if (value !== oldValue) {\n    el.checked = looseEqual(value, getCheckboxValue(el, true));\n  }\n}\nconst vModelRadio = {\n  created(el, { value }, vnode) {\n    el.checked = looseEqual(value, vnode.props.value);\n    el._assign = getModelAssigner(vnode);\n    addEventListener(el, \"change\", () => {\n      el._assign(getValue(el));\n    });\n  },\n  beforeUpdate(el, { value, oldValue }, vnode) {\n    el._assign = getModelAssigner(vnode);\n    if (value !== oldValue) {\n      el.checked = looseEqual(value, vnode.props.value);\n    }\n  }\n};\nconst vModelSelect = {\n  // <select multiple> value need to be deep traversed\n  deep: true,\n  created(el, { value, modifiers: { number } }, vnode) {\n    const isSetModel = isSet(value);\n    addEventListener(el, \"change\", () => {\n      const selectedVal = Array.prototype.filter.call(el.options, (o) => o.selected).map(\n        (o) => number ? looseToNumber(getValue(o)) : getValue(o)\n      );\n      el._assign(\n        el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]\n      );\n    });\n    el._assign = getModelAssigner(vnode);\n  },\n  // set value in mounted & updated because <select> relies on its children\n  // <option>s.\n  mounted(el, { value }) {\n    setSelected(el, value);\n  },\n  beforeUpdate(el, _binding, vnode) {\n    el._assign = getModelAssigner(vnode);\n  },\n  updated(el, { value }) {\n    setSelected(el, value);\n  }\n};\nfunction setSelected(el, value) {\n  const isMultiple = el.multiple;\n  if (isMultiple && !isArray(value) && !isSet(value)) {\n    !!(process.env.NODE_ENV !== \"production\") && warn(\n      `<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`\n    );\n    return;\n  }\n  for (let i = 0, l = el.options.length; i < l; i++) {\n    const option = el.options[i];\n    const optionValue = getValue(option);\n    if (isMultiple) {\n      if (isArray(value)) {\n        option.selected = looseIndexOf(value, optionValue) > -1;\n      } else {\n        option.selected = value.has(optionValue);\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i)\n          el.selectedIndex = i;\n        return;\n      }\n    }\n  }\n  if (!isMultiple && el.selectedIndex !== -1) {\n    el.selectedIndex = -1;\n  }\n}\nfunction getValue(el) {\n  return \"_value\" in el ? el._value : el.value;\n}\nfunction getCheckboxValue(el, checked) {\n  const key = checked ? \"_trueValue\" : \"_falseValue\";\n  return key in el ? el[key] : checked;\n}\nconst vModelDynamic = {\n  created(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"created\");\n  },\n  mounted(el, binding, vnode) {\n    callModelHook(el, binding, vnode, null, \"mounted\");\n  },\n  beforeUpdate(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"beforeUpdate\");\n  },\n  updated(el, binding, vnode, prevVNode) {\n    callModelHook(el, binding, vnode, prevVNode, \"updated\");\n  }\n};\nfunction resolveDynamicModel(tagName, type) {\n  switch (tagName) {\n    case \"SELECT\":\n      return vModelSelect;\n    case \"TEXTAREA\":\n      return vModelText;\n    default:\n      switch (type) {\n        case \"checkbox\":\n          return vModelCheckbox;\n        case \"radio\":\n          return vModelRadio;\n        default:\n          return vModelText;\n      }\n  }\n}\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\n  const modelToUse = resolveDynamicModel(\n    el.tagName,\n    vnode.props && vnode.props.type\n  );\n  const fn = modelToUse[hook];\n  fn && fn(el, binding, vnode, prevVNode);\n}\nfunction initVModelForSSR() {\n  vModelText.getSSRProps = ({ value }) => ({ value });\n  vModelRadio.getSSRProps = ({ value }, vnode) => {\n    if (vnode.props && looseEqual(vnode.props.value, value)) {\n      return { checked: true };\n    }\n  };\n  vModelCheckbox.getSSRProps = ({ value }, vnode) => {\n    if (isArray(value)) {\n      if (vnode.props && looseIndexOf(value, vnode.props.value) > -1) {\n        return { checked: true };\n      }\n    } else if (isSet(value)) {\n      if (vnode.props && value.has(vnode.props.value)) {\n        return { checked: true };\n      }\n    } else if (value) {\n      return { checked: true };\n    }\n  };\n  vModelDynamic.getSSRProps = (binding, vnode) => {\n    if (typeof vnode.type !== \"string\") {\n      return;\n    }\n    const modelToUse = resolveDynamicModel(\n      // resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase\n      vnode.type.toUpperCase(),\n      vnode.props && vnode.props.type\n    );\n    if (modelToUse.getSSRProps) {\n      return modelToUse.getSSRProps(binding, vnode);\n    }\n  };\n}\n\nconst systemModifiers = [\"ctrl\", \"shift\", \"alt\", \"meta\"];\nconst modifierGuards = {\n  stop: (e) => e.stopPropagation(),\n  prevent: (e) => e.preventDefault(),\n  self: (e) => e.target !== e.currentTarget,\n  ctrl: (e) => !e.ctrlKey,\n  shift: (e) => !e.shiftKey,\n  alt: (e) => !e.altKey,\n  meta: (e) => !e.metaKey,\n  left: (e) => \"button\" in e && e.button !== 0,\n  middle: (e) => \"button\" in e && e.button !== 1,\n  right: (e) => \"button\" in e && e.button !== 2,\n  exact: (e, modifiers) => systemModifiers.some((m) => e[`${m}Key`] && !modifiers.includes(m))\n};\nconst withModifiers = (fn, modifiers) => {\n  return (event, ...args) => {\n    for (let i = 0; i < modifiers.length; i++) {\n      const guard = modifierGuards[modifiers[i]];\n      if (guard && guard(event, modifiers))\n        return;\n    }\n    return fn(event, ...args);\n  };\n};\nconst keyNames = {\n  esc: \"escape\",\n  space: \" \",\n  up: \"arrow-up\",\n  left: \"arrow-left\",\n  right: \"arrow-right\",\n  down: \"arrow-down\",\n  delete: \"backspace\"\n};\nconst withKeys = (fn, modifiers) => {\n  return (event) => {\n    if (!(\"key\" in event)) {\n      return;\n    }\n    const eventKey = hyphenate(event.key);\n    if (modifiers.some((k) => k === eventKey || keyNames[k] === eventKey)) {\n      return fn(event);\n    }\n  };\n};\n\nconst vShow = {\n  beforeMount(el, { value }, { transition }) {\n    el._vod = el.style.display === \"none\" ? \"\" : el.style.display;\n    if (transition && value) {\n      transition.beforeEnter(el);\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  mounted(el, { value }, { transition }) {\n    if (transition && value) {\n      transition.enter(el);\n    }\n  },\n  updated(el, { value, oldValue }, { transition }) {\n    if (!value === !oldValue)\n      return;\n    if (transition) {\n      if (value) {\n        transition.beforeEnter(el);\n        setDisplay(el, true);\n        transition.enter(el);\n      } else {\n        transition.leave(el, () => {\n          setDisplay(el, false);\n        });\n      }\n    } else {\n      setDisplay(el, value);\n    }\n  },\n  beforeUnmount(el, { value }) {\n    setDisplay(el, value);\n  }\n};\nfunction setDisplay(el, value) {\n  el.style.display = value ? el._vod : \"none\";\n}\nfunction initVShowForSSR() {\n  vShow.getSSRProps = ({ value }) => {\n    if (!value) {\n      return { style: { display: \"none\" } };\n    }\n  };\n}\n\nconst rendererOptions = /* @__PURE__ */ extend({ patchProp }, nodeOps);\nlet renderer;\nlet enabledHydration = false;\nfunction ensureRenderer() {\n  return renderer || (renderer = createRenderer(rendererOptions));\n}\nfunction ensureHydrationRenderer() {\n  renderer = enabledHydration ? renderer : createHydrationRenderer(rendererOptions);\n  enabledHydration = true;\n  return renderer;\n}\nconst render = (...args) => {\n  ensureRenderer().render(...args);\n};\nconst hydrate = (...args) => {\n  ensureHydrationRenderer().hydrate(...args);\n};\nconst createApp = (...args) => {\n  const app = ensureRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (!container)\n      return;\n    const component = app._component;\n    if (!isFunction(component) && !component.render && !component.template) {\n      component.template = container.innerHTML;\n    }\n    container.innerHTML = \"\";\n    const proxy = mount(container, false, container instanceof SVGElement);\n    if (container instanceof Element) {\n      container.removeAttribute(\"v-cloak\");\n      container.setAttribute(\"data-v-app\", \"\");\n    }\n    return proxy;\n  };\n  return app;\n};\nconst createSSRApp = (...args) => {\n  const app = ensureHydrationRenderer().createApp(...args);\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    injectNativeTagCheck(app);\n    injectCompilerOptionsCheck(app);\n  }\n  const { mount } = app;\n  app.mount = (containerOrSelector) => {\n    const container = normalizeContainer(containerOrSelector);\n    if (container) {\n      return mount(container, true, container instanceof SVGElement);\n    }\n  };\n  return app;\n};\nfunction injectNativeTagCheck(app) {\n  Object.defineProperty(app.config, \"isNativeTag\", {\n    value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\n    writable: false\n  });\n}\nfunction injectCompilerOptionsCheck(app) {\n  if (isRuntimeOnly()) {\n    const isCustomElement = app.config.isCustomElement;\n    Object.defineProperty(app.config, \"isCustomElement\", {\n      get() {\n        return isCustomElement;\n      },\n      set() {\n        warn(\n          `The \\`isCustomElement\\` config option is deprecated. Use \\`compilerOptions.isCustomElement\\` instead.`\n        );\n      }\n    });\n    const compilerOptions = app.config.compilerOptions;\n    const msg = `The \\`compilerOptions\\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka \"full build\"). Since you are using the runtime-only build, \\`compilerOptions\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\n- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\n- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\n- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;\n    Object.defineProperty(app.config, \"compilerOptions\", {\n      get() {\n        warn(msg);\n        return compilerOptions;\n      },\n      set() {\n        warn(msg);\n      }\n    });\n  }\n}\nfunction normalizeContainer(container) {\n  if (isString(container)) {\n    const res = document.querySelector(container);\n    if (!!(process.env.NODE_ENV !== \"production\") && !res) {\n      warn(\n        `Failed to mount app: mount target selector \"${container}\" returned null.`\n      );\n    }\n    return res;\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && window.ShadowRoot && container instanceof window.ShadowRoot && container.mode === \"closed\") {\n    warn(\n      `mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`\n    );\n  }\n  return container;\n}\nlet ssrDirectiveInitialized = false;\nconst initDirectivesForSSR = () => {\n  if (!ssrDirectiveInitialized) {\n    ssrDirectiveInitialized = true;\n    initVModelForSSR();\n    initVShowForSSR();\n  }\n} ;\n\nexport { Transition, TransitionGroup, VueElement, createApp, createSSRApp, defineCustomElement, defineSSRCustomElement, hydrate, initDirectivesForSSR, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\n * WEBMIDI.js v3.1.6\n * A JavaScript library to kickstart your MIDI projects\n * https://webmidijs.org\n * Build generated on June 4th, 2023.\n *\n * © Copyright 2015-2023, Jean-Philippe Côté.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\n/* Version: 3.1.6 - June 4, 2023 10:51:41 */\n/**\n * The `EventEmitter` class provides methods to implement the _observable_ design pattern. This\n * pattern allows one to _register_ a function to execute when a specific event is _emitted_ by the\n * emitter.\n *\n * It is intended to be an abstract class meant to be extended by (or mixed into) other objects.\n */\nclass EventEmitter {\n\n  /**\n   * Creates a new `EventEmitter`object.\n   *\n   * @param {boolean} [eventsSuspended=false] Whether the `EventEmitter` is initially in a suspended\n   * state (i.e. not executing callbacks).\n   */\n  constructor(eventsSuspended = false) {\n\n    /**\n     * An object containing a property for each event with at least one registered listener. Each\n     * event property contains an array of all the [`Listener`]{@link Listener} objects registered\n     * for the event.\n     *\n     * @type {Object}\n     * @readonly\n     */\n    this.eventMap = {};\n\n    /**\n     * Whether or not the execution of callbacks is currently suspended for this emitter.\n     *\n     * @type {boolean}\n     */\n    this.eventsSuspended = eventsSuspended == true ? true : false;\n\n  }\n\n  /**\n   * The callback function is executed when the associated event is triggered via [`emit()`](#emit).\n   * The [`emit()`](#emit) method relays all additional arguments it received to the callback\n   * functions. Since [`emit()`](#emit) can be passed a variable number of arguments, it is up to\n   * the developer to make sure the arguments match those of the associated callback. In addition,\n   * the callback also separately receives all the arguments present in the listener's\n   * [`arguments`](Listener#arguments) property. This makes it easy to pass data from where the\n   * listener is added to where the listener is executed.\n   *\n   * @callback EventEmitter~callback\n   * @param {...*} [args] A variable number of arguments matching the ones (if any) that were passed\n   * to the [`emit()`](#emit) method (except, the first one) followed by the arguments found in the\n   * listener's [`arguments`](Listener#arguments) array.\n   */\n\n  /**\n   * Adds a listener for the specified event. It returns the [`Listener`]{@link Listener} object\n   * that was created and attached to the event.\n   *\n   * To attach a global listener that will be triggered for any events, use\n   * [`EventEmitter.ANY_EVENT`]{@link #ANY_EVENT} as the first parameter. Note that a global\n   * listener will also be triggered by non-registered events.\n   *\n   * @param {string|Symbol} event The event to listen to.\n   * @param {EventEmitter~callback} callback The callback function to execute when the event occurs.\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=this] The value of `this` in the callback function.\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus executed first.\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   * @param {number} [options.remaining=Infinity] The number of times after which the callback\n   * should automatically be removed.\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`]{@link Listener#arguments}\n   * property of the [`Listener`]{@link Listener} object and can be retrieved or modified as\n   * desired.\n   *\n   * @returns {Listener} The newly created [`Listener`]{@link Listener} object.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {TypeError} The `callback` parameter must be a function.\n   */\n  addListener(event, callback, options = {}) {\n\n    if (\n      (typeof event === \"string\" && event.length < 1) ||\n      (event instanceof String && event.length < 1) ||\n      (typeof event !== \"string\" && !(event instanceof String) && event !== EventEmitter.ANY_EVENT)\n    ) {\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    }\n\n    if (typeof callback !== \"function\") throw new TypeError(\"The callback must be a function.\");\n\n    const listener = new Listener(event, this, callback, options);\n\n    if (!this.eventMap[event]) this.eventMap[event] = [];\n\n    if (options.prepend) {\n      this.eventMap[event].unshift(listener);\n    } else {\n      this.eventMap[event].push(listener);\n    }\n\n    return listener;\n\n  }\n\n  /**\n   * Adds a one-time listener for the specified event. The listener will be executed once and then\n   * destroyed. It returns the [`Listener`]{@link Listener} object that was created and attached\n   * to the event.\n   *\n   * To attach a global listener that will be triggered for any events, use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the first parameter. Note that a\n   * global listener will also be triggered by non-registered events.\n   *\n   * @param {string|Symbol} event The event to listen to\n   * @param {EventEmitter~callback} callback The callback function to execute when the event occurs\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=this] The context to invoke the callback function in.\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus executed first.\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`]{@link Listener#arguments}\n   * property of the [`Listener`]{@link Listener} object and can be retrieved or modified as\n   * desired.\n   *\n   * @returns {Listener} The newly created [`Listener`]{@link Listener} object.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {TypeError} The `callback` parameter must be a function.\n   */\n  addOneTimeListener(event, callback, options = {}) {\n    options.remaining = 1;\n    this.addListener(event, callback, options);\n  }\n\n  /**\n   * Identifier to use when adding or removing a listener that should be triggered when any events\n   * occur.\n   *\n   * @type {Symbol}\n   */\n  static get ANY_EVENT() {\n    return Symbol.for(\"Any event\");\n  }\n\n  /**\n   * Returns `true` if the specified event has at least one registered listener. If no event is\n   * specified, the method returns `true` if any event has at least one listener registered (this\n   * includes global listeners registered to\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}).\n   *\n   * Note: to specifically check for global listeners added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}, use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} [event=(any event)] The event to check\n   * @param {function|Listener} [callback=(any callback)] The actual function that was added to the\n   * event or the {@link Listener} object returned by `addListener()`.\n   * @returns {boolean}\n   */\n  hasListener(event, callback) {\n\n    if (event === undefined) {\n\n      // Check for ANY_EVENT\n      if (\n        this.eventMap[EventEmitter.ANY_EVENT] && this.eventMap[EventEmitter.ANY_EVENT].length > 0\n      ) {\n        return true;\n      }\n\n      // Check for any regular events\n      return Object.entries(this.eventMap).some(([, value]) => {\n        return value.length > 0;\n      });\n\n    } else {\n\n      if (this.eventMap[event] && this.eventMap[event].length > 0) {\n\n        if (callback instanceof Listener) {\n          let result = this.eventMap[event].filter(listener => listener === callback);\n          return result.length > 0;\n        } else if (typeof callback === \"function\") {\n          let result = this.eventMap[event].filter(listener => listener.callback === callback);\n          return result.length > 0;\n        } else if (callback != undefined) {\n          return false;\n        }\n\n        return true;\n\n      } else {\n        return false;\n      }\n\n\n    }\n\n  }\n\n  /**\n   * An array of all the unique event names for which the emitter has at least one registered\n   * listener.\n   *\n   * Note: this excludes global events registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} because they are not tied to a\n   * specific event.\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  get eventNames() {\n    return Object.keys(this.eventMap);\n  }\n\n  /**\n   * Returns an array of all the [`Listener`]{@link Listener} objects that have been registered for\n   * a specific event.\n   *\n   * Please note that global events (those added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}) are not returned for \"regular\"\n   * events. To get the list of global listeners, specifically use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} event The event to get listeners for.\n   * @returns {Listener[]} An array of [`Listener`]{@link Listener} objects.\n   */\n  getListeners(event) {\n    return this.eventMap[event] || [];\n  }\n\n  /**\n   * Suspends execution of all callbacks functions registered for the specified event type.\n   *\n   * You can suspend execution of callbacks registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} by passing\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} to `suspendEvent()`. Beware that this\n   * will not suspend all callbacks but only those registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}. While this may seem counter-intuitive\n   * at first glance, it allows the selective suspension of global listeners while leaving other\n   * listeners alone. If you truly want to suspends all callbacks for a specific\n   * [`EventEmitter`]{@link EventEmitter}, simply set its `eventsSuspended` property to `true`.\n   *\n   * @param {string|Symbol} event The event name (or `EventEmitter.ANY_EVENT`) for which to suspend\n   * execution of all callback functions.\n   */\n  suspendEvent(event) {\n    this.getListeners(event).forEach(listener => {\n      listener.suspended = true;\n    });\n  }\n\n  /**\n   * Resumes execution of all suspended callback functions registered for the specified event type.\n   *\n   * You can resume execution of callbacks registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} by passing\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} to `unsuspendEvent()`. Beware that\n   * this will not resume all callbacks but only those registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}. While this may seem\n   * counter-intuitive, it allows the selective unsuspension of global listeners while leaving other\n   * callbacks alone.\n   *\n   * @param {string|Symbol} event The event name (or `EventEmitter.ANY_EVENT`) for which to resume\n   * execution of all callback functions.\n   */\n  unsuspendEvent(event) {\n    this.getListeners(event).forEach(listener => {\n      listener.suspended = false;\n    });\n  }\n\n  /**\n   * Returns the number of listeners registered for a specific event.\n   *\n   * Please note that global events (those added with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}) do not count towards the remaining\n   * number for a \"regular\" event. To get the number of global listeners, specifically use\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the parameter.\n   *\n   * @param {string|Symbol} event The event which is usually a string but can also be the special\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} symbol.\n   * @returns {number} An integer representing the number of listeners registered for the specified\n   * event.\n   */\n  getListenerCount(event) {\n    return this.getListeners(event).length;\n  }\n\n  /**\n   * Executes the callback function of all the [`Listener`]{@link Listener} objects registered for\n   * a given event. The callback functions are passed the additional arguments passed to `emit()`\n   * (if any) followed by the arguments present in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object (if any).\n   *\n   * If the [`eventsSuspended`]{@link #eventsSuspended} property is `true` or the\n   * [`Listener.suspended`]{@link Listener#suspended} property is `true`, the callback functions\n   * will not be executed.\n   *\n   * This function returns an array containing the return values of each of the callbacks.\n   *\n   * It should be noted that the regular listeners are triggered first followed by the global\n   * listeners (those added with [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}).\n   *\n   * @param {string} event The event\n   * @param {...*} args Arbitrary number of arguments to pass along to the callback functions\n   *\n   * @returns {Array} An array containing the return value of each of the executed listener\n   * functions.\n   *\n   * @throws {TypeError} The `event` parameter must be a string.\n   */\n  emit(event, ...args) {\n\n    if (typeof event !== \"string\" && !(event instanceof String)) {\n      throw new TypeError(\"The 'event' parameter must be a string.\");\n    }\n\n    if (this.eventsSuspended) return;\n\n    // We collect return values from all listeners here\n    let results = [];\n\n    // We must make sure that we do not have undefined otherwise concat() will add an undefined\n    // entry in the array.\n    let listeners = this.eventMap[EventEmitter.ANY_EVENT] || [];\n    if (this.eventMap[event]) listeners = listeners.concat(this.eventMap[event]);\n\n    listeners.forEach(listener => {\n\n      // This is the per-listener suspension check\n      if (listener.suspended) return;\n\n      let params = [...args];\n      if (Array.isArray(listener.arguments)) params = params.concat(listener.arguments);\n\n      if (listener.remaining > 0) {\n        results.push(listener.callback.apply(listener.context, params));\n        listener.count++;\n      }\n\n      if (--listener.remaining < 1) listener.remove();\n\n    });\n\n    return results;\n\n  }\n\n  /**\n   * Removes all the listeners that were added to the object upon which the method is called and\n   * that match the specified criterias. If no parameters are passed, all listeners added to this\n   * object will be removed. If only the `event` parameter is passed, all listeners for that event\n   * will be removed from that object. You can remove global listeners by using\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} as the first parameter.\n   *\n   * To use more granular options, you must at least define the `event`. Then, you can specify the\n   * callback to match or one or more of the additional options.\n   *\n   * @param {string} [event] The event name.\n   * @param {EventEmitter~callback} [callback] Only remove the listeners that match this exact\n   * callback function.\n   * @param {Object} [options]\n   * @param {*} [options.context] Only remove the listeners that have this exact context.\n   * @param {number} [options.remaining] Only remove the listener if it has exactly that many\n   * remaining times to be executed.\n   */\n  removeListener(event, callback, options = {}) {\n\n    if (event === undefined) {\n      this.eventMap = {};\n      return;\n    } else if (!this.eventMap[event]) {\n      return;\n    }\n\n    // Find listeners that do not match the criterias (those are the ones we will keep)\n    let listeners = this.eventMap[event].filter(listener => {\n\n      return (callback && listener.callback !== callback) ||\n        (options.remaining && options.remaining !== listener.remaining) ||\n        (options.context && options.context !== listener.context);\n\n    });\n\n    if (listeners.length) {\n      this.eventMap[event] = listeners;\n    } else {\n      delete this.eventMap[event];\n    }\n\n  }\n\n  /**\n   * The `waitFor()` method is an async function which returns a promise. The promise is fulfilled\n   * when the specified event occurs. The event can be a regular event or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} (if you want to resolve as soon as any\n   * event is emitted).\n   *\n   * If the `duration` option is set, the promise will only be fulfilled if the event is emitted\n   * within the specified duration. If the event has not been fulfilled after the specified\n   * duration, the promise is rejected. This makes it super easy to wait for an event and timeout\n   * after a certain time if the event is not triggered.\n   *\n   * @param {string|Symbol} event The event to wait for\n   * @param {Object} [options={}]\n   * @param {number} [options.duration=Infinity] The number of milliseconds to wait before the\n   * promise is automatically rejected.\n   */\n  async waitFor(event, options = {}) {\n\n    options.duration = parseInt(options.duration);\n    if (isNaN(options.duration) || options.duration <= 0) options.duration = Infinity;\n\n    return new Promise((resolve, reject) => {\n\n      let timeout;\n\n      let listener = this.addListener(event, () => {\n        clearTimeout(timeout);\n        resolve();\n      }, {remaining: 1});\n\n      if (options.duration !== Infinity) {\n        timeout = setTimeout(() => {\n          listener.remove();\n          reject(\"The duration expired before the event was emitted.\");\n        }, options.duration);\n      }\n\n    });\n\n  }\n\n  /**\n   * The number of unique events that have registered listeners.\n   *\n   * Note: this excludes global events registered with\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT} because they are not tied to a\n   * specific event.\n   *\n   * @type {number}\n   * @readonly\n   */\n  get eventCount() {\n    return Object.keys(this.eventMap).length;\n  }\n\n}\n\n/**\n * The `Listener` class represents a single event listener object. Such objects keep all relevant\n * contextual information such as the event being listened to, the object the listener was attached\n * to, the callback function and so on.\n *\n */\nclass Listener {\n\n  /**\n   * Creates a new `Listener` object\n   *\n   * @param {string|Symbol} event The event being listened to\n   * @param {EventEmitter} target The [`EventEmitter`]{@link EventEmitter} object that the listener\n   * is attached to.\n   * @param {EventEmitter~callback} callback The function to call when the listener is triggered\n   * @param {Object} [options={}]\n   * @param {Object} [options.context=target] The context to invoke the listener in (a.k.a. the\n   * value of `this` inside the callback function).\n   * @param {number} [options.remaining=Infinity] The remaining number of times after which the\n   * callback should automatically be removed.\n   * @param {array} [options.arguments] An array of arguments that will be passed separately to the\n   * callback function upon execution. The array is stored in the [`arguments`]{@link #arguments}\n   * property and can be retrieved or modified as desired.\n   *\n   * @throws {TypeError} The `event` parameter must be a string or\n   * [`EventEmitter.ANY_EVENT`]{@link EventEmitter#ANY_EVENT}.\n   * @throws {ReferenceError} The `target` parameter is mandatory.\n   * @throws {TypeError} The `callback` must be a function.\n   */\n  constructor(event, target, callback, options = {}) {\n\n    if (\n      typeof event !== \"string\" &&\n      !(event instanceof String) &&\n      event !== EventEmitter.ANY_EVENT\n    ) {\n      throw new TypeError(\"The 'event' parameter must be a string or EventEmitter.ANY_EVENT.\");\n    }\n\n    if (!target) {\n      throw new ReferenceError(\"The 'target' parameter is mandatory.\");\n    }\n\n    if (typeof callback !== \"function\") {\n      throw new TypeError(\"The 'callback' must be a function.\");\n    }\n\n    // Convert single value argument to array\n    if (options.arguments !== undefined && !Array.isArray(options.arguments)) {\n      options.arguments = [options.arguments];\n    }\n\n    // Define default options and merge declared options into them,\n    options = Object.assign({\n      context: target,\n      remaining: Infinity,\n      arguments: undefined,\n      duration: Infinity,\n    }, options);\n\n    // Make sure it is eventually deleted if a duration is supplied\n    if (options.duration !== Infinity) {\n      setTimeout(() => this.remove(), options.duration);\n    }\n\n    /**\n     * An array of arguments to pass to the callback function upon execution.\n     * @type {array}\n     */\n    this.arguments = options.arguments;\n\n    /**\n     * The callback function to execute.\n     * @type {Function}\n     */\n    this.callback = callback;\n\n    /**\n     * The context to execute the callback function in (a.k.a. the value of `this` inside the\n     * callback function)\n     * @type {Object}\n     */\n    this.context = options.context;\n\n    /**\n     * The number of times the listener function was executed.\n     * @type {number}\n     */\n    this.count = 0;\n\n    /**\n     * The event name.\n     * @type {string}\n     */\n    this.event = event;\n\n    /**\n     * The remaining number of times after which the callback should automatically be removed.\n     * @type {number}\n     */\n    this.remaining = parseInt(options.remaining) >= 1 ? parseInt(options.remaining) : Infinity;\n\n    /**\n     * Whether this listener is currently suspended or not.\n     * @type {boolean}\n     */\n    this.suspended = false;\n\n    /**\n     * The object that the event is attached to (or that emitted the event).\n     * @type {EventEmitter}\n     */\n    this.target = target;\n\n  }\n\n  /**\n   * Removes the listener from its target.\n   */\n  remove() {\n    this.target.removeListener(\n      this.event,\n      this.callback,\n      {context: this.context, remaining: this.remaining}\n    );\n  }\n\n}\n\n/**\n * The `Enumerations` class contains enumerations and arrays of elements used throughout the\n * library. All its properties are static and should be referenced using the class name. For\n * example: `Enumerations.CHANNEL_MESSAGES`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass Enumerations {\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_MESSAGES instead)\n   * @private\n   * @static\n   */\n  static get MIDI_CHANNEL_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MESSAGES;\n\n  }\n\n  /**\n   * Enumeration of all MIDI channel message names and their associated 4-bit numerical value:\n   *\n   * | Message Name        | Hexadecimal | Decimal |\n   * |---------------------|-------------|---------|\n   * | `noteoff`           | 0x8         | 8       |\n   * | `noteon`            | 0x9         | 9       |\n   * | `keyaftertouch`     | 0xA         | 10      |\n   * | `controlchange`     | 0xB         | 11      |\n   * | `programchange`     | 0xC         | 12      |\n   * | `channelaftertouch` | 0xD         | 13      |\n   * | `pitchbend`         | 0xE         | 14      |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_MESSAGES() {\n\n    return {\n      noteoff: 0x8,           // 8\n      noteon: 0x9,            // 9\n      keyaftertouch: 0xA,     // 10\n      controlchange: 0xB,     // 11\n      programchange: 0xC,     // 12\n      channelaftertouch: 0xD, // 13\n      pitchbend: 0xE          // 14\n    };\n\n  }\n\n  /**\n   * A simple array of the 16 valid MIDI channel numbers (`1` to `16`):\n   *\n   * @type {number[]}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_NUMBERS() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n  }\n\n  /**\n   * @type {number[]}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_NUMBERS instead)\n   * @private\n   * @static\n   */\n  static get MIDI_CHANNEL_NUMBERS() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_NUMBERS array instead.\"\n      );\n    }\n\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n\n  }\n\n  /**\n   * Enumeration of all MIDI channel mode message names and their associated numerical value:\n   *\n   *\n   * | Message Name          | Hexadecimal | Decimal |\n   * |-----------------------|-------------|---------|\n   * | `allsoundoff`         | 0x78        | 120     |\n   * | `resetallcontrollers` | 0x79        | 121     |\n   * | `localcontrol`        | 0x7A        | 122     |\n   * | `allnotesoff`         | 0x7B        | 123     |\n   * | `omnimodeoff`         | 0x7C        | 124     |\n   * | `omnimodeon`          | 0x7D        | 125     |\n   * | `monomodeon`          | 0x7E        | 126     |\n   * | `polymodeon`          | 0x7F        | 127     |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get CHANNEL_MODE_MESSAGES() {\n\n    return {\n      allsoundoff: 120,\n      resetallcontrollers: 121,\n      localcontrol: 122,\n      allnotesoff: 123,\n      omnimodeoff: 124,\n      omnimodeon: 125,\n      monomodeon: 126,\n      polymodeon: 127\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @deprecated since 3.1 (use Enumerations.CHANNEL_MODE_MESSAGES instead)\n   * @private\n   * @readonly\n   * @static\n   */\n  static get MIDI_CHANNEL_MODE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CHANNEL_MODE_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MODE_MESSAGES;\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @static\n   * @private\n   * @deprecated since version 3.0.26 (use `CONTROL_CHANGE_MESSAGES` instead)\n   */\n  static get MIDI_CONTROL_CHANGE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.CONTROL_CHANGE_MESSAGES array instead.\"\n      );\n    }\n\n    return {\n\n      bankselectcoarse: 0,\n      modulationwheelcoarse: 1,\n      breathcontrollercoarse: 2,\n      controller3: 3,\n      footcontrollercoarse: 4,\n      portamentotimecoarse: 5,\n      dataentrycoarse: 6,\n      volumecoarse: 7,\n      balancecoarse: 8,\n      controller9: 9,\n      pancoarse: 10,\n      expressioncoarse: 11,\n      effectcontrol1coarse: 12,\n      effectcontrol2coarse: 13,\n      controller14: 14,\n      controller15: 15,\n      generalpurposeslider1: 16,\n      generalpurposeslider2: 17,\n      generalpurposeslider3: 18,\n      generalpurposeslider4: 19,\n      controller20: 20,\n      controller21: 21,\n      controller22: 22,\n      controller23: 23,\n      controller24: 24,\n      controller25: 25,\n      controller26: 26,\n      controller27: 27,\n      controller28: 28,\n      controller29: 29,\n      controller30: 30,\n      controller31: 31,\n      bankselectfine: 32,\n      modulationwheelfine: 33,\n      breathcontrollerfine: 34,\n      controller35: 35,\n      footcontrollerfine: 36,\n      portamentotimefine: 37,\n      dataentryfine: 38,\n      volumefine: 39,\n      balancefine: 40,\n      controller41: 41,\n      panfine: 42,\n      expressionfine: 43,\n      effectcontrol1fine: 44,\n      effectcontrol2fine: 45,\n      controller46: 46,\n      controller47: 47,\n      controller48: 48,\n      controller49: 49,\n      controller50: 50,\n      controller51: 51,\n      controller52: 52,\n      controller53: 53,\n      controller54: 54,\n      controller55: 55,\n      controller56: 56,\n      controller57: 57,\n      controller58: 58,\n      controller59: 59,\n      controller60: 60,\n      controller61: 61,\n      controller62: 62,\n      controller63: 63,\n      holdpedal: 64,\n      portamento: 65,\n      sustenutopedal: 66,\n      softpedal: 67,\n      legatopedal: 68,\n      hold2pedal: 69,\n      soundvariation: 70,\n      resonance: 71,\n      soundreleasetime: 72,\n      soundattacktime: 73,\n      brightness: 74,\n      soundcontrol6: 75,\n      soundcontrol7: 76,\n      soundcontrol8: 77,\n      soundcontrol9: 78,\n      soundcontrol10: 79,\n      generalpurposebutton1: 80,\n      generalpurposebutton2: 81,\n      generalpurposebutton3: 82,\n      generalpurposebutton4: 83,\n      controller84: 84,\n      controller85: 85,\n      controller86: 86,\n      controller87: 87,\n      controller88: 88,\n      controller89: 89,\n      controller90: 90,\n      reverblevel: 91,\n      tremololevel: 92,\n      choruslevel: 93,\n      celestelevel: 94,\n      phaserlevel: 95,\n      databuttonincrement: 96,\n      databuttondecrement: 97,\n      nonregisteredparametercoarse: 98,\n      nonregisteredparameterfine: 99,\n      registeredparametercoarse: 100,\n      registeredparameterfine: 101,\n      controller102: 102,\n      controller103: 103,\n      controller104: 104,\n      controller105: 105,\n      controller106: 106,\n      controller107: 107,\n      controller108: 108,\n      controller109: 109,\n      controller110: 110,\n      controller111: 111,\n      controller112: 112,\n      controller113: 113,\n      controller114: 114,\n      controller115: 115,\n      controller116: 116,\n      controller117: 117,\n      controller118: 118,\n      controller119: 119,\n      allsoundoff: 120,\n      resetallcontrollers: 121,\n      localcontrol: 122,\n      allnotesoff: 123,\n      omnimodeoff: 124,\n      omnimodeon: 125,\n      monomodeon: 126,\n      polymodeon: 127\n\n    };\n\n  }\n\n  /**\n   * An array of objects, ordered by control number, describing control change messages. Each object\n   * in the array has 3 properties with some objects having a fourth one (`position`) :\n   *\n   *  * `number`: MIDI control number (0-127);\n   *  * `name`: name of emitted event (eg: `bankselectcoarse`, `choruslevel`, etc) that can be\n   *  listened to;\n   *  * `description`: user-friendly description of the controller's purpose;\n   *  * `position` (optional): whether this controller's value should be considered an `msb` or\n   *  `lsb`\n   *\n   * Not all controllers have a predefined function. For those that don't, `name` is the word\n   * \"controller\" followed by the number (e.g. `controller112`).\n   *\n   * | Event name                     | Control Number |\n   * |--------------------------------|----------------|\n   * | `bankselectcoarse`             | 0              |\n   * | `modulationwheelcoarse`        | 1              |\n   * | `breathcontrollercoarse`       | 2              |\n   * | `controller3`                  | 3              |\n   * | `footcontrollercoarse`         | 4              |\n   * | `portamentotimecoarse`         | 5              |\n   * | `dataentrycoarse`              | 6              |\n   * | `volumecoarse`                 | 7              |\n   * | `balancecoarse`                | 8              |\n   * | `controller9`                  | 9              |\n   * | `pancoarse`                    | 10             |\n   * | `expressioncoarse`             | 11             |\n   * | `effectcontrol1coarse`         | 12             |\n   * | `effectcontrol2coarse`         | 13             |\n   * | `controller14`                 | 14             |\n   * | `controller15`                 | 15             |\n   * | `generalpurposecontroller1`    | 16             |\n   * | `generalpurposecontroller2`    | 17             |\n   * | `generalpurposecontroller3`    | 18             |\n   * | `generalpurposecontroller4`    | 19             |\n   * | `controller20`                 | 20             |\n   * | `controller21`                 | 21             |\n   * | `controller22`                 | 22             |\n   * | `controller23`                 | 23             |\n   * | `controller24`                 | 24             |\n   * | `controller25`                 | 25             |\n   * | `controller26`                 | 26             |\n   * | `controller27`                 | 27             |\n   * | `controller28`                 | 28             |\n   * | `controller29`                 | 29             |\n   * | `controller30`                 | 30             |\n   * | `controller31`                 | 31             |\n   * | `bankselectfine`               | 32             |\n   * | `modulationwheelfine`          | 33             |\n   * | `breathcontrollerfine`         | 34             |\n   * | `controller35`                 | 35             |\n   * | `footcontrollerfine`           | 36             |\n   * | `portamentotimefine`           | 37             |\n   * | `dataentryfine`                | 38             |\n   * | `channelvolumefine`            | 39             |\n   * | `balancefine`                  | 40             |\n   * | `controller41`                 | 41             |\n   * | `panfine`                      | 42             |\n   * | `expressionfine`               | 43             |\n   * | `effectcontrol1fine`           | 44             |\n   * | `effectcontrol2fine`           | 45             |\n   * | `controller46`                 | 46             |\n   * | `controller47`                 | 47             |\n   * | `controller48`                 | 48             |\n   * | `controller49`                 | 49             |\n   * | `controller50`                 | 50             |\n   * | `controller51`                 | 51             |\n   * | `controller52`                 | 52             |\n   * | `controller53`                 | 53             |\n   * | `controller54`                 | 54             |\n   * | `controller55`                 | 55             |\n   * | `controller56`                 | 56             |\n   * | `controller57`                 | 57             |\n   * | `controller58`                 | 58             |\n   * | `controller59`                 | 59             |\n   * | `controller60`                 | 60             |\n   * | `controller61`                 | 61             |\n   * | `controller62`                 | 62             |\n   * | `controller63`                 | 63             |\n   * | `damperpedal`                  | 64             |\n   * | `portamento`                   | 65             |\n   * | `sostenuto`                    | 66             |\n   * | `softpedal`                    | 67             |\n   * | `legatopedal`                  | 68             |\n   * | `hold2`                        | 69             |\n   * | `soundvariation`               | 70             |\n   * | `resonance`                    | 71             |\n   * | `releasetime`                  | 72             |\n   * | `attacktime`                   | 73             |\n   * | `brightness`                   | 74             |\n   * | `decaytime`                    | 75             |\n   * | `vibratorate`                  | 76             |\n   * | `vibratodepth`                 | 77             |\n   * | `vibratodelay`                 | 78             |\n   * | `controller79`                 | 79             |\n   * | `generalpurposecontroller5`    | 80             |\n   * | `generalpurposecontroller6`    | 81             |\n   * | `generalpurposecontroller7`    | 82             |\n   * | `generalpurposecontroller8`    | 83             |\n   * | `portamentocontrol`            | 84             |\n   * | `controller85`                 | 85             |\n   * | `controller86`                 | 86             |\n   * | `controller87`                 | 87             |\n   * | `highresolutionvelocityprefix` | 88             |\n   * | `controller89`                 | 89             |\n   * | `controller90`                 | 90             |\n   * | `effect1depth`                 | 91             |\n   * | `effect2depth`                 | 92             |\n   * | `effect3depth`                 | 93             |\n   * | `effect4depth`                 | 94             |\n   * | `effect5depth`                 | 95             |\n   * | `dataincrement`                | 96             |\n   * | `datadecrement`                | 97             |\n   * | `nonregisteredparameterfine`   | 98             |\n   * | `nonregisteredparametercoarse` | 99             |\n   * | `nonregisteredparameterfine`   | 100            |\n   * | `registeredparametercoarse`    | 101            |\n   * | `controller102`                | 102            |\n   * | `controller103`                | 103            |\n   * | `controller104`                | 104            |\n   * | `controller105`                | 105            |\n   * | `controller106`                | 106            |\n   * | `controller107`                | 107            |\n   * | `controller108`                | 108            |\n   * | `controller109`                | 109            |\n   * | `controller110`                | 110            |\n   * | `controller111`                | 111            |\n   * | `controller112`                | 112            |\n   * | `controller113`                | 113            |\n   * | `controller114`                | 114            |\n   * | `controller115`                | 115            |\n   * | `controller116`                | 116            |\n   * | `controller117`                | 117            |\n   * | `controller118`                | 118            |\n   * | `controller119`                | 119            |\n   * | `allsoundoff`                  | 120            |\n   * | `resetallcontrollers`          | 121            |\n   * | `localcontrol`                 | 122            |\n   * | `allnotesoff`                  | 123            |\n   * | `omnimodeoff`                  | 124            |\n   * | `omnimodeon`                   | 125            |\n   * | `monomodeon`                   | 126            |\n   * | `polymodeon`                   | 127            |\n   *\n   * @type {object[]}\n   * @readonly\n   * @static\n   * @since 3.1\n   */\n  static get CONTROL_CHANGE_MESSAGES() {\n\n    return [\n      {\n        number: 0,\n        name: \"bankselectcoarse\",\n        description: \"Bank Select (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 1,\n        name: \"modulationwheelcoarse\",\n        description: \"Modulation Wheel (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 2,\n        name: \"breathcontrollercoarse\",\n        description: \"Breath Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 3,\n        name: \"controller3\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 4,\n        name: \"footcontrollercoarse\",\n        description: \"Foot Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 5,\n        name: \"portamentotimecoarse\",\n        description: \"Portamento Time (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 6,\n        name: \"dataentrycoarse\",\n        description: \"Data Entry (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 7,\n        name: \"volumecoarse\",\n        description: \"Channel Volume (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 8,\n        name: \"balancecoarse\",\n        description: \"Balance (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 9,\n        name: \"controller9\",\n        description: \"Controller 9 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 10,\n        name: \"pancoarse\",\n        description: \"Pan (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 11,\n        name: \"expressioncoarse\",\n        description: \"Expression Controller (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 12,\n        name: \"effectcontrol1coarse\",\n        description: \"Effect Control 1 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 13,\n        name: \"effectcontrol2coarse\",\n        description: \"Effect Control 2 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 14,\n        name: \"controller14\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 15,\n        name: \"controller15\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 16,\n        name: \"generalpurposecontroller1\",\n        description: \"General Purpose Controller 1 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 17,\n        name: \"generalpurposecontroller2\",\n        description: \"General Purpose Controller 2 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 18,\n        name: \"generalpurposecontroller3\",\n        description: \"General Purpose Controller 3 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 19,\n        name: \"generalpurposecontroller4\",\n        description: \"General Purpose Controller 4 (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 20,\n        name: \"controller20\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 21,\n        name: \"controller21\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 22,\n        name: \"controller22\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 23,\n        name: \"controller23\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 24,\n        name: \"controller24\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 25,\n        name: \"controller25\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 26,\n        name: \"controller26\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 27,\n        name: \"controller27\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 28,\n        name: \"controller28\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 29,\n        name: \"controller29\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 30,\n        name: \"controller30\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 31,\n        name: \"controller31\",\n        description: \"Undefined\",\n        position: \"msb\"\n      },\n      {\n        number: 32,\n        name: \"bankselectfine\",\n        description: \"Bank Select (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 33,\n        name: \"modulationwheelfine\",\n        description: \"Modulation Wheel (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 34,\n        name: \"breathcontrollerfine\",\n        description: \"Breath Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 35,\n        name: \"controller35\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 36,\n        name: \"footcontrollerfine\",\n        description: \"Foot Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 37,\n        name: \"portamentotimefine\",\n        description: \"Portamento Time (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 38,\n        name: \"dataentryfine\",\n        description: \"Data Entry (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 39,\n        name: \"channelvolumefine\",\n        description: \"Channel Volume (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 40,\n        name: \"balancefine\",\n        description: \"Balance (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 41,\n        name: \"controller41\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 42,\n        name: \"panfine\",\n        description: \"Pan (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 43,\n        name: \"expressionfine\",\n        description: \"Expression Controller (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 44,\n        name: \"effectcontrol1fine\",\n        description: \"Effect control 1 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 45,\n        name: \"effectcontrol2fine\",\n        description: \"Effect control 2 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 46,\n        name: \"controller46\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 47,\n        name: \"controller47\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 48,\n        name: \"controller48\",\n        description: \"General Purpose Controller 1 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 49,\n        name: \"controller49\",\n        description: \"General Purpose Controller 2 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 50,\n        name: \"controller50\",\n        description: \"General Purpose Controller 3 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 51,\n        name: \"controller51\",\n        description: \"General Purpose Controller 4 (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 52,\n        name: \"controller52\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 53,\n        name: \"controller53\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 54,\n        name: \"controller54\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 55,\n        name: \"controller55\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 56,\n        name: \"controller56\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 57,\n        name: \"controller57\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 58,\n        name: \"controller58\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 59,\n        name: \"controller59\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 60,\n        name: \"controller60\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 61,\n        name: \"controller61\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 62,\n        name: \"controller62\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 63,\n        name: \"controller63\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 64,\n        name: \"damperpedal\",\n        description: \"Damper Pedal On/Off\"\n      },\n      {\n        number: 65,\n        name: \"portamento\",\n        description: \"Portamento On/Off\"\n      },\n      {\n        number: 66,\n        name: \"sostenuto\",\n        description: \"Sostenuto On/Off\"\n      },\n      {\n        number: 67,\n        name: \"softpedal\",\n        description: \"Soft Pedal On/Off\"\n      },\n      {\n        number: 68,\n        name: \"legatopedal\",\n        description: \"Legato Pedal On/Off\"\n      },\n      {\n        number: 69,\n        name: \"hold2\",\n        description: \"Hold 2 On/Off\"\n      },\n      {\n        number: 70,\n        name: \"soundvariation\",\n        description: \"Sound Variation\",\n        position: \"lsb\"\n      },\n      {\n        number: 71,\n        name: \"resonance\",\n        description: \"Resonance\",\n        position: \"lsb\"\n      },\n      {\n        number: 72,\n        name: \"releasetime\",\n        description: \"Release Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 73,\n        name: \"attacktime\",\n        description: \"Attack Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 74,\n        name: \"brightness\",\n        description: \"Brightness\",\n        position: \"lsb\"\n      },\n      {\n        number: 75,\n        name: \"decaytime\",\n        description: \"Decay Time\",\n        position: \"lsb\"\n      },\n      {\n        number: 76,\n        name: \"vibratorate\",\n        description: \"Vibrato Rate\",\n        position: \"lsb\"\n      },\n      {\n        number: 77,\n        name: \"vibratodepth\",\n        description: \"Vibrato Depth\",\n        position: \"lsb\"\n      },\n      {\n        number: 78,\n        name: \"vibratodelay\",\n        description: \"Vibrato Delay\",\n        position: \"lsb\"\n      },\n      {\n        number: 79,\n        name: \"controller79\",\n        description: \"Undefined\",\n        position: \"lsb\"\n      },\n      {\n        number: 80,\n        name: \"generalpurposecontroller5\",\n        description: \"General Purpose Controller 5\",\n        position: \"lsb\"\n      },\n      {\n        number: 81,\n        name: \"generalpurposecontroller6\",\n        description: \"General Purpose Controller 6\",\n        position: \"lsb\"\n      },\n      {\n        number: 82,\n        name: \"generalpurposecontroller7\",\n        description: \"General Purpose Controller 7\",\n        position: \"lsb\"\n      },\n      {\n        number: 83,\n        name: \"generalpurposecontroller8\",\n        description: \"General Purpose Controller 8\",\n        position: \"lsb\"\n      },\n      {\n        number: 84,\n        name: \"portamentocontrol\",\n        description: \"Portamento Control\",\n        position: \"lsb\"\n      },\n      {\n        number: 85,\n        name: \"controller85\",\n        description: \"Undefined\"\n      },\n      {\n        number: 86,\n        name: \"controller86\",\n        description: \"Undefined\"\n      },\n      {\n        number: 87,\n        name: \"controller87\",\n        description: \"Undefined\"\n      },\n      {\n        number: 88,\n        name: \"highresolutionvelocityprefix\",\n        description: \"High Resolution Velocity Prefix\",\n        position: \"lsb\"\n      },\n      {\n        number: 89,\n        name: \"controller89\",\n        description: \"Undefined\"\n      },\n      {\n        number: 90,\n        name: \"controller90\",\n        description: \"Undefined\"\n      },\n      {\n        number: 91,\n        name: \"effect1depth\",\n        description: \"Effects 1 Depth (Reverb Send Level)\"\n      },\n      {\n        number: 92,\n        name: \"effect2depth\",\n        description: \"Effects 2 Depth\"\n      },\n      {\n        number: 93,\n        name: \"effect3depth\",\n        description: \"Effects 3 Depth (Chorus Send Level)\"\n      },\n      {\n        number: 94,\n        name: \"effect4depth\",\n        description: \"Effects 4 Depth\"\n      },\n      {\n        number: 95,\n        name: \"effect5depth\",\n        description: \"Effects 5 Depth\"\n      },\n      {\n        number: 96,\n        name: \"dataincrement\",\n        description: \"Data Increment\"\n      },\n      {\n        number: 97,\n        name: \"datadecrement\",\n        description: \"Data Decrement\"\n      },\n      {\n        number: 98,\n        name: \"nonregisteredparameterfine\",\n        description: \"Non-Registered Parameter Number (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 99,\n        name: \"nonregisteredparametercoarse\",\n        description: \"Non-Registered Parameter Number (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 100,\n        name: \"registeredparameterfine\",\n        description: \"Registered Parameter Number (Fine)\",\n        position: \"lsb\"\n      },\n      {\n        number: 101,\n        name: \"registeredparametercoarse\",\n        description: \"Registered Parameter Number (Coarse)\",\n        position: \"msb\"\n      },\n      {\n        number: 102,\n        name: \"controller102\",\n        description: \"Undefined\"\n      },\n      {\n        number: 103,\n        name: \"controller103\",\n        description: \"Undefined\"\n      },\n      {\n        number: 104,\n        name: \"controller104\",\n        description: \"Undefined\"\n      },\n      {\n        number: 105,\n        name: \"controller105\",\n        description: \"Undefined\"\n      },\n      {\n        number: 106,\n        name: \"controller106\",\n        description: \"Undefined\"\n      },\n      {\n        number: 107,\n        name: \"controller107\",\n        description: \"Undefined\"\n      },\n      {\n        number: 108,\n        name: \"controller108\",\n        description: \"Undefined\"\n      },\n      {\n        number: 109,\n        name: \"controller109\",\n        description: \"Undefined\"\n      },\n      {\n        number: 110,\n        name: \"controller110\",\n        description: \"Undefined\"\n      },\n      {\n        number: 111,\n        name: \"controller111\",\n        description: \"Undefined\"\n      },\n      {\n        number: 112,\n        name: \"controller112\",\n        description: \"Undefined\"\n      },\n      {\n        number: 113,\n        name: \"controller113\",\n        description: \"Undefined\"\n      },\n      {\n        number: 114,\n        name: \"controller114\",\n        description: \"Undefined\"\n      },\n      {\n        number: 115,\n        name: \"controller115\",\n        description: \"Undefined\"\n      },\n      {\n        number: 116,\n        name: \"controller116\",\n        description: \"Undefined\"\n      },\n      {\n        number: 117,\n        name: \"controller117\",\n        description: \"Undefined\"\n      },\n      {\n        number: 118,\n        name: \"controller118\",\n        description: \"Undefined\"\n      },\n      {\n        number: 119,\n        name: \"controller119\",\n        description: \"Undefined\"\n      },\n      {\n        number: 120,\n        name: \"allsoundoff\",\n        description: \"All Sound Off\"\n      },\n      {\n        number: 121,\n        name: \"resetallcontrollers\",\n        description: \"Reset All Controllers\"\n      },\n      {\n        number: 122,\n        name: \"localcontrol\",\n        description: \"Local Control On/Off\"\n      },\n      {\n        number: 123,\n        name: \"allnotesoff\",\n        description: \"All Notes Off\"\n      },\n      {\n        number: 124,\n        name: \"omnimodeoff\",\n        description: \"Omni Mode Off\"\n      },\n      {\n        number: 125,\n        name: \"omnimodeon\",\n        description: \"Omni Mode On\"\n      },\n      {\n        number: 126,\n        name: \"monomodeon\",\n        description: \"Mono Mode On\"\n      },\n      {\n        number: 127,\n        name: \"polymodeon\",\n        description: \"Poly Mode On\"\n      },\n    ];\n\n  }\n\n  /**\n   * Enumeration of all MIDI registered parameters and their associated pair of numerical values.\n   * MIDI registered parameters extend the original list of control change messages. Currently,\n   * there are only a limited number of them:\n   *\n   *\n   * | Control Function             | [LSB, MSB]   |\n   * |------------------------------|--------------|\n   * | `pitchbendrange`             | [0x00, 0x00] |\n   * | `channelfinetuning`          | [0x00, 0x01] |\n   * | `channelcoarsetuning`        | [0x00, 0x02] |\n   * | `tuningprogram`              | [0x00, 0x03] |\n   * | `tuningbank`                 | [0x00, 0x04] |\n   * | `modulationrange`            | [0x00, 0x05] |\n   * | `azimuthangle`               | [0x3D, 0x00] |\n   * | `elevationangle`             | [0x3D, 0x01] |\n   * | `gain`                       | [0x3D, 0x02] |\n   * | `distanceratio`              | [0x3D, 0x03] |\n   * | `maximumdistance`            | [0x3D, 0x04] |\n   * | `maximumdistancegain`        | [0x3D, 0x05] |\n   * | `referencedistanceratio`     | [0x3D, 0x06] |\n   * | `panspreadangle`             | [0x3D, 0x07] |\n   * | `rollangle`                  | [0x3D, 0x08] |\n   *\n   * @enum {Object.<string, number[]>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get REGISTERED_PARAMETERS() {\n\n    return {\n      pitchbendrange: [0x00, 0x00],\n      channelfinetuning: [0x00, 0x01],\n      channelcoarsetuning: [0x00, 0x02],\n      tuningprogram: [0x00, 0x03],\n      tuningbank: [0x00, 0x04],\n\n      modulationrange: [0x00, 0x05],\n      azimuthangle: [0x3D, 0x00],\n      elevationangle: [0x3D, 0x01],\n      gain: [0x3D, 0x02],\n      distanceratio: [0x3D, 0x03],\n      maximumdistance: [0x3D, 0x04],\n      maximumdistancegain: [0x3D, 0x05],\n      referencedistanceratio: [0x3D, 0x06],\n      panspreadangle: [0x3D, 0x07],\n      rollangle: [0x3D, 0x08]\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number[]>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.REGISTERED_PARAMETERS instead)\n   * @private\n   * @static\n   */\n  static get MIDI_REGISTERED_PARAMETERS() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the \" +\n        \"Enumerations.REGISTERED_PARAMETERS enum instead.\"\n      );\n    }\n\n    return Enumerations.MIDI_REGISTERED_PARAMETERS;\n\n  }\n\n  /**\n   * Enumeration of all valid MIDI system messages and matching numerical values. This library also\n   * uses two additional custom messages.\n   *\n   * **System Common Messages**\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `sysex`                | 0xF0        |  240    |\n   * | `timecode`             | 0xF1        |  241    |\n   * | `songposition`         | 0xF2        |  242    |\n   * | `songselect`           | 0xF3        |  243    |\n   * | `tunerequest`          | 0xF6        |  246    |\n   * | `sysexend`             | 0xF7        |  247    |\n   *\n   * The `sysexend` message is never actually received. It simply ends a sysex stream.\n   *\n   * **System Real-Time Messages**\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `clock`                | 0xF8        |  248    |\n   * | `start`                | 0xFA        |  250    |\n   * | `continue`             | 0xFB        |  251    |\n   * | `stop`                 | 0xFC        |  252    |\n   * | `activesensing`        | 0xFE        |  254    |\n   * | `reset`                | 0xFF        |  255    |\n   *\n   * Values 249 and 253 are relayed by the\n   * [Web MIDI API](https://developer.mozilla.org/en-US/docs/Web/API/Web_MIDI_API) but they do not\n   * serve any specific purpose. The\n   * [MIDI 1.0 spec](https://www.midi.org/specifications/item/table-1-summary-of-midi-message)\n   * simply states that they are undefined/reserved.\n   *\n   * **Custom Messages**\n   *\n   * These two messages are mostly for internal use. They are not MIDI messages and cannot be sent\n   * or forwarded.\n   *\n   * | Function               | Hexadecimal | Decimal |\n   * |------------------------|-------------|---------|\n   * | `midimessage`          |             |  0      |\n   * | `unknownsystemmessage` |             |  -1     |\n   *\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @since 3.1\n   * @static\n   */\n  static get SYSTEM_MESSAGES() {\n\n    return {\n\n      // System common messages\n      sysex: 0xF0,            // 240\n      timecode: 0xF1,         // 241\n      songposition: 0xF2,     // 242\n      songselect: 0xF3,       // 243\n      tunerequest: 0xF6,      // 246\n      tuningrequest: 0xF6,    // for backwards-compatibility (deprecated in version 3.0)\n      sysexend: 0xF7,         // 247 (never actually received - simply ends a sysex)\n\n      // System real-time messages\n      clock: 0xF8,            // 248\n      start: 0xFA,            // 250\n      continue: 0xFB,         // 251\n      stop: 0xFC,             // 252\n      activesensing: 0xFE,    // 254\n      reset: 0xFF,            // 255\n\n      // Custom WebMidi.js messages\n      midimessage: 0,\n      unknownsystemmessage: -1\n\n    };\n\n  }\n\n  /**\n   * @enum {Object.<string, number>}\n   * @readonly\n   * @deprecated since 3.1 (use Enumerations.SYSTEM_MESSAGES instead)\n   * @private\n   * @static\n   */\n  static get MIDI_SYSTEM_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the \" +\n        \"Enumerations.SYSTEM_MESSAGES enum instead.\"\n      );\n    }\n\n    return Enumerations.SYSTEM_MESSAGES;\n\n  }\n\n  /**\n   * Array of channel-specific event names that can be listened for. This includes channel mode\n   * events and RPN/NRPN events.\n   *\n   * @type {string[]}\n   * @readonly\n   */\n  static get CHANNEL_EVENTS() {\n\n    return [\n\n      // MIDI channel message events\n      \"noteoff\",\n      \"controlchange\",\n      \"noteon\",\n      \"keyaftertouch\",\n      \"programchange\",\n      \"channelaftertouch\",\n      \"pitchbend\",\n\n      // MIDI channel mode events\n      \"allnotesoff\",\n      \"allsoundoff\",\n      \"localcontrol\",\n      \"monomode\",\n      \"omnimode\",\n      \"resetallcontrollers\",\n\n      // RPN/NRPN events\n      \"nrpn\",\n      \"nrpn-dataentrycoarse\",\n      \"nrpn-dataentryfine\",\n      \"nrpn-dataincrement\",\n      \"nrpn-datadecrement\",\n      \"rpn\",\n      \"rpn-dataentrycoarse\",\n      \"rpn-dataentryfine\",\n      \"rpn-dataincrement\",\n      \"rpn-datadecrement\",\n\n      // Legacy (remove in v4)\n      \"nrpn-databuttonincrement\",\n      \"nrpn-databuttondecrement\",\n      \"rpn-databuttonincrement\",\n      \"rpn-databuttondecrement\",\n\n    ];\n  }\n\n}\n\n/**\n * The `Note` class represents a single musical note such as `\"D3\"`, `\"G#4\"`, `\"F-1\"`, `\"Gb7\"`, etc.\n *\n * `Note` objects can be played back on a single channel by calling\n * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same\n * output, by calling [`Output.playNote()`]{@link Output#playNote}.\n *\n * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.\n * These can be changed by passing in the appropriate option. It is also possible to set a\n * system-wide default for attack and release velocities by using the\n * [`WebMidi.defaults`](WebMidi#defaults) property.\n *\n * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and\n * [`rawRelease`](#rawRelease) to both get and set the values.\n *\n * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped\n * when the duration has elapsed by sending a `\"noteoff\"` event. By default, the duration is set to\n * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a\n * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},\n * [`Output.stopNote()`]{@link Output#stopNote} or similar.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass Note {\n\n  /**\n   * Creates a `Note` object.\n   *\n   * @param value {string|number} The value used to create the note. If an identifier string is used,\n   * it must start with the note letter, optionally followed by an accidental and followed by the\n   * octave number (`\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`, etc.). If a number is used, it must be an\n   * integer between 0 and 127. In this case, middle C is considered to be C4 (note number 60).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should be\n   * explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @throws {Error} Invalid note identifier\n   * @throws {RangeError} Invalid name value\n   * @throws {RangeError} Invalid accidental value\n   * @throws {RangeError} Invalid octave value\n   * @throws {RangeError} Invalid duration value\n   * @throws {RangeError} Invalid attack value\n   * @throws {RangeError} Invalid release value\n   */\n  constructor(value, options = {}) {\n\n    // Assign property defaults\n    this.duration = wm.defaults.note.duration;\n    this.attack = wm.defaults.note.attack;\n    this.release = wm.defaults.note.release;\n\n    // Assign property values from options (validation occurs in setter)\n    if (options.duration != undefined) this.duration = options.duration;\n    if (options.attack != undefined) this.attack = options.attack;\n    if (options.rawAttack != undefined) this.attack = Utilities.from7bitToFloat(options.rawAttack);\n    if (options.release != undefined) this.release = options.release;\n    if (options.rawRelease != undefined) {\n      this.release = Utilities.from7bitToFloat(options.rawRelease);\n    }\n\n    // Assign note depending on the way it was specified (name or number)\n    if (Number.isInteger(value)) {\n      this.identifier = Utilities.toNoteIdentifier(value);\n    } else {\n      this.identifier = value;\n    }\n\n  }\n\n  /**\n   * The name, optional accidental and octave of the note, as a string.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get identifier() {\n    return this._name + (this._accidental || \"\") + this._octave;\n  }\n  set identifier(value) {\n\n    const fragments = Utilities.getNoteDetails(value);\n\n    if (wm.validation) {\n      if (!value) throw new Error(\"Invalid note identifier\");\n    }\n\n    this._name = fragments.name;\n    this._accidental = fragments.accidental;\n    this._octave = fragments.octave;\n\n  }\n\n  /**\n   * The name (letter) of the note. If you need the full name with octave and accidental, you can\n   * use the [`identifier`]{@link Note#identifier} property instead.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n\n    if (wm.validation) {\n      value = value.toUpperCase();\n      if (![\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"].includes(value)) {\n        throw new Error(\"Invalid name value\");\n      }\n    }\n\n    this._name = value;\n\n  }\n\n  /**\n   * The accidental (#, ##, b or bb) of the note.\n   * @type {string}\n   * @since 3.0.0\n   */\n  get accidental() {\n    return this._accidental;\n  }\n  set accidental(value) {\n\n    if (wm.validation) {\n      value = value.toLowerCase();\n      if (![\"#\", \"##\", \"b\", \"bb\"].includes(value)) throw new Error(\"Invalid accidental value\");\n    }\n\n    this._accidental = value;\n\n  }\n\n  /**\n   * The octave of the note.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get octave() {\n    return this._octave;\n  }\n  set octave(value) {\n\n    if (wm.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new Error(\"Invalid octave value\");\n    }\n\n    this._octave = value;\n\n  }\n\n  /**\n   * The duration of the note as a positive decimal number representing the number of milliseconds\n   * that the note should play for.\n   *\n   * @type {number}\n   * @since 3.0.0\n   */\n  get duration() {\n    return this._duration;\n  }\n  set duration(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || value === null || value < 0) {\n        throw new RangeError(\"Invalid duration value.\");\n      }\n    }\n\n    this._duration = value;\n\n  }\n\n  /**\n   * The attack velocity of the note as an integer between 0 and 1.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get attack() {\n    return this._attack;\n  }\n  set attack(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid attack value.\");\n      }\n    }\n\n    this._attack = value;\n\n  }\n\n  /**\n   * The release velocity of the note as an integer between 0 and 1.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get release() {\n    return this._release;\n  }\n  set release(value) {\n\n    if (wm.validation) {\n      value = parseFloat(value);\n      if (isNaN(value) || !(value >= 0 && value <= 1)) {\n        throw new RangeError(\"Invalid release value.\");\n      }\n    }\n\n    this._release = value;\n\n  }\n\n  /**\n   * The attack velocity of the note as a positive integer between 0 and 127.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get rawAttack() {\n    return Utilities.fromFloatTo7Bit(this._attack);\n  }\n  set rawAttack(value) {\n    this._attack = Utilities.from7bitToFloat(value);\n  }\n\n  /**\n   * The release velocity of the note as a positive integer between 0 and 127.\n   * @type {number}\n   * @since 3.0.0\n   */\n  get rawRelease() {\n    return Utilities.fromFloatTo7Bit(this._release);\n  }\n  set rawRelease(value) {\n    this._release = Utilities.from7bitToFloat(value);\n  }\n\n  /**\n   * The MIDI number of the note (`0` - `127`). This number is derived from the note identifier\n   * using C4 as a reference for middle C.\n   *\n   * @type {number}\n   * @readonly\n   * @since 3.0.0\n   */\n  get number() {\n    return Utilities.toNoteNumber(this.identifier);\n  }\n\n  /**\n   * Returns a MIDI note number offset by octave and/or semitone. If the calculated value is less\n   * than 0, 0 will be returned. If the calculated value is more than 127, 127 will be returned. If\n   * an invalid value is supplied, 0 will be used.\n   *\n   * @param [octaveOffset] {number} An integer to offset the note number by octave.\n   * @param [semitoneOffset] {number} An integer to offset the note number by semitone.\n   * @returns {number} An integer between 0 and 127\n   */\n  getOffsetNumber(octaveOffset = 0, semitoneOffset = 0) {\n\n    if (wm.validation) {\n      octaveOffset = parseInt(octaveOffset) || 0;\n      semitoneOffset = parseInt(semitoneOffset) || 0;\n    }\n\n    return Math.min(Math.max(this.number + (octaveOffset * 12) + semitoneOffset, 0), 127);\n\n  }\n\n}\n\n/**\n * The `Utilities` class contains general-purpose utility methods. All methods are static and\n * should be called using the class name. For example: `Utilities.getNoteDetails(\"C4\")`.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass Utilities {\n\n  /**\n   * Returns a MIDI note number matching the identifier passed in the form of a string. The\n   * identifier must include the octave number. The identifier also optionally include a sharp (#),\n   * a double sharp (##), a flat (b) or a double flat (bb) symbol. For example, these are all valid\n   * identifiers: C5, G4, D#-1, F0, Gb7, Eb-1, Abb4, B##6, etc.\n   *\n   * When converting note identifiers to numbers, C4 is considered to be middle C (MIDI note number\n   * 60) as per the scientific pitch notation standard.\n   *\n   * The resulting note number can be offset by using the `octaveOffset` parameter.\n   *\n   * @param identifier {string} The identifier in the form of a letter, followed by an optional \"#\",\n   * \"##\", \"b\" or \"bb\" followed by the octave number. For exemple: C5, G4, D#-1, F0, Gb7, Eb-1,\n   * Abb4, B##6, etc.\n   *\n   * @param {number} [octaveOffset=0] A integer to offset the octave by.\n   *\n   * @returns {number} The MIDI note number (an integer between 0 and 127).\n   *\n   * @throws RangeError Invalid 'octaveOffset' value\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   * @static\n   */\n  static toNoteNumber(identifier, octaveOffset = 0) {\n\n    // Validation\n    octaveOffset = octaveOffset == undefined ? 0 : parseInt(octaveOffset);\n    if (isNaN(octaveOffset)) throw new RangeError(\"Invalid 'octaveOffset' value\");\n    if (typeof identifier !== \"string\") identifier = \"\";\n\n    const fragments = this.getNoteDetails(identifier);\n    if (!fragments) throw new TypeError(\"Invalid note identifier\");\n\n    const notes = { C: 0, D: 2, E: 4, F: 5, G: 7, A: 9, B: 11 };\n    let result = (fragments.octave + 1 + octaveOffset) * 12;\n    result += notes[fragments.name];\n\n    if (fragments.accidental) {\n      if (fragments.accidental.startsWith(\"b\")) {\n        result -= fragments.accidental.length;\n      } else {\n        result += fragments.accidental.length;\n      }\n    }\n\n    if (result < 0 || result > 127) throw new RangeError(\"Invalid octaveOffset value\");\n\n    return result;\n\n  }\n\n  /**\n   * Given a proper note identifier (`C#4`, `Gb-1`, etc.) or a valid MIDI note number (0-127), this\n   * method returns an object containing broken down details about the specified note (uppercase\n   * letter, accidental and octave).\n   *\n   * When a number is specified, the translation to note is done using a value of 60 for middle C\n   * (C4 = middle C).\n   *\n   * @param value {string|number} A note identifier A  atring (\"C#4\", \"Gb-1\", etc.) or a MIDI note\n   * number (0-127).\n   *\n   * @returns {{accidental: string, identifier: string, name: string, octave: number }}\n   *\n   * @throws TypeError Invalid note identifier\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static getNoteDetails(value) {\n\n    if (Number.isInteger(value)) value = this.toNoteIdentifier(value);\n\n    const matches = value.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\\d+)$/i);\n    if (!matches) throw new TypeError(\"Invalid note identifier\");\n\n    const name = matches[1].toUpperCase();\n    const octave = parseInt(matches[3]);\n    let accidental = matches[2].toLowerCase();\n    accidental = accidental === \"\" ? undefined : accidental;\n\n    const fragments = {\n      accidental: accidental,\n      identifier: name + (accidental || \"\") + octave,\n      name: name,\n      octave: octave\n    };\n\n    return fragments;\n\n  }\n\n  /**\n   * Returns a sanitized array of valid MIDI channel numbers (1-16). The parameter should be a\n   * single integer or an array of integers.\n   *\n   * For backwards-compatibility, passing `undefined` as a parameter to this method results in all\n   * channels being returned (1-16). Otherwise, parameters that cannot successfully be parsed to\n   * integers between 1 and 16 are silently ignored.\n   *\n   * @param [channel] {number|number[]} An integer or an array of integers to parse as channel\n   * numbers.\n   *\n   * @returns {number[]} An array of 0 or more valid MIDI channel numbers.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static sanitizeChannels(channel) {\n\n    let channels;\n\n    if (wm.validation) {\n\n      if (channel === \"all\") { // backwards-compatibility\n        channels = [\"all\"];\n      } else if (channel === \"none\") { // backwards-compatibility\n        return [];\n      }\n\n    }\n\n    if (!Array.isArray(channel)) {\n      channels = [channel];\n    } else {\n      channels = channel;\n    }\n\n    // In order to preserve backwards-compatibility, we let this assignment as it is.\n    if (channels.indexOf(\"all\") > -1) {\n      channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n    }\n\n    return channels\n      .map(function(ch) {\n        return parseInt(ch);\n      })\n      .filter(function(ch) {\n        return (ch >= 1 && ch <= 16);\n      });\n\n  }\n\n  /**\n   * Returns a valid timestamp, relative to the navigation start of the document, derived from the\n   * `time` parameter. If the parameter is a string starting with the \"+\" sign and followed by a\n   * number, the resulting timestamp will be the sum of the current timestamp plus that number. If\n   * the parameter is a positive number, it will be returned as is. Otherwise, false will be\n   * returned.\n   *\n   * @param [time] {number|string} The time string (e.g. `\"+2000\"`) or number to parse\n   * @return {number|false} A positive number or `false` (if the time cannot be converted)\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static toTimestamp(time) {\n\n    let value = false;\n\n    const parsed = parseFloat(time);\n    if (isNaN(parsed)) return false;\n\n    if (typeof time === \"string\" && time.substring(0, 1) === \"+\") {\n      if (parsed >= 0) value = wm.time + parsed;\n    } else {\n      if (parsed >= 0) value = parsed;\n    }\n\n    return value;\n\n  }\n\n  /**\n   * Returns a valid MIDI note number (0-127) given the specified input. The input usually is a\n   * string containing a note identifier (`\"C3\"`, `\"F#4\"`, `\"D-2\"`, `\"G8\"`, etc.). If an integer\n   * between 0 and 127 is passed, it will simply be returned as is (for convenience). Other strings\n   * will be parsed for integer value, if possible.\n   *\n   * If the input is an identifier, the resulting note number is offset by the `octaveOffset`\n   * parameter. For example, if you pass in \"C4\" (note number 60) and the `octaveOffset` value is\n   * -2, the resulting MIDI note number will be 36.\n   *\n   * @param input {string|number} A string or number to extract the MIDI note number from.\n   * @param octaveOffset {number} An integer to offset the octave by\n   *\n   * @returns {number|false} A valid MIDI note number (0-127) or `false` if the input could not\n   * successfully be parsed to a note number.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static guessNoteNumber(input, octaveOffset) {\n\n    // Validate and, if necessary, assign default\n    octaveOffset = parseInt(octaveOffset) || 0;\n\n    let output = false;\n\n    // Check input type\n    if (Number.isInteger(input) && input >= 0 && input <= 127) {        // uint\n      output = parseInt(input);\n    } else if (parseInt(input) >= 0 && parseInt(input) <= 127) {        // float or uint as string\n      output = parseInt(input);\n    } else if (typeof input === \"string\" || input instanceof String) {  // string\n      try {\n        output = this.toNoteNumber(input.trim(), octaveOffset);\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return output;\n\n  }\n\n  /**\n   * Returns an identifier string representing a note name (with optional accidental) followed by an\n   * octave number. The octave can be offset by using the `octaveOffset` parameter.\n   *\n   * @param {number} number The MIDI note number to convert to a note identifier\n   * @param {number} octaveOffset An offset to apply to the resulting octave\n   *\n   * @returns {string}\n   *\n   * @throws RangeError Invalid note number\n   * @throws RangeError Invalid octaveOffset value\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static toNoteIdentifier(number, octaveOffset) {\n\n    number = parseInt(number);\n    if (isNaN(number) || number < 0 || number > 127) throw new RangeError(\"Invalid note number\");\n\n    octaveOffset = octaveOffset == undefined ? 0 : parseInt(octaveOffset);\n    if (isNaN(octaveOffset)) throw new RangeError(\"Invalid octaveOffset value\");\n\n    const notes = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    const octave = Math.floor(number / 12 - 1) + octaveOffset;\n    return notes[number % 12] + octave.toString();\n\n  }\n\n  /**\n   * Converts the `input` parameter to a valid [`Note`]{@link Note} object. The input usually is an\n   * unsigned integer (0-127) or a note identifier (`\"C4\"`, `\"G#5\"`, etc.). If the input is a\n   * [`Note`]{@link Note} object, it will be returned as is.\n   *\n   * If the input is a note number or identifier, it is possible to specify options by providing the\n   * `options` parameter.\n   *\n   * @param [input] {number|string|Note}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.octaveOffset=0] An integer to offset the octave by. **This is only\n   * used when the input value is a note identifier.**\n   *\n   * @returns {Note}\n   *\n   * @throws TypeError The input could not be parsed to a note\n   *\n   * @since version 3.0.0\n   * @static\n   */\n  static buildNote(input, options= {}) {\n\n    options.octaveOffset = parseInt(options.octaveOffset) || 0;\n\n    // If it's already a Note, we're done\n    if (input instanceof Note) return input;\n\n    let number = this.guessNoteNumber(input, options.octaveOffset);\n\n    if (number === false) { // We use a comparison b/c the note can be 0 (which equates to false)\n      throw new TypeError(`The input could not be parsed as a note (${input})`);\n    }\n\n    // If we got here, we have a proper note number. Before creating the new note, we strip out\n    // 'octaveOffset' because it has already been factored in when calling guessNoteNumber().\n    options.octaveOffset = undefined;\n    return new Note(number, options);\n\n  }\n\n  /**\n   * Converts an input value, which can be an unsigned integer (0-127), a note identifier, a\n   * [`Note`]{@link Note}  object or an array of the previous types, to an array of\n   * [`Note`]{@link Note}  objects.\n   *\n   * [`Note`]{@link Note}  objects are returned as is. For note numbers and identifiers, a\n   * [`Note`]{@link Note} object is created with the options specified. An error will be thrown when\n   * encountering invalid input.\n   *\n   * Note: if both the `attack` and `rawAttack` options are specified, the later has priority. The\n   * same goes for `release` and `rawRelease`.\n   *\n   * @param [notes] {number|string|Note|number[]|string[]|Note[]}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the note should\n   * be explicitly stopped.\n   *\n   * @param {number} [options.attack=0.5] The note's attack velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawAttack` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.release=0.5] The note's release velocity as a float between 0 and 1. If\n   * you wish to use an integer between 0 and 127, use the `rawRelease` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawAttack=64] The note's attack velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `attack` and `rawAttack` are specified, the latter has precedence.\n   *\n   * @param {number} [options.rawRelease=64] The note's release velocity as an integer between 0 and\n   * 127. If you wish to use a float between 0 and 1, use the `release` option instead. If both\n   * `release` and `rawRelease` are specified, the latter has precedence.\n   *\n   * @param {number} [options.octaveOffset=0] An integer to offset the octave by. **This is only\n   * used when the input value is a note identifier.**\n   *\n   * @returns {Note[]}\n   *\n   * @throws TypeError An element could not be parsed as a note.\n   *\n   * @since 3.0.0\n   * @static\n   */\n  static buildNoteArray(notes, options = {}) {\n\n    let result = [];\n    if (!Array.isArray(notes)) notes = [notes];\n\n    notes.forEach(note => {\n      result.push(this.buildNote(note, options));\n    });\n\n    return result;\n\n  }\n\n  /**\n   * Returns a number between 0 and 1 representing the ratio of the input value divided by 127 (7\n   * bit). The returned value is restricted between 0 and 1 even if the input is greater than 127 or\n   * smaller than 0.\n   *\n   * Passing `Infinity` will return `1` and passing `-Infinity` will return `0`. Otherwise, when the\n   * input value cannot be converted to an integer, the method returns 0.\n   *\n   * @param value {number} A positive integer between 0 and 127 (inclusive)\n   * @returns {number} A number between 0 and 1 (inclusive)\n   * @static\n   */\n  static from7bitToFloat(value) {\n    if (value === Infinity) value = 127;\n    value = parseInt(value) || 0;\n    return Math.min(Math.max(value / 127, 0), 1);\n  }\n\n  /**\n   * Returns an integer between 0 and 127 which is the result of multiplying the input value by\n   * 127. The input value should be a number between 0 and 1 (inclusively). The returned value is\n   * restricted between 0 and 127 even if the input is greater than 1 or smaller than 0.\n   *\n   * Passing `Infinity` will return `127` and passing `-Infinity` will return `0`. Otherwise, when\n   * the input value cannot be converted to a number, the method returns 0.\n   *\n   * @param value {number} A positive float between 0 and 1 (inclusive)\n   * @returns {number} A number between 0 and 127 (inclusive)\n   * @static\n   */\n  static fromFloatTo7Bit(value) {\n    if (value === Infinity) value = 1;\n    value = parseFloat(value) || 0;\n    return Math.min(Math.max(Math.round(value * 127), 0), 127);\n  }\n\n  /**\n   * Combines and converts MSB and LSB values (0-127) to a float between 0 and 1. The returned value\n   * is within between 0 and 1 even if the result is greater than 1 or smaller than 0.\n   *\n   * @param msb {number} The most significant byte as a integer between 0 and 127.\n   * @param [lsb=0] {number} The least significant byte as a integer between 0 and 127.\n   * @returns {number} A float between 0 and 1.\n   */\n  static fromMsbLsbToFloat(msb, lsb = 0) {\n\n    if (wm.validation) {\n      msb = Math.min(Math.max(parseInt(msb) || 0, 0), 127);\n      lsb = Math.min(Math.max(parseInt(lsb) || 0, 0), 127);\n    }\n\n    const value = ((msb << 7) + lsb) / 16383;\n    return Math.min(Math.max(value, 0), 1);\n\n  }\n\n  /**\n   * Extracts 7bit MSB and LSB values from the supplied float.\n   *\n   * @param value {number} A float between 0 and 1\n   * @returns {{lsb: number, msb: number}}\n   */\n  static fromFloatToMsbLsb(value) {\n\n    if (wm.validation) {\n      value = Math.min(Math.max(parseFloat(value) || 0, 0), 1);\n    }\n\n    const multiplied = Math.round(value * 16383);\n\n    return {\n      msb: multiplied >> 7,\n      lsb: multiplied & 0x7F\n    };\n\n  }\n\n  /**\n   * Returns the supplied MIDI note number offset by the requested octave and semitone values. If\n   * the calculated value is less than 0, 0 will be returned. If the calculated value is more than\n   * 127, 127 will be returned. If an invalid offset value is supplied, 0 will be used.\n   *\n   * @param number {number} The MIDI note to offset as an integer between 0 and 127.\n   * @param octaveOffset {number} An integer to offset the note by (in octave)\n   * @param octaveOffset {number} An integer to offset the note by (in semitones)\n   * @returns {number} An integer between 0 and 127\n   *\n   * @throws {Error} Invalid note number\n   * @static\n   */\n  static offsetNumber(number, octaveOffset = 0, semitoneOffset = 0) {\n\n    if (wm.validation) {\n      number = parseInt(number);\n      if (isNaN(number)) throw new Error(\"Invalid note number\");\n      octaveOffset = parseInt(octaveOffset) || 0;\n      semitoneOffset = parseInt(semitoneOffset) || 0;\n    }\n\n    return Math.min(Math.max(number + (octaveOffset * 12) + semitoneOffset, 0), 127);\n\n  }\n\n  /**\n   * Returns the name of the first property of the supplied object whose value is equal to the one\n   * supplied. If nothing is found, `undefined` is returned.\n   *\n   * @param object {object} The object to look for the property in.\n   * @param value {*} Any value that can be expected to be found in the object's properties.\n   * @returns {string|undefined} The name of the matching property or `undefined` if nothing is\n   * found.\n   * @static\n   */\n  static getPropertyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  }\n\n  /**\n   * Returns the name of a control change message matching the specified number (0-127). Some valid\n   * control change numbers do not have a specific name or purpose assigned in the MIDI\n   * [spec](https://midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2).\n   * In these cases, the method returns `controllerXXX` (where XXX is the number).\n   *\n   * @param {number} number An integer (0-127) representing the control change message\n   * @returns {string|undefined} The matching control change name or `undefined` if no match was\n   * found.\n   *\n   * @static\n   */\n  static getCcNameByNumber(number) {\n\n    if (wm.validation) {\n      number = parseInt(number);\n      if (!(number >= 0 && number <= 127)) return undefined;\n    }\n\n    return Enumerations.CONTROL_CHANGE_MESSAGES[number].name;\n\n  }\n\n  /**\n   * Returns the number of a control change message matching the specified name.\n   *\n   * @param {string} name A string representing the control change message\n   * @returns {string|undefined} The matching control change number or `undefined` if no match was\n   * found.\n   *\n   * @since 3.1\n   * @static\n   */\n  static getCcNumberByName(name) {\n    let message = Enumerations.CONTROL_CHANGE_MESSAGES.find(element => element.name === name);\n    if (message) {\n      return message.number;\n    } else {\n      // Legacy (remove in v4)\n      return Enumerations.MIDI_CONTROL_CHANGE_MESSAGES[name];\n    }\n  }\n\n  /**\n   * Returns the channel mode name matching the specified number. If no match is found, the function\n   * returns `false`.\n   *\n   * @param {number} number An integer representing the channel mode message (120-127)\n   * @returns {string|false} The name of the matching channel mode or `false` if no match could be\n   * found.\n   *\n   * @since 2.0.0\n   */\n  static getChannelModeByNumber(number) {\n\n    if ( !(number >= 120 && number <= 127) ) return false;\n\n    for (let cm in Enumerations.CHANNEL_MODE_MESSAGES) {\n\n      if (\n        Enumerations.CHANNEL_MODE_MESSAGES.hasOwnProperty(cm) &&\n        number === Enumerations.CHANNEL_MODE_MESSAGES[cm]\n      ) {\n        return cm;\n      }\n\n    }\n\n    return false;\n\n  }\n\n  /**\n   * Indicates whether the execution environment is Node.js (`true`) or not (`false`)\n   * @type {boolean}\n   */\n  static get isNode() {\n    return typeof process !== \"undefined\" &&\n      process.versions != null &&\n      process.versions.node != null;\n  }\n\n  /**\n   * Indicates whether the execution environment is a browser (`true`) or not (`false`)\n   * @type {boolean}\n   */\n  static get isBrowser() {\n    return typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n  }\n\n}\n\n/**\n * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are\n * provided by an [`Output`](Output) port which, itself, is made available by a device. The\n * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `OutputChannel` objects can be found inside the parent output's\n * [`channels`]{@link Output#channels} property.\n *\n * @param {Output} output The [`Output`](Output) this channel belongs to.\n * @param {number} number The MIDI channel number (`1` - `16`).\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass OutputChannel extends EventEmitter {\n\n  /**\n   * Creates an `OutputChannel` object.\n   *\n   * @param {Output} output The [`Output`](Output) this channel belongs to.\n   * @param {number} number The MIDI channel number (`1` - `16`).\n   */\n  constructor(output, number) {\n\n    super();\n\n    /**\n     * @type {Output}\n     * @private\n     */\n    this._output = output;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._number = number;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n  }\n\n  /**\n   * Unlinks the MIDI subsystem, removes all listeners attached to the channel and nulls the channel\n   * number. This method is mostly for internal use. It has not been prefixed with an underscore\n   * since it is called by other objects such as the `Output` object.\n   *\n   * @private\n   */\n  destroy() {\n    this._output = null;\n    this._number = null;\n    this._octaveOffset = 0;\n    this.removeListener();\n  }\n\n  /**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8-bit unsigned integers (`0` - `225`),\n   * a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} A `Message` object, an array of 8-bit unsigned\n   * integers or a `Uint8Array` object (not available in Node.js) containing the message bytes.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @throws {RangeError} Data bytes must be integers between 0 and 255.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  send(message, options = {time: 0}) {\n    this.output.send(message, options);\n    return this;\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message at the scheduled time. This is a key-specific\n   * aftertouch. For a channel-wide aftertouch message, use\n   * [`sendChannelAftertouch()`]{@link #sendChannelAftertouch}.\n   *\n   * @param target {number|Note|string|number[]|Note[]|string[]} The note(s) for which you are sending\n   * an aftertouch value. The notes can be specified by using a MIDI note number (`0` - `127`), a\n   * [`Note`](Note) object, a note identifier (e.g. `C3`, `G#4`, `F-1`, `Db7`) or an array of the\n   * previous types. When using a note identifier, octave range must be between `-1` and `9`. The\n   * lowest note is `C-1` (MIDI note number `0`) and the highest note is `G9` (MIDI note number\n   * `127`).\n   *\n   * When using a note identifier, the octave value will be offset by the local\n   * [`octaveOffset`](#octaveOffset) and by\n   * [`Output.octaveOffset`](Output#octaveOffset) and [`WebMidi.octaveOffset`](WebMidi#octaveOffset)\n   * (if those values are not `0`). When using a key number, `octaveOffset` values are ignored.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between `0` and `1`). An invalid pressure\n   * value will silently trigger the default behaviour. If the `rawValue` option is set to `true`,\n   * the pressure is defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid key aftertouch value.\n   */\n  sendKeyAftertouch(target, pressure, options = {}) {\n\n    if (wm.validation) {\n\n      // Legacy support\n      if (options.useRawValue) options.rawValue = options.useRawValue;\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid key aftertouch value.\");\n      }\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\"Key aftertouch raw value must be an integer between 0 and 127.\");\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Key aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    // Normalize pressure to integer\n    if (!options.rawValue) pressure = Utilities.fromFloatTo7Bit(pressure);\n\n    // Plot total offset\n    const offset = wm.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    // Make sure we are dealing with an array\n    if (!Array.isArray(target)) target = [target];\n\n    Utilities.buildNoteArray(target).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.keyaftertouch << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          pressure\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **control change** message to the channel at the scheduled time. The control\n   * change message to send can be specified numerically (`0` to `127`) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * As you can see above, not all control change message have a matching name. This does not mean\n   * you cannot use the others. It simply means you will need to use their number\n   * (`0` to `127`) instead of their name. While you can still use them, numbers `120` to `127` are\n   * usually reserved for *channel mode* messages. See\n   * [`sendChannelMode()`]{@link OutputChannel#sendChannelMode} method for more info.\n   *\n   * To view a detailed list of all available **control change** messages, please consult \"Table 3 -\n   * Control Change Messages\" from the [MIDI Messages](\n   * https://www.midi.org/specifications/item/table-3-control-change-messages-data-bytes-2)\n   * specification.\n   *\n   * **Note**: messages #0-31 (MSB) are paired with messages #32-63 (LSB). For example, message #1\n   * (`modulationwheelcoarse`) can be accompanied by a second control change message for\n   * `modulationwheelfine` to achieve a greater level of precision. if you want to specify both MSB\n   * and LSB for messages between `0` and `31`, you can do so by passing a 2-value array as the\n   * second parameter.\n   *\n   * @param {number|string} controller The MIDI controller name or number (`0` - `127`).\n   *\n   * @param {number|number[]} value The value to send (0-127). You can also use a two-position array\n   * for controllers 0 to 31. In this scenario, the first value will be sent as usual and the second\n   * value will be sent to the matching LSB controller (which is obtained by adding 32 to the first\n   * controller)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   * @throws {TypeError} The value array must have a length of 2.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   * @since 3.0.0\n   */\n  sendControlChange(controller, value, options = {}) {\n\n    if (typeof controller === \"string\") {\n      controller = Utilities.getCcNumberByName(controller);\n    }\n\n    if (!Array.isArray(value)) value = [value];\n\n    if (wm.validation) {\n\n      if (controller === undefined) {\n        throw new TypeError(\n          \"Control change must be identified with a valid name or an integer between 0 and 127.\"\n        );\n      }\n\n      if (!Number.isInteger(controller) || !(controller >= 0 && controller <= 127)) {\n        throw new TypeError(\"Control change number must be an integer between 0 and 127.\");\n      }\n\n      value = value.map(item => {\n        const output = Math.min(Math.max(parseInt(item), 0), 127);\n        if (isNaN(output)) throw new TypeError(\"Values must be integers between 0 and 127\");\n        return output;\n      });\n\n      if (value.length === 2 && controller >= 32) {\n        throw new TypeError(\"To use a value array, the controller must be between 0 and 31\");\n      }\n\n    }\n\n    value.forEach((item, index) => {\n\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n          controller + (index * 32),\n          value[index]\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Selects a MIDI non-registered parameter so it is affected by upcoming data entry, data\n   * increment and data decrement messages.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes that identify\n   * the registered parameter. The NRPN MSB (99 or 0x63) is a position 0. The NRPN LSB (98 or 0x62)\n   * is at position 1.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectNonRegisteredParameter(parameter, options = {}) {\n\n    // parameter[0] = Math.floor(parameter[0]);\n    // if (!(parameter[0] >= 0 && parameter[0] <= 127)) {\n    //   throw new RangeError(\"The control63 value must be between 0 and 127.\");\n    // }\n    //\n    // parameter[1] = Math.floor(parameter[1]);\n    // if (!(parameter[1] >= 0 && parameter[1] <= 127)) {\n    //   throw new RangeError(\"The control62 value must be between 0 and 127.\");\n    // }\n\n    this.sendControlChange(0x63, parameter[0], options);\n    this.sendControlChange(0x62, parameter[1], options);\n\n    return this;\n\n  }\n\n  /**\n   * Deselects the currently active MIDI registered parameter so it is no longer affected by data\n   * entry, data increment and data decrement messages.\n   *\n   * Current best practice recommends doing that after each call to\n   * [_setCurrentParameter()]{@link #_setCurrentParameter}.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Deselects the currently active MIDI non-registered parameter so it is no longer affected by\n   * data entry, data increment and data decrement messages.\n   *\n   * @private\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _deselectNonRegisteredParameter(options = {}) {\n    this.sendControlChange(0x65, 0x7F, options);\n    this.sendControlChange(0x64, 0x7F, options);\n    return this;\n  }\n\n  /**\n   * Selects a MIDI registered parameter so it is affected by upcoming data entry, data increment\n   * and data decrement messages.\n   *\n   * @private\n   *\n   * @param parameter {number[]} A two-position array of integers specifying the two control bytes\n   * (0x65, 0x64) that identify the registered parameter. The integers must be between 0 and 127.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _selectRegisteredParameter(parameter, options = {}) {\n    this.sendControlChange(0x65, parameter[0], options);\n    this.sendControlChange(0x64, parameter[1], options);\n    return this;\n  }\n\n  /**\n   * Sets the value of the currently selected MIDI registered parameter.\n   *\n   * @private\n   *\n   * @param data {number|number[]}\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time] If `time` is a string prefixed with `\"+\"` and followed by\n   * a number, the message will be delayed by that many milliseconds. If the value is a number, the\n   * operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  _setCurrentParameter(data, options = {}) {\n\n    data = [].concat(data);\n\n    // MSB\n    // data[0] = parseInt(data[0]);\n    // if (!isNaN(data[0]) && data[0] >= 0 && data[0] <= 127) {\n    this.sendControlChange(0x06, data[0], options);\n    // } else {\n    //   throw new RangeError(\"The msb value must be between 0 and 127.\");\n    // }\n\n    if (data.length < 2) return this;\n\n    // LSB\n    // data[1] = parseInt(data[1]);\n\n    // if (!isNaN(data[1]) && data[1] >= 0 && data[1] <= 127) {\n    this.sendControlChange(0x26, data[1], options);\n    // } else {\n    //   throw new RangeError(\"The lsb value must be between 0 and 127.\");\n    // }\n\n    return this;\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnDecrement(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = Enumerations.REGISTERED_PARAMETERS[parameter];\n\n    if (wm.validation) {\n\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(p => {\n        if (\n          Enumerations.REGISTERED_PARAMETERS[p][0] === parameter[0] &&\n          Enumerations.REGISTERED_PARAMETERS[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x61, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this function:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified registered parameter is invalid.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnIncrement(parameter, options = {}) {\n\n    if (!Array.isArray(parameter)) parameter = Enumerations.REGISTERED_PARAMETERS[parameter];\n\n    if (wm.validation) {\n\n      if (parameter === undefined) {\n        throw new TypeError(\"The specified registered parameter is invalid.\");\n      }\n\n      let valid = false;\n\n      Object.getOwnPropertyNames(Enumerations.REGISTERED_PARAMETERS).forEach(p => {\n        if (\n          Enumerations.REGISTERED_PARAMETERS[p][0] === parameter[0] &&\n          Enumerations.REGISTERED_PARAMETERS[p][1] === parameter[1]\n        ) {\n          valid = true;\n        }\n      });\n\n      if (!valid) throw new TypeError(\"The specified registered parameter is invalid.\");\n\n    }\n\n    this._selectRegisteredParameter(parameter, options);\n    this.sendControlChange(0x60, 0, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Plays a note or an array of notes on the channel. The first parameter is the note to play. It\n   * can be a single value or an array of the following valid values:\n   *\n   *  - A [`Note`]{@link Note} object\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes. If a\n   * `duration` is set in the `options` parameter or in the [`Note`]{@link Note} object's\n   * [`duration`]{@link Note#duration} property, it will also schedule a **note off** message\n   * to end the note after said duration. If no `duration` is set, the note will simply play until\n   * a matching **note off** message is sent with [`stopNote()`]{@link OutputChannel#stopNote} or\n   * [`sendNoteOff()`]{@link OutputChannel#sendNoteOff}.\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the durations and velocities defined in the\n   * [`Note`]{@link Note} objects have precedence over the ones specified via the method's `options`\n   * parameter.\n   *\n   * **Note**: per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`,\n   * `F-1`, `Db7`), a [`Note`]{@link Note} object or an array of the previous types. When using a\n   * note identifier, the octave range must be between `-1` and `9`. The lowest note is `C-1` (MIDI\n   * note number `0`) and the highest note is `G9` (MIDI note number `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number} [options.duration] A positive decimal number larger than `0` representing the\n   * number of milliseconds to wait before sending a **note off** message. If invalid or left\n   * undefined, only a **note on** message will be sent.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawAttack` option is also defined, it will have priority. An invalid velocity\n   * value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The attack velocity at which to play the note (between\n   * `0` and `127`). This has priority over the `attack` property. An invalid velocity value will\n   * silently trigger the default of 64.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawRelease` option is also defined, it will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`. This is only used with the\n   * **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note (between `0`\n   * and `127`). This has priority over the `release` property. An invalid velocity value will\n   * silently trigger the default of 64. This is only used with the **note off** event triggered\n   * when `options.duration` is set.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  playNote(note, options = {}) {\n\n    // Send note on and, optionally, note off message (if duration is a positive number)\n    this.sendNoteOn(note, options);\n\n    const notes = Array.isArray(note) ? note : [note];\n\n    for(let note of notes) {\n      if (parseInt(note.duration) > 0) {\n        const noteOffOptions = {\n          time: (Utilities.toTimestamp(options.time) || wm.time) + parseInt(note.duration),\n          release: note.release,\n          rawRelease: note.rawRelease\n        };\n        this.sendNoteOff(note, noteOffOptions);\n      } else if (parseInt(options.duration) > 0) {\n        const noteOffOptions = {\n          time: (Utilities.toTimestamp(options.time) || wm.time) + parseInt(options.duration),\n          release: options.release,\n          rawRelease: options.rawRelease\n        };\n        this.sendNoteOff(note, noteOffOptions);\n      }\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified notes on the channel. The first parameter is the\n   * note. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note name, followed by the octave (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`]{@link Note} object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the release velocity defined in the\n   * [`Note`]{@link Note} objects has precedence over the one specified via the method's `options`\n   * parameter.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types. When using a note name, octave\n   * range must be between -1 and 9. The lowest note is C-1 (MIDI note number 0) and the highest\n   * note is G9 (MIDI note number 127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOff(note, options = {}) {\n\n    if (wm.validation) {\n\n      if (\n        options.rawRelease != undefined &&\n        !(options.rawRelease >= 0 && options.rawRelease <= 127)\n      ) {\n        throw new RangeError(\"The 'rawRelease' option must be an integer between 0 and 127\");\n      }\n\n      if (options.release != undefined && !(options.release >= 0 && options.release <= 1)) {\n        throw new RangeError(\"The 'release' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawRelease = options.velocity;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.\");\n      }\n      if (options.velocity) {\n        options.release = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n    let nVelocity = 64;\n\n    if (options.rawRelease != undefined) {\n      nVelocity = options.rawRelease;\n    } else {\n      if (!isNaN(options.release)) nVelocity = Math.round(options.release * 127);\n    }\n\n    // Plot total octave offset\n    const offset = wm.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    Utilities.buildNoteArray(note, {rawRelease: parseInt(nVelocity)}).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.noteoff << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          n.rawRelease,\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number. The first parameter is the\n   * note to stop. It can be a single value or an array of the following valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  stopNote(note, options = {}) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Sends a **note on** message for the specified note(s) on the channel. The first parameter is\n   * the note. It can be a single value or an array of the following valid values:\n   *\n   *  - A [`Note`]{@link Note} object\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *\n   *  When passing a [`Note`]{@link Note}object or a note name, the `octaveOffset` will be applied.\n   *  This is not the case when using a note number. In this case, we assume you know exactly which\n   *  MIDI note number should be sent out.\n   *\n   * The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the attack velocity defined in the\n   * [`Note`]{@link Note} objects has precedence over the one specified via the method's `options`\n   * parameter. Also, the `duration` is ignored. If you want to also send a **note off** message,\n   * use the [`playNote()`]{@link #playNote} method instead.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`).  If the `rawAttack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The velocity at which to release the note (between `0`\n   * and `127`). If the `attack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `64`.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}) {\n\n    if (wm.validation) {\n\n      if (options.rawAttack != undefined && !(options.rawAttack >= 0 && options.rawAttack <= 127)) {\n        throw new RangeError(\"The 'rawAttack' option must be an integer between 0 and 127\");\n      }\n\n      if (options.attack != undefined && !(options.attack >= 0 && options.attack <= 1)) {\n        throw new RangeError(\"The 'attack' option must be an number between 0 and 1\");\n      }\n\n      // Legacy compatibility warnings\n      if (options.rawVelocity) {\n        options.rawAttack = options.velocity;\n        options.rawRelease = options.release;\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.\");\n      }\n      if (options.velocity) {\n        options.attack = options.velocity;\n        console.warn(\"The 'velocity' option is deprecated. Use 'attack' instead.\");\n      }\n\n    }\n\n    let nVelocity = 64;\n\n    if (options.rawAttack != undefined) {\n      nVelocity = options.rawAttack;\n    } else {\n      if (!isNaN(options.attack)) nVelocity = Math.round(options.attack * 127);\n    }\n\n    // Plot total octave offset\n    const offset = wm.octaveOffset + this.output.octaveOffset + this.octaveOffset;\n\n    Utilities.buildNoteArray(note, {rawAttack: nVelocity}).forEach(n => {\n      this.send(\n        [\n          (Enumerations.CHANNEL_MESSAGES.noteon << 4) + (this.number - 1),\n          n.getOffsetNumber(offset),\n          n.rawAttack\n        ],\n        {time: Utilities.toTimestamp(options.time)}\n      );\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel mode** message. The channel mode message to send can be specified\n   * numerically or by using one of the following common names:\n   *\n   * |  Type                |Number| Shortcut Method                                               |\n   * | ---------------------|------|-------------------------------------------------------------- |\n   * | `allsoundoff`        | 120  | [`sendAllSoundOff()`]{@link #sendAllSoundOff}                 |\n   * | `resetallcontrollers`| 121  | [`sendResetAllControllers()`]{@link #sendResetAllControllers} |\n   * | `localcontrol`       | 122  | [`sendLocalControl()`]{@link #sendLocalControl}               |\n   * | `allnotesoff`        | 123  | [`sendAllNotesOff()`]{@link #sendAllNotesOff}                 |\n   * | `omnimodeoff`        | 124  | [`sendOmniMode(false)`]{@link #sendOmniMode}                  |\n   * | `omnimodeon`         | 125  | [`sendOmniMode(true)`]{@link #sendOmniMode}                   |\n   * | `monomodeon`         | 126  | [`sendPolyphonicMode(\"mono\")`]{@link #sendPolyphonicMode}     |\n   * | `polymodeon`         | 127  | [`sendPolyphonicMode(\"poly\")`]{@link #sendPolyphonicMode}     |\n   *\n   * **Note**: as you can see above, to make it easier, all channel mode messages also have a matching\n   * helper method.\n   *\n   * It should be noted that, per the MIDI specification, only `localcontrol` and `monomodeon` may\n   * require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * @param {number|string} command The numerical identifier of the channel mode message (integer\n   * between `120` and `127`) or its name as a string.\n   *\n   * @param {number} [value=0] The value to send (integer between `0` - `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendChannelMode(command, value = 0, options = {}) {\n\n    // Normalize command to integer\n    if (typeof command === \"string\") command = Enumerations.CHANNEL_MODE_MESSAGES[command];\n\n    if (wm.validation) {\n\n      if (command === undefined) {\n        throw new TypeError(\"Invalid channel mode message name or number.\");\n      }\n\n      if (isNaN(command) || !(command >= 120 && command <= 127)) {\n        throw new TypeError(\"Invalid channel mode message number.\");\n      }\n\n      if (isNaN(parseInt(value)) || value < 0 || value > 127) {\n        throw new RangeError(\"Value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.controlchange << 4) + (this.number - 1),\n        command,\n        value\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to `\"on\"` or `\"off\"`. MIDI's OMNI mode causes the instrument to respond to\n   * messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state=true] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendOmniMode(state, options = {}) {\n\n    if (state === undefined || state) {\n      this.sendChannelMode(\"omnimodeon\", 0, options);\n    } else {\n      this.sendChannelMode(\"omnimodeoff\", 0, options);\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message. For key-specific aftertouch, you should instead\n   * use [`sendKeyAftertouch()`]{@link #sendKeyAftertouch}.\n   *\n   * @param [pressure] {number} The pressure level (between `0` and `1`). If the `rawValue` option\n   * is set to `true`, the pressure can be defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   * @throws RangeError Invalid channel aftertouch value.\n   */\n  sendChannelAftertouch(pressure, options = {}) {\n\n    if (wm.validation) {\n\n      if (isNaN(parseFloat(pressure))) {\n        throw new RangeError(\"Invalid channel aftertouch value.\");\n      }\n\n      if (options.rawValue) {\n        if (!(pressure >= 0 && pressure <= 127 && Number.isInteger(pressure))) {\n          throw new RangeError(\n            \"Channel aftertouch raw value must be an integer between 0 and 127.\")\n          ;\n        }\n      } else {\n        if (!(pressure >= 0 && pressure <= 1)) {\n          throw new RangeError(\"Channel aftertouch value must be a float between 0 and 1.\");\n        }\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.channelaftertouch << 4) + (this.number - 1),\n        Math.round(pressure * 127)\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **master tuning** message. The value is decimal and must be larger than -65 semitones\n   * and smaller than 64 semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendMasterTuning(value, options = {}) {\n\n    // @todo allow passing value as msb/lsb pair (the same as pitch bend range)\n\n    value = parseFloat(value) || 0.0;\n\n    if (wm.validation) {\n\n      if (!(value > -65 && value < 64)) {\n        throw new RangeError(\n          \"The value must be a decimal number larger than -65 and smaller than 64.\"\n        );\n      }\n\n    }\n\n    let coarse = Math.floor(value) + 64;\n    let fine = value - Math.floor(value);\n\n    // Calculate MSB and LSB for fine adjustment (14bit resolution)\n    fine = Math.round((fine + 1) / 2 * 16383);\n    let msb = (fine >> 7) & 0x7F;\n    let lsb = fine & 0x7F;\n\n    this.sendRpnValue(\"channelcoarsetuning\", coarse, options);\n    this.sendRpnValue(\"channelfinetuning\", [msb, lsb], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to adjust the depth of the modulation wheel's range.\n   * The range can be specified with the `semitones` parameter, the `cents` parameter or by\n   * specifying both parameters at the same time.\n   *\n   * @param {number} semitones The desired adjustment value in semitones (integer between 0 and\n   * 127).\n   *\n   * @param {number} [cents=0] The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendModulationRange(semitones, cents, options = {}) {\n\n    // @todo allow passing value as msb/lsb pair (the same as pitch bend range)\n    // when passing a single argument, semitones and cents shoud be combined\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!(cents == undefined) && (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127))) {\n        throw new RangeError(\"If specified, the cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    // Default value for cents\n    if (!(cents >= 0 && cents <= 127)) cents = 0;\n\n    this.sendRpnValue(\"modulationrange\", [semitones, cents], options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter (NRPN) to the specified value. The NRPN is selected by passing\n   * in a two-position array specifying the values of the two control bytes. The value is specified\n   * by passing in a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (1, 8). Therefore, to set the **vibrato rate** value to **123** you\n   * would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].sendNrpnValue([1, 8], 123);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (2, 63), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was 10, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].channels[0].sendNrpnValue([2, 63], [0, 10]);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer's documentation.\n   *\n   * @param nrpn {number[]} A two-position array specifying the two control bytes (0x63,\n   * 0x62) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendNrpnValue(nrpn, data, options = {}) {\n\n    data = [].concat(data);\n\n    if (wm.validation) {\n\n      if (!Array.isArray(nrpn) || !Number.isInteger(nrpn[0]) || !Number.isInteger(nrpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(nrpn[0] >= 0 && nrpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the NRPN must be between 0 and 127.\");\n      }\n\n      if (!(nrpn[1] >= 0 && nrpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the NRPN must be between 0 and 127.\");\n      }\n\n      data.forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the NRPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectNonRegisteredParameter(nrpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectNonRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message at the scheduled time. The resulting bend is relative to\n   * the pitch bend range that has been defined. The range can be set with\n   * [`sendPitchBendRange()`]{@link #sendPitchBendRange}. So, for example, if the pitch\n   * bend range has been set to 12 semitones, using a bend value of -1 will bend the note 1 octave\n   * below its nominal value.\n   *\n   * @param {number|number[]} [value] The intensity of the bend (between -1.0 and 1.0). A value of\n   * zero means no bend. If the `rawValue` option is set to `true`, the intensity of the bend can be\n   * defined by either using a single integer between 0 and 127 (MSB) or an array of two integers\n   * between 0 and 127 representing, respectively, the MSB (most significant byte) and the LSB\n   * (least significant byte). The MSB is expressed in semitones with `64` meaning no bend. A value\n   * lower than `64` bends downwards while a value higher than `64` bends upwards. The LSB is\n   * expressed in cents (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between -1.0 and 1.0 (default) or as raw integer between 0 and 127 (or\n   * an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPitchBend(value, options = {}) {\n\n    // @todo standardize the way msb/lsb are passed in\n\n    if (wm.validation) {\n\n      if (options.rawValue && Array.isArray(value)) {\n\n        if (!(value[0] >= 0 && value[0] <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n        if (!(value[1] >= 0 && value[1] <= 127)) {\n          throw new RangeError(\"The pitch bend LSB must be an integer between 0 and 127.\");\n        }\n\n      } else if (options.rawValue && !Array.isArray(value)) {\n\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The pitch bend MSB must be an integer between 0 and 127.\");\n        }\n\n      } else {\n\n        if (isNaN(value) || value === null) {\n          throw new RangeError(\"Invalid pitch bend value.\");\n        }\n\n        if (!(value >= -1 && value <= 1)) {\n          throw new RangeError(\"The pitch bend value must be a float between -1 and 1.\");\n        }\n\n      }\n\n    }\n\n    let msb = 0;\n    let lsb = 0;\n\n    // Calculate MSB and LSB for both scenarios\n    if (options.rawValue && Array.isArray(value)) {\n      msb = value[0];\n      lsb = value[1];\n    } else if (options.rawValue && !Array.isArray(value)) {\n      msb = value;\n    } else {\n      const result = Utilities.fromFloatToMsbLsb((value + 1) / 2); // b/c value is -1 to 1\n      msb = result.msb;\n      lsb = result.lsb;\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.pitchbend << 4) + (this.number - 1),\n        lsb,\n        msb\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **pitch bend range** message at the scheduled time to adjust the range used by the\n   * pitch bend lever. The range is specified by using the `semitones` and `cents` parameters. For\n   * example, setting the `semitones` parameter to `12` means that the pitch bend range will be 12\n   * semitones above and below the nominal pitch.\n   *\n   * @param semitones {number} The desired adjustment value in semitones (between 0 and 127). While\n   * nothing imposes that in the specification, it is very common for manufacturers to limit the\n   * range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The semitones value must be an integer between 0 and 127.\n   * @throws {RangeError} The cents value must be an integer between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPitchBendRange(semitones, cents, options = {}) {\n\n    // @todo use single value as parameter or pair of msb/lsb\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(semitones) || !(semitones >= 0 && semitones <= 127)) {\n        throw new RangeError(\"The semitones value must be an integer between 0 and 127.\");\n      }\n\n      if (!Number.isInteger(cents) || !(cents >= 0 && cents <= 127)) {\n        throw new RangeError(\"The cents value must be an integer between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"pitchbendrange\", [semitones, cents], options);\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message at the scheduled time.\n   *\n   * @param [program=1] {number} The MIDI patch (program) number (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   *\n   */\n  sendProgramChange(program, options = {}) {\n\n    program = parseInt(program) || 0;\n\n    if (wm.validation) {\n\n      if (!(program >= 0 && program <= 127)) {\n        throw new RangeError(\"The program number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.send(\n      [\n        (Enumerations.CHANNEL_MESSAGES.programchange << 4) + (this.number - 1),\n        program\n      ],\n      {time: Utilities.toTimestamp(options.time)}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from 0 to 127.\n   *\n   * MIDI\n   * [registered parameters](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them:\n   *\n   * | Numbers      | Function                 |\n   * |--------------|--------------------------|\n   * | (0x00, 0x00) | `pitchbendrange`         |\n   * | (0x00, 0x01) | `channelfinetuning`      |\n   * | (0x00, 0x02) | `channelcoarsetuning`    |\n   * | (0x00, 0x03) | `tuningprogram`          |\n   * | (0x00, 0x04) | `tuningbank`             |\n   * | (0x00, 0x05) | `modulationrange`        |\n   * | (0x3D, 0x00) | `azimuthangle`           |\n   * | (0x3D, 0x01) | `elevationangle`         |\n   * | (0x3D, 0x02) | `gain`                   |\n   * | (0x3D, 0x03) | `distanceratio`          |\n   * | (0x3D, 0x04) | `maximumdistance`        |\n   * | (0x3D, 0x05) | `maximumdistancegain`    |\n   * | (0x3D, 0x06) | `referencedistanceratio` |\n   * | (0x3D, 0x07) | `panspreadangle`         |\n   * | (0x3D, 0x08) | `rollangle`              |\n   *\n   * Note that the **Tuning Program** and **Tuning Bank** parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * @param rpn {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendRpnValue(rpn, data, options = {}) {\n\n    if (!Array.isArray(rpn)) rpn = Enumerations.REGISTERED_PARAMETERS[rpn];\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(rpn[0]) || !Number.isInteger(rpn[1])) {\n        throw new TypeError(\"The specified NRPN is invalid.\");\n      }\n\n      if (!(rpn[0] >= 0 && rpn[0] <= 127)) {\n        throw new RangeError(\"The first byte of the RPN must be between 0 and 127.\");\n      }\n\n      if (!(rpn[1] >= 0 && rpn[1] <= 127)) {\n        throw new RangeError(\"The second byte of the RPN must be between 0 and 127.\");\n      }\n\n      [].concat(data).forEach(value => {\n        if (!(value >= 0 && value <= 127)) {\n          throw new RangeError(\"The data bytes of the RPN must be between 0 and 127.\");\n        }\n      });\n\n    }\n\n    this._selectRegisteredParameter(rpn, options);\n    this._setCurrentParameter(data, options);\n    this._deselectRegisteredParameter(options);\n\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning bank (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendTuningBank(value, options = {}) {\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The tuning bank number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"tuningbank\", value, options);\n    return this;\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning program (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 0 and 127.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendTuningProgram(value, options = {}) {\n\n    if (wm.validation) {\n\n      if (!Number.isInteger(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The tuning program number must be between 0 and 127.\");\n      }\n\n    }\n\n    this.sendRpnValue(\"tuningprogram\", value, options);\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendLocalControl(state, options = {}) {\n    if (state) {\n      return this.sendChannelMode(\"localcontrol\", 127, options);\n    } else {\n      return this.sendChannelMode(\"localcontrol\", 0, options);\n    }\n  }\n\n  /**\n   * Sends an **all notes off** channel mode message. This will make all currently playing notes\n   * fade out just as if their key had been released. This is different from the\n   * [`sendAllSoundOff()`]{@link #sendAllSoundOff} method which mutes all sounds immediately.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendAllNotesOff(options = {}) {\n    return this.sendChannelMode(\"allnotesoff\", 0, options);\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendAllSoundOff(options = {}) {\n    return this.sendChannelMode(\"allsoundoff\", 0, options);\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendResetAllControllers(options = {}) {\n    return this.sendChannelMode(\"resetallcontrollers\", 0, options);\n  }\n\n  /**\n   * Sets the polyphonic mode. In `\"poly\"` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `\"mono\"` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param {string} [mode=poly] The mode to use: `\"mono\"` or `\"poly\"`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {OutputChannel} Returns the `OutputChannel` object so methods can be chained.\n   */\n  sendPolyphonicMode(mode, options = {}) {\n    if (mode === \"mono\") {\n      return this.sendChannelMode(\"monomodeon\", 0, options);\n    } else {\n      return this.sendChannelMode(\"polymodeon\", 0, options);\n    }\n  }\n\n  /**\n   * An integer to offset the reported octave of outgoing note-specific messages (`noteon`,\n   * `noteoff` and `keyaftertouch`). By default, middle C (MIDI note number 60) is placed on the 4th\n   * octave (C4).\n   *\n   * Note that this value is combined with the global offset value defined in\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) and with the parent value defined in\n   * [`Output.octaveOffset`]{@link Output#octaveOffset}.\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * The parent [`Output`]{@link Output} this channel belongs to.\n   * @type {Output}\n   * @since 3.0\n   */\n  get output() {\n    return this._output;\n  }\n\n  /**\n   * This channel's MIDI number (`1` - `16`).\n   * @type {number}\n   * @since 3.0\n   */\n  get number() {\n    return this._number;\n  }\n\n}\n\n/**\n * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).\n * A port is made available by a MIDI device. A MIDI device can advertise several input and output\n * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)\n * property.\n *\n * The `Output` object is automatically instantiated by the library according to the host's MIDI\n * subsystem and should not be directly instantiated.\n *\n * You can access all available `Output` objects by referring to the\n * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as\n * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or\n * [`WebMidi.getOutputById()`](WebMidi#getOutputById).\n *\n * @fires Output#opened\n * @fires Output#disconnected\n * @fires Output#closed\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nclass Output extends EventEmitter {\n\n  /**\n   * Creates an `Output` object.\n   *\n   * @param {MIDIOutput} midiOutput [`MIDIOutput`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIOutput)\n   * object as provided by the MIDI subsystem.\n   */\n  constructor(midiOutput) {\n\n    super();\n\n    /**\n     * A reference to the `MIDIOutput` object\n     * @type {MIDIOutput}\n     * @private\n     */\n    this._midiOutput = midiOutput;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * Array containing the 16 [`OutputChannel`]{@link OutputChannel} objects available provided by\n     * this `Output`. The channels are numbered 1 through 16.\n     *\n     * @type {OutputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new OutputChannel(this, i);\n\n    this._midiOutput.onstatechange = this._onStateChange.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Output`. All listeners are removed, all channels are destroyed and the MIDI\n   * subsystem is unlinked.\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    if (this._midiOutput) this._midiOutput.onstatechange = null;\n    await this.close();\n    this._midiOutput = null;\n  }\n\n  /**\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: wm.time\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the {@link Output} has been opened by calling the\n       * [open()]{@link Output#open} method.\n       *\n       * @event Output#opened\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"opened\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {Output} port The port that was opened\n       */\n      event.type = \"opened\";\n      event.target = this;\n      event.port = event.target; // for consistency\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the {@link Output} has been closed by calling the\n       * [close()]{@link Output#close} method.\n       *\n       * @event Output#closed\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"closed\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {Output} port The port that was closed\n       */\n      event.type = \"closed\";\n      event.target = this;\n      event.port = event.target; // for consistency\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the {@link Output} becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Output#disconnected\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp0 when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `\"disconnected\"`\n       * @property {Output} target The object to which the listener was originally added (`Output`).\n       * @property {object} port Object with properties describing the {@link Output} that was\n       * disconnected. This is not the actual `Output` as it is no longer available.\n       */\n      event.type = \"disconnected\";\n      event.port = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") ; else {\n      console.warn(\"This statechange event was not caught:\", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Opens the output for usage. When the library is enabled, all ports are automatically opened.\n   * This method is only useful for ports that have been manually closed.\n   *\n   * @returns {Promise<Output>} The promise is fulfilled with the `Output` object.\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when calling `send()` on the `MIDIOutput`.\n    // We do it explicitly so that 'connected' events are dispatched immediately and we are ready to\n    // send.\n    try {\n      await this._midiOutput.open();\n      return Promise.resolve(this);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n  }\n\n  /**\n   * Closes the output connection. When an output is closed, it cannot be used to send MIDI messages\n   * until the output is opened again by calling [`open()`]{@link #open}. You can check\n   * the connection status by looking at the [`connection`]{@link #connection} property.\n   *\n   * @returns {Promise<void>}\n   */\n  async close() {\n\n    // We close the port. This triggers a 'statechange' event which we listen to to re-trigger the\n    // 'closed' event.\n    if (this._midiOutput) {\n      await this._midiOutput.close();\n    } else {\n      await Promise.resolve();\n    }\n\n  }\n\n  /**\n   * Sends a MIDI message on the MIDI output port. If no time is specified, the message will be\n   * sent immediately. The message should be an array of 8 bit unsigned integers (0-225), a\n   * [`Uint8Array`]{@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array}\n   * object or a [`Message`](Message) object.\n   *\n   * It is usually not necessary to use this method directly as you can use one of the simpler\n   * helper methods such as [`playNote()`](#playNote), [`stopNote()`](#stopNote),\n   * [`sendControlChange()`](#sendControlChange), etc.\n   *\n   * Details on the format of MIDI messages are available in the summary of\n   * [MIDI messages]{@link https://www.midi.org/specifications-old/item/table-1-summary-of-midi-message}\n   * from the MIDI Manufacturers Association.\n   *\n   * @param message {number[]|Uint8Array|Message} An array of 8bit unsigned integers, a `Uint8Array`\n   * object (not available in Node.js) containing the message bytes or a `Message` object.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The first byte (status) must be an integer between 128 and 255.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @license Apache-2.0\n   */\n  send(message, options = {time: 0}, legacy = 0) {\n\n    // If a Message object is passed in we extract the message data (the jzz plugin used on Node.js\n    // does not support using Uint8Array).\n    if (message instanceof Message) {\n      message = Utilities.isNode ? message.data : message.rawData;\n    }\n\n    // If the data is a Uint8Array and we are on Node, we must convert it to array so it works with\n    // the jzz module.\n    if (message instanceof Uint8Array && Utilities.isNode) {\n      message = Array.from(message);\n    }\n\n    // Validation\n    if (wm.validation) {\n\n      // If message is neither an array nor a Uint8Array, then we are in legacy mode\n      if (!Array.isArray(message) && !(message instanceof Uint8Array)) {\n        message = [message];\n        if (Array.isArray(options)) message = message.concat(options);\n        options = isNaN(legacy) ? {time: 0} : {time: legacy};\n      }\n\n      if (!(parseInt(message[0]) >= 128 && parseInt(message[0]) <= 255)) {\n        throw new RangeError(\"The first byte (status) must be an integer between 128 and 255.\");\n      }\n\n      message.slice(1).forEach(value => {\n        value = parseInt(value);\n        if (!(value >= 0 && value <= 255)) {\n          throw new RangeError(\"Data bytes must be integers between 0 and 255.\");\n        }\n      });\n\n      if (!options) options = {time: 0};\n\n    }\n\n    // Send message and return `Output` for chaining\n    this._midiOutput.send(message, Utilities.toTimestamp(options.time));\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI [**system exclusive**]{@link\n    * https://www.midi.org/specifications-old/item/table-4-universal-system-exclusive-messages}\n   * (*sysex*) message. There are two categories of system exclusive messages: manufacturer-specific\n   * messages and universal messages. Universal messages are further divided into three subtypes:\n   *\n   *   * Universal non-commercial (for research and testing): `0x7D`\n   *   * Universal non-realtime: `0x7E`\n   *   * Universal realtime: `0x7F`\n   *\n   * The method's first parameter (`identification`) identifies the type of message. If the value of\n   * `identification` is `0x7D` (125), `0x7E` (126) or `0x7F` (127), the message will be identified\n   * as a **universal non-commercial**, **universal non-realtime** or **universal realtime** message\n   * (respectively).\n   *\n   * If the `identification` value is an array or an integer between 0 and 124, it will be used to\n   * identify the manufacturer targeted by the message. The *MIDI Manufacturers Association*\n   * maintains a full list of\n   * [Manufacturer ID Numbers](https://www.midi.org/specifications-old/item/manufacturer-id-numbers).\n   *\n   * The `data` parameter should only contain the data of the message. When sending out the actual\n   * MIDI message, WEBMIDI.js will automatically prepend the data with the **sysex byte** (`0xF0`)\n   * and the identification byte(s). It will also automatically terminate the message with the\n   * **sysex end byte** (`0xF7`).\n   *\n   * To use the `sendSysex()` method, system exclusive message support must have been enabled. To\n   * do so, you must set the `sysex` option to `true` when calling\n   * [`WebMidi.enable()`]{@link WebMidi#enable}:\n   *\n   * ```js\n   * WebMidi.enable({sysex: true})\n   *   .then(() => console.log(\"System exclusive messages are enabled\");\n   * ```\n   *\n   * ##### Examples of manufacturer-specific system exclusive messages\n   *\n   * If you want to send a sysex message to a Korg device connected to the first output, you would\n   * use the following code:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(0x42, [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   * In this case `0x42` is the ID of the manufacturer (Korg) and `[0x1, 0x2, 0x3, 0x4, 0x5]` is the\n   * data being sent.\n   *\n   * The parameters can be specified using any number notation (decimal, hex, binary, etc.).\n   * Therefore, the code above is equivalent to this code:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(66, [1, 2, 3, 4, 5]);\n   * ```\n   *\n   * Some manufacturers are identified using 3 bytes. In this case, you would use a 3-position array\n   * as the first parameter. For example, to send the same sysex message to a\n   * *Native Instruments* device:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex([0x00, 0x21, 0x09], [0x1, 0x2, 0x3, 0x4, 0x5]);\n   * ```\n   *\n   * There is no limit for the length of the data array. However, it is generally suggested to keep\n   * system exclusive messages to 64Kb or less.\n   *\n   * ##### Example of universal system exclusive message\n   *\n   * If you want to send a universal sysex message, simply assign the correct identification number\n   * in the first parameter. Number `0x7D` (125) is for non-commercial, `0x7E` (126) is for\n   * non-realtime and `0x7F` (127) is for realtime.\n   *\n   * So, for example, if you wanted to send an identity request non-realtime message (`0x7E`), you\n   * could use the following:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendSysex(0x7E, [0x7F, 0x06, 0x01]);\n   * ```\n   *\n   * For more details on the format of universal messages, consult the list of\n   * [universal sysex messages](https://www.midi.org/specifications-old/item/table-4-universal-system-exclusive-messages).\n   *\n   * @param {number|number[]} identification An unsigned integer or an array of three unsigned\n   * integers between `0` and `127` that either identify the manufacturer or sets the message to be\n   * a **universal non-commercial message** (`0x7D`), a **universal non-realtime message** (`0x7E`)\n   * or a **universal realtime message** (`0x7F`). The *MIDI Manufacturers Association* maintains a\n   * full list of\n   * [Manufacturer ID Numbers](https://www.midi.org/specifications-old/item/manufacturer-id-numbers).\n   *\n   * @param {number[]|Uint8Array} [data] A `Uint8Array` or an array of unsigned integers between `0`\n   * and `127`. This is the data you wish to transfer.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {DOMException} Failed to execute 'send' on 'MIDIOutput': System exclusive message is\n   * not allowed.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index x is greater\n   * than 0xFF.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendSysex(identification, data= [], options = {}) {\n\n    identification = [].concat(identification);\n\n    // Check if data is Uint8Array\n    if (data instanceof Uint8Array) {\n      const merged = new Uint8Array(1 + identification.length + data.length + 1);\n      merged[0] = Enumerations.SYSTEM_MESSAGES.sysex;\n      merged.set(Uint8Array.from(identification), 1);\n      merged.set(data, 1 + identification.length);\n      merged[merged.length - 1] = Enumerations.SYSTEM_MESSAGES.sysexend;\n      this.send(merged, {time: options.time});\n    } else {\n      const merged = identification.concat(data, Enumerations.SYSTEM_MESSAGES.sysexend);\n      this.send([Enumerations.SYSTEM_MESSAGES.sysex].concat(merged), {time: options.time});\n    }\n\n    return this;\n\n  };\n\n  /**\n   * Clears all messages that have been queued but not yet delivered.\n   *\n   * **Warning**: this method has been defined in the specification but has not been implemented\n   * yet. As soon as browsers implement it, it will work.\n   *\n   * You can check out the current status of this feature for Chromium (Chrome) here:\n   * https://bugs.chromium.org/p/chromium/issues/detail?id=471798\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  clear() {\n\n    if (this._midiOutput.clear) {\n\n      this._midiOutput.clear();\n\n    } else {\n\n      if (wm.validation) {\n        console.warn(\n          \"The 'clear()' method has not yet been implemented in your environment.\"\n        );\n      }\n\n    }\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **timecode quarter frame** message. Please note that no processing is being done\n   * on the data. It is up to the developer to format the data according to the\n   * [MIDI Timecode](https://en.wikipedia.org/wiki/MIDI_timecode) format.\n   *\n   * @param value {number} The quarter frame message content (integer between 0 and 127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendTimecodeQuarterFrame(value, options = {}) {\n\n    if (wm.validation) {\n      value = parseInt(value);\n      if (isNaN(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The value must be an integer between 0 and 127.\");\n      }\n    }\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.timecode,\n        value\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  };\n\n  /**\n   * Sends a **song position** MIDI message. The value is expressed in MIDI beats (between `0` and\n   * `16383`) which are 16th note. Position `0` is always the start of the song.\n   *\n   * @param {number} [value=0] The MIDI beat to cue to (integer between `0` and `16383`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendSongPosition(value = 0, options = {}) {\n\n    // @todo allow passing in 2-entries array for msb/lsb\n\n    value = Math.floor(value) || 0;\n\n    var msb = (value >> 7) & 0x7F;\n    var lsb = value & 0x7F;\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.songposition,\n        msb,\n        lsb\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **song select** MIDI message.\n   *\n   * @param {number} [value=0] The number of the song to select (integer between `0` and `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws The song number must be between 0 and 127.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendSongSelect(value = 0, options = {}) {\n\n    if (wm.validation) {\n\n      value = parseInt(value);\n\n      if (isNaN(value) || !(value >= 0 && value <= 127)) {\n        throw new RangeError(\"The program value must be between 0 and 127\");\n      }\n\n    }\n\n    this.send(\n      [\n        Enumerations.SYSTEM_MESSAGES.songselect,\n        value\n      ],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **tune request** real-time message.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuneRequest(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.tunerequest],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **clock** real-time message. According to the standard, there are 24 MIDI clocks\n   * for every quarter note.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendClock(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.clock],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **start** real-time message. A MIDI Start message starts the playback of the current\n   * song at beat 0. To start playback elsewhere in the song, use the\n   * [`sendContinue()`]{@link #sendContinue} method.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStart(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.start],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **continue** real-time message. This resumes song playback where it was previously\n   * stopped or where it was last cued with a song position message. To start playback from the\n   * start, use the [`sendStart()`]{@link Output#sendStart}` method.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendContinue(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.continue],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **stop** real-time message. This tells the device connected to this output to stop\n   * playback immediately (or at the scheduled time, if specified).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendStop(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.stop],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **active sensing** real-time message. This tells the device connected to this port\n   * that the connection is still good. Active sensing messages are often sent every 300 ms if there\n   * was no other activity on the MIDI port.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendActiveSensing(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.activesensing],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset** real-time message. This tells the device connected to this output that it\n   * should reset itself to a default state.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendReset(options = {}) {\n\n    this.send(\n      [Enumerations.SYSTEM_MESSAGES.reset],\n      {time: options.time}\n    );\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  sendTuningRequest(options = {}) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead.\"\n      );\n    }\n\n    return this.sendTuneRequest(options);\n\n  }\n\n  /**\n   * Sends a MIDI **key aftertouch** message to the specified channel(s) at the scheduled time. This\n   * is a key-specific aftertouch. For a channel-wide aftertouch message, use\n   * [`setChannelAftertouch()`]{@link #setChannelAftertouch}.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) for which you are sending\n   * an aftertouch value. The notes can be specified by using a MIDI note number (`0` - `127`), a\n   * [`Note`](Note) object, a note identifier (e.g. `C3`, `G#4`, `F-1`, `Db7`) or an array of the\n   * previous types. When using a note identifier, octave range must be between `-1` and `9`. The\n   * lowest note is `C-1` (MIDI note number `0`) and the highest note is `G9` (MIDI note number\n   * `127`).\n   *\n   * @param [pressure=0.5] {number} The pressure level (between 0 and 1). An invalid pressure value\n   * will silently trigger the default behaviour. If the `rawValue` option is set to `true`, the\n   * pressure can be defined by using an integer between 0 and 127.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendKeyAftertouch(note, pressure, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendKeyAftertouch(note, pressure, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a MIDI **control change** message to the specified channel(s) at the scheduled time. The\n   * control change message to send can be specified numerically (0-127) or by using one of the\n   * following common names:\n   *\n   * | Number | Name                          |\n   * |--------|-------------------------------|\n   * | 0      |`bankselectcoarse`             |\n   * | 1      |`modulationwheelcoarse`        |\n   * | 2      |`breathcontrollercoarse`       |\n   * | 4      |`footcontrollercoarse`         |\n   * | 5      |`portamentotimecoarse`         |\n   * | 6      |`dataentrycoarse`              |\n   * | 7      |`volumecoarse`                 |\n   * | 8      |`balancecoarse`                |\n   * | 10     |`pancoarse`                    |\n   * | 11     |`expressioncoarse`             |\n   * | 12     |`effectcontrol1coarse`         |\n   * | 13     |`effectcontrol2coarse`         |\n   * | 18     |`generalpurposeslider3`        |\n   * | 19     |`generalpurposeslider4`        |\n   * | 32     |`bankselectfine`               |\n   * | 33     |`modulationwheelfine`          |\n   * | 34     |`breathcontrollerfine`         |\n   * | 36     |`footcontrollerfine`           |\n   * | 37     |`portamentotimefine`           |\n   * | 38     |`dataentryfine`                |\n   * | 39     |`volumefine`                   |\n   * | 40     |`balancefine`                  |\n   * | 42     |`panfine`                      |\n   * | 43     |`expressionfine`               |\n   * | 44     |`effectcontrol1fine`           |\n   * | 45     |`effectcontrol2fine`           |\n   * | 64     |`holdpedal`                    |\n   * | 65     |`portamento`                   |\n   * | 66     |`sustenutopedal`               |\n   * | 67     |`softpedal`                    |\n   * | 68     |`legatopedal`                  |\n   * | 69     |`hold2pedal`                   |\n   * | 70     |`soundvariation`               |\n   * | 71     |`resonance`                    |\n   * | 72     |`soundreleasetime`             |\n   * | 73     |`soundattacktime`              |\n   * | 74     |`brightness`                   |\n   * | 75     |`soundcontrol6`                |\n   * | 76     |`soundcontrol7`                |\n   * | 77     |`soundcontrol8`                |\n   * | 78     |`soundcontrol9`                |\n   * | 79     |`soundcontrol10`               |\n   * | 80     |`generalpurposebutton1`        |\n   * | 81     |`generalpurposebutton2`        |\n   * | 82     |`generalpurposebutton3`        |\n   * | 83     |`generalpurposebutton4`        |\n   * | 91     |`reverblevel`                  |\n   * | 92     |`tremololevel`                 |\n   * | 93     |`choruslevel`                  |\n   * | 94     |`celestelevel`                 |\n   * | 95     |`phaserlevel`                  |\n   * | 96     |`dataincrement`                |\n   * | 97     |`datadecrement`                |\n   * | 98     |`nonregisteredparametercoarse` |\n   * | 99     |`nonregisteredparameterfine`   |\n   * | 100    |`registeredparametercoarse`    |\n   * | 101    |`registeredparameterfine`      |\n   * | 120    |`allsoundoff`                  |\n   * | 121    |`resetallcontrollers`          |\n   * | 122    |`localcontrol`                 |\n   * | 123    |`allnotesoff`                  |\n   * | 124    |`omnimodeoff`                  |\n   * | 125    |`omnimodeon`                   |\n   * | 126    |`monomodeon`                   |\n   * | 127    |`polymodeon`                   |\n   *\n   * Note: as you can see above, not all control change message have a matching name. This does not\n   * mean you cannot use the others. It simply means you will need to use their number (`0` - `127`)\n   * instead of their name. While you can still use them, numbers `120` to `127` are usually\n   * reserved for *channel mode* messages. See [`sendChannelMode()`]{@link #sendChannelMode} method\n   * for more info.\n   *\n   * To view a list of all available **control change** messages, please consult [Table 3 - Control\n   * Change Messages](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * from the MIDI specification.\n   *\n   * @param controller {number|string} The MIDI controller name or number (0-127).\n   *\n   * @param [value=0] {number} The value to send (0-127).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} Controller numbers must be between 0 and 127.\n   * @throws {RangeError} Invalid controller name.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendControlChange(controller, value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendControlChange(controller, value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * Sends a **pitch bend range** message to the specified channel(s) at the scheduled time so that\n   * they adjust the range used by their pitch bend lever. The range is specified by using the\n   * `semitones` and `cents` parameters. For example, setting the `semitones` parameter to `12`\n   * means that the pitch bend range will be 12 semitones above and below the nominal pitch.\n   *\n   * @param {number} [semitones=0] The desired adjustment value in semitones (between `0` and `127`).\n   * While nothing imposes that in the specification, it is very common for manufacturers to limit\n   * the range to 2 octaves (-12 semitones to 12 semitones).\n   *\n   * @param {number} [cents=0] The desired adjustment value in cents (integer between `0` and\n   * `127`).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127.\n   * @throws {RangeError} The lsb value must be between 0 and 127.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPitchBendRange(semitones= 0, cents = 0, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPitchBendRange(semitones, cents, options);\n    });\n\n    return this;\n\n  }\n\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setPitchBendRange(semitones = 0, cents = 0, channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendPitchBendRange(semitones, cents, options);\n\n  }\n\n  /**\n   * Sets the specified MIDI registered parameter to the desired value. The value is defined with\n   * up to two bytes of data (msb, lsb) that each can go from `0` to `127`.\n   *\n   * MIDI\n   * [registered parameters](https://www.midi.org/specifications-old/item/table-3-control-change-messages-data-bytes-2)\n   * extend the original list of control change messages. The MIDI 1.0 specification lists only a\n   * limited number of them:\n   *\n   * | Numbers      | Function                 |\n   * |--------------|--------------------------|\n   * | (0x00, 0x00) | `pitchbendrange`         |\n   * | (0x00, 0x01) | `channelfinetuning`      |\n   * | (0x00, 0x02) | `channelcoarsetuning`    |\n   * | (0x00, 0x03) | `tuningprogram`          |\n   * | (0x00, 0x04) | `tuningbank`             |\n   * | (0x00, 0x05) | `modulationrange`        |\n   * | (0x3D, 0x00) | `azimuthangle`           |\n   * | (0x3D, 0x01) | `elevationangle`         |\n   * | (0x3D, 0x02) | `gain`                   |\n   * | (0x3D, 0x03) | `distanceratio`          |\n   * | (0x3D, 0x04) | `maximumdistance`        |\n   * | (0x3D, 0x05) | `maximumdistancegain`    |\n   * | (0x3D, 0x06) | `referencedistanceratio` |\n   * | (0x3D, 0x07) | `panspreadangle`         |\n   * | (0x3D, 0x08) | `rollangle`              |\n   *\n   * Note that the `tuningprogram` and `tuningbank` parameters are part of the *MIDI Tuning\n   * Standard*, which is not widely implemented.\n   *\n   * @param parameter {string|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (e.g. `[0x65, 0x64]`) that identify the\n   * registered parameter.\n   *\n   * @param [data=[]] {number|number[]} A single integer or an array of integers with a maximum\n   * length of 2 specifying the desired data.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnValue(parameter, data, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnValue(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setRegisteredParameter(parameter, data = [], channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnValue(parameter, data, options);\n\n  }\n\n  /**\n   * Sends a MIDI **channel aftertouch** message to the specified channel(s). For key-specific\n   * aftertouch, you should instead use [`setKeyAftertouch()`]{@link #setKeyAftertouch}.\n   *\n   * @param [pressure=0.5] {number} The pressure level (between `0` and `1`). An invalid pressure\n   * value will silently trigger the default behaviour. If the `rawValue` option is set to `true`,\n   * the pressure can be defined by using an integer between `0` and `127`.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered a float between `0` and `1.0` (default) or a raw integer between `0` and `127`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   * @since 3.0.0\n   */\n  sendChannelAftertouch(pressure, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendChannelAftertouch(pressure, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **pitch bend** message to the specified channel(s) at the scheduled time.\n   *\n   * The resulting bend is relative to the pitch bend range that has been defined. The range can be\n   * set with [`sendPitchBendRange()`]{@link #sendPitchBendRange}. So, for example, if the pitch\n   * bend range has been set to 12 semitones, using a bend value of `-1` will bend the note 1 octave\n   * below its nominal value.\n   *\n   * @param {number|number[]} value The intensity of the bend (between `-1.0` and `1.0`). A value of\n   * `0` means no bend. If an invalid value is specified, the nearest valid value will be used\n   * instead. If the `rawValue` option is set to `true`, the intensity of the bend can be defined by\n   * either using a single integer between `0` and `127` (MSB) or an array of two integers between\n   * `0` and `127` representing, respectively, the MSB (most significant byte) and the LSB (least\n   * significant byte). The MSB is expressed in semitones with `64` meaning no bend. A value lower\n   * than `64` bends downwards while a value higher than `64` bends upwards. The LSB is expressed\n   * in cents (1/100 of a semitone). An LSB of `64` also means no bend.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {boolean} [options.rawValue=false] A boolean indicating whether the value should be\n   * considered as a float between `-1.0` and `1.0` (default) or as raw integer between `0` and\n   * 127` (or an array of 2 integers if using both MSB and LSB).\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPitchBend(value, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPitchBend(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a MIDI **program change** message to the specified channel(s) at the scheduled time.\n   *\n   * @param {number} [program=0] The MIDI patch (program) number (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Failed to execute 'send' on 'MIDIOutput': The value at index 1 is greater\n   * than 0xFF.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendProgramChange(program = 0, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendProgramChange(program, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **modulation depth range** message to the specified channel(s) so that they adjust the\n   * depth of their modulation wheel's range. The range can be specified with the `semitones`\n   * parameter, the `cents` parameter or by specifying both parameters at the same time.\n   *\n   * @param [semitones=0] {number} The desired adjustment value in semitones (integer between\n   * 0 and 127).\n   *\n   * @param [cents=0] {number} The desired adjustment value in cents (integer between 0 and 127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The msb value must be between 0 and 127\n   * @throws {RangeError} The lsb value must be between 0 and 127\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendModulationRange(semitones, cents, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendModulationRange(semitones, cents, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setModulationRange(semitones = 0, cents = 0, channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The setModulationRange() method is deprecated. Use sendModulationRange() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendModulationRange(semitones, cents, options);\n\n  }\n\n  /**\n   * Sends a master tuning message to the specified channel(s). The value is decimal and must be\n   * larger than `-65` semitones and smaller than `64` semitones.\n   *\n   * Because of the way the MIDI specification works, the decimal portion of the value will be\n   * encoded with a resolution of 14bit. The integer portion must be between -64 and 63\n   * inclusively. This function actually generates two MIDI messages: a **Master Coarse Tuning** and\n   * a **Master Fine Tuning** RPN messages.\n   *\n   * @param [value=0.0] {number} The desired decimal adjustment value in semitones (-65 < x < 64)\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The value must be a decimal number between larger than -65 and smaller\n   * than 64.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendMasterTuning(value, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendMasterTuning(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setMasterTuning(value, channel = {}, options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The setMasterTuning() method is deprecated. Use sendMasterTuning() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendMasterTuning(value, options);\n\n  }\n\n  /**\n   * Sets the MIDI tuning program to use. Note that the **Tuning Program** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param value {number} The desired tuning program (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The program value must be between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuningProgram(value, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendTuningProgram(value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setTuningProgram(value, channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The setTuningProgram() method is deprecated. Use sendTuningProgram() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendTuningProgram(value, options);\n\n  }\n\n  /**\n   * Sets the MIDI tuning bank to use. Note that the **Tuning Bank** parameter is part of the\n   * *MIDI Tuning Standard*, which is not widely implemented.\n   *\n   * @param {number} [value=0] The desired tuning bank (integer between `0` and `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The bank value must be between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendTuningBank(value= 0, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendTuningBank(value, options);\n    });\n\n    return this;\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setTuningBank(parameter, channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The setTuningBank() method is deprecated. Use sendTuningBank() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendTuningBank(parameter, options);\n\n  }\n\n  /**\n   * Sends a MIDI **channel mode** message to the specified channel(s). The channel mode message to\n   * send can be specified numerically or by using one of the following common names:\n   *\n   * |  Type                |Number| Shortcut Method                                               |\n   * | ---------------------|------|-------------------------------------------------------------- |\n   * | `allsoundoff`        | 120  | [`sendAllSoundOff()`]{@link #sendAllSoundOff}                 |\n   * | `resetallcontrollers`| 121  | [`sendResetAllControllers()`]{@link #sendResetAllControllers} |\n   * | `localcontrol`       | 122  | [`sendLocalControl()`]{@link #sendLocalControl}               |\n   * | `allnotesoff`        | 123  | [`sendAllNotesOff()`]{@link #sendAllNotesOff}                 |\n   * | `omnimodeoff`        | 124  | [`sendOmniMode(false)`]{@link #sendOmniMode}                  |\n   * | `omnimodeon`         | 125  | [`sendOmniMode(true)`]{@link #sendOmniMode}                   |\n   * | `monomodeon`         | 126  | [`sendPolyphonicMode(\"mono\")`]{@link #sendPolyphonicMode}     |\n   * | `polymodeon`         | 127  | [`sendPolyphonicMode(\"poly\")`]{@link #sendPolyphonicMode}     |\n   *\n   * Note: as you can see above, to make it easier, all channel mode messages also have a matching\n   * helper method.\n   *\n   * It should also be noted that, per the MIDI specification, only `localcontrol` and `monomodeon`\n   * may require a value that's not zero. For that reason, the `value` parameter is optional and\n   * defaults to 0.\n   *\n   * @param {number|string} command The numerical identifier of the channel mode message (integer\n   * between 120-127) or its name as a string.\n   *\n   * @param {number} [value=0] The value to send (integer between 0-127).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   */\n  sendChannelMode(command, value = 0, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendChannelMode(command, value, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all sound off** channel mode message. This will silence all sounds playing on that\n   * channel but will not prevent new sounds from being triggered.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  sendAllSoundOff(options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendAllSoundOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends an **all notes off** channel mode message. This will make all currently playing notes\n   * fade out just as if their key had been released. This is different from the\n   * [`turnSoundOff()`]{@link #turnSoundOff} method which mutes all sounds immediately.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   *\n   * @since 3.0.0\n   */\n  sendAllNotesOff(options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendAllNotesOff(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **reset all controllers** channel mode message. This resets all controllers, such as\n   * the pitch bend, to their default value.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output}\n   */\n  sendResetAllControllers(options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendResetAllControllers(options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets the polyphonic mode. In `poly` mode (usually the default), multiple notes can be played\n   * and heard at the same time. In `mono` mode, only one note will be heard at once even if\n   * multiple notes are being played.\n   *\n   * @param mode {string} The mode to use: `mono` or `poly`.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendPolyphonicMode(mode, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendPolyphonicMode(mode, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Turns local control on or off. Local control is usually enabled by default. If you disable it,\n   * the instrument will no longer trigger its own sounds. It will only send the MIDI messages to\n   * its out port.\n   *\n   * @param [state=false] {boolean} Whether to activate local control (`true`) or disable it\n   * (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendLocalControl(state, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendLocalControl(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets OMNI mode to **on** or **off** for the specified channel(s). MIDI's OMNI mode causes the\n   * instrument to respond to messages from all channels.\n   *\n   * It should be noted that support for OMNI mode is not as common as it used to be.\n   *\n   * @param [state] {boolean} Whether to activate OMNI mode (`true`) or not (`false`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {TypeError} Invalid channel mode message name.\n   * @throws {RangeError} Channel mode controller numbers must be between 120 and 127.\n   * @throws {RangeError} Value must be an integer between 0 and 127.\n   *\n   * @return {Output} Returns the `Output` object so methods can be chained.\n   *\n   * @since 3.0.0\n   */\n  sendOmniMode(state, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendOmniMode(state, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sets a non-registered parameter to the specified value. The NRPN is selected by passing a\n   * two-position array specifying the values of the two control bytes. The value is specified by\n   * passing a single integer (most cases) or an array of two integers.\n   *\n   * NRPNs are not standardized in any way. Each manufacturer is free to implement them any way\n   * they see fit. For example, according to the Roland GS specification, you can control the\n   * **vibrato rate** using NRPN (`1`, `8`). Therefore, to set the **vibrato rate** value to `123`\n   * you would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([1, 8], 123);\n   * ```\n   *\n   * You probably want to should select a channel so the message is not sent to all channels. For\n   * instance, to send to channel `1` of the first output port, you would use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([1, 8], 123, 1);\n   * ```\n   *\n   * In some rarer cases, you need to send two values with your NRPN messages. In such cases, you\n   * would use a 2-position array. For example, for its **ClockBPM** parameter (`2`, `63`), Novation\n   * uses a 14-bit value that combines an MSB and an LSB (7-bit values). So, for example, if the\n   * value to send was `10`, you could use:\n   *\n   * ```js\n   * WebMidi.outputs[0].sendNrpnValue([2, 63], [0, 10], 1);\n   * ```\n   *\n   * For further implementation details, refer to the manufacturer's documentation.\n   *\n   * @param parameter {number[]} A two-position array specifying the two control bytes (`0x63`,\n   * `0x62`) that identify the non-registered parameter.\n   *\n   * @param [data=[]] {number|number[]} An integer or an array of integers with a length of 1 or 2\n   * specifying the desired data.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws {RangeError} The control value must be between 0 and 127.\n   * @throws {RangeError} The msb value must be between 0 and 127\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNrpnValue(parameter, data, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNrpnValue(parameter, data, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  setNonRegisteredParameter(parameter, data = [], channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendNrpnValue(parameter, data, options);\n\n  }\n\n  /**\n   * Increments the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnIncrement(parameter, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnIncrement(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  incrementRegisteredParameter(parameter, channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnIncrement(parameter, options);\n\n  }\n\n  /**\n   * Decrements the specified MIDI registered parameter by 1. Here is the full list of parameter\n   * names that can be used with this method:\n   *\n   *  * Pitchbend Range (0x00, 0x00): `\"pitchbendrange\"`\n   *  * Channel Fine Tuning (0x00, 0x01): `\"channelfinetuning\"`\n   *  * Channel Coarse Tuning (0x00, 0x02): `\"channelcoarsetuning\"`\n   *  * Tuning Program (0x00, 0x03): `\"tuningprogram\"`\n   *  * Tuning Bank (0x00, 0x04): `\"tuningbank\"`\n   *  * Modulation Range (0x00, 0x05): `\"modulationrange\"`\n   *  * Azimuth Angle (0x3D, 0x00): `\"azimuthangle\"`\n   *  * Elevation Angle (0x3D, 0x01): `\"elevationangle\"`\n   *  * Gain (0x3D, 0x02): `\"gain\"`\n   *  * Distance Ratio (0x3D, 0x03): `\"distanceratio\"`\n   *  * Maximum Distance (0x3D, 0x04): `\"maximumdistance\"`\n   *  * Maximum Distance Gain (0x3D, 0x05): `\"maximumdistancegain\"`\n   *  * Reference Distance Ratio (0x3D, 0x06): `\"referencedistanceratio\"`\n   *  * Pan Spread Angle (0x3D, 0x07): `\"panspreadangle\"`\n   *  * Roll Angle (0x3D, 0x08): `\"rollangle\"`\n   *\n   * @param parameter {String|number[]} A string identifying the parameter's name (see above) or a\n   * two-position array specifying the two control bytes (0x65, 0x64) that identify the registered\n   * parameter.\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @throws TypeError The specified parameter is not available.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendRpnDecrement(parameter, options = {}) {\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendRpnDecrement(parameter, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0\n   */\n  decrementRegisteredParameter(parameter, channel = \"all\", options = {}) {\n\n    if (wm.validation) {\n\n      console.warn(\n        \"The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead.\"\n      );\n\n      options.channels = channel;\n      if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    }\n\n    return this.sendRpnDecrement(parameter, options);\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number on the specified channel(s).\n   * The first parameter is the note to stop. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`,\n   * `F-1`, `Db7`) or an array of the previous types. When using a note identifier, octave range\n   * must be between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest\n   * note is `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOff(note, options= {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOff(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note off** message for the specified MIDI note number on the specified channel(s).\n   * The first parameter is the note to stop. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   * The execution of the **note off** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note\n   * (between `0` and `1`).  If the `rawRelease` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note\n   * (between `0` and `127`). If the `release` option is also defined, `rawRelease` will have\n   * priority. An invalid velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  stopNote(note, options) {\n    return this.sendNoteOff(note, options);\n  }\n\n  /**\n   * Plays a note or an array of notes on one or more channels of this output. If you intend to play\n   * notes on a single channel, you should probably use\n   * [`OutputChannel.playNote()`](OutputChannel#playNote) instead.\n   *\n   * The first parameter is the note to play. It can be a single value or an array of the following\n   * valid values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`]{@link Note} object\n   *\n   * The `playNote()` method sends a **note on** MIDI message for all specified notes on all\n   * specified channels. If no channel is specified, it will send to all channels. If a `duration`\n   * is set in the `options` parameter or in the [`Note`]{@link Note} object's\n   * [`duration`]{@link Note#duration} property, it will also schedule a **note off** message to end\n   * the note after said duration. If no `duration` is set, the note will simply play until a\n   * matching **note off** message is sent with [`stopNote()`]{@link #stopNote}.\n   *\n   * The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * When using [`Note`]{@link Note} objects, the durations and velocities defined in the\n   * [`Note`]{@link Note} objects have precedence over the ones specified via the method's `options`\n   * parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|string|Note|number[]|string[]|Note[]} The note(s) to play. The notes can be\n   * specified by using a MIDI note number (0-127), a note identifier (e.g. C3, G#4, F-1, Db7), a\n   * [`Note`]{@link Note} object or an array of the previous types. When using a note identifier,\n   * octave range must be between -1 and 9. The lowest note is C-1 (MIDI note number `0`) and the\n   * highest note is G9 (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.duration=undefined] The number of milliseconds after which a\n   * **note off** message will be scheduled. If left undefined, only a **note on** message is sent.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`). If the `rawAttack` option is also defined, it will have priority. An invalid velocity\n   * value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The attack velocity at which to play the note (between\n   * `0` and `127`). This has priority over the `attack` property. An invalid velocity value will\n   * silently trigger the default of 64.\n   *\n   * @param {number} [options.release=0.5] The velocity at which to release the note (between `0`\n   * and `1`). If the `rawRelease` option is also defined, it will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`. This is only used with the\n   * **note off** event triggered when `options.duration` is set.\n   *\n   * @param {number} [options.rawRelease=64] The velocity at which to release the note (between `0`\n   * and `127`). This has priority over the `release` property. An invalid velocity value will\n   * silently trigger the default of 64. This is only used with the **note off** event triggered\n   * when `options.duration` is set.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  playNote(note, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy-compatibility warnings\n      if (options.rawVelocity) {\n        console.warn(\"The 'rawVelocity' option is deprecated. Use 'rawAttack' instead.\");\n      }\n\n      if (options.velocity) {\n        console.warn(\"The 'velocity' option is deprecated. Use 'velocity' instead.\");\n      }\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].playNote(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Sends a **note on** message for the specified MIDI note number on the specified channel(s). The\n   * first parameter is the number. It can be a single value or an array of the following valid\n   * values:\n   *\n   *  - A MIDI note number (integer between `0` and `127`)\n   *  - A note identifier (e.g. `\"C3\"`, `\"G#4\"`, `\"F-1\"`, `\"Db7\"`)\n   *  - A [`Note`](Note) object\n   *\n   *  The execution of the **note on** command can be delayed by using the `time` property of the\n   * `options` parameter.\n   *\n   * **Note**: As per the MIDI standard, a **note on** message with an attack velocity of `0` is\n   * functionally equivalent to a **note off** message.\n   *\n   * @param note {number|Note|string|number[]|Note[]|string[]} The note(s) to stop. The notes can be\n   * specified by using a MIDI note number (`0` - `127`), a note identifier (e.g. `C3`, `G#4`, `F-1`,\n   * `Db7`) or an array of the previous types. When using a note identifier, octave range must be\n   * between `-1` and `9`. The lowest note is `C-1` (MIDI note number `0`) and the highest note is\n   * `G9` (MIDI note number `127`).\n   *\n   * @param {Object} [options={}]\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * The MIDI channel number (between `1` and `16`) or an array of channel numbers to use. If no\n   * channel is specified, all channels will be used.\n   *\n   * @param {number} [options.attack=0.5] The velocity at which to play the note (between `0` and\n   * `1`).  If the `rawAttack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `0.5`.\n   *\n   * @param {number} [options.rawAttack=64] The velocity at which to release the note (between `0`\n   * and `127`). If the `attack` option is also defined, `rawAttack` will have priority. An invalid\n   * velocity value will silently trigger the default of `64`.\n   *\n   * @param {number|string} [options.time=(now)] If `time` is a string prefixed with `\"+\"` and\n   * followed by a number, the message will be delayed by that many milliseconds. If the value is a\n   * positive number\n   * ([`DOMHighResTimeStamp`]{@link https://developer.mozilla.org/docs/Web/API/DOMHighResTimeStamp}),\n   * the operation will be scheduled for that time. The current time can be retrieved with\n   * [`WebMidi.time`]{@link WebMidi#time}. If `options.time` is omitted, or in the past, the\n   * operation will be carried out as soon as possible.\n   *\n   * @returns {Output} Returns the `Output` object so methods can be chained.\n   */\n  sendNoteOn(note, options = {}, legacy = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (Array.isArray(options) || Number.isInteger(options) || options === \"all\") {\n        const channels = options;\n        options = legacy;\n        options.channels = channels;\n        if (options.channels === \"all\") options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n      }\n\n    }\n\n    if (options.channels == undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    // This actually supports passing a Note object even if, semantically, this does not make sense.\n    Utilities.sanitizeChannels(options.channels).forEach(ch => {\n      this.channels[ch].sendNoteOn(note, options);\n    });\n\n    return this;\n\n  }\n\n  /**\n   * Name of the MIDI output.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiOutput.name;\n  }\n\n  /**\n   * ID string of the MIDI output. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiOutput.id;\n  }\n\n  /**\n   * Output port's connection state: `pending`, `open` or `closed`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiOutput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this output port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiOutput.manufacturer;\n  }\n\n  /**\n   * State of the output port: `connected` or `disconnected`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiOutput.state;\n  }\n\n  /**\n   * Type of the output port (it will always be: `output`).\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiOutput.type;\n  }\n\n  /**\n   * An integer to offset the octave of outgoing notes. By default, middle C (MIDI note number 60)\n   * is placed on the 4th octave (C4).\n   *\n   * Note that this value is combined with the global offset value defined in\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) (if any).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n}\n\n/**\n * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you\n * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object\n * to all the outputs listed in its [`destinations`](#destinations) property.\n *\n * If specific channels or message types have been defined in the [`channels`](#channels) or\n * [`types`](#types) properties, only messages matching the channels/types will be forwarded.\n *\n * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as\n * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass Forwarder {\n\n  /**\n   * Creates a `Forwarder` object.\n   *\n   * @param {Output|Output[]} [destinations=\\[\\]] An [`Output`](Output) object, or an array of such\n   * objects, to forward the message to.\n   *\n   * @param {object} [options={}]\n   * @param {string|string[]} [options.types=(all messages)] A MIDI message type or an array of such\n   * types (`\"noteon\"`, `\"controlchange\"`, etc.), that the specified message must match in order to\n   * be forwarded. If this option is not specified, all types of messages will be forwarded. Valid\n   * messages are the ones found in either\n   * [`SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES)\n   * or [`CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * A MIDI channel number or an array of channel numbers that the message must match in order to be\n   * forwarded. By default all MIDI channels are included (`1` to `16`).\n   */\n  constructor(destinations = [], options = {}) {\n\n    /**\n     * An array of [`Output`](Output) objects to forward the message to.\n     * @type {Output[]}\n     */\n    this.destinations = [];\n\n    /**\n     * An array of message types (`\"noteon\"`, `\"controlchange\"`, etc.) that must be matched in order\n     * for messages to be forwarded. By default, this array includes all\n     * [`Enumerations.SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES) and\n     * [`Enumerations.CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n     * @type {string[]}\n     */\n    this.types = [\n      ...Object.keys(Enumerations.SYSTEM_MESSAGES),\n      ...Object.keys(Enumerations.CHANNEL_MESSAGES)\n    ];\n\n    /**\n     * An array of MIDI channel numbers that the message must match in order to be forwarded. By\n     * default, this array includes all MIDI channels (`1` to `16`).\n     * @type {number[]}\n     */\n    this.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    /**\n     * Indicates whether message forwarding is currently suspended or not in this forwarder.\n     * @type {boolean}\n     */\n    this.suspended = false;\n\n    // Make sure parameters are arrays\n    if (!Array.isArray(destinations)) destinations = [destinations];\n    if (options.types && !Array.isArray(options.types)) options.types = [options.types];\n    if (options.channels && !Array.isArray(options.channels)) options.channels = [options.channels];\n\n    if (wm.validation) {\n\n      // Validate destinations\n      destinations.forEach(destination => {\n        if ( !(destination instanceof Output) ) {\n          throw new TypeError(\"Destinations must be of type 'Output'.\");\n        }\n      });\n\n      // Validate types\n      if (options.types !== undefined) {\n\n        options.types.forEach(type => {\n          if (\n            ! Enumerations.SYSTEM_MESSAGES.hasOwnProperty(type) &&\n            ! Enumerations.CHANNEL_MESSAGES.hasOwnProperty(type)\n          ) {\n            throw new TypeError(\"Type must be a valid message type.\");\n          }\n        });\n\n      }\n\n      // Validate channels\n      if (options.channels !== undefined) {\n\n        options.channels.forEach(channel => {\n          if (! Enumerations.MIDI_CHANNEL_NUMBERS.includes(channel) ) {\n            throw new TypeError(\"MIDI channel must be between 1 and 16.\");\n          }\n        });\n\n      }\n\n    }\n\n    this.destinations = destinations;\n    if (options.types) this.types = options.types;\n    if (options.channels) this.channels = options.channels;\n\n  }\n\n  /**\n   * Sends the specified message to the forwarder's destination(s) if it matches the specified\n   * type(s) and channel(s).\n   *\n   * @param {Message} message The [`Message`](Message) object to forward.\n   */\n  forward(message) {\n\n    // Abort if forwarding is currently suspended\n    if (this.suspended) return;\n\n    // Abort if this message type should not be forwarded\n    if (!this.types.includes(message.type)) return;\n\n    // Abort if this channel should not be forwarded\n    if (message.channel && !this.channels.includes(message.channel)) return;\n\n    // Forward\n    this.destinations.forEach(destination => {\n      if (wm.validation && !(destination instanceof Output)) return;\n      destination.send(message);\n    });\n\n  }\n\n}\n\n/**\n * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input\n * device. This object is derived from the host's MIDI subsystem and should not be instantiated\n * directly.\n *\n * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)\n * property.\n *\n * @fires InputChannel#midimessage\n * @fires InputChannel#unknownmessage\n *\n * @fires InputChannel#noteoff\n * @fires InputChannel#noteon\n * @fires InputChannel#keyaftertouch\n * @fires InputChannel#programchange\n * @fires InputChannel#channelaftertouch\n * @fires InputChannel#pitchbend\n *\n * @fires InputChannel#allnotesoff\n * @fires InputChannel#allsoundoff\n * @fires InputChannel#localcontrol\n * @fires InputChannel#monomode\n * @fires InputChannel#omnimode\n * @fires InputChannel#resetallcontrollers\n *\n * @fires InputChannel#event:nrpn\n * @fires InputChannel#event:nrpn-dataentrycoarse\n * @fires InputChannel#event:nrpn-dataentryfine\n * @fires InputChannel#event:nrpn-dataincrement\n * @fires InputChannel#event:nrpn-datadecrement\n * @fires InputChannel#event:rpn\n * @fires InputChannel#event:rpn-dataentrycoarse\n * @fires InputChannel#event:rpn-dataentryfine\n * @fires InputChannel#event:rpn-dataincrement\n * @fires InputChannel#event:rpn-datadecrement\n *\n * @fires InputChannel#controlchange\n * @fires InputChannel#event:controlchange-controllerxxx\n * @fires InputChannel#event:controlchange-bankselectcoarse\n * @fires InputChannel#event:controlchange-modulationwheelcoarse\n * @fires InputChannel#event:controlchange-breathcontrollercoarse\n * @fires InputChannel#event:controlchange-footcontrollercoarse\n * @fires InputChannel#event:controlchange-portamentotimecoarse\n * @fires InputChannel#event:controlchange-dataentrycoarse\n * @fires InputChannel#event:controlchange-volumecoarse\n * @fires InputChannel#event:controlchange-balancecoarse\n * @fires InputChannel#event:controlchange-pancoarse\n * @fires InputChannel#event:controlchange-expressioncoarse\n * @fires InputChannel#event:controlchange-effectcontrol1coarse\n * @fires InputChannel#event:controlchange-effectcontrol2coarse\n * @fires InputChannel#event:controlchange-generalpurposecontroller1\n * @fires InputChannel#event:controlchange-generalpurposecontroller2\n * @fires InputChannel#event:controlchange-generalpurposecontroller3\n * @fires InputChannel#event:controlchange-generalpurposecontroller4\n * @fires InputChannel#event:controlchange-bankselectfine\n * @fires InputChannel#event:controlchange-modulationwheelfine\n * @fires InputChannel#event:controlchange-breathcontrollerfine\n * @fires InputChannel#event:controlchange-footcontrollerfine\n * @fires InputChannel#event:controlchange-portamentotimefine\n * @fires InputChannel#event:controlchange-dataentryfine\n * @fires InputChannel#event:controlchange-channelvolumefine\n * @fires InputChannel#event:controlchange-balancefine\n * @fires InputChannel#event:controlchange-panfine\n * @fires InputChannel#event:controlchange-expressionfine\n * @fires InputChannel#event:controlchange-effectcontrol1fine\n * @fires InputChannel#event:controlchange-effectcontrol2fine\n * @fires InputChannel#event:controlchange-damperpedal\n * @fires InputChannel#event:controlchange-portamento\n * @fires InputChannel#event:controlchange-sostenuto\n * @fires InputChannel#event:controlchange-softpedal\n * @fires InputChannel#event:controlchange-legatopedal\n * @fires InputChannel#event:controlchange-hold2\n * @fires InputChannel#event:controlchange-soundvariation\n * @fires InputChannel#event:controlchange-resonance\n * @fires InputChannel#event:controlchange-releasetime\n * @fires InputChannel#event:controlchange-attacktime\n * @fires InputChannel#event:controlchange-brightness\n * @fires InputChannel#event:controlchange-decaytime\n * @fires InputChannel#event:controlchange-vibratorate\n * @fires InputChannel#event:controlchange-vibratodepth\n * @fires InputChannel#event:controlchange-vibratodelay\n * @fires InputChannel#event:controlchange-generalpurposecontroller5\n * @fires InputChannel#event:controlchange-generalpurposecontroller6\n * @fires InputChannel#event:controlchange-generalpurposecontroller7\n * @fires InputChannel#event:controlchange-generalpurposecontroller8\n * @fires InputChannel#event:controlchange-portamentocontrol\n * @fires InputChannel#event:controlchange-highresolutionvelocityprefix\n * @fires InputChannel#event:controlchange-effect1depth\n * @fires InputChannel#event:controlchange-effect2depth\n * @fires InputChannel#event:controlchange-effect3depth\n * @fires InputChannel#event:controlchange-effect4depth\n * @fires InputChannel#event:controlchange-effect5depth\n * @fires InputChannel#event:controlchange-dataincrement\n * @fires InputChannel#event:controlchange-datadecrement\n * @fires InputChannel#event:controlchange-nonregisteredparameterfine\n * @fires InputChannel#event:controlchange-nonregisteredparametercoarse\n * @fires InputChannel#event:controlchange-registeredparameterfine\n * @fires InputChannel#event:controlchange-registeredparametercoarse\n * @fires InputChannel#event:controlchange-allsoundoff\n * @fires InputChannel#event:controlchange-resetallcontrollers\n * @fires InputChannel#event:controlchange-localcontrol\n * @fires InputChannel#event:controlchange-allnotesoff\n * @fires InputChannel#event:controlchange-omnimodeoff\n * @fires InputChannel#event:controlchange-omnimodeon\n * @fires InputChannel#event:controlchange-monomodeon\n * @fires InputChannel#event:controlchange-polymodeon\n * @fires InputChannel#event:\n *\n * @extends EventEmitter\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass InputChannel extends EventEmitter {\n\n  /**\n   * Creates an `InputChannel` object.\n   *\n   * @param {Input} input The [`Input`](Input) object this channel belongs to.\n   * @param {number} number The channel's MIDI number (1-16).\n   */\n  constructor(input, number) {\n\n    super();\n\n    /**\n     * @type {Input}\n     * @private\n     */\n    this._input = input;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._number = number;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * An array of messages that form the current NRPN sequence\n     * @private\n     * @type {Message[]}\n     */\n    this._nrpnBuffer = [];\n\n    /**\n     * An array of messages that form the current RPN sequence\n     * @private\n     * @type {Message[]}\n     */\n    this._rpnBuffer = [];\n\n    /**\n     * Indicates whether events for **Registered Parameter Number** and **Non-Registered Parameter\n     * Number** should be dispatched. RPNs and NRPNs are composed of a sequence of specific\n     * **control change** messages. When a valid sequence of such control change messages is\n     * received, an [`rpn`](#event-rpn) or [`nrpn`](#event-nrpn) event will fire.\n     *\n     * If an invalid or out-of-order **control change** message is received, it will fall through\n     * the collector logic and all buffered **control change** messages will be discarded as\n     * incomplete.\n     *\n     * @type {boolean}\n     */\n    this.parameterNumberEventsEnabled = true;\n\n    /**\n     * Contains the current playing state of all MIDI notes of this channel (0-127). The state is\n     * `true` for a currently playing note and `false` otherwise.\n     * @type {boolean[]}\n     */\n    this.notesState = new Array(128).fill(false);\n\n  }\n\n  /**\n   * Destroys the `InputChannel` by removing all listeners and severing the link with the MIDI\n   * subsystem's input.\n   */\n  destroy() {\n    this._input = null;\n    this._number = null;\n    this._octaveOffset = 0;\n    this._nrpnBuffer = [];\n    this.notesState = new Array(128).fill(false);\n    this.parameterNumberEventsEnabled = false;\n    this.removeListener();\n  }\n\n  /**\n   * @param e MIDIMessageEvent\n   * @private\n   */\n  _processMidiMessageEvent(e) {\n\n    // Create and emit a new 'midimessage' event based on the incoming one\n    const event = Object.assign({}, e);\n    event.port = this.input;\n    event.target = this;\n    event.type = \"midimessage\";\n\n    /**\n     * Event emitted when a MIDI message of any kind is received by an `InputChannel`\n     *\n     * @event InputChannel#midimessage\n     *\n     * @type {object}\n     *\n     * @property {string} type `midimessage`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n    this.emit(event.type, event);\n\n    // Parse the inbound event for regular MIDI messages\n    this._parseEventForStandardMessages(event);\n\n  }\n\n  /**\n   * Parses incoming channel events and emit standard MIDI message events (noteon, noteoff, etc.)\n   * @param e Event\n   * @private\n   */\n  _parseEventForStandardMessages(e) {\n\n    const event = Object.assign({}, e);\n    event.type = event.message.type || \"unknownmessage\";\n\n    const data1 = e.message.dataBytes[0];\n    const data2 = e.message.dataBytes[1];\n\n    if ( event.type === \"noteoff\" || (event.type === \"noteon\" && data2 === 0) ) {\n\n      this.notesState[data1] = false;\n      event.type = \"noteoff\"; // necessary for note on with 0 velocity\n\n      /**\n       * Event emitted when a **note off** MIDI message has been received on the channel.\n       *\n       * @event InputChannel#noteoff\n       *\n       * @type {object}\n       * @property {string} type `noteoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the incoming\n       * MIDI message.\n       * @property {number} timestamp The moment\n       * ([`DOMHighResTimeStamp`](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp))\n       * when the event occurred (in milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name,\n       * octave and release velocity.\n       * @property {number} value The release velocity amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The release velocity amount expressed as an integer (between 0\n       * and 127).\n       */\n\n      // The object created when a noteoff event arrives is a Note with an attack velocity of 0.\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + wm.octaveOffset\n        ),\n        {\n          rawAttack: 0,\n          rawRelease: data2,\n        }\n      );\n\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // Those are kept for backwards-compatibility but are gone from the documentation. They will\n      // be removed in future versions (@deprecated).\n      event.velocity = event.note.release;\n      event.rawVelocity = event.note.rawRelease;\n\n    } else if (event.type === \"noteon\") {\n\n      this.notesState[data1] = true;\n\n      /**\n       * Event emitted when a **note on** MIDI message has been received.\n       *\n       * @event InputChannel#noteon\n       *\n       * @type {object}\n       * @property {string} type `noteon`\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name,\n       * octave and release velocity.\n       * @property {number} value The attack velocity amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The attack velocity amount expressed as an integer (between 0\n       * and 127).\n       */\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + wm.octaveOffset\n        ),\n        { rawAttack: data2 }\n      );\n\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // Those are kept for backwards-compatibility but are gone from the documentation. They will\n      // be removed in future versions (@deprecated).\n      event.velocity = event.note.attack;\n      event.rawVelocity = event.note.rawAttack;\n\n    } else if (event.type === \"keyaftertouch\") {\n\n      /**\n       * Event emitted when a **key-specific aftertouch** MIDI message has been received.\n       *\n       * @event InputChannel#keyaftertouch\n       *\n       * @type {object}\n       * @property {string} type `\"keyaftertouch\"`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} note A [`Note`](Note) object containing information such as note name\n       * and number.\n       * @property {number} value The aftertouch amount expressed as a float between 0 and 1.\n       * @property {number} rawValue The aftertouch amount expressed as an integer (between 0 and\n       * 127).\n       */\n      event.note = new Note(\n        Utilities.offsetNumber(\n          data1, this.octaveOffset + this.input.octaveOffset + wm.octaveOffset\n        )\n      );\n\n      // Aftertouch value\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      // @deprecated\n      event.identifier = event.note.identifier;\n      event.key = event.note.number;\n      event.rawKey = data1;\n\n    } else if (event.type === \"controlchange\") {\n\n      /**\n       * Event emitted when a **control change** MIDI message has been received.\n       *\n       * @event InputChannel#controlchange\n       *\n       * @type {object}\n       * @property {string} type `controlchange`\n       * @property {string} subtype The type of control change message that was received.\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      event.controller = {\n        number: data1,\n        name: Enumerations.CONTROL_CHANGE_MESSAGES[data1].name,\n        description: Enumerations.CONTROL_CHANGE_MESSAGES[data1].description,\n        position: Enumerations.CONTROL_CHANGE_MESSAGES[data1].position,\n      };\n\n      event.subtype = event.controller.name || \"controller\" + data1;\n      event.value = Utilities.from7bitToFloat(data2);\n      event.rawValue = data2;\n\n      /**\n       * Event emitted when a **control change** MIDI message has been received and that message is\n       * targeting the controller numbered \"xxx\". Of course, \"xxx\" should be replaced by a valid\n       * controller number (0-127).\n       *\n       * @event InputChannel#controlchange-controllerxxx\n       *\n       * @type {object}\n       * @property {string} type `controlchange-controllerxxx`\n       * @property {string} subtype The type of control change message that was received.\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n      const numberedEvent = Object.assign({}, event);\n      numberedEvent.type = `${event.type}-controller${data1}`;\n      delete numberedEvent.subtype;\n      this.emit(numberedEvent.type, numberedEvent);\n\n      /**\n       * Event emitted when a **controlchange-bankselectcoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-bankselectcoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-bankselectcoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-modulationwheelcoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-modulationwheelcoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-modulationwheelcoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-breathcontrollercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-breathcontrollercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-breathcontrollercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-footcontrollercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-footcontrollercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-footcontrollercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentotimecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentotimecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentotimecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataentrycoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataentrycoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataentrycoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-volumecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-volumecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-volumecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-balancecoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-balancecoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-balancecoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-pancoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-pancoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-pancoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-expressioncoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-expressioncoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-expressioncoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol1coarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol1coarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol1coarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol2coarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol2coarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol2coarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller1** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller1\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller1`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller2** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller2\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller2`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller3** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller3\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller3`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller4** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller4\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller4`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-bankselectfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-bankselectfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-bankselectfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-modulationwheelfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-modulationwheelfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-modulationwheelfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-breathcontrollerfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-breathcontrollerfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-breathcontrollerfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-footcontrollerfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-footcontrollerfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-footcontrollerfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentotimefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentotimefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentotimefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataentryfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataentryfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataentryfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-channelvolumefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-channelvolumefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-channelvolumefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-balancefine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-balancefine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-balancefine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-panfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-panfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-panfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-expressionfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-expressionfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-expressionfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol1fine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol1fine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol1fine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effectcontrol2fine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effectcontrol2fine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effectcontrol2fine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-damperpedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-damperpedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-damperpedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamento** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamento\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamento`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-sostenuto** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-sostenuto\n       *\n       * @type {object}\n       * @property {string} type `controlchange-sostenuto`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-softpedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-softpedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-softpedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-legatopedal** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-legatopedal\n       *\n       * @type {object}\n       * @property {string} type `controlchange-legatopedal`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-hold2** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-hold2\n       *\n       * @type {object}\n       * @property {string} type `controlchange-hold2`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-soundvariation** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-soundvariation\n       *\n       * @type {object}\n       * @property {string} type `controlchange-soundvariation`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-resonance** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-resonance\n       *\n       * @type {object}\n       * @property {string} type `controlchange-resonance`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-releasetime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-releasetime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-releasetime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-attacktime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-attacktime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-attacktime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-brightness** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-brightness\n       *\n       * @type {object}\n       * @property {string} type `controlchange-brightness`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-decaytime** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-decaytime\n       *\n       * @type {object}\n       * @property {string} type `controlchange-decaytime`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratorate** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratorate\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratorate`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratodepth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratodepth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratodepth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-vibratodelay** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-vibratodelay\n       *\n       * @type {object}\n       * @property {string} type `controlchange-vibratodelay`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller5** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller5\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller5`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller6** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller6\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller6`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller7** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller7\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller7`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-generalpurposecontroller8** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-generalpurposecontroller8\n       *\n       * @type {object}\n       * @property {string} type `controlchange-generalpurposecontroller8`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-portamentocontrol** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-portamentocontrol\n       *\n       * @type {object}\n       * @property {string} type `controlchange-portamentocontrol`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-highresolutionvelocityprefix** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-highresolutionvelocityprefix\n       *\n       * @type {object}\n       * @property {string} type `controlchange-highresolutionvelocityprefix`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect1depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect1depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect1depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect2depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect2depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect2depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect3depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect3depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect3depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect4depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect4depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect4depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-effect5depth** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-effect5depth\n       *\n       * @type {object}\n       * @property {string} type `controlchange-effect5depth`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-dataincrement** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-dataincrement\n       *\n       * @type {object}\n       * @property {string} type `controlchange-dataincrement`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-datadecrement** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-datadecrement\n       *\n       * @type {object}\n       * @property {string} type `controlchange-datadecrement`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-nonregisteredparameterfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-nonregisteredparameterfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-nonregisteredparameterfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-nonregisteredparametercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-nonregisteredparametercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-nonregisteredparametercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-registeredparameterfine** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-registeredparameterfine\n       *\n       * @type {object}\n       * @property {string} type `controlchange-registeredparameterfine`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-registeredparametercoarse** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-registeredparametercoarse\n       *\n       * @type {object}\n       * @property {string} type `controlchange-registeredparametercoarse`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-allsoundoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-allsoundoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-allsoundoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-resetallcontrollers** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-resetallcontrollers\n       *\n       * @type {object}\n       * @property {string} type `controlchange-resetallcontrollers`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-localcontrol** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-localcontrol\n       *\n       * @type {object}\n       * @property {string} type `controlchange-localcontrol`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-allnotesoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-allnotesoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-allnotesoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-omnimodeoff** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-omnimodeoff\n       *\n       * @type {object}\n       * @property {string} type `controlchange-omnimodeoff`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-omnimodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-omnimodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-omnimodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-monomodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-monomodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-monomodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      /**\n       * Event emitted when a **controlchange-polymodeon** MIDI message has been\n       * received.\n       *\n       * @event InputChannel#controlchange-polymodeon\n       *\n       * @type {object}\n       * @property {string} type `controlchange-polymodeon`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {object} controller\n       * @property {object} controller.number The number of the controller.\n       * @property {object} controller.name The usual name or function of the controller.\n       * @property {object} controller.description A user-friendly representation of the\n       * controller's default function\n       * @property {string} controller.position Whether the controller is meant to be an `msb` or `lsb`\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The value expressed as an integer (between 0 and 127).\n       */\n\n      const namedEvent = Object.assign({}, event);\n      namedEvent.type = `${event.type}-` + Enumerations.CONTROL_CHANGE_MESSAGES[data1].name;\n      delete namedEvent.subtype;\n\n      // Dispatch controlchange-\"function\" events only if the \"function\" is defined (not the generic\n      // controllerXXX nomenclature)\n      if (namedEvent.type.indexOf(\"controller\") !== 0) {\n        this.emit(namedEvent.type, namedEvent);\n      }\n\n      // Trigger channel mode message events (if appropriate)\n      if (event.message.dataBytes[0] >= 120) this._parseChannelModeMessage(event);\n\n      // Parse the inbound event to see if its part of an RPN/NRPN sequence\n      if (\n        this.parameterNumberEventsEnabled &&\n        this._isRpnOrNrpnController(event.message.dataBytes[0])\n      ) {\n        this._parseEventForParameterNumber(event);\n      }\n\n    } else if (event.type === \"programchange\") {\n\n      /**\n       * Event emitted when a **program change** MIDI message has been received.\n       *\n       * @event InputChannel#programchange\n       *\n       * @type {object}\n       * @property {string} type `programchange`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as an integer between 0 and 127.\n       * @property {number} rawValue  The raw MIDI value expressed as an integer between 0 and 127.\n       */\n      event.value = data1;\n      event.rawValue = event.value;\n\n    } else if (event.type === \"channelaftertouch\") {\n\n      /**\n       * Event emitted when a control change MIDI message has been received.\n       *\n       * @event InputChannel#channelaftertouch\n       *\n       * @type {object}\n       * @property {string} type `channelaftertouch`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The raw MIDI value expressed as an integer between 0 and 127.\n       */\n      event.value = Utilities.from7bitToFloat(data1);\n      event.rawValue = data1;\n\n    } else if (event.type === \"pitchbend\") {\n\n      /**\n       * Event emitted when a pitch bend MIDI message has been received.\n       *\n       * @event InputChannel#pitchbend\n       *\n       * @type {object}\n       * @property {string} type `pitchbend`\n       *\n       * @property {InputChannel} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       * @property {Message} message A [`Message`](Message) object containing information about the\n       * incoming MIDI message.\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       *\n       * @property {number} value The value expressed as a float between 0 and 1.\n       * @property {number} rawValue The raw MIDI value expressed as an integer (between 0 and\n       * 16383).\n       */\n      event.value = ((data2 << 7) + data1 - 8192) / 8192;\n      event.rawValue = (data2 << 7) + data1;\n\n    } else {\n      event.type = \"unknownmessage\";\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * @param e {Object}\n   * @private\n   */\n  _parseChannelModeMessage(e) {\n\n    // Make a shallow copy of the incoming event so we can use it as the new event.\n    const event = Object.assign({}, e);\n    event.type = event.controller.name;\n\n    /**\n     * Event emitted when an \"all sound off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allsoundoff\n     *\n     * @type {object}\n     * @property {string} type `allsoundoff`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when a \"reset all controllers\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#resetallcontrollers\n     *\n     * @type {object}\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when a \"local control\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (local control on) of `false` (local control\n     * off).\n     *\n     * @event InputChannel#localcontrol\n     *\n     * @type {object}\n     * @property {string} type `localcontrol`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value For local control on, the value is `true`. For local control off,\n     * the value is `false`.\n     * @property {boolean} rawValue For local control on, the value is `127`. For local control off,\n     * the value is `0`.\n     */\n    if (event.type === \"localcontrol\") {\n      event.value = event.message.data[2] === 127 ? true : false;\n      event.rawValue = event.message.data[2];\n    }\n\n    /**\n     * Event emitted when an \"all notes off\" channel-mode MIDI message has been received.\n     *\n     * @event InputChannel#allnotesoff\n     *\n     * @type {object}\n     * @property {string} type `allnotesoff`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     */\n\n    /**\n     * Event emitted when an \"omni mode\" channel-mode MIDI message has been received. The value\n     * property of the event is set to either `true` (omni mode on) of `false` (omni mode off).\n     *\n     * @event InputChannel#omnimode\n     *\n     * @type {object}\n     * @property {string} type `\"omnimode\"`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     * @property {boolean} rawValue The raw MIDI value\n     */\n    if (event.type === \"omnimodeon\") {\n      event.type = \"omnimode\";\n      event.value = true;\n      event.rawValue = event.message.data[2];\n    } else if (event.type === \"omnimodeoff\") {\n      event.type = \"omnimode\";\n      event.value = false;\n      event.rawValue = event.message.data[2];\n    }\n\n\n    /**\n     * Event emitted when a \"mono/poly mode\" MIDI message has been received. The value property of\n     * the event is set to either `true` (mono mode on / poly mode off) or `false` (mono mode off /\n     * poly mode on).\n     *\n     * @event InputChannel#monomode\n     *\n     * @type {object}\n     * @property {string} type `monomode`\n     *\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     *\n     * @property {boolean} value The value is `true` for omni mode on and false for omni mode off.\n     * @property {boolean} rawValue The raw MIDI value\n     */\n    if (event.type === \"monomodeon\") {\n      event.type = \"monomode\";\n      event.value = true;\n      event.rawValue = event.message.data[2];\n    } else if (event.type === \"polymodeon\") {\n      event.type = \"monomode\";\n      event.value = false;\n      event.rawValue = event.message.data[2];\n    }\n\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Parses inbound events to identify RPN/NRPN sequences.\n   * @param e Event\n   * @private\n   */\n  _parseEventForParameterNumber(event) {\n\n    // To make it more legible\n    const controller = event.message.dataBytes[0];\n    const value = event.message.dataBytes[1];\n\n    // A. Check if the message is the start of an RPN (101) or NRPN (99) parameter declaration.\n    if (controller === 99 || controller === 101) {\n\n      this._nrpnBuffer = [];\n      this._rpnBuffer = [];\n\n      if (controller === 99) {                          // 99\n        this._nrpnBuffer = [event.message];\n      } else {                                          // 101\n        // 127 is a reset so we ignore it\n        if (value !== 127) this._rpnBuffer = [event.message];\n      }\n\n    // B. Check if the message is the end of an RPN (100) or NRPN (98) parameter declaration.\n    } else if (controller === 98 || controller === 100) {\n\n      if (controller === 98) {                          // 98\n\n        // Flush the other buffer (they are mutually exclusive)\n        this._rpnBuffer = [];\n\n        // Check if we are in sequence\n        if (this._nrpnBuffer.length === 1) {\n          this._nrpnBuffer.push(event.message);\n        } else {\n          this._nrpnBuffer = []; // out of sequence\n        }\n\n      } else {                                          // 100\n\n        // Flush the other buffer (they are mutually exclusive)\n        this._nrpnBuffer = [];\n\n        // 127 is a reset so we ignore it\n        if (this._rpnBuffer.length === 1 && value !== 127) {\n          this._rpnBuffer.push(event.message);\n        } else {\n          this._rpnBuffer = []; // out of sequence or reset\n        }\n\n      }\n\n    // C. Check if the message is for data entry (6, 38, 96 or 97). Those messages trigger events.\n    } else if (\n      controller === 6 ||\n      controller === 38 ||\n      controller === 96 ||\n      controller === 97\n    ) {\n\n      if (this._rpnBuffer.length === 2) {\n        this._dispatchParameterNumberEvent(\n          \"rpn\",\n          this._rpnBuffer[0].dataBytes[1],\n          this._rpnBuffer[1].dataBytes[1],\n          event\n        );\n      } else if (this._nrpnBuffer.length === 2) {\n        this._dispatchParameterNumberEvent(\n          \"nrpn\",\n          this._nrpnBuffer[0].dataBytes[1],\n          this._nrpnBuffer[1].dataBytes[1],\n          event\n        );\n      } else {\n        this._nrpnBuffer = [];\n        this._rpnBuffer = [];\n      }\n\n    }\n\n  }\n\n  /**\n   * Indicates whether the specified controller can be part of an RPN or NRPN sequence\n   * @param controller\n   * @returns {boolean}\n   * @private\n   */\n  _isRpnOrNrpnController(controller) {\n\n    return controller === 6 ||\n      controller === 38 ||\n      controller === 96 ||\n      controller === 97 ||\n      controller === 98 ||\n      controller === 99 ||\n      controller === 100 ||\n      controller === 101;\n\n  }\n\n  /**\n   * @private\n   */\n  _dispatchParameterNumberEvent(type, paramMsb, paramLsb, e) {\n\n    type = type === \"nrpn\" ? \"nrpn\" : \"rpn\";\n\n    /**\n     * Event emitted when an **RPN data entry coarse** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataentrycoarse\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataentrycoarse`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data entry fine** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`EnumerationsREGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataentryfine\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataentryfine`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data increment** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-dataincrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-dataincrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **RPN data decrement** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn-datadecrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn-datadecrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data entry coarse** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataentrycoarse\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataentrycoarse`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data entry fine** message is received on the input. The\n     * specific parameter to which the message applies can be found in the event's `parameter`\n     * property. It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataentryfine\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataentryfine`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data increment** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-dataincrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-dataincrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when an **NRPN data decrement** message is received on the input. The specific\n     * parameter to which the message applies can be found in the event's `parameter` property. It\n     * is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#nrpn-datadecrement\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn-datadecrement`\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    const event = {\n      target: e.target,\n      timestamp: e.timestamp,\n      message: e.message,\n      parameterMsb: paramMsb,\n      parameterLsb: paramLsb,\n      value: Utilities.from7bitToFloat(e.message.dataBytes[1]),\n      rawValue: e.message.dataBytes[1],\n    };\n\n    // Identify the parameter (by name for RPN and by number for NRPN)\n    if (type === \"rpn\") {\n\n      event.parameter = Object.keys(Enumerations.REGISTERED_PARAMETERS).find(key => {\n        return Enumerations.REGISTERED_PARAMETERS[key][0] === paramMsb &&\n          Enumerations.REGISTERED_PARAMETERS[key][1] === paramLsb;\n      });\n\n    } else {\n      event.parameter = (paramMsb << 7) + paramLsb;\n    }\n\n    // Type and subtype\n    const subtype = Enumerations.CONTROL_CHANGE_MESSAGES[e.message.dataBytes[0]].name;\n\n    // Emit specific event\n    event.type = `${type}-${subtype}`;\n    this.emit(event.type, event);\n\n    // Begin Legacy Block (remove in v4)\n    const legacyEvent = Object.assign({}, event);\n    if (legacyEvent.type === \"nrpn-dataincrement\") {\n      legacyEvent.type = \"nrpn-databuttonincrement\";\n    } else if (legacyEvent.type === \"nrpn-datadecrement\") {\n      legacyEvent.type = \"nrpn-databuttondecrement\";\n    } else if (legacyEvent.type === \"rpn-dataincrement\") {\n      legacyEvent.type = \"rpn-databuttonincrement\";\n    } else if (legacyEvent.type === \"rpn-datadecrement\") {\n      legacyEvent.type = \"rpn-databuttondecrement\";\n    }\n    this.emit(legacyEvent.type, legacyEvent);\n    // End Legacy Block\n\n    /**\n     * Event emitted when any NRPN message is received on the input. There are four subtypes of NRPN\n     * messages:\n     *\n     *   * `nrpn-dataentrycoarse`\n     *   * `nrpn-dataentryfine`\n     *   * `nrpn-dataincrement`\n     *   * `nrpn-datadecrement`\n     *\n     * The parameter to which the message applies can be found in the event's `parameter` property.\n     *\n     * @event InputChannel#nrpn\n     *\n     * @type {object}\n     *\n     * @property {string} type `nrpn`\n     * @property {string} subtype The precise type of NRPN message that was received.\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} parameter The non-registered parameter number (0-16383)\n     * @property {number} parameterMsb The MSB portion of the non-registered parameter number\n     * (0-127)\n     * @property {number} parameterLsb: The LSB portion of the non-registered parameter number\n     * (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    /**\n     * Event emitted when any RPN message is received on the input. There are four subtypes of RPN\n     * messages:\n     *\n     *   * `rpn-dataentrycoarse`\n     *   * `rpn-dataentryfine`\n     *   * `rpn-dataincrement`\n     *   * `rpn-datadecrement`\n     *\n     * The parameter to which the message applies can be found in the event's `parameter` property.\n     * It is one of the ones defined in\n     * [`Enumerations.REGISTERED_PARAMETERS`](Enumerations#REGISTERED_PARAMETERS).\n     *\n     * @event InputChannel#rpn\n     *\n     * @type {object}\n     *\n     * @property {string} type `rpn`\n     * @property {string} subtype The precise type of RPN message that was received.\n     * @property {InputChannel} target The object that dispatched the event.\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {string} parameter The registered parameter's name\n     * @property {number} parameterMsb The MSB portion of the registered parameter (0-127)\n     * @property {number} parameterLsb: The LSB portion of the registered parameter (0-127)\n     * @property {number} value The received value as a normalized number between 0 and 1.\n     * @property {number} rawValue The value as received (0-127)\n     */\n\n    // Emit general event\n    event.type = type;\n    event.subtype = subtype;\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * @deprecated since version 3.\n   * @private\n   */\n  getChannelModeByNumber(number) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n      number = Math.floor(number);\n    }\n\n    return Utilities.getChannelModeByNumber(number);\n\n  }\n\n  /**\n   * @deprecated since version 3.\n   * @private\n   */\n  getCcNameByNumber(number) {\n\n    if (wm.validation) {\n      console.warn(\n        \"The 'getCcNameByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n      number = parseInt(number);\n      if ( !(number >= 0 && number <= 127) ) throw new RangeError(\"Invalid control change number.\");\n    }\n\n    return Utilities.getCcNameByNumber(number);\n\n  }\n\n  /**\n   * Returns the playing status of the specified note (`true` if the note is currently playing,\n   * `false` if it is not). The `note` parameter can be an unsigned integer (0-127), a note\n   * identifier (`\"C4\"`, `\"G#5\"`, etc.) or a [`Note`]{@link Note} object.\n   *\n   * IF the note is specified using an integer (0-127), no octave offset will be applied.\n   *\n   * @param {number|string|Note} note The note to get the state for. The\n   * [`octaveOffset`](#octaveOffset) (channel, input and global) will be factored in for note\n   * identifiers and [`Note`]{@link Note} objects.\n   * @returns {boolean}\n   * @since version 3.0.0\n   */\n  getNoteState(note) {\n\n    // If it's a note object, we simply use the identifier\n    if (note instanceof Note) note = note.identifier;\n\n    const number = Utilities.guessNoteNumber(\n      note,\n      wm.octaveOffset + this.input.octaveOffset + this.octaveOffset\n    );\n\n    return this.notesState[number];\n\n  }\n\n  /**\n   * An integer to offset the reported octave of incoming note-specific messages (`noteon`,\n   * `noteoff` and `keyaftertouch`). By default, middle C (MIDI note number 60) is placed on the 4th\n   * octave (C4).\n   *\n   * If, for example, `octaveOffset` is set to 2, MIDI note number 60 will be reported as C6. If\n   * `octaveOffset` is set to -1, MIDI note number 60 will be reported as C3.\n   *\n   * Note that this value is combined with the global offset value defined by\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) object and with the value defined on the parent\n   * input object with [`Input.octaveOffset`](Input#octaveOffset).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * The [`Input`](Input) this channel belongs to.\n   * @type {Input}\n   * @since 3.0\n   */\n  get input() {\n    return this._input;\n  }\n\n  /**\n   * This channel's MIDI number (1-16).\n   * @type {number}\n   * @since 3.0\n   */\n  get number() {\n    return this._number;\n  }\n\n  /**\n   * Whether RPN/NRPN events are parsed and dispatched.\n   * @type {boolean}\n   * @since 3.0\n   * @deprecated Use parameterNumberEventsEnabled instead.\n   * @private\n   */\n  get nrpnEventsEnabled() {\n    return this.parameterNumberEventsEnabled;\n  }\n  set nrpnEventsEnabled(value) {\n\n    if (this.validation) {\n      value = !!value;\n    }\n\n    this.parameterNumberEventsEnabled = value;\n\n  }\n\n}\n\n/**\n * The `Message` class represents a single MIDI message. It has several properties that make it\n * easy to make sense of the binary data it contains.\n *\n * @license Apache-2.0\n * @since 3.0.0\n */\nclass Message {\n\n  /**\n   * Creates a new `Message` object from raw MIDI data.\n   *\n   * @param {Uint8Array} data The raw data of the MIDI message as a\n   * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n   * of integers between `0` and `255`.\n   */\n  constructor(data) {\n\n    /**\n     * A\n     * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n     * containing the bytes of the MIDI message. Each byte is an integer between `0` and `255`.\n     *\n     * @type {Uint8Array}\n     * @readonly\n     */\n    this.rawData = data;\n\n    /**\n     * An array containing all the bytes of the MIDI message. Each byte is an integer between `0`\n     * and `255`.\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.data = Array.from(this.rawData);\n\n    /**\n     * The MIDI status byte of the message as an integer between `0` and `255`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.statusByte = this.rawData[0];\n\n    /**\n     * A\n     * [`Uint8Array`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)\n     * of the data byte(s) of the MIDI message. When the message is a system exclusive message\n     * (sysex), `rawDataBytes` explicitly excludes the manufacturer ID and the sysex end byte so\n     * only the actual data is included.\n     *\n     * @type {Uint8Array}\n     * @readonly\n     */\n    this.rawDataBytes = this.rawData.slice(1);\n\n    /**\n     * An array of the the data byte(s) of the MIDI message (as opposed to the status byte). When\n     * the message is a system exclusive message (sysex), `dataBytes` explicitly excludes the\n     * manufacturer ID and the sysex end byte so only the actual data is included.\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.dataBytes = this.data.slice(1);\n\n    /**\n     * A boolean indicating whether the MIDI message is a channel-specific message.\n     *\n     * @type {boolean}\n     * @readonly\n     */\n    this.isChannelMessage = false;\n\n    /**\n     * A boolean indicating whether the MIDI message is a system message (not specific to a\n     * channel).\n     *\n     * @type {boolean}\n     * @readonly\n     */\n    this.isSystemMessage = false;\n\n    /**\n     * An integer identifying the MIDI command. For channel-specific messages, the value is 4-bit\n     * and will be between `8` and `14`. For system messages, the value will be between `240` and\n     * `255`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.command = undefined;\n\n    /**\n     * The MIDI channel number (`1` - `16`) that the message is targeting. This is only for\n     * channel-specific messages. For system messages, this will be left `undefined`.\n     *\n     * @type {number}\n     * @readonly\n     */\n    this.channel = undefined;\n\n    /**\n     * When the message is a system exclusive message (sysex), this property contains an array with\n     * either 1 or 3 entries that identify the manufacturer targeted by the message.\n     *\n     * To know how to translate these entries into manufacturer names, check out the official list:\n     * https://www.midi.org/specifications-old/item/manufacturer-id-numbers\n     *\n     * @type {number[]}\n     * @readonly\n     */\n    this.manufacturerId = undefined;\n\n    /**\n     * The type of message as a string (`\"noteon\"`, `\"controlchange\"`, `\"sysex\"`, etc.)\n     *\n     * @type {string}\n     * @readonly\n     */\n    this.type = undefined;\n\n    // Assign values to property that vary according to whether they are channel-specific or system\n    if (this.statusByte < 240) {\n      this.isChannelMessage = true;\n      this.command = this.statusByte >> 4;\n      this.channel = (this.statusByte & 0b00001111) + 1;\n    } else {\n      this.isSystemMessage = true;\n      this.command = this.statusByte;\n    }\n\n    // Assign type (depending on whether the message is channel-specific or system)\n    if (this.isChannelMessage) {\n      this.type = Utilities.getPropertyByValue(Enumerations.CHANNEL_MESSAGES, this.command);\n    } else if (this.isSystemMessage) {\n      this.type = Utilities.getPropertyByValue(Enumerations.SYSTEM_MESSAGES, this.command);\n    }\n\n    // When the message is a sysex message, we add a manufacturer property and strip out the id from\n    // dataBytes and rawDataBytes.\n    if (this.statusByte === Enumerations.SYSTEM_MESSAGES.sysex) {\n\n      if (this.dataBytes[0] === 0) {\n        this.manufacturerId = this.dataBytes.slice(0, 3);\n        this.dataBytes = this.dataBytes.slice(3, this.rawDataBytes.length - 1);\n        this.rawDataBytes = this.rawDataBytes.slice(3, this.rawDataBytes.length - 1);\n      } else {\n        this.manufacturerId = [this.dataBytes[0]];\n        this.dataBytes = this.dataBytes.slice(1, this.dataBytes.length - 1);\n        this.rawDataBytes = this.rawDataBytes.slice(1, this.rawDataBytes.length - 1);\n      }\n\n    }\n\n  }\n\n}\n\n/**\n * The `Input` class represents a single MIDI input port. This object is automatically instantiated\n * by the library according to the host's MIDI subsystem and does not need to be directly\n * instantiated. Instead, you can access all `Input` objects by referring to the\n * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as\n * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and\n * [`WebMidi.getInputById()`](WebMidi#getInputById).\n *\n * Note that a single MIDI device may expose several inputs and/or outputs.\n *\n * **Important**: the `Input` class does not directly fire channel-specific MIDI messages\n * (such as [`noteon`](InputChannel#event:noteon) or\n * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)\n * object does that. However, you can still use the\n * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple\n * [`InputChannel`](InputChannel) objects at once.\n *\n * @fires Input#opened\n * @fires Input#disconnected\n * @fires Input#closed\n * @fires Input#midimessage\n *\n * @fires Input#sysex\n * @fires Input#timecode\n * @fires Input#songposition\n * @fires Input#songselect\n * @fires Input#tunerequest\n * @fires Input#clock\n * @fires Input#start\n * @fires Input#continue\n * @fires Input#stop\n * @fires Input#activesensing\n * @fires Input#reset\n *\n * @fires Input#unknownmidimessage\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nclass Input extends EventEmitter {\n\n  /**\n   * Creates an `Input` object.\n   *\n   * @param {MIDIInput} midiInput [`MIDIInput`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIInput)\n   * object as provided by the MIDI subsystem (Web MIDI API).\n   */\n  constructor(midiInput) {\n\n    super();\n\n    /**\n     * Reference to the actual MIDIInput object\n     * @private\n     */\n    this._midiInput = midiInput;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n    /**\n     * Array containing the 16 [`InputChannel`](InputChannel) objects available for this `Input`. The\n     * channels are numbered 1 through 16.\n     *\n     * @type {InputChannel[]}\n     */\n    this.channels = [];\n    for (let i = 1; i <= 16; i++) this.channels[i] = new InputChannel(this, i);\n\n    /**\n     * @type {Forwarder[]}\n     * @private\n     */\n    this._forwarders = [];\n\n    // Setup listeners\n    this._midiInput.onstatechange = this._onStateChange.bind(this);\n    this._midiInput.onmidimessage = this._onMidiMessage.bind(this);\n\n  }\n\n  /**\n   * Destroys the `Input` by removing all listeners, emptying the [`channels`](#channels) array and\n   * unlinking the MIDI subsystem. This is mostly for internal use.\n   *\n   * @returns {Promise<void>}\n   */\n  async destroy() {\n    this.removeListener();\n    this.channels.forEach(ch => ch.destroy());\n    this.channels = [];\n    this._forwarders = [];\n    if (this._midiInput) {\n      this._midiInput.onstatechange = null;\n      this._midiInput.onmidimessage = null;\n    }\n    await this.close();\n    this._midiInput = null;\n  }\n\n  /**\n   * Executed when a `\"statechange\"` event occurs.\n   *\n   * @param e\n   * @private\n   */\n  _onStateChange(e) {\n\n    let event = {\n      timestamp: wm.time,\n      target: this,\n      port: this // for consistency\n    };\n\n    if (e.port.connection === \"open\") {\n\n      /**\n       * Event emitted when the `Input` has been opened by calling the [`open()`]{@link #open}\n       * method.\n       *\n       * @event Input#opened\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `opened`\n       * @property {Input} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       */\n      event.type = \"opened\";\n      this.emit(\"opened\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"connected\") {\n\n      /**\n       * Event emitted when the `Input` has been closed by calling the\n       * [`close()`]{@link #close} method.\n       *\n       * @event Input#closed\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `closed`\n       * @property {Input} target The object that dispatched the event.\n       * @property {Input} port The `Input` that triggered the event.\n       */\n      event.type = \"closed\";\n      this.emit(\"closed\", event);\n\n    } else if (e.port.connection === \"closed\" && e.port.state === \"disconnected\") {\n\n      /**\n       * Event emitted when the `Input` becomes unavailable. This event is typically fired\n       * when the MIDI device is unplugged.\n       *\n       * @event Input#disconnected\n       * @type {object}\n       * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {string} type `disconnected`\n       * @property {Input} port Object with properties describing the {@link Input} that was\n       * disconnected. This is not the actual `Input` as it is no longer available.\n       * @property {Input} target The object that dispatched the event.\n       */\n      event.type = \"disconnected\";\n      event.port = {\n        connection: e.port.connection,\n        id: e.port.id,\n        manufacturer: e.port.manufacturer,\n        name: e.port.name,\n        state: e.port.state,\n        type: e.port.type\n      };\n      this.emit(\"disconnected\", event);\n\n    } else if (e.port.connection === \"pending\" && e.port.state === \"disconnected\") ; else {\n      console.warn(\"This statechange event was not caught: \", e.port.connection, e.port.state);\n    }\n\n  }\n\n  /**\n   * Executed when a `\"midimessage\"` event is received\n   * @param e\n   * @private\n   */\n  _onMidiMessage(e) {\n\n    // Create Message object from MIDI data\n    const message = new Message(e.data);\n\n    /**\n     * Event emitted when any MIDI message is received on an `Input`.\n     *\n     * @event Input#midimessage\n     *\n     * @type {object}\n     *\n     * @property {Input} port The `Input` that triggered the event.\n     * @property {Input} target The object that dispatched the event.\n     * @property {Message} message A [`Message`](Message) object containing information about the\n     * incoming MIDI message.\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {string} type `midimessage`\n     *\n     * @since 2.1\n     */\n    const event = {\n      port: this,\n      target: this,\n      message: message,\n      timestamp: e.timeStamp,\n      type: \"midimessage\",\n\n      data: message.data,           // @deprecated (will be removed in v4)\n      rawData: message.data,        // @deprecated (will be removed in v4)\n      statusByte: message.data[0],  // @deprecated (will be removed in v4)\n      dataBytes: message.dataBytes  // @deprecated (will be removed in v4)\n    };\n\n    this.emit(\"midimessage\", event);\n\n    // Messages are forwarded to InputChannel if they are channel messages or parsed locally for\n    // system messages.\n    if (message.isSystemMessage) {           // system messages\n      this._parseEvent(event);\n    } else if (message.isChannelMessage) {   // channel messages\n      this.channels[message.channel]._processMidiMessageEvent(event);\n    }\n\n    // Forward message if forwarders have been defined\n    this._forwarders.forEach(forwarder => forwarder.forward(message));\n\n  }\n\n  /**\n   * @private\n   */\n  _parseEvent(e) {\n\n    // Make a shallow copy of the incoming event so we can use it as the new event.\n    const event = Object.assign({}, e);\n    event.type = event.message.type || \"unknownmidimessage\";\n\n    // Add custom property for 'songselect'\n    if (event.type === \"songselect\") {\n      event.song = e.data[1] + 1; // deprecated\n      event.value = e.data[1];\n      event.rawValue = event.value;\n    }\n\n    // Emit event\n    this.emit(event.type, event);\n\n  }\n\n  /**\n   * Opens the input for usage. This is usually unnecessary as the port is opened automatically when\n   * WebMidi is enabled.\n   *\n   * @returns {Promise<Input>} The promise is fulfilled with the `Input` object.\n   */\n  async open() {\n\n    // Explicitly opens the port for usage. This is not mandatory. When the port is not explicitly\n    // opened, it is implicitly opened (asynchronously) when assigning a listener to the\n    // `onmidimessage` property of the `MIDIInput`. We do it explicitly so that 'connected' events\n    // are dispatched immediately and that we are ready to listen.\n    try {\n      await this._midiInput.open();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * Closes the input. When an input is closed, it cannot be used to listen to MIDI messages until\n   * the input is opened again by calling [`Input.open()`](Input#open).\n   *\n   * **Note**: if what you want to do is stop events from being dispatched, you should use\n   * [`eventsSuspended`](#eventsSuspended) instead.\n   *\n   * @returns {Promise<Input>} The promise is fulfilled with the `Input` object\n   */\n  async close() {\n\n    // We close the port. This triggers a statechange event which, in turn, will emit the 'closed'\n    // event.\n    if (!this._midiInput) return Promise.resolve(this);\n\n    try {\n      await this._midiInput.close();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since v3.0.0 (moved to 'Utilities' class)\n   */\n  getChannelModeByNumber() {\n    if (wm.validation) {\n      console.warn(\n        \"The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.\"\n      );\n    }\n  }\n\n  /**\n   * Adds an event listener that will trigger a function callback when the specified event is\n   * dispatched. The event usually is **input-wide** but can also be **channel-specific**.\n   *\n   * Input-wide events do not target a specific MIDI channel so it makes sense to listen for them\n   * at the `Input` level and not at the [`InputChannel`](InputChannel) level. Channel-specific\n   * events target a specific channel. Usually, in this case, you would add the listener to the\n   * [`InputChannel`](InputChannel) object. However, as a convenience, you can also listen to\n   * channel-specific events directly on an `Input`. This allows you to react to a channel-specific\n   * event no matter which channel it actually came through.\n   *\n   * When listening for an event, you simply need to specify the event name and the function to\n   * execute:\n   *\n   * ```javascript\n   * const listener = WebMidi.inputs[0].addListener(\"midimessage\", e => {\n   *   console.log(e);\n   * });\n   * ```\n   *\n   * Calling the function with an input-wide event (such as\n   * [`\"midimessage\"`]{@link #event:midimessage}), will return the [`Listener`](Listener) object\n   * that was created.\n   *\n   * If you call the function with a channel-specific event (such as\n   * [`\"noteon\"`]{@link InputChannel#event:noteon}), it will return an array of all\n   * [`Listener`](Listener) objects that were created (one for each channel):\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addListener(\"noteon\", someFunction);\n   * ```\n   *\n   * You can also specify which channels you want to add the listener to:\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * In this case, `listeners` is an array containing 3 [`Listener`](Listener) objects. The order of\n   * the listeners in the array follows the order the channels were specified in.\n   *\n   * Note that, when adding channel-specific listeners, it is the [`InputChannel`](InputChannel)\n   * instance that actually gets a listener added and not the `Input` instance. You can check that\n   * by calling [`InputChannel.hasListener()`](InputChannel#hasListener()).\n   *\n   * There are 8 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [`songposition`]{@link Input#event:songposition}\n   *    * [`songselect`]{@link Input#event:songselect}\n   *    * [`sysex`]{@link Input#event:sysex}\n   *    * [`timecode`]{@link Input#event:timecode}\n   *    * [`tunerequest`]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [`clock`]{@link Input#event:clock}\n   *    * [`start`]{@link Input#event:start}\n   *    * [`continue`]{@link Input#event:continue}\n   *    * [`stop`]{@link Input#event:stop}\n   *    * [`activesensing`]{@link Input#event:activesensing}\n   *    * [`reset`]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [`opened`]{@link Input#event:opened}\n   *    * [`closed`]{@link Input#event:closed}\n   *    * [`disconnected`]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [`midimessage`]{@link Input#event:midimessage}\n   *    * [`unknownmidimessage`]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [`channelaftertouch`]{@link InputChannel#event:channelaftertouch}\n   *    * [`controlchange`]{@link InputChannel#event:controlchange}\n   *      * [`controlchange-controller0`]{@link InputChannel#event:controlchange-controller0}\n   *      * [`controlchange-controller1`]{@link InputChannel#event:controlchange-controller1}\n   *      * [`controlchange-controller2`]{@link InputChannel#event:controlchange-controller2}\n   *      * (...)\n   *      * [`controlchange-controller127`]{@link InputChannel#event:controlchange-controller127}\n   *    * [`keyaftertouch`]{@link InputChannel#event:keyaftertouch}\n   *    * [`noteoff`]{@link InputChannel#event:noteoff}\n   *    * [`noteon`]{@link InputChannel#event:noteon}\n   *    * [`pitchbend`]{@link InputChannel#event:pitchbend}\n   *    * [`programchange`]{@link InputChannel#event:programchange}\n   *\n   *    Note: you can listen for a specific control change message by using an event name like this:\n   *    `controlchange-controller23`, `controlchange-controller99`, `controlchange-controller122`,\n   *    etc.\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [`allnotesoff`]{@link InputChannel#event:allnotesoff}\n   *    * [`allsoundoff`]{@link InputChannel#event:allsoundoff}\n   *    * [`localcontrol`]{@link InputChannel#event:localcontrol}\n   *    * [`monomode`]{@link InputChannel#event:monomode}\n   *    * [`omnimode`]{@link InputChannel#event:omnimode}\n   *    * [`resetallcontrollers`]{@link InputChannel#event:resetallcontrollers}\n   *\n   * 7. **NRPN** Events (channel-specific)\n   *\n   *    * [`nrpn`]{@link InputChannel#event:nrpn}\n   *    * [`nrpn-dataentrycoarse`]{@link InputChannel#event:nrpn-dataentrycoarse}\n   *    * [`nrpn-dataentryfine`]{@link InputChannel#event:nrpn-dataentryfine}\n   *    * [`nrpn-dataincrement`]{@link InputChannel#event:nrpn-dataincrement}\n   *    * [`nrpn-datadecrement`]{@link InputChannel#event:nrpn-datadecrement}\n   *\n   * 8. **RPN** Events (channel-specific)\n   *\n   *    * [`rpn`]{@link InputChannel#event:rpn}\n   *    * [`rpn-dataentrycoarse`]{@link InputChannel#event:rpn-dataentrycoarse}\n   *    * [`rpn-dataentryfine`]{@link InputChannel#event:rpn-dataentryfine}\n   *    * [`rpn-dataincrement`]{@link InputChannel#event:rpn-dataincrement}\n   *    * [`rpn-datadecrement`]{@link InputChannel#event:rpn-datadecrement}\n   *\n   * @param event {string | EventEmitter.ANY_EVENT} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * An integer between 1 and 16 or an array of such integers representing the MIDI channel(s) to\n   * listen on. If no channel is specified, all channels will be used. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus be triggered before others.\n   *\n   * @param {number} [options.remaining=Infinity] The number of times after which the callback\n   * should automatically be removed.\n   *\n   * @returns {Listener|Listener[]} If the event is input-wide, a single [`Listener`](Listener)\n   * object is returned. If the event is channel-specific, an array of all the\n   * [`Listener`](Listener) objects is returned (one for each channel).\n   */\n  addListener(event, listener, options = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = (listener != undefined) ? [].concat(listener) : undefined; // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    // Check if the event is channel-specific or input-wide\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      // If no channel defined, use all.\n      if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n      let listeners = [];\n\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        listeners.push(this.channels[ch].addListener(event, listener, options));\n      });\n\n      return listeners;\n\n    } else {\n\n      return super.addListener(event, listener, options);\n\n    }\n\n  }\n\n  /**\n   * Adds a one-time event listener that will trigger a function callback when the specified event\n   * happens. The event can be **channel-bound** or **input-wide**. Channel-bound events are\n   * dispatched by [`InputChannel`]{@link InputChannel} objects and are tied to a specific MIDI\n   * channel while input-wide events are dispatched by the `Input` object itself and are not tied\n   * to a specific channel.\n   *\n   * Calling the function with an input-wide event (such as\n   * [`\"midimessage\"`]{@link #event:midimessage}), will return the [`Listener`](Listener) object\n   * that was created.\n   *\n   * If you call the function with a channel-specific event (such as\n   * [`\"noteon\"`]{@link InputChannel#event:noteon}), it will return an array of all\n   * [`Listener`](Listener) objects that were created (one for each channel):\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addOneTimeListener(\"noteon\", someFunction);\n   * ```\n   *\n   * You can also specify which channels you want to add the listener to:\n   *\n   * ```javascript\n   * const listeners = WebMidi.inputs[0].addOneTimeListener(\"noteon\", someFunction, {channels: [1, 2, 3]});\n   * ```\n   *\n   * In this case, the `listeners` variable contains an array of 3 [`Listener`](Listener) objects.\n   *\n   * The code above will add a listener for the `\"noteon\"` event and call `someFunction` when the\n   * event is triggered on MIDI channels `1`, `2` or `3`.\n   *\n   * Note that, when adding events to channels, it is the [`InputChannel`](InputChannel) instance\n   * that actually gets a listener added and not the `Input` instance.\n   *\n   * Note: if you want to add a listener to a single MIDI channel you should probably do so directly\n   * on the [`InputChannel`](InputChannel) object itself.\n   *\n   * There are 8 families of events you can listen to:\n   *\n   * 1. **MIDI System Common** Events (input-wide)\n   *\n   *    * [`songposition`]{@link Input#event:songposition}\n   *    * [`songselect`]{@link Input#event:songselect}\n   *    * [`sysex`]{@link Input#event:sysex}\n   *    * [`timecode`]{@link Input#event:timecode}\n   *    * [`tunerequest`]{@link Input#event:tunerequest}\n   *\n   * 2. **MIDI System Real-Time** Events (input-wide)\n   *\n   *    * [`clock`]{@link Input#event:clock}\n   *    * [`start`]{@link Input#event:start}\n   *    * [`continue`]{@link Input#event:continue}\n   *    * [`stop`]{@link Input#event:stop}\n   *    * [`activesensing`]{@link Input#event:activesensing}\n   *    * [`reset`]{@link Input#event:reset}\n   *\n   * 3. **State Change** Events (input-wide)\n   *\n   *    * [`opened`]{@link Input#event:opened}\n   *    * [`closed`]{@link Input#event:closed}\n   *    * [`disconnected`]{@link Input#event:disconnected}\n   *\n   * 4. **Catch-All** Events (input-wide)\n   *\n   *    * [`midimessage`]{@link Input#event:midimessage}\n   *    * [`unknownmidimessage`]{@link Input#event:unknownmidimessage}\n   *\n   * 5. **Channel Voice** Events (channel-specific)\n   *\n   *    * [`channelaftertouch`]{@link InputChannel#event:channelaftertouch}\n   *    * [`controlchange`]{@link InputChannel#event:controlchange}\n   *      * [`controlchange-controller0`]{@link InputChannel#event:controlchange-controller0}\n   *      * [`controlchange-controller1`]{@link InputChannel#event:controlchange-controller1}\n   *      * [`controlchange-controller2`]{@link InputChannel#event:controlchange-controller2}\n   *      * (...)\n   *      * [`controlchange-controller127`]{@link InputChannel#event:controlchange-controller127}\n   *    * [`keyaftertouch`]{@link InputChannel#event:keyaftertouch}\n   *    * [`noteoff`]{@link InputChannel#event:noteoff}\n   *    * [`noteon`]{@link InputChannel#event:noteon}\n   *    * [`pitchbend`]{@link InputChannel#event:pitchbend}\n   *    * [`programchange`]{@link InputChannel#event:programchange}\n   *\n   *    Note: you can listen for a specific control change message by using an event name like this:\n   *    `controlchange-controller23`, `controlchange-controller99`, `controlchange-controller122`,\n   *    etc.\n   *\n   * 6. **Channel Mode** Events (channel-specific)\n   *\n   *    * [`allnotesoff`]{@link InputChannel#event:allnotesoff}\n   *    * [`allsoundoff`]{@link InputChannel#event:allsoundoff}\n   *    * [`localcontrol`]{@link InputChannel#event:localcontrol}\n   *    * [`monomode`]{@link InputChannel#event:monomode}\n   *    * [`omnimode`]{@link InputChannel#event:omnimode}\n   *    * [`resetallcontrollers`]{@link InputChannel#event:resetallcontrollers}\n   *\n   * 7. **NRPN** Events (channel-specific)\n   *\n   *    * [`nrpn`]{@link InputChannel#event:nrpn}\n   *    * [`nrpn-dataentrycoarse`]{@link InputChannel#event:nrpn-dataentrycoarse}\n   *    * [`nrpn-dataentryfine`]{@link InputChannel#event:nrpn-dataentryfine}\n   *    * [`nrpn-dataincrement`]{@link InputChannel#event:nrpn-dataincrement}\n   *    * [`nrpn-datadecrement`]{@link InputChannel#event:nrpn-datadecrement}\n   *\n   * 8. **RPN** Events (channel-specific)\n   *\n   *    * [`rpn`]{@link InputChannel#event:rpn}\n   *    * [`rpn-dataentrycoarse`]{@link InputChannel#event:rpn-dataentrycoarse}\n   *    * [`rpn-dataentryfine`]{@link InputChannel#event:rpn-dataentryfine}\n   *    * [`rpn-dataincrement`]{@link InputChannel#event:rpn-dataincrement}\n   *    * [`rpn-datadecrement`]{@link InputChannel#event:rpn-datadecrement}\n   *\n   * @param event {string} The type of the event.\n   *\n   * @param listener {function} A callback function to execute when the specified event is detected.\n   * This function will receive an event parameter object. For details on this object's properties,\n   * check out the documentation for the various events (links above).\n   *\n   * @param {object} [options={}]\n   *\n   * @param {array} [options.arguments] An array of arguments which will be passed separately to the\n   * callback function. This array is stored in the [`arguments`](Listener#arguments) property of\n   * the [`Listener`](Listener) object and can be retrieved or modified as desired.\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to listen on. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {object} [options.context=this] The value of `this` in the callback function.\n   *\n   * @param {number} [options.duration=Infinity] The number of milliseconds before the listener\n   * automatically expires.\n   *\n   * @param {boolean} [options.prepend=false] Whether the listener should be added at the beginning\n   * of the listeners array and thus be triggered before others.\n   *\n   * @returns {Listener[]} An array of all [`Listener`](Listener) objects that were created.\n   */\n  addOneTimeListener(event, listener, options = {}) {\n    options.remaining = 1;\n    return this.addListener(event, listener, options);\n  }\n\n  /**\n   * This is an alias to the [Input.addListener()]{@link Input#addListener} method.\n   * @since 2.0.0\n   * @deprecated since v3.0\n   * @private\n   */\n  on(event, channel, listener, options) {\n    return this.addListener(event, channel, listener, options);\n  }\n\n  /**\n   * Checks if the specified event type is already defined to trigger the specified callback\n   * function. For channel-specific events, the function will return `true` only if all channels\n   * have the listener defined.\n   *\n   * @param event {string|Symbol} The type of the event.\n   *\n   * @param listener {function} The callback function to check for.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of such\n   * integers representing the MIDI channel(s) to check. This parameter is ignored for input-wide\n   * events.\n   *\n   * @returns {boolean} Boolean value indicating whether or not the `Input` or\n   * [`InputChannel`](InputChannel) already has this listener defined.\n   */\n  hasListener(event, listener, options = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      // If no channel defined, use all.\n      if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n      return Utilities.sanitizeChannels(options.channels).every(ch => {\n        return this.channels[ch].hasListener(event, listener);\n      });\n\n    } else {\n      return super.hasListener(event, listener);\n    }\n\n  }\n\n  /**\n   * Removes the specified event listener. If no listener is specified, all listeners matching the\n   * specified event will be removed. If the event is channel-specific, the listener will be removed\n   * from all [`InputChannel`]{@link InputChannel} objects belonging to that channel. If no event is\n   * specified, all listeners for the `Input` as well as all listeners for all\n   * [`InputChannel`]{@link InputChannel} objects belonging to the `Input` will be removed.\n   *\n   * By default, channel-specific listeners will be removed from all\n   * [`InputChannel`]{@link InputChannel} objects unless the `options.channel` narrows it down.\n   *\n   * @param [type] {string} The type of the event.\n   *\n   * @param [listener] {function} The callback function to check for.\n   *\n   * @param {object} [options={}]\n   *\n   * @param {number|number[]} [options.channels]  An integer between 1 and 16 or an array of\n   * such integers representing the MIDI channel(s) to match. This parameter is ignored for\n   * input-wide events.\n   *\n   * @param {*} [options.context] Only remove the listeners that have this exact context.\n   *\n   * @param {number} [options.remaining] Only remove the listener if it has exactly that many\n   * remaining times to be executed.\n   */\n  removeListener(event, listener, options = {}) {\n\n    if (wm.validation) {\n\n      // Legacy compatibility\n      if (typeof options === \"function\") {\n        let channels = [].concat(listener); // clone\n        listener = options;\n        options = {channels: channels};\n      }\n\n    }\n\n    if (options.channels === undefined) options.channels = Enumerations.MIDI_CHANNEL_NUMBERS;\n\n    // If the event is not specified, remove everything (channel-specific and input-wide)!\n    if (event == undefined) {\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        if (this.channels[ch]) this.channels[ch].removeListener();\n      });\n      return super.removeListener();\n    }\n\n    // If the event is specified, check if it's channel-specific or input-wide.\n    if (Enumerations.CHANNEL_EVENTS.includes(event)) {\n\n      Utilities.sanitizeChannels(options.channels).forEach(ch => {\n        this.channels[ch].removeListener(event, listener, options);\n      });\n\n    } else {\n\n      super.removeListener(event, listener, options);\n\n    }\n\n  }\n\n  /**\n   * Adds a forwarder that will forward all incoming MIDI messages matching the criteria to the\n   * specified [`Output`](Output) destination(s). This is akin to the hardware MIDI THRU port, with\n   * the added benefit of being able to filter which data is forwarded.\n   *\n   * @param {Output|Output[]} output An [`Output`](Output) object, or an array of such\n   * objects, to forward messages to.\n   * @param {object} [options={}]\n   * @param {string|string[]} [options.types=(all messages)] A message type, or an array of such\n   * types (`noteon`, `controlchange`, etc.), that the message type must match in order to be\n   * forwarded. If this option is not specified, all types of messages will be forwarded. Valid\n   * messages are the ones found in either\n   * [`SYSTEM_MESSAGES`](Enumerations#SYSTEM_MESSAGES) or\n   * [`CHANNEL_MESSAGES`](Enumerations#CHANNEL_MESSAGES).\n   * @param {number|number[]} [options.channels=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]]\n   * A MIDI channel number or an array of channel numbers that the message must match in order to be\n   * forwarded. By default all MIDI channels are included (`1` to `16`).\n   *\n   * @returns {Forwarder} The [`Forwarder`](Forwarder) object created to handle the forwarding. This\n   * is useful if you wish to manipulate or remove the [`Forwarder`](Forwarder) later on.\n   */\n  addForwarder(output, options = {}) {\n\n    let forwarder;\n\n    // Unless 'output' is a forwarder, create a new forwarder\n    if (output instanceof Forwarder) {\n      forwarder = output;\n    } else {\n      forwarder = new Forwarder(output, options);\n    }\n\n    this._forwarders.push(forwarder);\n    return forwarder;\n\n  }\n\n  /**\n   * Removes the specified [`Forwarder`](Forwarder) object from the input.\n   *\n   * @param {Forwarder} forwarder The [`Forwarder`](Forwarder) to remove (the\n   * [`Forwarder`](Forwarder) object is returned when calling `addForwarder()`.\n   */\n  removeForwarder(forwarder) {\n    this._forwarders = this._forwarders.filter(item => item !== forwarder);\n  }\n\n  /**\n   * Checks whether the specified [`Forwarder`](Forwarder) object has already been attached to this\n   * input.\n   *\n   * @param {Forwarder} forwarder The [`Forwarder`](Forwarder) to check for (the\n   * [`Forwarder`](Forwarder) object is returned when calling [`addForwarder()`](#addForwarder).\n   * @returns {boolean}\n   */\n  hasForwarder(forwarder) {\n    return this._forwarders.includes(forwarder);\n  }\n\n  /**\n   * Name of the MIDI input.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get name() {\n    return this._midiInput.name;\n  }\n\n  /**\n   * ID string of the MIDI port. The ID is host-specific. Do not expect the same ID on different\n   * platforms. For example, Google Chrome and the Jazz-Plugin report completely different IDs for\n   * the same port.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get id() {\n    return this._midiInput.id;\n  }\n\n  /**\n   * Input port's connection state: `pending`, `open` or `closed`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get connection() {\n    return this._midiInput.connection;\n  }\n\n  /**\n   * Name of the manufacturer of the device that makes this input port available.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get manufacturer() {\n    return this._midiInput.manufacturer;\n  }\n\n  /**\n   * An integer to offset the reported octave of incoming notes. By default, middle C (MIDI note\n   * number 60) is placed on the 4th octave (C4).\n   *\n   * If, for example, `octaveOffset` is set to 2, MIDI note number 60 will be reported as C6. If\n   * `octaveOffset` is set to -1, MIDI note number 60 will be reported as C3.\n   *\n   * Note that this value is combined with the global offset value defined in the\n   * [`WebMidi.octaveOffset`](WebMidi#octaveOffset) property (if any).\n   *\n   * @type {number}\n   *\n   * @since 3.0\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * State of the input port: `connected` or `disconnected`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get state() {\n    return this._midiInput.state;\n  }\n\n  /**\n   * The port type. In the case of the `Input` object, this is always: `input`.\n   *\n   * @type {string}\n   * @readonly\n   */\n  get type() {\n    return this._midiInput.type;\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   * @deprecated since v3.0.0 (moved to 'InputChannel' class)\n   */\n  get nrpnEventsEnabled() {\n    if (wm.validation) {\n      console.warn(\"The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class.\");\n    }\n    return false;\n  }\n\n}\n\n// Events that do not have code below them must be placed outside the class definition (?!)\n\n/**\n * Input-wide (system) event emitted when a **system exclusive** message has been received.\n * You should note that, to receive `sysex` events, you must call the\n * [`WebMidi.enable()`](WebMidi#enable()) method with the `sysex` option set to `true`:\n *\n * ```js\n * WebMidi.enable({sysex: true})\n *  .then(() => console.log(\"WebMidi has been enabled with sysex support.\"))\n * ```\n *\n * @event Input#sysex\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `sysex`\n *\n */\n\n/**\n * Input-wide (system) event emitted when a **time code quarter frame** message has been\n * received.\n *\n * @event Input#timecode\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `timecode`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **song position** message has been received.\n *\n * @event Input#songposition\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `songposition`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **song select** message has been received.\n *\n * @event Input#songselect\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} value Song (or sequence) number to select (0-127)\n * @property {string} rawValue Song (or sequence) number to select (0-127)\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **tune request** message has been received.\n *\n * @event Input#tunerequest\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `tunerequest`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **timing clock** message has been received.\n *\n * @event Input#clock\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `clock`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **start** message has been received.\n *\n * @event Input#start\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `start`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **continue** message has been received.\n *\n * @event Input#continue\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `continue`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **stop** message has been received.\n *\n * @event Input#stop\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `stop`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when an **active sensing** message has been received.\n *\n * @event Input#activesensing\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `activesensing`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when a **reset** message has been received.\n *\n * @event Input#reset\n *\n * @type {object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `reset`\n *\n * @since 2.1\n */\n\n/**\n * Input-wide (system) event emitted when an unknown MIDI message has been received. It could\n * be, for example, one of the undefined/reserved messages.\n *\n * @event Input#unknownmessage\n *\n * @type {Object}\n *\n * @property {Input} port The `Input` that triggered the event.\n * @property {Input} target The object that dispatched the event.\n * @property {Message} message A [`Message`](Message) object containing information about the\n * incoming MIDI message.\n * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred (in\n * milliseconds since the navigation start of the document).\n * @property {string} type `unknownmessage`\n *\n * @since 2.1\n */\n\n/**\n * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it\n * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.\n *\n * When using the WebMidi.js library, you should know that the `WebMidi` class has already been\n * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should\n * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6\n * module) version, you get an already-instantiated object when you import the module.\n *\n * @fires WebMidi#connected\n * @fires WebMidi#disabled\n * @fires WebMidi#disconnected\n * @fires WebMidi#enabled\n * @fires WebMidi#error\n * @fires WebMidi#midiaccessgranted\n * @fires WebMidi#portschanged\n *\n * @extends EventEmitter\n * @license Apache-2.0\n */\nclass WebMidi extends EventEmitter {\n\n  /**\n   * The WebMidi class is a singleton and you cannot instantiate it directly. It has already been\n   * instantiated for you.\n   */\n  constructor() {\n\n    super();\n\n    /**\n     * Object containing system-wide default values that can be changed to customize how the library\n     * works.\n     *\n     * @type {object}\n     *\n     * @property {object}  defaults.note - Default values relating to note\n     * @property {number}  defaults.note.attack - A number between 0 and 127 representing the\n     * default attack velocity of notes. Initial value is 64.\n     * @property {number}  defaults.note.release - A number between 0 and 127 representing the\n     * default release velocity of notes. Initial value is 64.\n     * @property {number}  defaults.note.duration - A number representing the default duration of\n     * notes (in seconds). Initial value is Infinity.\n     */\n    this.defaults = {\n      note: {\n        attack: Utilities.from7bitToFloat(64),\n        release: Utilities.from7bitToFloat(64),\n        duration: Infinity\n      }\n    };\n\n    /**\n     * The [`MIDIAccess`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess)\n     * instance used to talk to the lower-level Web MIDI API. This should not be used directly\n     * unless you know what you are doing.\n     *\n     * @type {MIDIAccess}\n     * @readonly\n     */\n    this.interface = null;\n\n    /**\n     * Indicates whether argument validation and backwards-compatibility checks are performed\n     * throughout the WebMidi.js library for object methods and property setters.\n     *\n     * This is an advanced setting that should be used carefully. Setting `validation` to `false`\n     * improves performance but should only be done once the project has been thoroughly tested with\n     * `validation` turned on.\n     *\n     * @type {boolean}\n     */\n    this.validation = true;\n\n    /**\n     * Array of all (Input) objects\n     * @type {Input[]}\n     * @private\n     */\n    this._inputs = [];\n\n    /**\n     * Array of disconnected [`Input`](Input) objects. This is used when inputs are plugged back in\n     * to retain their previous state.\n     * @type {Input[]}\n     * @private\n     */\n    this._disconnectedInputs = [];\n\n    /**\n     * Array of all [`Output`](Output) objects\n     * @type {Output[]}\n     * @private\n     */\n    this._outputs = [];\n\n    /**\n     * Array of disconnected [`Output`](Output) objects. This is used when outputs are plugged back\n     * in to retain their previous state.\n     * @type {Output[]}\n     * @private\n     */\n    this._disconnectedOutputs = [];\n\n    /**\n     * Array of statechange events to process. These events must be parsed synchronously so they do\n     * not override each other.\n     *\n     * @type {string[]}\n     * @private\n     */\n    this._stateChangeQueue = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this._octaveOffset = 0;\n\n  }\n\n  /**\n   * Checks if the Web MIDI API is available in the current environment and then tries to connect to\n   * the host's MIDI subsystem. This is an asynchronous operation and it causes a security prompt to\n   * be displayed to the user.\n   *\n   * To enable the use of MIDI system exclusive messages, the `sysex` option should be set to\n   * `true`. However, under some environments (e.g. Jazz-Plugin), the `sysex` option is ignored\n   * and system exclusive messages are always enabled. You can check the\n   * [`sysexEnabled`](#sysexEnabled) property to confirm.\n   *\n   * To enable access to software synthesizers available on the host, you would set the `software`\n   * option to `true`. However, this option is only there to future-proof the library as support for\n   * software synths has not yet been implemented in any browser (as of September 2021).\n   *\n   * By the way, if you call the [`enable()`](#enable) method while WebMidi.js is already enabled,\n   * the callback function will be executed (if any), the promise will resolve but the events\n   * ([`\"midiaccessgranted\"`](#event:midiaccessgranted), [`\"connected\"`](#event:connected) and\n   * [`\"enabled\"`](#event:enabled)) will not be fired.\n   *\n   * There are 3 ways to execute code after `WebMidi` has been enabled:\n   *\n   * - Pass a callback function in the `options`\n   * - Listen to the [`\"enabled\"`](#event:enabled) event\n   * - Wait for the promise to resolve\n   *\n   * In order, this is what happens towards the end of the enabling process:\n   *\n   * 1. [`\"midiaccessgranted\"`](#event:midiaccessgranted) event is triggered once the user has\n   * granted access to use MIDI.\n   * 2. [`\"connected\"`](#event:connected) events are triggered (for each available input and output)\n   * 3. [`\"enabled\"`](#event:enabled) event is triggered when WebMidi.js is fully ready\n   * 4. specified callback (if any) is executed\n   * 5. promise is resolved and fulfilled with the `WebMidi` object.\n   *\n   * **Important note**: starting with Chrome v77, a page using Web MIDI API must be hosted on a\n   * secure origin (`https://`, `localhost` or `file:///`) and the user will always be prompted to\n   * authorize the operation (no matter if the `sysex` option is `true` or not).\n   *\n   * ##### Example\n   * ```js\n   * // Enabling WebMidi and using the promise\n   * WebMidi.enable().then(() => {\n   *   console.log(\"WebMidi.js has been enabled!\");\n   * })\n   * ```\n   *\n   * @param [options] {object}\n   *\n   * @param [options.callback] {function} A function to execute once the operation completes. This\n   * function will receive an `Error` object if enabling the Web MIDI API failed.\n   *\n   * @param [options.sysex=false] {boolean} Whether to enable MIDI system exclusive messages or not.\n   *\n   * @param [options.validation=true] {boolean} Whether to enable library-wide validation of method\n   * arguments and setter values. This is an advanced setting that should be used carefully. Setting\n   * [`validation`](#validation) to `false` improves performance but should only be done once the\n   * project has been thoroughly tested with [`validation`](#validation)  turned on.\n   *\n   * @param [options.software=false] {boolean} Whether to request access to software synthesizers on\n   * the host system. This is part of the spec but has not yet been implemented by most browsers as\n   * of April 2020.\n   *\n   * @param [options.requestMIDIAccessFunction] {function} A custom function to use to return\n   * the MIDIAccess object. This is useful if you want to use a polyfill for the Web MIDI API\n   * or if you want to use a custom implementation of the Web MIDI API - probably for testing\n   * purposes.\n   *\n   * @async\n   *\n   * @returns {Promise.<WebMidi>} The promise is fulfilled with the `WebMidi` object for\n   * chainability\n   *\n   * @throws {Error} The Web MIDI API is not supported in your environment.\n   * @throws {Error} Jazz-Plugin must be installed to use WebMIDIAPIShim.\n   */\n  async enable(options = {}, legacy = false) {\n\n    /*START-ESM*/\n\n    // This block is stripped out of the IIFE and CJS versions where it isn't needed.\n\n    // If this code is executed by Node.js in \"module\" mode (when \"type\": \"module\" is used in the\n    // package.json file), then we must import the `jzz` module. I import it in this convoluted way\n    // to prevent Webpack from automatically bundling it in browser bundles where it isn't needed.\n    if (Utilities.isNode) {\n\n      // Some environments may have both Node.js and browser runtimes (Electron, NW.js, React\n      // Native, etc.) so we also check for the presence of the window.navigator property.\n      try {\n        window.navigator;\n      } catch (err) {\n        global.navigator = await Object.getPrototypeOf(async function() {}).constructor(`\n        let jzz = await import(\"jzz\");\n        return jzz.default;\n        `)();\n      }\n\n      // The `performance` module appeared in Node.js v8.5.0 but has started to be automatically\n      // imported only in v16+.\n      try {\n        performance;\n      } catch (err) {\n        global.performance = await Object.getPrototypeOf(async function() {}).constructor(`\n        let perf_hooks = await import(\"perf_hooks\");\n        return perf_hooks.performance;\n        `)();\n      }\n\n    }\n\n    /*END-ESM*/\n\n    this.validation = (options.validation !== false);\n\n    if (this.validation) {\n      // Backwards-compatibility. Previous syntax was: enable(callback, sysex)\n      if (typeof options === \"function\") options = {callback: options, sysex: legacy};\n      if (legacy) options.sysex = true;\n    }\n\n    // If already enabled, trigger callback and resolve promise but do not dispatch events.\n    if (this.enabled) {\n      if (typeof options.callback === \"function\") options.callback();\n      return Promise.resolve();\n    }\n\n    // The Jazz-Plugin takes a while to be available (even after the Window's 'load' event has been\n    // fired). Therefore, we wait a little while to give it time to finish loading (initiqted in\n    // constructor).\n    // if (!this.supported) {\n    //\n    //   await new Promise((resolve, reject) => {\n    //\n    //     const start = this.time;\n    //\n    //     const intervalID = setInterval(() => {\n    //\n    //       if (this.supported) {\n    //         clearInterval(intervalID);\n    //         resolve();\n    //       } else {\n    //         if (this.time > start + 1500) {\n    //           clearInterval(intervalID);\n    //           let error = new Error(\"The Web MIDI API is not available in your environment.\");\n    //           if (typeof options.callback === \"function\") options.callback(error);\n    //           reject(error);\n    //         }\n    //       }\n    //\n    //     }, 25);\n    //\n    //   });\n    //\n    // }\n\n    /**\n     * Event emitted when an error occurs trying to enable `WebMidi`\n     *\n     * @event WebMidi#error\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in\n     * milliseconds since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `error`\n     * @property {*} error Actual error that occurred\n     */\n    const errorEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"error\",\n      error: undefined\n    };\n\n    /**\n     * Event emitted once the MIDI interface has been successfully created (which implies user has\n     * granted access to MIDI).\n     *\n     * @event WebMidi#midiaccessgranted\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `midiaccessgranted`\n     */\n    const midiAccessGrantedEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"midiaccessgranted\"\n    };\n\n    /**\n     * Event emitted once `WebMidi` has been fully enabled\n     *\n     * @event WebMidi#enabled\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {WebMidi} target The object that triggered the event\n     * @property {string} type `\"enabled\"`\n     */\n    const enabledEvent = {\n      timestamp: this.time,\n      target: this,\n      type: \"enabled\"\n    };\n\n    // Request MIDI access (this is where the prompt will appear)\n    try {\n      if (typeof options.requestMIDIAccessFunction === \"function\") {\n        this.interface = await options.requestMIDIAccessFunction(\n          {sysex: options.sysex, software: options.software}\n        );\n      } else {\n        this.interface = await navigator.requestMIDIAccess(\n          {sysex: options.sysex, software: options.software}\n        );\n      }\n    } catch(err) {\n      errorEvent.error = err;\n      this.emit(\"error\", errorEvent);\n      if (typeof options.callback === \"function\") options.callback(err);\n      return Promise.reject(err);\n    }\n\n    // Now that the Web MIDI API interface has been created, we trigger the 'midiaccessgranted'\n    // event. This allows the developer an occasion to assign listeners on 'connected' events.\n    this.emit(\"midiaccessgranted\", midiAccessGrantedEvent);\n\n    // We setup the state change listener before creating the ports so that it properly catches the\n    // the ports' `connected` events\n    this.interface.onstatechange = this._onInterfaceStateChange.bind(this);\n\n    // Update inputs and outputs (this is where `Input` and `Output` objects are created).\n    try {\n      await this._updateInputsAndOutputs();\n    } catch (err) {\n      errorEvent.error = err;\n      this.emit(\"error\", errorEvent);\n      if (typeof options.callback === \"function\") options.callback(err);\n      return Promise.reject(err);\n    }\n\n    // If we make it here, the ports have been successfully created, so we trigger the 'enabled'\n    // event.\n    this.emit(\"enabled\", enabledEvent);\n\n    // Execute the callback (if any) and resolve the promise with 'this' (for chainability)\n    if (typeof options.callback === \"function\") options.callback();\n    return Promise.resolve(this);\n\n  }\n\n  /**\n   * Completely disables **WebMidi.js** by unlinking the MIDI subsystem's interface and closing all\n   * [`Input`](Input) and [`Output`](Output) objects that may have been opened. This also means that\n   * listeners added to [`Input`](Input) objects, [`Output`](Output) objects or to `WebMidi` itself\n   * are also destroyed.\n   *\n   * @async\n   * @returns {Promise<Array>}\n   *\n   * @throws {Error} The Web MIDI API is not supported by your environment.\n   *\n   * @since 2.0.0\n   */\n  async disable() {\n\n    // This needs to be done right away to prevent racing conditions in listeners while the inputs\n    // are being destroyed.\n    if (this.interface) this.interface.onstatechange = undefined;\n\n    return this._destroyInputsAndOutputs().then(() => {\n\n      if (navigator && typeof navigator.close === \"function\") navigator.close(); // jzz\n      this.interface = null; // also resets enabled, sysexEnabled\n\n      /**\n       * Event emitted once `WebMidi` has been successfully disabled.\n       *\n       * @event WebMidi#disabled\n       * @type {object}\n       * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in\n       * milliseconds since the navigation start of the document).\n       * @property {WebMidi} target The object that triggered the event\n       * @property {string} type `\"disabled\"`\n       */\n      let event = {\n        timestamp: this.time,\n        target: this,\n        type: \"disabled\"\n      };\n\n      // Finally, trigger the 'disabled' event and then remove all listeners.\n      this.emit(\"disabled\", event);\n      this.removeListener();\n\n    });\n\n  };\n\n  /**\n   * Returns the [`Input`](Input) object that matches the specified ID string or `false` if no\n   * matching input is found. As per the Web MIDI API specification, IDs are strings (not integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the input. IDs can be viewed by looking at the\n   * [`WebMidi.inputs`](WebMidi#inputs) array. Even though they sometimes look like integers, IDs\n   * are strings.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected input\n   *\n   * @returns {Input} An [`Input`](Input) object matching the specified ID string or `undefined`\n   * if no matching input can be found.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputById(id, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return;\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedInputs.length; i++) {\n        if (this._disconnectedInputs[i].id === id.toString()) return this._disconnectedInputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.inputs.length; i++) {\n        if (this.inputs[i].id === id.toString()) return this.inputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the first [`Input`](Input) object whose name **contains** the specified string. Note\n   * that the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [inputs](WebMidi#inputs) array).\n   *\n   * @returns {Input} The [`Input`](Input) that was found or `undefined` if no input contained the\n   * specified name.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected input\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getInputByName(name, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return;\n      name = name.toString();\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedInputs.length; i++) {\n        if (~this._disconnectedInputs[i].name.indexOf(name)) return this._disconnectedInputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.inputs.length; i++) {\n        if (~this.inputs[i].name.indexOf(name)) return this.inputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the first [`Output`](Output) object whose name **contains** the specified string. Note\n   * that the port names change from one environment to another. For example, Chrome does not report\n   * input names in the same way as the Jazz-Plugin does.\n   *\n   * @param name {string} The non-empty string to look for within the name of MIDI inputs (such as\n   * those visible in the [`outputs`](#outputs) array).\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected output\n   *\n   * @returns {Output} The [`Output`](Output) that was found or `undefined` if no output matched\n   * the specified name.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputByName(name, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!name) return;\n      name = name.toString();\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedOutputs.length; i++) {\n        if (~this._disconnectedOutputs[i].name.indexOf(name)) return this._disconnectedOutputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.outputs.length; i++) {\n        if (~this.outputs[i].name.indexOf(name)) return this.outputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * Returns the [`Output`](Output) object that matches the specified ID string or `false` if no\n   * matching output is found. As per the Web MIDI API specification, IDs are strings (not\n   * integers).\n   *\n   * Please note that IDs change from one host to another. For example, Chrome does not use the same\n   * kind of IDs as Jazz-Plugin.\n   *\n   * @param id {string} The ID string of the port. IDs can be viewed by looking at the\n   * [`WebMidi.outputs`](WebMidi#outputs) array.\n   * @param [options] {object}\n   * @param [options.disconnected] {boolean} Whether to retrieve a disconnected output\n   *\n   * @returns {Output} An [`Output`](Output) object matching the specified ID string. If no\n   * matching output can be found, the method returns `undefined`.\n   *\n   * @throws {Error} WebMidi is not enabled.\n   *\n   * @since 2.0.0\n   */\n  getOutputById(id, options = {disconnected: false}) {\n\n    if (this.validation) {\n      if (!this.enabled) throw new Error(\"WebMidi is not enabled.\");\n      if (!id) return;\n    }\n\n    if (options.disconnected) {\n      for (let i = 0; i < this._disconnectedOutputs.length; i++) {\n        if (this._disconnectedOutputs[i].id === id.toString()) return this._disconnectedOutputs[i];\n      }\n    } else {\n      for (let i = 0; i < this.outputs.length; i++) {\n        if (this.outputs[i].id === id.toString()) return this.outputs[i];\n      }\n    }\n\n  };\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.toNoteNumber() instead.\n   */\n  noteNameToNumber(name) {\n    if (this.validation) {\n      console.warn(\n        \"The noteNameToNumber() method is deprecated. Use \" +\n        \"Utilities.toNoteNumber() instead.\"\n      );\n    }\n    return Utilities.toNoteNumber(name, this.octaveOffset);\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0, use Utilities.getNoteDetails() instead.\n   */\n  getOctave(number) {\n\n    if (this.validation) {\n      console.warn(\"The getOctave()is deprecated. Use Utilities.getNoteDetails() instead\");\n      number = parseInt(number);\n    }\n\n    if (!isNaN(number) && number >= 0 && number <= 127) {\n      return Utilities.getNoteDetails(Utilities.offsetNumber(number, this.octaveOffset)).octave;\n    } else {\n      return false;\n    }\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0, use Utilities.sanitizeChannels() instead.\n   */\n  sanitizeChannels(channel) {\n\n    if (this.validation) {\n      console.warn(\"The sanitizeChannels() method has been moved to the utilities class.\");\n    }\n\n    return Utilities.sanitizeChannels(channel);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.sanitizeChannels() instead.\n   */\n  toMIDIChannels(channel) {\n\n    if (this.validation) {\n      console.warn(\n        \"The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead.\"\n      );\n    }\n\n    return Utilities.sanitizeChannels(channel);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.guessNoteNumber() instead.\n   */\n  guessNoteNumber(input) {\n\n    if (this.validation) {\n      console.warn(\n        \"The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead.\"\n      );\n    }\n\n    return Utilities.guessNoteNumber(input, this.octaveOffset);\n\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.buildNoteArray() instead.\n   */\n  getValidNoteArray(notes, options = {}) {\n    if (this.validation) {\n      console.warn(\n        \"The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()\"\n      );\n    }\n    return Utilities.buildNoteArray(notes, options);\n  }\n\n  /**\n   * @private\n   * @deprecated since version 3.0.0, use Utilities.toTimestamp() instead.\n   */\n  convertToTimestamp(time) {\n\n    if (this.validation) {\n      console.warn(\n        \"The convertToTimestamp() method has been moved to Utilities.toTimestamp().\"\n      );\n    }\n\n    return Utilities.toTimestamp(time);\n\n  }\n\n  /**\n   * @return {Promise<void>}\n   * @private\n   */\n  async _destroyInputsAndOutputs() {\n\n    let promises = [];\n\n    this.inputs.forEach(input => promises.push(input.destroy()));\n    this.outputs.forEach(output => promises.push(output.destroy()));\n\n    return Promise.all(promises).then(() => {\n      this._inputs = [];\n      this._outputs = [];\n    });\n\n  }\n\n  /**\n   * @private\n   */\n  _onInterfaceStateChange(e) {\n\n    this._updateInputsAndOutputs();\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) port is connected or\n     * disconnected. This event is typically fired whenever a MIDI device is plugged in or\n     * unplugged. Please note that it may fire several times if a device possesses multiple inputs\n     * and/or outputs (which is often the case).\n     *\n     * @event WebMidi#portschanged\n     * @type {object}\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n     * (in milliseconds since the navigation start of the document).\n     * @property {string} type `portschanged`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     *\n     * @since 3.0.2\n     */\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) becomes available. This event is\n     * typically fired whenever a MIDI device is plugged in. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#connected\n     * @type {object}\n     * @property {number} timestamp The moment (DOMHighResTimeStamp) when the event occurred\n     * (in milliseconds since the navigation start of the document).\n     * @property {string} type `connected`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     */\n\n    /**\n     * Event emitted when an [`Input`](Input) or [`Output`](Output) becomes unavailable. This event\n     * is typically fired whenever a MIDI device is unplugged. Please note that it may fire several\n     * times if a device possesses multiple inputs and/or outputs (which is often the case).\n     *\n     * @event WebMidi#disconnected\n     * @type {object}\n     * @property {DOMHighResTimeStamp} timestamp The moment when the event occurred (in milliseconds\n     * since the navigation start of the document).\n     * @property {string} type `disconnected`\n     * @property {WebMidi} target The object to which the listener was originally added (`WebMidi`)\n     * @property {Input|Output} port The [`Input`](Input) or [`Output`](Output) object that\n     * triggered the event.\n     */\n    let event = {\n      timestamp: e.timeStamp,\n      type: e.port.state,\n      target: this\n    };\n\n    // We check if \"connection\" is \"open\" because connected events are also triggered with\n    // \"connection=closed\"\n    if (e.port.state === \"connected\" && e.port.connection === \"open\") {\n\n      if (e.port.type === \"output\") {\n        event.port = this.getOutputById(e.port.id);\n      } else if (e.port.type === \"input\") {\n        event.port = this.getInputById(e.port.id);\n      }\n\n      // Emit \"connected\" event\n      this.emit(e.port.state, event);\n\n      // Make a shallow copy of the event so we can use it for the \"portschanged\" event\n      const portsChangedEvent = Object.assign({}, event);\n      portsChangedEvent.type = \"portschanged\";\n      this.emit(portsChangedEvent.type, portsChangedEvent);\n\n    // We check if \"connection\" is \"pending\" because we do not always get the \"closed\" event\n    } else if (e.port.state === \"disconnected\" && e.port.connection === \"pending\") {\n\n      if (e.port.type === \"input\") {\n        event.port = this.getInputById(e.port.id, {disconnected: true});\n      } else if (e.port.type === \"output\") {\n        event.port = this.getOutputById(e.port.id, {disconnected: true});\n      }\n\n      // Emit \"disconnected\" event\n      this.emit(e.port.state, event);\n\n      // Make a shallow copy of the event so we can use it for the \"portschanged\" event\n      const portsChangedEvent = Object.assign({}, event);\n      portsChangedEvent.type = \"portschanged\";\n      this.emit(portsChangedEvent.type, portsChangedEvent);\n\n    }\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputsAndOutputs() {\n\n    return Promise.all([\n      this._updateInputs(),\n      this._updateOutputs()\n    ]);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateInputs() {\n\n    // We must check for the existence of this.interface because it might have been closed via\n    // WebMidi.disable().\n    if (!this.interface) return;\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = this._inputs.length - 1; i >= 0; i--) {\n      const current = this._inputs[i];\n      const inputs = Array.from(this.interface.inputs.values());\n      if (! inputs.find(input => input === current._midiInput)) {\n        // Instead of destroying removed inputs, we stash them in case they come back (which is the\n        // case when the computer goes to sleep and is later brought back online).\n        this._disconnectedInputs.push(current);\n        this._inputs.splice(i, 1);\n      }\n    }\n\n    // Array to hold pending promises from trying to open all input ports\n    let promises = [];\n\n    // Add new inputs (if not already present)\n    this.interface.inputs.forEach(nInput => {\n\n      // Check if the input is currently absent from the 'inputs' array.\n      if (! this._inputs.find(input => input._midiInput === nInput) ) {\n\n        // If the input has previously been stashed away, reuse it. If not, create a new one.\n        let input = this._disconnectedInputs.find(input => input._midiInput === nInput);\n        if (!input) input = new Input(nInput);\n        this._inputs.push(input);\n        promises.push(input.open());\n\n      }\n\n    });\n\n    // Return a promise that resolves when all promises have resolved\n    return Promise.all(promises);\n\n  };\n\n  /**\n   * @private\n   */\n  async _updateOutputs() {\n\n    // We must check for the existence of this.interface because it might have been closed via\n    // WebMidi.disable().\n    if (!this.interface) return;\n\n    // Check for items to remove from the existing array (because they are no longer being reported\n    // by the MIDI back-end).\n    for (let i = this._outputs.length - 1; i >= 0; i--) {\n      const current = this._outputs[i];\n      const outputs = Array.from(this.interface.outputs.values());\n      if (! outputs.find(output => output === current._midiOutput)) {\n        // Instead of destroying removed inputs, we stash them in case they come back (which is the\n        // case when the computer goes to sleep and is later brought back online).\n        this._disconnectedOutputs.push(current);\n        this._outputs.splice(i, 1);\n      }\n    }\n\n    // Array to hold pending promises from trying to open all output ports\n    let promises = [];\n\n    // Add new outputs (if not already present)\n    this.interface.outputs.forEach(nOutput => {\n\n      // Check if the output is currently absent from the 'outputs' array.\n      if (! this._outputs.find(output => output._midiOutput === nOutput) ) {\n\n        // If the output has previously been stashed away, reuse it. If not, create a new one.\n        let output = this._disconnectedOutputs.find(output => output._midiOutput === nOutput);\n        if (!output) output = new Output(nOutput);\n        this._outputs.push(output);\n        promises.push(output.open());\n\n      }\n\n    });\n\n    // Return a promise that resolves when all sub-promises have resolved\n    return Promise.all(promises);\n\n  };\n\n  // injectPluginMarkup(parent) {\n  //\n  //   // Silently ignore on Node.js\n  //   if (Utilities.isNode) return;\n  //\n  //   // Default to <body> if no parent is specified\n  //   if (!(parent instanceof Element) && !(parent instanceof HTMLDocument)) {\n  //     parent = document.body;\n  //   }\n  //\n  //   // IE10 needs this:\n  //   // <meta http-equiv=\"X-UA-Compatible\" content=\"requiresActiveX=true\"/>\n  //\n  //   // Create markup and add to parent\n  //   const obj = document.createElement(\"object\");\n  //   obj.classid = \"CLSID:1ACE1618-1C7D-4561-AEE1-34842AA85E90\"; // IE\n  //   if (!obj.isJazz) obj.type = \"audio/x-jazz\";                 // Standards-compliant\n  //   obj.style.visibility = \"hidden\";\n  //   obj.style.width = obj.style.height = \"0px\";\n  //   parent.appendChild(obj);\n  //\n  // }\n\n  /**\n   * Indicates whether access to the host's MIDI subsystem is active or not.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get enabled() {\n    return this.interface !== null;\n  }\n\n  /**\n   * An array of all currently available MIDI inputs.\n   *\n   * @readonly\n   * @type {Input[]}\n   */\n  get inputs() {\n    return this._inputs;\n  }\n\n  /**\n   * @private\n   * @deprecated\n   */\n  get isNode() {\n\n    if (this.validation) {\n      console.warn(\"WebMidi.isNode has been deprecated. Use Utilities.isNode instead.\");\n    }\n\n    return Utilities.isNode;\n\n  }\n\n  /**\n   * @private\n   * @deprecated\n   */\n  get isBrowser() {\n\n    if (this.validation) {\n      console.warn(\"WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead.\");\n    }\n\n    return Utilities.isBrowser;\n\n  }\n\n  /**\n   * An integer to offset the octave of notes received from external devices or sent to external\n   * devices.\n   *\n   * When a MIDI message comes in on an input channel the reported note name will be offset. For\n   * example, if the `octaveOffset` is set to `-1` and a [`\"noteon\"`](InputChannel#event:noteon)\n   * message with MIDI number 60 comes in, the note will be reported as C3 (instead of C4).\n   *\n   * By the same token, when [`OutputChannel.playNote()`](OutputChannel#playNote) is called, the\n   * MIDI note number being sent will be offset. If `octaveOffset` is set to `-1`, the MIDI note\n   * number sent will be 72 (instead of 60).\n   *\n   * @type {number}\n   *\n   * @since 2.1\n   */\n  get octaveOffset() {\n    return this._octaveOffset;\n  }\n  set octaveOffset(value) {\n\n    if (this.validation) {\n      value = parseInt(value);\n      if (isNaN(value)) throw new TypeError(\"The 'octaveOffset' property must be an integer.\");\n    }\n\n    this._octaveOffset = value;\n\n  }\n\n  /**\n   * An array of all currently available MIDI outputs as [`Output`](Output) objects.\n   *\n   * @readonly\n   * @type {Output[]}\n   */\n  get outputs() {\n    return this._outputs;\n  }\n\n  /**\n   * Indicates whether the environment provides support for the Web MIDI API or not.\n   *\n   * **Note**: in environments that do not offer built-in MIDI support, this will report `true` if\n   * the\n   * [`navigator.requestMIDIAccess`](https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess)\n   * function is available. For example, if you have installed WebMIDIAPIShim.js but no plugin, this\n   * property will be `true` even though actual support might not be there.\n   *\n   * @readonly\n   * @type {boolean}\n   */\n  get supported() {\n    return (typeof navigator !== \"undefined\" && navigator.requestMIDIAccess);\n  }\n\n  /**\n   * Indicates whether MIDI system exclusive messages have been activated when WebMidi.js was\n   * enabled via the [`enable()`](#enable) method.\n   *\n   * @readonly\n   * @type boolean\n   */\n  get sysexEnabled() {\n    return !!(this.interface && this.interface.sysexEnabled);\n  }\n\n  /**\n   * The elapsed time, in milliseconds, since the time\n   * [origin](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp#The_time_origin).\n   * Said simply, it is the number of milliseconds that passed since the page was loaded. Being a\n   * floating-point number, it has sub-millisecond accuracy. According to the\n   * [documentation](https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp), the\n   * time should be accurate to 5 µs (microseconds). However, due to various constraints, the\n   * browser might only be accurate to one millisecond.\n   *\n   * Note: `WebMidi.time` is simply an alias to `performance.now()`.\n   *\n   * @type {DOMHighResTimeStamp}\n   * @readonly\n   */\n  get time() {\n    return performance.now();\n  }\n\n  /**\n   * The version of the library as a [semver](https://semver.org/) string.\n   *\n   * @readonly\n   * @type string\n   */\n  get version() {\n    return \"3.1.6\";\n  }\n\n  /**\n   * The flavour of the library. Can be one of:\n   *\n   * * `esm`: ECMAScript Module\n   * * `cjs`: CommonJS Module\n   * * `iife`: Immediately-Invoked Function Expression\n   *\n   * @readonly\n   * @type string\n   * @since 3.0.25\n   */\n  get flavour() {\n    return \"esm\"; // will be replaced during bundling by the correct identifier\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CHANNEL_EVENTS instead.\n   */\n  get CHANNEL_EVENTS() {\n    if (this.validation) {\n      console.warn(\n        \"The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS.\"\n      );\n    }\n    return Enumerations.CHANNEL_EVENTS;\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.SYSTEM_MESSAGES instead.\n   */\n  get MIDI_SYSTEM_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_SYSTEM_MESSAGES enum has been moved to \" +\n        \"Enumerations.SYSTEM_MESSAGES.\"\n      );\n    }\n\n    return Enumerations.SYSTEM_MESSAGES;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CHANNEL_MODE_MESSAGES instead\n   */\n  get MIDI_CHANNEL_MODE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to \" +\n        \"Enumerations.CHANNEL_MODE_MESSAGES.\"\n      );\n    }\n\n    return Enumerations.CHANNEL_MODE_MESSAGES;\n\n  }\n\n  /**\n   * @private\n   * @deprecated since 3.0.0. Use Enumerations.CONTROL_CHANGE_MESSAGES instead.\n   */\n  get MIDI_CONTROL_CHANGE_MESSAGES() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the \" +\n        \"Enumerations.CONTROL_CHANGE_MESSAGES array.\"\n      );\n    }\n\n    return Enumerations.MIDI_CONTROL_CHANGE_MESSAGES;\n\n  }\n\n  /**\n   * @deprecated since 3.0.0. Use Enumerations.REGISTERED_PARAMETERS instead.\n   * @private\n   */\n  get MIDI_REGISTERED_PARAMETER() {\n\n    if (this.validation) {\n      console.warn(\n        \"The MIDI_REGISTERED_PARAMETER enum has been moved to \" +\n        \"Enumerations.REGISTERED_PARAMETERS.\"\n      );\n    }\n\n    return Enumerations.REGISTERED_PARAMETERS;\n\n  }\n\n  /**\n   * @deprecated since 3.0.0.\n   * @private\n   */\n  get NOTES() {\n\n    if (this.validation) {\n      console.warn(\"The NOTES enum has been deprecated.\");\n    }\n\n    return [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n  }\n\n}\n\n// Export singleton instance of WebMidi class. The 'constructor' is nulled so that it cannot be used\n// to instantiate a new WebMidi object or extend it. However, it is not freezed so it remains\n// extensible (properties can be added at will).\nconst wm = new WebMidi();\nwm.constructor = null;\n\nexport { Enumerations, Forwarder, Input, InputChannel, Message, Note, Output, OutputChannel, Utilities, wm as WebMidi };\n","import { shallowRef, watchEffect, readonly, ref, watch, customRef, getCurrentScope, onScopeDispose, effectScope, provide, inject, isVue3, version, isRef, unref, computed, reactive, toRefs as toRefs$1, toRef as toRef$1, isVue2, set as set$1, getCurrentInstance, onBeforeMount, nextTick, onBeforeUnmount, onMounted, onUnmounted, isReactive } from 'vue-demi';\n\nvar __defProp$b = Object.defineProperty;\nvar __defProps$8 = Object.defineProperties;\nvar __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$d = Object.getOwnPropertySymbols;\nvar __hasOwnProp$d = Object.prototype.hasOwnProperty;\nvar __propIsEnum$d = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$b = (obj, key, value) => key in obj ? __defProp$b(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$b = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$d.call(b, prop))\n      __defNormalProp$b(a, prop, b[prop]);\n  if (__getOwnPropSymbols$d)\n    for (var prop of __getOwnPropSymbols$d(b)) {\n      if (__propIsEnum$d.call(b, prop))\n        __defNormalProp$b(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));\nfunction computedEager(fn, options) {\n  var _a;\n  const result = shallowRef();\n  watchEffect(() => {\n    result.value = fn();\n  }, __spreadProps$8(__spreadValues$b({}, options), {\n    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : \"sync\"\n  }));\n  return readonly(result);\n}\n\nfunction computedWithControl(source, fn) {\n  let v = void 0;\n  let track;\n  let trigger;\n  const dirty = ref(true);\n  const update = () => {\n    dirty.value = true;\n    trigger();\n  };\n  watch(source, update, { flush: \"sync\" });\n  const get = typeof fn === \"function\" ? fn : fn.get;\n  const set = typeof fn === \"function\" ? void 0 : fn.set;\n  const result = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        if (dirty.value) {\n          v = get();\n          dirty.value = false;\n        }\n        track();\n        return v;\n      },\n      set(v2) {\n        set == null ? void 0 : set(v2);\n      }\n    };\n  });\n  if (Object.isExtensible(result))\n    result.trigger = update;\n  return result;\n}\n\nfunction tryOnScopeDispose(fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n\nfunction createEventHook() {\n  const fns = /* @__PURE__ */ new Set();\n  const off = (fn) => {\n    fns.delete(fn);\n  };\n  const on = (fn) => {\n    fns.add(fn);\n    const offFn = () => off(fn);\n    tryOnScopeDispose(offFn);\n    return {\n      off: offFn\n    };\n  };\n  const trigger = (param) => {\n    return Promise.all(Array.from(fns).map((fn) => fn(param)));\n  };\n  return {\n    on,\n    off,\n    trigger\n  };\n}\n\nfunction createGlobalState(stateFactory) {\n  let initialized = false;\n  let state;\n  const scope = effectScope(true);\n  return (...args) => {\n    if (!initialized) {\n      state = scope.run(() => stateFactory(...args));\n      initialized = true;\n    }\n    return state;\n  };\n}\n\nfunction createInjectionState(composable) {\n  const key = Symbol(\"InjectionState\");\n  const useProvidingState = (...args) => {\n    const state = composable(...args);\n    provide(key, state);\n    return state;\n  };\n  const useInjectedState = () => inject(key);\n  return [useProvidingState, useInjectedState];\n}\n\nfunction createSharedComposable(composable) {\n  let subscribers = 0;\n  let state;\n  let scope;\n  const dispose = () => {\n    subscribers -= 1;\n    if (scope && subscribers <= 0) {\n      scope.stop();\n      state = void 0;\n      scope = void 0;\n    }\n  };\n  return (...args) => {\n    subscribers += 1;\n    if (!state) {\n      scope = effectScope(true);\n      state = scope.run(() => composable(...args));\n    }\n    tryOnScopeDispose(dispose);\n    return state;\n  };\n}\n\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\n  if (!isVue3 && !version.startsWith(\"2.7.\")) {\n    if (process.env.NODE_ENV !== \"production\")\n      throw new Error(\"[VueUse] extendRef only works in Vue 2.7 or above.\");\n    return;\n  }\n  for (const [key, value] of Object.entries(extend)) {\n    if (key === \"value\")\n      continue;\n    if (isRef(value) && unwrap) {\n      Object.defineProperty(ref, key, {\n        get() {\n          return value.value;\n        },\n        set(v) {\n          value.value = v;\n        },\n        enumerable\n      });\n    } else {\n      Object.defineProperty(ref, key, { value, enumerable });\n    }\n  }\n  return ref;\n}\n\nfunction get(obj, key) {\n  if (key == null)\n    return unref(obj);\n  return unref(obj)[key];\n}\n\nfunction isDefined(v) {\n  return unref(v) != null;\n}\n\nvar __defProp$a = Object.defineProperty;\nvar __getOwnPropSymbols$c = Object.getOwnPropertySymbols;\nvar __hasOwnProp$c = Object.prototype.hasOwnProperty;\nvar __propIsEnum$c = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$a = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$c.call(b, prop))\n      __defNormalProp$a(a, prop, b[prop]);\n  if (__getOwnPropSymbols$c)\n    for (var prop of __getOwnPropSymbols$c(b)) {\n      if (__propIsEnum$c.call(b, prop))\n        __defNormalProp$a(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction makeDestructurable(obj, arr) {\n  if (typeof Symbol !== \"undefined\") {\n    const clone = __spreadValues$a({}, obj);\n    Object.defineProperty(clone, Symbol.iterator, {\n      enumerable: false,\n      value() {\n        let index = 0;\n        return {\n          next: () => ({\n            value: arr[index++],\n            done: index > arr.length\n          })\n        };\n      }\n    });\n    return clone;\n  } else {\n    return Object.assign([...arr], obj);\n  }\n}\n\nfunction toValue(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nconst resolveUnref = toValue;\n\nfunction reactify(fn, options) {\n  const unrefFn = (options == null ? void 0 : options.computedGetter) === false ? unref : toValue;\n  return function(...args) {\n    return computed(() => fn.apply(this, args.map((i) => unrefFn(i))));\n  };\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\n  let keys = [];\n  let options;\n  if (Array.isArray(optionsOrKeys)) {\n    keys = optionsOrKeys;\n  } else {\n    options = optionsOrKeys;\n    const { includeOwnProperties = true } = optionsOrKeys;\n    keys.push(...Object.keys(obj));\n    if (includeOwnProperties)\n      keys.push(...Object.getOwnPropertyNames(obj));\n  }\n  return Object.fromEntries(\n    keys.map((key) => {\n      const value = obj[key];\n      return [\n        key,\n        typeof value === \"function\" ? reactify(value.bind(obj), options) : value\n      ];\n    })\n  );\n}\n\nfunction toReactive(objectRef) {\n  if (!isRef(objectRef))\n    return reactive(objectRef);\n  const proxy = new Proxy({}, {\n    get(_, p, receiver) {\n      return unref(Reflect.get(objectRef.value, p, receiver));\n    },\n    set(_, p, value) {\n      if (isRef(objectRef.value[p]) && !isRef(value))\n        objectRef.value[p].value = value;\n      else\n        objectRef.value[p] = value;\n      return true;\n    },\n    deleteProperty(_, p) {\n      return Reflect.deleteProperty(objectRef.value, p);\n    },\n    has(_, p) {\n      return Reflect.has(objectRef.value, p);\n    },\n    ownKeys() {\n      return Object.keys(objectRef.value);\n    },\n    getOwnPropertyDescriptor() {\n      return {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  });\n  return reactive(proxy);\n}\n\nfunction reactiveComputed(fn) {\n  return toReactive(computed(fn));\n}\n\nfunction reactiveOmit(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(\n    () => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => !predicate(toValue(v), k))) : Object.fromEntries(Object.entries(toRefs$1(obj)).filter((e) => !flatKeys.includes(e[0])))\n  );\n}\n\nconst isClient = typeof window !== \"undefined\";\nconst isDef = (val) => typeof val !== \"undefined\";\nconst notNullish = (val) => val != null;\nconst assert = (condition, ...infos) => {\n  if (!condition)\n    console.warn(...infos);\n};\nconst toString = Object.prototype.toString;\nconst isObject = (val) => toString.call(val) === \"[object Object]\";\nconst now = () => Date.now();\nconst timestamp = () => +Date.now();\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\nconst noop = () => {\n};\nconst rand = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nconst hasOwn = (val, key) => Object.prototype.hasOwnProperty.call(val, key);\nconst isIOS = /* @__PURE__ */ getIsIOS();\nfunction getIsIOS() {\n  var _a;\n  return isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /* @__PURE__ */ /iP(ad|hone|od)/.test(window.navigator.userAgent);\n}\n\nfunction createFilterWrapper(filter, fn) {\n  function wrapper(...args) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(filter(() => fn.apply(this, args), { fn, thisArg: this, args })).then(resolve).catch(reject);\n    });\n  }\n  return wrapper;\n}\nconst bypassFilter = (invoke) => {\n  return invoke();\n};\nfunction debounceFilter(ms, options = {}) {\n  let timer;\n  let maxTimer;\n  let lastRejector = noop;\n  const _clearTimeout = (timer2) => {\n    clearTimeout(timer2);\n    lastRejector();\n    lastRejector = noop;\n  };\n  const filter = (invoke) => {\n    const duration = toValue(ms);\n    const maxDuration = toValue(options.maxWait);\n    if (timer)\n      _clearTimeout(timer);\n    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer);\n        maxTimer = null;\n      }\n      return Promise.resolve(invoke());\n    }\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve;\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer)\n            _clearTimeout(timer);\n          maxTimer = null;\n          resolve(invoke());\n        }, maxDuration);\n      }\n      timer = setTimeout(() => {\n        if (maxTimer)\n          _clearTimeout(maxTimer);\n        maxTimer = null;\n        resolve(invoke());\n      }, duration);\n    });\n  };\n  return filter;\n}\nfunction throttleFilter(ms, trailing = true, leading = true, rejectOnCancel = false) {\n  let lastExec = 0;\n  let timer;\n  let isLeading = true;\n  let lastRejector = noop;\n  let lastValue;\n  const clear = () => {\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n      lastRejector();\n      lastRejector = noop;\n    }\n  };\n  const filter = (_invoke) => {\n    const duration = toValue(ms);\n    const elapsed = Date.now() - lastExec;\n    const invoke = () => {\n      return lastValue = _invoke();\n    };\n    clear();\n    if (duration <= 0) {\n      lastExec = Date.now();\n      return invoke();\n    }\n    if (elapsed > duration && (leading || !isLeading)) {\n      lastExec = Date.now();\n      invoke();\n    } else if (trailing) {\n      lastValue = new Promise((resolve, reject) => {\n        lastRejector = rejectOnCancel ? reject : resolve;\n        timer = setTimeout(() => {\n          lastExec = Date.now();\n          isLeading = true;\n          resolve(invoke());\n          clear();\n        }, Math.max(0, duration - elapsed));\n      });\n    }\n    if (!leading && !timer)\n      timer = setTimeout(() => isLeading = true, duration);\n    isLeading = false;\n    return lastValue;\n  };\n  return filter;\n}\nfunction pausableFilter(extendFilter = bypassFilter) {\n  const isActive = ref(true);\n  function pause() {\n    isActive.value = false;\n  }\n  function resume() {\n    isActive.value = true;\n  }\n  const eventFilter = (...args) => {\n    if (isActive.value)\n      extendFilter(...args);\n  };\n  return { isActive: readonly(isActive), pause, resume, eventFilter };\n}\n\nconst directiveHooks = {\n  mounted: isVue3 ? \"mounted\" : \"inserted\",\n  updated: isVue3 ? \"updated\" : \"componentUpdated\",\n  unmounted: isVue3 ? \"unmounted\" : \"unbind\"\n};\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = \"Timeout\") {\n  return new Promise((resolve, reject) => {\n    if (throwOnTimeout)\n      setTimeout(() => reject(reason), ms);\n    else\n      setTimeout(resolve, ms);\n  });\n}\nfunction identity(arg) {\n  return arg;\n}\nfunction createSingletonPromise(fn) {\n  let _promise;\n  function wrapper() {\n    if (!_promise)\n      _promise = fn();\n    return _promise;\n  }\n  wrapper.reset = async () => {\n    const _prev = _promise;\n    _promise = void 0;\n    if (_prev)\n      await _prev;\n  };\n  return wrapper;\n}\nfunction invoke(fn) {\n  return fn();\n}\nfunction containsProp(obj, ...props) {\n  return props.some((k) => k in obj);\n}\nfunction increaseWithUnit(target, delta) {\n  var _a;\n  if (typeof target === \"number\")\n    return target + delta;\n  const value = ((_a = target.match(/^-?[0-9]+\\.?[0-9]*/)) == null ? void 0 : _a[0]) || \"\";\n  const unit = target.slice(value.length);\n  const result = parseFloat(value) + delta;\n  if (Number.isNaN(result))\n    return target;\n  return result + unit;\n}\nfunction objectPick(obj, keys, omitUndefined = false) {\n  return keys.reduce((n, k) => {\n    if (k in obj) {\n      if (!omitUndefined || obj[k] !== void 0)\n        n[k] = obj[k];\n    }\n    return n;\n  }, {});\n}\nfunction objectOmit(obj, keys, omitUndefined = false) {\n  return Object.fromEntries(Object.entries(obj).filter(([key, value]) => {\n    return (!omitUndefined || value !== void 0) && !keys.includes(key);\n  }));\n}\nfunction objectEntries(obj) {\n  return Object.entries(obj);\n}\n\nfunction toRef(...args) {\n  if (args.length !== 1)\n    return toRef$1(...args);\n  const r = args[0];\n  return typeof r === \"function\" ? readonly(customRef(() => ({ get: r, set: noop }))) : ref(r);\n}\nconst resolveRef = toRef;\n\nfunction reactivePick(obj, ...keys) {\n  const flatKeys = keys.flat();\n  const predicate = flatKeys[0];\n  return reactiveComputed(() => typeof predicate === \"function\" ? Object.fromEntries(Object.entries(toRefs$1(obj)).filter(([k, v]) => predicate(toValue(v), k))) : Object.fromEntries(flatKeys.map((k) => [k, toRef(obj, k)])));\n}\n\nfunction refAutoReset(defaultValue, afterMs = 1e4) {\n  return customRef((track, trigger) => {\n    let value = defaultValue;\n    let timer;\n    const resetAfter = () => setTimeout(() => {\n      value = defaultValue;\n      trigger();\n    }, toValue(afterMs));\n    tryOnScopeDispose(() => {\n      clearTimeout(timer);\n    });\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        trigger();\n        clearTimeout(timer);\n        timer = resetAfter();\n      }\n    };\n  });\n}\n\nfunction useDebounceFn(fn, ms = 200, options = {}) {\n  return createFilterWrapper(\n    debounceFilter(ms, options),\n    fn\n  );\n}\n\nfunction refDebounced(value, ms = 200, options = {}) {\n  const debounced = ref(value.value);\n  const updater = useDebounceFn(() => {\n    debounced.value = value.value;\n  }, ms, options);\n  watch(value, () => updater());\n  return debounced;\n}\n\nfunction refDefault(source, defaultValue) {\n  return computed({\n    get() {\n      var _a;\n      return (_a = source.value) != null ? _a : defaultValue;\n    },\n    set(value) {\n      source.value = value;\n    }\n  });\n}\n\nfunction useThrottleFn(fn, ms = 200, trailing = false, leading = true, rejectOnCancel = false) {\n  return createFilterWrapper(\n    throttleFilter(ms, trailing, leading, rejectOnCancel),\n    fn\n  );\n}\n\nfunction refThrottled(value, delay = 200, trailing = true, leading = true) {\n  if (delay <= 0)\n    return value;\n  const throttled = ref(value.value);\n  const updater = useThrottleFn(() => {\n    throttled.value = value.value;\n  }, delay, trailing, leading);\n  watch(value, () => updater());\n  return throttled;\n}\n\nfunction refWithControl(initial, options = {}) {\n  let source = initial;\n  let track;\n  let trigger;\n  const ref = customRef((_track, _trigger) => {\n    track = _track;\n    trigger = _trigger;\n    return {\n      get() {\n        return get();\n      },\n      set(v) {\n        set(v);\n      }\n    };\n  });\n  function get(tracking = true) {\n    if (tracking)\n      track();\n    return source;\n  }\n  function set(value, triggering = true) {\n    var _a, _b;\n    if (value === source)\n      return;\n    const old = source;\n    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)\n      return;\n    source = value;\n    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);\n    if (triggering)\n      trigger();\n  }\n  const untrackedGet = () => get(false);\n  const silentSet = (v) => set(v, false);\n  const peek = () => get(false);\n  const lay = (v) => set(v, false);\n  return extendRef(\n    ref,\n    {\n      get,\n      set,\n      untrackedGet,\n      silentSet,\n      peek,\n      lay\n    },\n    { enumerable: true }\n  );\n}\nconst controlledRef = refWithControl;\n\nfunction set(...args) {\n  if (args.length === 2) {\n    const [ref, value] = args;\n    ref.value = value;\n  }\n  if (args.length === 3) {\n    if (isVue2) {\n      set$1(...args);\n    } else {\n      const [target, key, value] = args;\n      target[key] = value;\n    }\n  }\n}\n\nfunction syncRef(left, right, options = {}) {\n  var _a, _b;\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true,\n    direction = \"both\",\n    transform = {}\n  } = options;\n  let watchLeft;\n  let watchRight;\n  const transformLTR = (_a = transform.ltr) != null ? _a : (v) => v;\n  const transformRTL = (_b = transform.rtl) != null ? _b : (v) => v;\n  if (direction === \"both\" || direction === \"ltr\") {\n    watchLeft = watch(\n      left,\n      (newValue) => right.value = transformLTR(newValue),\n      { flush, deep, immediate }\n    );\n  }\n  if (direction === \"both\" || direction === \"rtl\") {\n    watchRight = watch(\n      right,\n      (newValue) => left.value = transformRTL(newValue),\n      { flush, deep, immediate }\n    );\n  }\n  return () => {\n    watchLeft == null ? void 0 : watchLeft();\n    watchRight == null ? void 0 : watchRight();\n  };\n}\n\nfunction syncRefs(source, targets, options = {}) {\n  const {\n    flush = \"sync\",\n    deep = false,\n    immediate = true\n  } = options;\n  if (!Array.isArray(targets))\n    targets = [targets];\n  return watch(\n    source,\n    (newValue) => targets.forEach((target) => target.value = newValue),\n    { flush, deep, immediate }\n  );\n}\n\nvar __defProp$9 = Object.defineProperty;\nvar __defProps$7 = Object.defineProperties;\nvar __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$b = Object.getOwnPropertySymbols;\nvar __hasOwnProp$b = Object.prototype.hasOwnProperty;\nvar __propIsEnum$b = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$9 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$b.call(b, prop))\n      __defNormalProp$9(a, prop, b[prop]);\n  if (__getOwnPropSymbols$b)\n    for (var prop of __getOwnPropSymbols$b(b)) {\n      if (__propIsEnum$b.call(b, prop))\n        __defNormalProp$9(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));\nfunction toRefs(objectRef) {\n  if (!isRef(objectRef))\n    return toRefs$1(objectRef);\n  const result = Array.isArray(objectRef.value) ? new Array(objectRef.value.length) : {};\n  for (const key in objectRef.value) {\n    result[key] = customRef(() => ({\n      get() {\n        return objectRef.value[key];\n      },\n      set(v) {\n        if (Array.isArray(objectRef.value)) {\n          const copy = [...objectRef.value];\n          copy[key] = v;\n          objectRef.value = copy;\n        } else {\n          const newObject = __spreadProps$7(__spreadValues$9({}, objectRef.value), { [key]: v });\n          Object.setPrototypeOf(newObject, objectRef.value);\n          objectRef.value = newObject;\n        }\n      }\n    }));\n  }\n  return result;\n}\n\nfunction tryOnBeforeMount(fn, sync = true) {\n  if (getCurrentInstance())\n    onBeforeMount(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnBeforeUnmount(fn) {\n  if (getCurrentInstance())\n    onBeforeUnmount(fn);\n}\n\nfunction tryOnMounted(fn, sync = true) {\n  if (getCurrentInstance())\n    onMounted(fn);\n  else if (sync)\n    fn();\n  else\n    nextTick(fn);\n}\n\nfunction tryOnUnmounted(fn) {\n  if (getCurrentInstance())\n    onUnmounted(fn);\n}\n\nfunction createUntil(r, isNot = false) {\n  function toMatch(condition, { flush = \"sync\", deep = false, timeout, throwOnTimeout } = {}) {\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        r,\n        (v) => {\n          if (condition(v) !== isNot) {\n            stop == null ? void 0 : stop();\n            resolve(v);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => stop == null ? void 0 : stop())\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBe(value, options) {\n    if (!isRef(value))\n      return toMatch((v) => v === value, options);\n    const { flush = \"sync\", deep = false, timeout, throwOnTimeout } = options != null ? options : {};\n    let stop = null;\n    const watcher = new Promise((resolve) => {\n      stop = watch(\n        [r, value],\n        ([v1, v2]) => {\n          if (isNot !== (v1 === v2)) {\n            stop == null ? void 0 : stop();\n            resolve(v1);\n          }\n        },\n        {\n          flush,\n          deep,\n          immediate: true\n        }\n      );\n    });\n    const promises = [watcher];\n    if (timeout != null) {\n      promises.push(\n        promiseTimeout(timeout, throwOnTimeout).then(() => toValue(r)).finally(() => {\n          stop == null ? void 0 : stop();\n          return toValue(r);\n        })\n      );\n    }\n    return Promise.race(promises);\n  }\n  function toBeTruthy(options) {\n    return toMatch((v) => Boolean(v), options);\n  }\n  function toBeNull(options) {\n    return toBe(null, options);\n  }\n  function toBeUndefined(options) {\n    return toBe(void 0, options);\n  }\n  function toBeNaN(options) {\n    return toMatch(Number.isNaN, options);\n  }\n  function toContains(value, options) {\n    return toMatch((v) => {\n      const array = Array.from(v);\n      return array.includes(value) || array.includes(toValue(value));\n    }, options);\n  }\n  function changed(options) {\n    return changedTimes(1, options);\n  }\n  function changedTimes(n = 1, options) {\n    let count = -1;\n    return toMatch(() => {\n      count += 1;\n      return count >= n;\n    }, options);\n  }\n  if (Array.isArray(toValue(r))) {\n    const instance = {\n      toMatch,\n      toContains,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  } else {\n    const instance = {\n      toMatch,\n      toBe,\n      toBeTruthy,\n      toBeNull,\n      toBeNaN,\n      toBeUndefined,\n      changed,\n      changedTimes,\n      get not() {\n        return createUntil(r, !isNot);\n      }\n    };\n    return instance;\n  }\n}\nfunction until(r) {\n  return createUntil(r);\n}\n\nfunction defaultComparator(value, othVal) {\n  return value === othVal;\n}\nfunction useArrayDifference(...args) {\n  var _a;\n  const list = args[0];\n  const values = args[1];\n  let compareFn = (_a = args[2]) != null ? _a : defaultComparator;\n  if (typeof compareFn === \"string\") {\n    const key = compareFn;\n    compareFn = (value, othVal) => value[key] === othVal[key];\n  }\n  return computed(() => toValue(list).filter((x) => toValue(values).findIndex((y) => compareFn(x, y)) === -1));\n}\n\nfunction useArrayEvery(list, fn) {\n  return computed(() => toValue(list).every((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction useArrayFilter(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).filter(fn));\n}\n\nfunction useArrayFind(list, fn) {\n  return computed(\n    () => toValue(\n      toValue(list).find((element, index, array) => fn(toValue(element), index, array))\n    )\n  );\n}\n\nfunction useArrayFindIndex(list, fn) {\n  return computed(() => toValue(list).findIndex((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction findLast(arr, cb) {\n  let index = arr.length;\n  while (index-- > 0) {\n    if (cb(arr[index], index, arr))\n      return arr[index];\n  }\n  return void 0;\n}\nfunction useArrayFindLast(list, fn) {\n  return computed(\n    () => toValue(\n      !Array.prototype.findLast ? findLast(toValue(list), (element, index, array) => fn(toValue(element), index, array)) : toValue(list).findLast((element, index, array) => fn(toValue(element), index, array))\n    )\n  );\n}\n\nfunction isArrayIncludesOptions(obj) {\n  return isObject(obj) && containsProp(obj, \"formIndex\", \"comparator\");\n}\nfunction useArrayIncludes(...args) {\n  var _a;\n  const list = args[0];\n  const value = args[1];\n  let comparator = args[2];\n  let formIndex = 0;\n  if (isArrayIncludesOptions(comparator)) {\n    formIndex = (_a = comparator.fromIndex) != null ? _a : 0;\n    comparator = comparator.comparator;\n  }\n  if (typeof comparator === \"string\") {\n    const key = comparator;\n    comparator = (element, value2) => element[key] === toValue(value2);\n  }\n  comparator = comparator != null ? comparator : (element, value2) => element === toValue(value2);\n  return computed(\n    () => toValue(list).slice(formIndex).some(\n      (element, index, array) => comparator(toValue(element), toValue(value), index, toValue(array))\n    )\n  );\n}\n\nfunction useArrayJoin(list, separator) {\n  return computed(() => toValue(list).map((i) => toValue(i)).join(toValue(separator)));\n}\n\nfunction useArrayMap(list, fn) {\n  return computed(() => toValue(list).map((i) => toValue(i)).map(fn));\n}\n\nfunction useArrayReduce(list, reducer, ...args) {\n  const reduceCallback = (sum, value, index) => reducer(toValue(sum), toValue(value), index);\n  return computed(() => {\n    const resolved = toValue(list);\n    return args.length ? resolved.reduce(reduceCallback, toValue(args[0])) : resolved.reduce(reduceCallback);\n  });\n}\n\nfunction useArraySome(list, fn) {\n  return computed(() => toValue(list).some((element, index, array) => fn(toValue(element), index, array)));\n}\n\nfunction uniq(array) {\n  return Array.from(new Set(array));\n}\nfunction uniqueElementsBy(array, fn) {\n  return array.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x, array)))\n      acc.push(v);\n    return acc;\n  }, []);\n}\nfunction useArrayUnique(list, compareFn) {\n  return computed(() => {\n    const resolvedList = toValue(list).map((element) => toValue(element));\n    return compareFn ? uniqueElementsBy(resolvedList, compareFn) : uniq(resolvedList);\n  });\n}\n\nfunction useCounter(initialValue = 0, options = {}) {\n  const count = ref(initialValue);\n  const {\n    max = Infinity,\n    min = -Infinity\n  } = options;\n  const inc = (delta = 1) => count.value = Math.min(max, count.value + delta);\n  const dec = (delta = 1) => count.value = Math.max(min, count.value - delta);\n  const get = () => count.value;\n  const set = (val) => count.value = Math.max(min, Math.min(max, val));\n  const reset = (val = initialValue) => {\n    initialValue = val;\n    return set(val);\n  };\n  return { count, inc, dec, get, set, reset };\n}\n\nconst REGEX_PARSE = /^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/;\nconst REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a{1,2}|A{1,2}|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\nfunction defaultMeridiem(hours, minutes, isLowercase, hasPeriod) {\n  let m = hours < 12 ? \"AM\" : \"PM\";\n  if (hasPeriod)\n    m = m.split(\"\").reduce((acc, curr) => acc += `${curr}.`, \"\");\n  return isLowercase ? m.toLowerCase() : m;\n}\nfunction formatDate(date, formatStr, options = {}) {\n  var _a;\n  const years = date.getFullYear();\n  const month = date.getMonth();\n  const days = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  const day = date.getDay();\n  const meridiem = (_a = options.customMeridiem) != null ? _a : defaultMeridiem;\n  const matches = {\n    YY: () => String(years).slice(-2),\n    YYYY: () => years,\n    M: () => month + 1,\n    MM: () => `${month + 1}`.padStart(2, \"0\"),\n    MMM: () => date.toLocaleDateString(options.locales, { month: \"short\" }),\n    MMMM: () => date.toLocaleDateString(options.locales, { month: \"long\" }),\n    D: () => String(days),\n    DD: () => `${days}`.padStart(2, \"0\"),\n    H: () => String(hours),\n    HH: () => `${hours}`.padStart(2, \"0\"),\n    h: () => `${hours % 12 || 12}`.padStart(1, \"0\"),\n    hh: () => `${hours % 12 || 12}`.padStart(2, \"0\"),\n    m: () => String(minutes),\n    mm: () => `${minutes}`.padStart(2, \"0\"),\n    s: () => String(seconds),\n    ss: () => `${seconds}`.padStart(2, \"0\"),\n    SSS: () => `${milliseconds}`.padStart(3, \"0\"),\n    d: () => day,\n    dd: () => date.toLocaleDateString(options.locales, { weekday: \"narrow\" }),\n    ddd: () => date.toLocaleDateString(options.locales, { weekday: \"short\" }),\n    dddd: () => date.toLocaleDateString(options.locales, { weekday: \"long\" }),\n    A: () => meridiem(hours, minutes),\n    AA: () => meridiem(hours, minutes, false, true),\n    a: () => meridiem(hours, minutes, true),\n    aa: () => meridiem(hours, minutes, true, true)\n  };\n  return formatStr.replace(REGEX_FORMAT, (match, $1) => {\n    var _a2;\n    return $1 || ((_a2 = matches[match]) == null ? void 0 : _a2.call(matches)) || match;\n  });\n}\nfunction normalizeDate(date) {\n  if (date === null)\n    return /* @__PURE__ */ new Date(NaN);\n  if (date === void 0)\n    return /* @__PURE__ */ new Date();\n  if (date instanceof Date)\n    return new Date(date);\n  if (typeof date === \"string\" && !/Z$/i.test(date)) {\n    const d = date.match(REGEX_PARSE);\n    if (d) {\n      const m = d[2] - 1 || 0;\n      const ms = (d[7] || \"0\").substring(0, 3);\n      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);\n    }\n  }\n  return new Date(date);\n}\nfunction useDateFormat(date, formatStr = \"HH:mm:ss\", options = {}) {\n  return computed(() => formatDate(normalizeDate(toValue(date)), toValue(formatStr), options));\n}\n\nfunction useIntervalFn(cb, interval = 1e3, options = {}) {\n  const {\n    immediate = true,\n    immediateCallback = false\n  } = options;\n  let timer = null;\n  const isActive = ref(false);\n  function clean() {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    clean();\n  }\n  function resume() {\n    const intervalValue = toValue(interval);\n    if (intervalValue <= 0)\n      return;\n    isActive.value = true;\n    if (immediateCallback)\n      cb();\n    clean();\n    timer = setInterval(cb, intervalValue);\n  }\n  if (immediate && isClient)\n    resume();\n  if (isRef(interval) || typeof interval === \"function\") {\n    const stopWatch = watch(interval, () => {\n      if (isActive.value && isClient)\n        resume();\n    });\n    tryOnScopeDispose(stopWatch);\n  }\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$8 = Object.defineProperty;\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$8 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$a.call(b, prop))\n      __defNormalProp$8(a, prop, b[prop]);\n  if (__getOwnPropSymbols$a)\n    for (var prop of __getOwnPropSymbols$a(b)) {\n      if (__propIsEnum$a.call(b, prop))\n        __defNormalProp$8(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useInterval(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    immediate = true,\n    callback\n  } = options;\n  const counter = ref(0);\n  const update = () => counter.value += 1;\n  const reset = () => {\n    counter.value = 0;\n  };\n  const controls = useIntervalFn(\n    callback ? () => {\n      update();\n      callback(counter.value);\n    } : update,\n    interval,\n    { immediate }\n  );\n  if (exposeControls) {\n    return __spreadValues$8({\n      counter,\n      reset\n    }, controls);\n  } else {\n    return counter;\n  }\n}\n\nfunction useLastChanged(source, options = {}) {\n  var _a;\n  const ms = ref((_a = options.initialValue) != null ? _a : null);\n  watch(\n    source,\n    () => ms.value = timestamp(),\n    options\n  );\n  return ms;\n}\n\nfunction useTimeoutFn(cb, interval, options = {}) {\n  const {\n    immediate = true\n  } = options;\n  const isPending = ref(false);\n  let timer = null;\n  function clear() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function stop() {\n    isPending.value = false;\n    clear();\n  }\n  function start(...args) {\n    clear();\n    isPending.value = true;\n    timer = setTimeout(() => {\n      isPending.value = false;\n      timer = null;\n      cb(...args);\n    }, toValue(interval));\n  }\n  if (immediate) {\n    isPending.value = true;\n    if (isClient)\n      start();\n  }\n  tryOnScopeDispose(stop);\n  return {\n    isPending: readonly(isPending),\n    start,\n    stop\n  };\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$9.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(b)) {\n      if (__propIsEnum$9.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useTimeout(interval = 1e3, options = {}) {\n  const {\n    controls: exposeControls = false,\n    callback\n  } = options;\n  const controls = useTimeoutFn(\n    callback != null ? callback : noop,\n    interval,\n    options\n  );\n  const ready = computed(() => !controls.isPending.value);\n  if (exposeControls) {\n    return __spreadValues$7({\n      ready\n    }, controls);\n  } else {\n    return ready;\n  }\n}\n\nfunction useToNumber(value, options = {}) {\n  const {\n    method = \"parseFloat\",\n    radix,\n    nanToZero\n  } = options;\n  return computed(() => {\n    let resolved = toValue(value);\n    if (typeof resolved === \"string\")\n      resolved = Number[method](resolved, radix);\n    if (nanToZero && isNaN(resolved))\n      resolved = 0;\n    return resolved;\n  });\n}\n\nfunction useToString(value) {\n  return computed(() => `${toValue(value)}`);\n}\n\nfunction useToggle(initialValue = false, options = {}) {\n  const {\n    truthyValue = true,\n    falsyValue = false\n  } = options;\n  const valueIsRef = isRef(initialValue);\n  const _value = ref(initialValue);\n  function toggle(value) {\n    if (arguments.length) {\n      _value.value = value;\n      return _value.value;\n    } else {\n      const truthy = toValue(truthyValue);\n      _value.value = _value.value === truthy ? toValue(falsyValue) : truthy;\n      return _value.value;\n    }\n  }\n  if (valueIsRef)\n    return toggle;\n  else\n    return [_value, toggle];\n}\n\nfunction watchArray(source, cb, options) {\n  let oldList = (options == null ? void 0 : options.immediate) ? [] : [\n    ...source instanceof Function ? source() : Array.isArray(source) ? source : toValue(source)\n  ];\n  return watch(source, (newList, _, onCleanup) => {\n    const oldListRemains = new Array(oldList.length);\n    const added = [];\n    for (const obj of newList) {\n      let found = false;\n      for (let i = 0; i < oldList.length; i++) {\n        if (!oldListRemains[i] && obj === oldList[i]) {\n          oldListRemains[i] = true;\n          found = true;\n          break;\n        }\n      }\n      if (!found)\n        added.push(obj);\n    }\n    const removed = oldList.filter((_2, i) => !oldListRemains[i]);\n    cb(newList, oldList, added, removed, onCleanup);\n    oldList = [...newList];\n  }, options);\n}\n\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __objRest$5 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$8.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$8.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchWithFilter(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$5(_a, [\n    \"eventFilter\"\n  ]);\n  return watch(\n    source,\n    createFilterWrapper(\n      eventFilter,\n      cb\n    ),\n    watchOptions\n  );\n}\n\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __objRest$4 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$7.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$7.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchAtMost(source, cb, options) {\n  const _a = options, {\n    count\n  } = _a, watchOptions = __objRest$4(_a, [\n    \"count\"\n  ]);\n  const current = ref(0);\n  const stop = watchWithFilter(\n    source,\n    (...args) => {\n      current.value += 1;\n      if (current.value >= toValue(count))\n        nextTick(() => stop());\n      cb(...args);\n    },\n    watchOptions\n  );\n  return { count: current, stop };\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __defProps$6 = Object.defineProperties;\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$6.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(b)) {\n      if (__propIsEnum$6.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\nvar __objRest$3 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$6.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$6.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchDebounced(source, cb, options = {}) {\n  const _a = options, {\n    debounce = 0,\n    maxWait = void 0\n  } = _a, watchOptions = __objRest$3(_a, [\n    \"debounce\",\n    \"maxWait\"\n  ]);\n  return watchWithFilter(\n    source,\n    cb,\n    __spreadProps$6(__spreadValues$6({}, watchOptions), {\n      eventFilter: debounceFilter(debounce, { maxWait })\n    })\n  );\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __defProps$5 = Object.defineProperties;\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$5.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(b)) {\n      if (__propIsEnum$5.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\nfunction watchDeep(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    __spreadProps$5(__spreadValues$5({}, options), {\n      deep: true\n    })\n  );\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nvar __objRest$2 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$4.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$4.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchIgnorable(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter = bypassFilter\n  } = _a, watchOptions = __objRest$2(_a, [\n    \"eventFilter\"\n  ]);\n  const filteredCb = createFilterWrapper(\n    eventFilter,\n    cb\n  );\n  let ignoreUpdates;\n  let ignorePrevAsyncUpdates;\n  let stop;\n  if (watchOptions.flush === \"sync\") {\n    const ignore = ref(false);\n    ignorePrevAsyncUpdates = () => {\n    };\n    ignoreUpdates = (updater) => {\n      ignore.value = true;\n      updater();\n      ignore.value = false;\n    };\n    stop = watch(\n      source,\n      (...args) => {\n        if (!ignore.value)\n          filteredCb(...args);\n      },\n      watchOptions\n    );\n  } else {\n    const disposables = [];\n    const ignoreCounter = ref(0);\n    const syncCounter = ref(0);\n    ignorePrevAsyncUpdates = () => {\n      ignoreCounter.value = syncCounter.value;\n    };\n    disposables.push(\n      watch(\n        source,\n        () => {\n          syncCounter.value++;\n        },\n        __spreadProps$4(__spreadValues$4({}, watchOptions), { flush: \"sync\" })\n      )\n    );\n    ignoreUpdates = (updater) => {\n      const syncCounterPrev = syncCounter.value;\n      updater();\n      ignoreCounter.value += syncCounter.value - syncCounterPrev;\n    };\n    disposables.push(\n      watch(\n        source,\n        (...args) => {\n          const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\n          ignoreCounter.value = 0;\n          syncCounter.value = 0;\n          if (ignore)\n            return;\n          filteredCb(...args);\n        },\n        watchOptions\n      )\n    );\n    stop = () => {\n      disposables.forEach((fn) => fn());\n    };\n  }\n  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nfunction watchImmediate(source, cb, options) {\n  return watch(\n    source,\n    cb,\n    __spreadProps$3(__spreadValues$3({}, options), {\n      immediate: true\n    })\n  );\n}\n\nfunction watchOnce(source, cb, options) {\n  const stop = watch(source, (...args) => {\n    nextTick(() => stop());\n    return cb(...args);\n  }, options);\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchPausable(source, cb, options = {}) {\n  const _a = options, {\n    eventFilter: filter\n  } = _a, watchOptions = __objRest$1(_a, [\n    \"eventFilter\"\n  ]);\n  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\n  const stop = watchWithFilter(\n    source,\n    cb,\n    __spreadProps$2(__spreadValues$2({}, watchOptions), {\n      eventFilter\n    })\n  );\n  return { stop, pause, resume, isActive };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction watchThrottled(source, cb, options = {}) {\n  const _a = options, {\n    throttle = 0,\n    trailing = true,\n    leading = true\n  } = _a, watchOptions = __objRest(_a, [\n    \"throttle\",\n    \"trailing\",\n    \"leading\"\n  ]);\n  return watchWithFilter(\n    source,\n    cb,\n    __spreadProps$1(__spreadValues$1({}, watchOptions), {\n      eventFilter: throttleFilter(throttle, trailing, leading)\n    })\n  );\n}\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction watchTriggerable(source, cb, options = {}) {\n  let cleanupFn;\n  function onEffect() {\n    if (!cleanupFn)\n      return;\n    const fn = cleanupFn;\n    cleanupFn = void 0;\n    fn();\n  }\n  function onCleanup(callback) {\n    cleanupFn = callback;\n  }\n  const _cb = (value, oldValue) => {\n    onEffect();\n    return cb(value, oldValue, onCleanup);\n  };\n  const res = watchIgnorable(source, _cb, options);\n  const { ignoreUpdates } = res;\n  const trigger = () => {\n    let res2;\n    ignoreUpdates(() => {\n      res2 = _cb(getWatchSources(source), getOldValue(source));\n    });\n    return res2;\n  };\n  return __spreadProps(__spreadValues({}, res), {\n    trigger\n  });\n}\nfunction getWatchSources(sources) {\n  if (isReactive(sources))\n    return sources;\n  if (Array.isArray(sources))\n    return sources.map((item) => toValue(item));\n  return toValue(sources);\n}\nfunction getOldValue(source) {\n  return Array.isArray(source) ? source.map(() => void 0) : void 0;\n}\n\nfunction whenever(source, cb, options) {\n  return watch(\n    source,\n    (v, ov, onInvalidate) => {\n      if (v)\n        cb(v, ov, onInvalidate);\n    },\n    options\n  );\n}\n\nexport { assert, refAutoReset as autoResetRef, bypassFilter, clamp, computedEager, computedWithControl, containsProp, computedWithControl as controlledComputed, controlledRef, createEventHook, createFilterWrapper, createGlobalState, createInjectionState, reactify as createReactiveFn, createSharedComposable, createSingletonPromise, debounceFilter, refDebounced as debouncedRef, watchDebounced as debouncedWatch, directiveHooks, computedEager as eagerComputed, extendRef, formatDate, get, hasOwn, identity, watchIgnorable as ignorableWatch, increaseWithUnit, invoke, isClient, isDef, isDefined, isIOS, isObject, makeDestructurable, noop, normalizeDate, notNullish, now, objectEntries, objectOmit, objectPick, pausableFilter, watchPausable as pausableWatch, promiseTimeout, rand, reactify, reactifyObject, reactiveComputed, reactiveOmit, reactivePick, refAutoReset, refDebounced, refDefault, refThrottled, refWithControl, resolveRef, resolveUnref, set, syncRef, syncRefs, throttleFilter, refThrottled as throttledRef, watchThrottled as throttledWatch, timestamp, toReactive, toRef, toRefs, toValue, tryOnBeforeMount, tryOnBeforeUnmount, tryOnMounted, tryOnScopeDispose, tryOnUnmounted, until, useArrayDifference, useArrayEvery, useArrayFilter, useArrayFind, useArrayFindIndex, useArrayFindLast, useArrayIncludes, useArrayJoin, useArrayMap, useArrayReduce, useArraySome, useArrayUnique, useCounter, useDateFormat, refDebounced as useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, refThrottled as useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToNumber, useToString, useToggle, watchArray, watchAtMost, watchDebounced, watchDeep, watchIgnorable, watchImmediate, watchOnce, watchPausable, watchThrottled, watchTriggerable, watchWithFilter, whenever };\n","import { noop, makeDestructurable, toValue, isClient, tryOnScopeDispose, isIOS, tryOnMounted, computedWithControl, isObject, objectOmit, promiseTimeout, until, toRef, increaseWithUnit, objectEntries, useTimeoutFn, pausableWatch, createEventHook, timestamp, pausableFilter, watchIgnorable, debounceFilter, createFilterWrapper, bypassFilter, createSingletonPromise, toRefs, notNullish, containsProp, hasOwn, throttleFilter, useDebounceFn, useThrottleFn, useIntervalFn, clamp, syncRef, objectPick, tryOnUnmounted, watchWithFilter, identity, isDef } from '@vueuse/shared';\nexport * from '@vueuse/shared';\nimport { isRef, ref, shallowRef, watchEffect, computed, inject, isVue3, version, defineComponent, h, TransitionGroup, shallowReactive, Fragment, watch, getCurrentInstance, customRef, onUpdated, onMounted, readonly, nextTick, reactive, markRaw, getCurrentScope, isVue2, set, del, isReadonly, onBeforeUpdate } from 'vue-demi';\n\nfunction computedAsync(evaluationCallback, initialState, optionsOrRef) {\n  let options;\n  if (isRef(optionsOrRef)) {\n    options = {\n      evaluating: optionsOrRef\n    };\n  } else {\n    options = optionsOrRef || {};\n  }\n  const {\n    lazy = false,\n    evaluating = void 0,\n    shallow = true,\n    onError = noop\n  } = options;\n  const started = ref(!lazy);\n  const current = shallow ? shallowRef(initialState) : ref(initialState);\n  let counter = 0;\n  watchEffect(async (onInvalidate) => {\n    if (!started.value)\n      return;\n    counter++;\n    const counterAtBeginning = counter;\n    let hasFinished = false;\n    if (evaluating) {\n      Promise.resolve().then(() => {\n        evaluating.value = true;\n      });\n    }\n    try {\n      const result = await evaluationCallback((cancelCallback) => {\n        onInvalidate(() => {\n          if (evaluating)\n            evaluating.value = false;\n          if (!hasFinished)\n            cancelCallback();\n        });\n      });\n      if (counterAtBeginning === counter)\n        current.value = result;\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (evaluating && counterAtBeginning === counter)\n        evaluating.value = false;\n      hasFinished = true;\n    }\n  });\n  if (lazy) {\n    return computed(() => {\n      started.value = true;\n      return current.value;\n    });\n  } else {\n    return current;\n  }\n}\n\nfunction computedInject(key, options, defaultSource, treatDefaultAsFactory) {\n  let source = inject(key);\n  if (defaultSource)\n    source = inject(key, defaultSource);\n  if (treatDefaultAsFactory)\n    source = inject(key, defaultSource, treatDefaultAsFactory);\n  if (typeof options === \"function\") {\n    return computed((ctx) => options(source, ctx));\n  } else {\n    return computed({\n      get: (ctx) => options.get(source, ctx),\n      set: options.set\n    });\n  }\n}\n\nvar __defProp$p = Object.defineProperty;\nvar __defProps$c = Object.defineProperties;\nvar __getOwnPropDescs$c = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$s = Object.getOwnPropertySymbols;\nvar __hasOwnProp$s = Object.prototype.hasOwnProperty;\nvar __propIsEnum$s = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$p = (obj, key, value) => key in obj ? __defProp$p(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$p = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$s.call(b, prop))\n      __defNormalProp$p(a, prop, b[prop]);\n  if (__getOwnPropSymbols$s)\n    for (var prop of __getOwnPropSymbols$s(b)) {\n      if (__propIsEnum$s.call(b, prop))\n        __defNormalProp$p(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$c = (a, b) => __defProps$c(a, __getOwnPropDescs$c(b));\nfunction createReusableTemplate() {\n  if (!isVue3 && !version.startsWith(\"2.7.\")) {\n    if (process.env.NODE_ENV !== \"production\")\n      throw new Error(\"[VueUse] createReusableTemplate only works in Vue 2.7 or above.\");\n    return;\n  }\n  const render = shallowRef();\n  const define = /* #__PURE__ */ defineComponent({\n    setup(_, { slots }) {\n      return () => {\n        render.value = slots.default;\n      };\n    }\n  });\n  const reuse = /* #__PURE__ */ defineComponent({\n    inheritAttrs: false,\n    setup(_, { attrs, slots }) {\n      return () => {\n        var _a;\n        if (!render.value && process.env.NODE_ENV !== \"production\")\n          throw new Error(\"[VueUse] Failed to find the definition of reusable template\");\n        return (_a = render.value) == null ? void 0 : _a.call(render, __spreadProps$c(__spreadValues$p({}, attrs), { $slots: slots }));\n      };\n    }\n  });\n  return makeDestructurable(\n    { define, reuse },\n    [define, reuse]\n  );\n}\n\nfunction createTemplatePromise(options = {}) {\n  if (!isVue3) {\n    if (process.env.NODE_ENV !== \"production\")\n      throw new Error(\"[VueUse] createTemplatePromise only works in Vue 3 or above.\");\n    return;\n  }\n  let index = 0;\n  const instances = ref([]);\n  function create(...args) {\n    const props = shallowReactive({\n      key: index++,\n      args,\n      promise: void 0,\n      resolve: () => {\n      },\n      reject: () => {\n      },\n      isResolving: false,\n      options\n    });\n    instances.value.push(props);\n    props.promise = new Promise((_resolve, _reject) => {\n      props.resolve = (v) => {\n        props.isResolving = true;\n        return _resolve(v);\n      };\n      props.reject = _reject;\n    }).finally(() => {\n      props.promise = void 0;\n      const index2 = instances.value.indexOf(props);\n      if (index2 !== -1)\n        instances.value.splice(index2, 1);\n    });\n    return props.promise;\n  }\n  function start(...args) {\n    if (options.singleton && instances.value.length > 0)\n      return instances.value[0].promise;\n    return create(...args);\n  }\n  const component = /* #__PURE__ */ defineComponent((_, { slots }) => {\n    const renderList = () => instances.value.map((props) => {\n      var _a;\n      return h(Fragment, { key: props.key }, (_a = slots.default) == null ? void 0 : _a.call(slots, props));\n    });\n    if (options.transition)\n      return () => h(TransitionGroup, options.transition, renderList);\n    return renderList;\n  });\n  component.start = start;\n  return component;\n}\n\nfunction createUnrefFn(fn) {\n  return function(...args) {\n    return fn.apply(this, args.map((i) => toValue(i)));\n  };\n}\n\nfunction unrefElement(elRef) {\n  var _a;\n  const plain = toValue(elRef);\n  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;\n}\n\nconst defaultWindow = isClient ? window : void 0;\nconst defaultDocument = isClient ? window.document : void 0;\nconst defaultNavigator = isClient ? window.navigator : void 0;\nconst defaultLocation = isClient ? window.location : void 0;\n\nfunction useEventListener(...args) {\n  let target;\n  let events;\n  let listeners;\n  let options;\n  if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\n    [events, listeners, options] = args;\n    target = defaultWindow;\n  } else {\n    [target, events, listeners, options] = args;\n  }\n  if (!target)\n    return noop;\n  if (!Array.isArray(events))\n    events = [events];\n  if (!Array.isArray(listeners))\n    listeners = [listeners];\n  const cleanups = [];\n  const cleanup = () => {\n    cleanups.forEach((fn) => fn());\n    cleanups.length = 0;\n  };\n  const register = (el, event, listener, options2) => {\n    el.addEventListener(event, listener, options2);\n    return () => el.removeEventListener(event, listener, options2);\n  };\n  const stopWatch = watch(\n    () => [unrefElement(target), toValue(options)],\n    ([el, options2]) => {\n      cleanup();\n      if (!el)\n        return;\n      cleanups.push(\n        ...events.flatMap((event) => {\n          return listeners.map((listener) => register(el, event, listener, options2));\n        })\n      );\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  const stop = () => {\n    stopWatch();\n    cleanup();\n  };\n  tryOnScopeDispose(stop);\n  return stop;\n}\n\nlet _iOSWorkaround = false;\nfunction onClickOutside(target, handler, options = {}) {\n  const { window = defaultWindow, ignore = [], capture = true, detectIframe = false } = options;\n  if (!window)\n    return;\n  if (isIOS && !_iOSWorkaround) {\n    _iOSWorkaround = true;\n    Array.from(window.document.body.children).forEach((el) => el.addEventListener(\"click\", noop));\n  }\n  let shouldListen = true;\n  const shouldIgnore = (event) => {\n    return ignore.some((target2) => {\n      if (typeof target2 === \"string\") {\n        return Array.from(window.document.querySelectorAll(target2)).some((el) => el === event.target || event.composedPath().includes(el));\n      } else {\n        const el = unrefElement(target2);\n        return el && (event.target === el || event.composedPath().includes(el));\n      }\n    });\n  };\n  const listener = (event) => {\n    const el = unrefElement(target);\n    if (!el || el === event.target || event.composedPath().includes(el))\n      return;\n    if (event.detail === 0)\n      shouldListen = !shouldIgnore(event);\n    if (!shouldListen) {\n      shouldListen = true;\n      return;\n    }\n    handler(event);\n  };\n  const cleanup = [\n    useEventListener(window, \"click\", listener, { passive: true, capture }),\n    useEventListener(window, \"pointerdown\", (e) => {\n      const el = unrefElement(target);\n      if (el)\n        shouldListen = !e.composedPath().includes(el) && !shouldIgnore(e);\n    }, { passive: true }),\n    detectIframe && useEventListener(window, \"blur\", (event) => {\n      var _a;\n      const el = unrefElement(target);\n      if (((_a = window.document.activeElement) == null ? void 0 : _a.tagName) === \"IFRAME\" && !(el == null ? void 0 : el.contains(window.document.activeElement)))\n        handler(event);\n    })\n  ].filter(Boolean);\n  const stop = () => cleanup.forEach((fn) => fn());\n  return stop;\n}\n\nvar __defProp$o = Object.defineProperty;\nvar __defProps$b = Object.defineProperties;\nvar __getOwnPropDescs$b = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$r = Object.getOwnPropertySymbols;\nvar __hasOwnProp$r = Object.prototype.hasOwnProperty;\nvar __propIsEnum$r = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$o = (obj, key, value) => key in obj ? __defProp$o(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$o = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$r.call(b, prop))\n      __defNormalProp$o(a, prop, b[prop]);\n  if (__getOwnPropSymbols$r)\n    for (var prop of __getOwnPropSymbols$r(b)) {\n      if (__propIsEnum$r.call(b, prop))\n        __defNormalProp$o(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$b = (a, b) => __defProps$b(a, __getOwnPropDescs$b(b));\nfunction createKeyPredicate(keyFilter) {\n  if (typeof keyFilter === \"function\")\n    return keyFilter;\n  else if (typeof keyFilter === \"string\")\n    return (event) => event.key === keyFilter;\n  else if (Array.isArray(keyFilter))\n    return (event) => keyFilter.includes(event.key);\n  return () => true;\n}\nfunction onKeyStroke(...args) {\n  let key;\n  let handler;\n  let options = {};\n  if (args.length === 3) {\n    key = args[0];\n    handler = args[1];\n    options = args[2];\n  } else if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      key = true;\n      handler = args[0];\n      options = args[1];\n    } else {\n      key = args[0];\n      handler = args[1];\n    }\n  } else {\n    key = true;\n    handler = args[0];\n  }\n  const {\n    target = defaultWindow,\n    eventName = \"keydown\",\n    passive = false,\n    dedupe = false\n  } = options;\n  const predicate = createKeyPredicate(key);\n  const listener = (e) => {\n    if (e.repeat && toValue(dedupe))\n      return;\n    if (predicate(e))\n      handler(e);\n  };\n  return useEventListener(target, eventName, listener, passive);\n}\nfunction onKeyDown(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$b(__spreadValues$o({}, options), { eventName: \"keydown\" }));\n}\nfunction onKeyPressed(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$b(__spreadValues$o({}, options), { eventName: \"keypress\" }));\n}\nfunction onKeyUp(key, handler, options = {}) {\n  return onKeyStroke(key, handler, __spreadProps$b(__spreadValues$o({}, options), { eventName: \"keyup\" }));\n}\n\nconst DEFAULT_DELAY = 500;\nfunction onLongPress(target, handler, options) {\n  var _a, _b;\n  const elementRef = computed(() => unrefElement(target));\n  let timeout;\n  function clear() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = void 0;\n    }\n  }\n  function onDown(ev) {\n    var _a2, _b2, _c, _d;\n    if (((_a2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _a2.self) && ev.target !== elementRef.value)\n      return;\n    clear();\n    if ((_b2 = options == null ? void 0 : options.modifiers) == null ? void 0 : _b2.prevent)\n      ev.preventDefault();\n    if ((_c = options == null ? void 0 : options.modifiers) == null ? void 0 : _c.stop)\n      ev.stopPropagation();\n    timeout = setTimeout(\n      () => handler(ev),\n      (_d = options == null ? void 0 : options.delay) != null ? _d : DEFAULT_DELAY\n    );\n  }\n  const listenerOptions = {\n    capture: (_a = options == null ? void 0 : options.modifiers) == null ? void 0 : _a.capture,\n    once: (_b = options == null ? void 0 : options.modifiers) == null ? void 0 : _b.once\n  };\n  useEventListener(elementRef, \"pointerdown\", onDown, listenerOptions);\n  useEventListener(elementRef, \"pointerup\", clear, listenerOptions);\n  useEventListener(elementRef, \"pointerleave\", clear, listenerOptions);\n}\n\nfunction isFocusedElementEditable() {\n  const { activeElement, body } = document;\n  if (!activeElement)\n    return false;\n  if (activeElement === body)\n    return false;\n  switch (activeElement.tagName) {\n    case \"INPUT\":\n    case \"TEXTAREA\":\n      return true;\n  }\n  return activeElement.hasAttribute(\"contenteditable\");\n}\nfunction isTypedCharValid({\n  keyCode,\n  metaKey,\n  ctrlKey,\n  altKey\n}) {\n  if (metaKey || ctrlKey || altKey)\n    return false;\n  if (keyCode >= 48 && keyCode <= 57)\n    return true;\n  if (keyCode >= 65 && keyCode <= 90)\n    return true;\n  if (keyCode >= 97 && keyCode <= 122)\n    return true;\n  return false;\n}\nfunction onStartTyping(callback, options = {}) {\n  const { document: document2 = defaultDocument } = options;\n  const keydown = (event) => {\n    !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);\n  };\n  if (document2)\n    useEventListener(document2, \"keydown\", keydown, { passive: true });\n}\n\nfunction templateRef(key, initialValue = null) {\n  const instance = getCurrentInstance();\n  let _trigger = () => {\n  };\n  const element = customRef((track, trigger) => {\n    _trigger = trigger;\n    return {\n      get() {\n        var _a, _b;\n        track();\n        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;\n      },\n      set() {\n      }\n    };\n  });\n  tryOnMounted(_trigger);\n  onUpdated(_trigger);\n  return element;\n}\n\nfunction useActiveElement(options = {}) {\n  var _a;\n  const { window = defaultWindow } = options;\n  const document = (_a = options.document) != null ? _a : window == null ? void 0 : window.document;\n  const activeElement = computedWithControl(\n    () => null,\n    () => document == null ? void 0 : document.activeElement\n  );\n  if (window) {\n    useEventListener(window, \"blur\", (event) => {\n      if (event.relatedTarget !== null)\n        return;\n      activeElement.trigger();\n    }, true);\n    useEventListener(window, \"focus\", activeElement.trigger, true);\n  }\n  return activeElement;\n}\n\nfunction useMounted() {\n  const isMounted = ref(false);\n  if (getCurrentInstance()) {\n    onMounted(() => {\n      isMounted.value = true;\n    });\n  }\n  return isMounted;\n}\n\nfunction useSupported(callback) {\n  const isMounted = useMounted();\n  return computed(() => {\n    isMounted.value;\n    return Boolean(callback());\n  });\n}\n\nfunction useRafFn(fn, options = {}) {\n  const {\n    immediate = true,\n    window = defaultWindow\n  } = options;\n  const isActive = ref(false);\n  let previousFrameTimestamp = 0;\n  let rafId = null;\n  function loop(timestamp) {\n    if (!isActive.value || !window)\n      return;\n    const delta = timestamp - previousFrameTimestamp;\n    fn({ delta, timestamp });\n    previousFrameTimestamp = timestamp;\n    rafId = window.requestAnimationFrame(loop);\n  }\n  function resume() {\n    if (!isActive.value && window) {\n      isActive.value = true;\n      rafId = window.requestAnimationFrame(loop);\n    }\n  }\n  function pause() {\n    isActive.value = false;\n    if (rafId != null && window) {\n      window.cancelAnimationFrame(rafId);\n      rafId = null;\n    }\n  }\n  if (immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive: readonly(isActive),\n    pause,\n    resume\n  };\n}\n\nfunction useAnimate(target, keyframes, options) {\n  let config;\n  let animateOptions;\n  if (isObject(options)) {\n    config = options;\n    animateOptions = objectOmit(options, [\"window\", \"immediate\", \"commitStyles\", \"persist\", \"onReady\", \"onError\"]);\n  } else {\n    config = { duration: options };\n    animateOptions = options;\n  }\n  const {\n    window = defaultWindow,\n    immediate = true,\n    commitStyles,\n    persist,\n    playbackRate: _playbackRate = 1,\n    onReady,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = config;\n  const isSupported = useSupported(() => window && HTMLElement && \"animate\" in HTMLElement.prototype);\n  const animate = shallowRef(void 0);\n  const store = shallowReactive({\n    startTime: null,\n    currentTime: null,\n    timeline: null,\n    playbackRate: _playbackRate,\n    pending: false,\n    playState: immediate ? \"idle\" : \"paused\",\n    replaceState: \"active\"\n  });\n  const pending = computed(() => store.pending);\n  const playState = computed(() => store.playState);\n  const replaceState = computed(() => store.replaceState);\n  const startTime = computed({\n    get() {\n      return store.startTime;\n    },\n    set(value) {\n      store.startTime = value;\n      if (animate.value)\n        animate.value.startTime = value;\n    }\n  });\n  const currentTime = computed({\n    get() {\n      return store.currentTime;\n    },\n    set(value) {\n      store.currentTime = value;\n      if (animate.value) {\n        animate.value.currentTime = value;\n        syncResume();\n      }\n    }\n  });\n  const timeline = computed({\n    get() {\n      return store.timeline;\n    },\n    set(value) {\n      store.timeline = value;\n      if (animate.value)\n        animate.value.timeline = value;\n    }\n  });\n  const playbackRate = computed({\n    get() {\n      return store.playbackRate;\n    },\n    set(value) {\n      store.playbackRate = value;\n      if (animate.value)\n        animate.value.playbackRate = value;\n    }\n  });\n  const play = () => {\n    if (animate.value) {\n      try {\n        animate.value.play();\n        syncResume();\n      } catch (e) {\n        syncPause();\n        onError(e);\n      }\n    } else {\n      update();\n    }\n  };\n  const pause = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.pause();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const reverse = () => {\n    var _a;\n    !animate.value && update();\n    try {\n      (_a = animate.value) == null ? void 0 : _a.reverse();\n      syncResume();\n    } catch (e) {\n      syncPause();\n      onError(e);\n    }\n  };\n  const finish = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.finish();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  const cancel = () => {\n    var _a;\n    try {\n      (_a = animate.value) == null ? void 0 : _a.cancel();\n      syncPause();\n    } catch (e) {\n      onError(e);\n    }\n  };\n  watch(() => unrefElement(target), (el) => {\n    el && update();\n  });\n  watch(() => keyframes, (value) => {\n    !animate.value && update();\n    if (!unrefElement(target) && animate.value) {\n      animate.value.effect = new KeyframeEffect(\n        unrefElement(target),\n        toValue(value),\n        animateOptions\n      );\n    }\n  }, { deep: true });\n  tryOnMounted(() => {\n    nextTick(() => update(true));\n  });\n  tryOnScopeDispose(cancel);\n  function update(init) {\n    const el = unrefElement(target);\n    if (!isSupported.value || !el)\n      return;\n    animate.value = el.animate(toValue(keyframes), animateOptions);\n    if (commitStyles)\n      animate.value.commitStyles();\n    if (persist)\n      animate.value.persist();\n    if (_playbackRate !== 1)\n      animate.value.playbackRate = _playbackRate;\n    if (init && !immediate)\n      animate.value.pause();\n    else\n      syncResume();\n    onReady == null ? void 0 : onReady(animate.value);\n  }\n  useEventListener(animate, \"cancel\", syncPause);\n  useEventListener(animate, \"finish\", syncPause);\n  useEventListener(animate, \"remove\", syncPause);\n  const { resume: resumeRef, pause: pauseRef } = useRafFn(() => {\n    if (!animate.value)\n      return;\n    store.pending = animate.value.pending;\n    store.playState = animate.value.playState;\n    store.replaceState = animate.value.replaceState;\n    store.startTime = animate.value.startTime;\n    store.currentTime = animate.value.currentTime;\n    store.timeline = animate.value.timeline;\n    store.playbackRate = animate.value.playbackRate;\n  }, { immediate: false });\n  function syncResume() {\n    if (isSupported.value)\n      resumeRef();\n  }\n  function syncPause() {\n    if (isSupported.value && window)\n      window.requestAnimationFrame(pauseRef);\n  }\n  return {\n    isSupported,\n    animate,\n    // actions\n    play,\n    pause,\n    reverse,\n    finish,\n    cancel,\n    // state\n    pending,\n    playState,\n    replaceState,\n    startTime,\n    currentTime,\n    timeline,\n    playbackRate\n  };\n}\n\nfunction useAsyncQueue(tasks, options = {}) {\n  const {\n    interrupt = true,\n    onError = noop,\n    onFinished = noop\n  } = options;\n  const promiseState = {\n    pending: \"pending\",\n    rejected: \"rejected\",\n    fulfilled: \"fulfilled\"\n  };\n  const initialResult = Array.from(new Array(tasks.length), () => ({ state: promiseState.pending, data: null }));\n  const result = reactive(initialResult);\n  const activeIndex = ref(-1);\n  if (!tasks || tasks.length === 0) {\n    onFinished();\n    return {\n      activeIndex,\n      result\n    };\n  }\n  function updateResult(state, res) {\n    activeIndex.value++;\n    result[activeIndex.value].data = res;\n    result[activeIndex.value].state = state;\n  }\n  tasks.reduce((prev, curr) => {\n    return prev.then((prevRes) => {\n      var _a;\n      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {\n        onFinished();\n        return;\n      }\n      return curr(prevRes).then((currentRes) => {\n        updateResult(promiseState.fulfilled, currentRes);\n        activeIndex.value === tasks.length - 1 && onFinished();\n        return currentRes;\n      });\n    }).catch((e) => {\n      updateResult(promiseState.rejected, e);\n      onError();\n      return e;\n    });\n  }, Promise.resolve());\n  return {\n    activeIndex,\n    result\n  };\n}\n\nvar __defProp$n = Object.defineProperty;\nvar __defProps$a = Object.defineProperties;\nvar __getOwnPropDescs$a = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$q = Object.getOwnPropertySymbols;\nvar __hasOwnProp$q = Object.prototype.hasOwnProperty;\nvar __propIsEnum$q = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$n = (obj, key, value) => key in obj ? __defProp$n(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$n = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$q.call(b, prop))\n      __defNormalProp$n(a, prop, b[prop]);\n  if (__getOwnPropSymbols$q)\n    for (var prop of __getOwnPropSymbols$q(b)) {\n      if (__propIsEnum$q.call(b, prop))\n        __defNormalProp$n(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$a = (a, b) => __defProps$a(a, __getOwnPropDescs$a(b));\nfunction useAsyncState(promise, initialState, options) {\n  const {\n    immediate = true,\n    delay = 0,\n    onError = noop,\n    onSuccess = noop,\n    resetOnExecute = true,\n    shallow = true,\n    throwError\n  } = options != null ? options : {};\n  const state = shallow ? shallowRef(initialState) : ref(initialState);\n  const isReady = ref(false);\n  const isLoading = ref(false);\n  const error = shallowRef(void 0);\n  async function execute(delay2 = 0, ...args) {\n    if (resetOnExecute)\n      state.value = initialState;\n    error.value = void 0;\n    isReady.value = false;\n    isLoading.value = true;\n    if (delay2 > 0)\n      await promiseTimeout(delay2);\n    const _promise = typeof promise === \"function\" ? promise(...args) : promise;\n    try {\n      const data = await _promise;\n      state.value = data;\n      isReady.value = true;\n      onSuccess(data);\n    } catch (e) {\n      error.value = e;\n      onError(e);\n      if (throwError)\n        throw e;\n    } finally {\n      isLoading.value = false;\n    }\n    return state.value;\n  }\n  if (immediate)\n    execute(delay);\n  const shell = {\n    state,\n    isReady,\n    isLoading,\n    error,\n    execute\n  };\n  function waitUntilIsLoaded() {\n    return new Promise((resolve, reject) => {\n      until(isLoading).toBe(false).then(() => resolve(shell)).catch(reject);\n    });\n  }\n  return __spreadProps$a(__spreadValues$n({}, shell), {\n    then(onFulfilled, onRejected) {\n      return waitUntilIsLoaded().then(onFulfilled, onRejected);\n    }\n  });\n}\n\nconst defaults = {\n  array: (v) => JSON.stringify(v),\n  object: (v) => JSON.stringify(v),\n  set: (v) => JSON.stringify(Array.from(v)),\n  map: (v) => JSON.stringify(Object.fromEntries(v)),\n  null: () => \"\"\n};\nfunction getDefaultSerialization(target) {\n  if (!target)\n    return defaults.null;\n  if (target instanceof Map)\n    return defaults.map;\n  else if (target instanceof Set)\n    return defaults.set;\n  else if (Array.isArray(target))\n    return defaults.array;\n  else\n    return defaults.object;\n}\n\nfunction useBase64(target, options) {\n  const base64 = ref(\"\");\n  const promise = ref();\n  function execute() {\n    if (!isClient)\n      return;\n    promise.value = new Promise((resolve, reject) => {\n      try {\n        const _target = toValue(target);\n        if (_target == null) {\n          resolve(\"\");\n        } else if (typeof _target === \"string\") {\n          resolve(blobToBase64(new Blob([_target], { type: \"text/plain\" })));\n        } else if (_target instanceof Blob) {\n          resolve(blobToBase64(_target));\n        } else if (_target instanceof ArrayBuffer) {\n          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));\n        } else if (_target instanceof HTMLCanvasElement) {\n          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n        } else if (_target instanceof HTMLImageElement) {\n          const img = _target.cloneNode(false);\n          img.crossOrigin = \"Anonymous\";\n          imgLoaded(img).then(() => {\n            const canvas = document.createElement(\"canvas\");\n            const ctx = canvas.getContext(\"2d\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));\n          }).catch(reject);\n        } else if (typeof _target === \"object\") {\n          const _serializeFn = (options == null ? void 0 : options.serializer) || getDefaultSerialization(_target);\n          const serialized = _serializeFn(_target);\n          return resolve(blobToBase64(new Blob([serialized], { type: \"application/json\" })));\n        } else {\n          reject(new Error(\"target is unsupported types\"));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n    promise.value.then((res) => base64.value = res);\n    return promise.value;\n  }\n  if (isRef(target) || typeof target === \"function\")\n    watch(target, execute, { immediate: true });\n  else\n    execute();\n  return {\n    base64,\n    promise,\n    execute\n  };\n}\nfunction imgLoaded(img) {\n  return new Promise((resolve, reject) => {\n    if (!img.complete) {\n      img.onload = () => {\n        resolve();\n      };\n      img.onerror = reject;\n    } else {\n      resolve();\n    }\n  });\n}\nfunction blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onload = (e) => {\n      resolve(e.target.result);\n    };\n    fr.onerror = reject;\n    fr.readAsDataURL(blob);\n  });\n}\n\nfunction useBattery({ navigator = defaultNavigator } = {}) {\n  const events = [\"chargingchange\", \"chargingtimechange\", \"dischargingtimechange\", \"levelchange\"];\n  const isSupported = useSupported(() => navigator && \"getBattery\" in navigator);\n  const charging = ref(false);\n  const chargingTime = ref(0);\n  const dischargingTime = ref(0);\n  const level = ref(1);\n  let battery;\n  function updateBatteryInfo() {\n    charging.value = this.charging;\n    chargingTime.value = this.chargingTime || 0;\n    dischargingTime.value = this.dischargingTime || 0;\n    level.value = this.level;\n  }\n  if (isSupported.value) {\n    navigator.getBattery().then((_battery) => {\n      battery = _battery;\n      updateBatteryInfo.call(battery);\n      for (const event of events)\n        useEventListener(battery, event, updateBatteryInfo, { passive: true });\n    });\n  }\n  return {\n    isSupported,\n    charging,\n    chargingTime,\n    dischargingTime,\n    level\n  };\n}\n\nfunction useBluetooth(options) {\n  let {\n    acceptAllDevices = false\n  } = options || {};\n  const {\n    filters = void 0,\n    optionalServices = void 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => navigator && \"bluetooth\" in navigator);\n  const device = shallowRef(void 0);\n  const error = shallowRef(null);\n  watch(device, () => {\n    connectToBluetoothGATTServer();\n  });\n  async function requestDevice() {\n    if (!isSupported.value)\n      return;\n    error.value = null;\n    if (filters && filters.length > 0)\n      acceptAllDevices = false;\n    try {\n      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({\n        acceptAllDevices,\n        filters,\n        optionalServices\n      }));\n    } catch (err) {\n      error.value = err;\n    }\n  }\n  const server = ref();\n  const isConnected = computed(() => {\n    var _a;\n    return ((_a = server.value) == null ? void 0 : _a.connected) || false;\n  });\n  async function connectToBluetoothGATTServer() {\n    error.value = null;\n    if (device.value && device.value.gatt) {\n      device.value.addEventListener(\"gattserverdisconnected\", () => {\n      });\n      try {\n        server.value = await device.value.gatt.connect();\n      } catch (err) {\n        error.value = err;\n      }\n    }\n  }\n  tryOnMounted(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.connect();\n  });\n  tryOnScopeDispose(() => {\n    var _a;\n    if (device.value)\n      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();\n  });\n  return {\n    isSupported,\n    isConnected,\n    // Device:\n    device,\n    requestDevice,\n    // Server:\n    server,\n    // Errors:\n    error\n  };\n}\n\nfunction useMediaQuery(query, options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"matchMedia\" in window && typeof window.matchMedia === \"function\");\n  let mediaQuery;\n  const matches = ref(false);\n  const cleanup = () => {\n    if (!mediaQuery)\n      return;\n    if (\"removeEventListener\" in mediaQuery)\n      mediaQuery.removeEventListener(\"change\", update);\n    else\n      mediaQuery.removeListener(update);\n  };\n  const update = () => {\n    if (!isSupported.value)\n      return;\n    cleanup();\n    mediaQuery = window.matchMedia(toRef(query).value);\n    matches.value = !!(mediaQuery == null ? void 0 : mediaQuery.matches);\n    if (!mediaQuery)\n      return;\n    if (\"addEventListener\" in mediaQuery)\n      mediaQuery.addEventListener(\"change\", update);\n    else\n      mediaQuery.addListener(update);\n  };\n  watchEffect(update);\n  tryOnScopeDispose(() => cleanup());\n  return matches;\n}\n\nconst breakpointsTailwind = {\n  \"sm\": 640,\n  \"md\": 768,\n  \"lg\": 1024,\n  \"xl\": 1280,\n  \"2xl\": 1536\n};\nconst breakpointsBootstrapV5 = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n};\nconst breakpointsVuetify = {\n  xs: 600,\n  sm: 960,\n  md: 1264,\n  lg: 1904\n};\nconst breakpointsAntDesign = {\n  xs: 480,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1600\n};\nconst breakpointsQuasar = {\n  xs: 600,\n  sm: 1024,\n  md: 1440,\n  lg: 1920\n};\nconst breakpointsSematic = {\n  mobileS: 320,\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  laptop: 1024,\n  laptopL: 1440,\n  desktop4K: 2560\n};\nconst breakpointsMasterCss = {\n  \"3xs\": 360,\n  \"2xs\": 480,\n  \"xs\": 600,\n  \"sm\": 768,\n  \"md\": 1024,\n  \"lg\": 1280,\n  \"xl\": 1440,\n  \"2xl\": 1600,\n  \"3xl\": 1920,\n  \"4xl\": 2560\n};\n\nfunction useBreakpoints(breakpoints, options = {}) {\n  function getValue(k, delta) {\n    let v = breakpoints[k];\n    if (delta != null)\n      v = increaseWithUnit(v, delta);\n    if (typeof v === \"number\")\n      v = `${v}px`;\n    return v;\n  }\n  const { window = defaultWindow } = options;\n  function match(query) {\n    if (!window)\n      return false;\n    return window.matchMedia(query).matches;\n  }\n  const greaterOrEqual = (k) => {\n    return useMediaQuery(`(min-width: ${getValue(k)})`, options);\n  };\n  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {\n    Object.defineProperty(shortcuts, k, {\n      get: () => greaterOrEqual(k),\n      enumerable: true,\n      configurable: true\n    });\n    return shortcuts;\n  }, {});\n  return Object.assign(shortcutMethods, {\n    greater(k) {\n      return useMediaQuery(`(min-width: ${getValue(k, 0.1)})`, options);\n    },\n    greaterOrEqual,\n    smaller(k) {\n      return useMediaQuery(`(max-width: ${getValue(k, -0.1)})`, options);\n    },\n    smallerOrEqual(k) {\n      return useMediaQuery(`(max-width: ${getValue(k)})`, options);\n    },\n    between(a, b) {\n      return useMediaQuery(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\n    },\n    isGreater(k) {\n      return match(`(min-width: ${getValue(k, 0.1)})`);\n    },\n    isGreaterOrEqual(k) {\n      return match(`(min-width: ${getValue(k)})`);\n    },\n    isSmaller(k) {\n      return match(`(max-width: ${getValue(k, -0.1)})`);\n    },\n    isSmallerOrEqual(k) {\n      return match(`(max-width: ${getValue(k)})`);\n    },\n    isInBetween(a, b) {\n      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\n    },\n    current() {\n      const points = Object.keys(breakpoints).map((i) => [i, greaterOrEqual(i)]);\n      return computed(() => points.filter(([, v]) => v.value).map(([k]) => k));\n    }\n  });\n}\n\nfunction useBroadcastChannel(options) {\n  const {\n    name,\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"BroadcastChannel\" in window);\n  const isClosed = ref(false);\n  const channel = ref();\n  const data = ref();\n  const error = shallowRef(null);\n  const post = (data2) => {\n    if (channel.value)\n      channel.value.postMessage(data2);\n  };\n  const close = () => {\n    if (channel.value)\n      channel.value.close();\n    isClosed.value = true;\n  };\n  if (isSupported.value) {\n    tryOnMounted(() => {\n      error.value = null;\n      channel.value = new BroadcastChannel(name);\n      channel.value.addEventListener(\"message\", (e) => {\n        data.value = e.data;\n      }, { passive: true });\n      channel.value.addEventListener(\"messageerror\", (e) => {\n        error.value = e;\n      }, { passive: true });\n      channel.value.addEventListener(\"close\", () => {\n        isClosed.value = true;\n      });\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    isSupported,\n    channel,\n    data,\n    post,\n    close,\n    error,\n    isClosed\n  };\n}\n\nvar __defProp$m = Object.defineProperty;\nvar __getOwnPropSymbols$p = Object.getOwnPropertySymbols;\nvar __hasOwnProp$p = Object.prototype.hasOwnProperty;\nvar __propIsEnum$p = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$m = (obj, key, value) => key in obj ? __defProp$m(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$m = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$p.call(b, prop))\n      __defNormalProp$m(a, prop, b[prop]);\n  if (__getOwnPropSymbols$p)\n    for (var prop of __getOwnPropSymbols$p(b)) {\n      if (__propIsEnum$p.call(b, prop))\n        __defNormalProp$m(a, prop, b[prop]);\n    }\n  return a;\n};\nconst WRITABLE_PROPERTIES = [\n  \"hash\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"search\"\n];\nfunction useBrowserLocation({ window = defaultWindow } = {}) {\n  const refs = Object.fromEntries(\n    WRITABLE_PROPERTIES.map((key) => [key, ref()])\n  );\n  for (const [key, ref2] of objectEntries(refs)) {\n    watch(ref2, (value) => {\n      if (!(window == null ? void 0 : window.location) || window.location[key] === value)\n        return;\n      window.location[key] = value;\n    });\n  }\n  const buildState = (trigger) => {\n    var _a;\n    const { state: state2, length } = (window == null ? void 0 : window.history) || {};\n    const { origin } = (window == null ? void 0 : window.location) || {};\n    for (const key of WRITABLE_PROPERTIES)\n      refs[key].value = (_a = window == null ? void 0 : window.location) == null ? void 0 : _a[key];\n    return reactive(__spreadValues$m({\n      trigger,\n      state: state2,\n      length,\n      origin\n    }, refs));\n  };\n  const state = ref(buildState(\"load\"));\n  if (window) {\n    useEventListener(window, \"popstate\", () => state.value = buildState(\"popstate\"), { passive: true });\n    useEventListener(window, \"hashchange\", () => state.value = buildState(\"hashchange\"), { passive: true });\n  }\n  return state;\n}\n\nfunction useCached(refValue, comparator = (a, b) => a === b, watchOptions) {\n  const cachedValue = ref(refValue.value);\n  watch(() => refValue.value, (value) => {\n    if (!comparator(value, cachedValue.value))\n      cachedValue.value = value;\n  }, watchOptions);\n  return cachedValue;\n}\n\nfunction useClipboard(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    read = false,\n    source,\n    copiedDuring = 1500,\n    legacy = false\n  } = options;\n  const events = [\"copy\", \"cut\"];\n  const isClipboardApiSupported = useSupported(() => navigator && \"clipboard\" in navigator);\n  const isSupported = computed(() => isClipboardApiSupported.value || legacy);\n  const text = ref(\"\");\n  const copied = ref(false);\n  const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\n  function updateText() {\n    if (isClipboardApiSupported.value) {\n      navigator.clipboard.readText().then((value) => {\n        text.value = value;\n      });\n    } else {\n      text.value = legacyRead();\n    }\n  }\n  if (isSupported.value && read) {\n    for (const event of events)\n      useEventListener(event, updateText);\n  }\n  async function copy(value = toValue(source)) {\n    if (isSupported.value && value != null) {\n      if (isClipboardApiSupported.value)\n        await navigator.clipboard.writeText(value);\n      else\n        legacyCopy(value);\n      text.value = value;\n      copied.value = true;\n      timeout.start();\n    }\n  }\n  function legacyCopy(value) {\n    const ta = document.createElement(\"textarea\");\n    ta.value = value != null ? value : \"\";\n    ta.style.position = \"absolute\";\n    ta.style.opacity = \"0\";\n    document.body.appendChild(ta);\n    ta.select();\n    document.execCommand(\"copy\");\n    ta.remove();\n  }\n  function legacyRead() {\n    var _a, _b, _c;\n    return (_c = (_b = (_a = document == null ? void 0 : document.getSelection) == null ? void 0 : _a.call(document)) == null ? void 0 : _b.toString()) != null ? _c : \"\";\n  }\n  return {\n    isSupported,\n    text,\n    copied,\n    copy\n  };\n}\n\nvar __defProp$l = Object.defineProperty;\nvar __defProps$9 = Object.defineProperties;\nvar __getOwnPropDescs$9 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$o = Object.getOwnPropertySymbols;\nvar __hasOwnProp$o = Object.prototype.hasOwnProperty;\nvar __propIsEnum$o = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$l = (obj, key, value) => key in obj ? __defProp$l(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$l = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$o.call(b, prop))\n      __defNormalProp$l(a, prop, b[prop]);\n  if (__getOwnPropSymbols$o)\n    for (var prop of __getOwnPropSymbols$o(b)) {\n      if (__propIsEnum$o.call(b, prop))\n        __defNormalProp$l(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$9 = (a, b) => __defProps$9(a, __getOwnPropDescs$9(b));\nfunction cloneFnJSON(source) {\n  return JSON.parse(JSON.stringify(source));\n}\nfunction useCloned(source, options = {}) {\n  const cloned = ref({});\n  const {\n    manual,\n    clone = cloneFnJSON,\n    // watch options\n    deep = true,\n    immediate = true\n  } = options;\n  function sync() {\n    cloned.value = clone(toValue(source));\n  }\n  if (!manual && isRef(source)) {\n    watch(source, sync, __spreadProps$9(__spreadValues$l({}, options), {\n      deep,\n      immediate\n    }));\n  } else {\n    sync();\n  }\n  return { cloned, sync };\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__vueuse_ssr_handlers__\";\nconst handlers = /* @__PURE__ */ getHandlers();\nfunction getHandlers() {\n  if (!(globalKey in _global))\n    _global[globalKey] = _global[globalKey] || {};\n  return _global[globalKey];\n}\nfunction getSSRHandler(key, fallback) {\n  return handlers[key] || fallback;\n}\nfunction setSSRHandler(key, fn) {\n  handlers[key] = fn;\n}\n\nfunction guessSerializerType(rawInit) {\n  return rawInit == null ? \"any\" : rawInit instanceof Set ? \"set\" : rawInit instanceof Map ? \"map\" : rawInit instanceof Date ? \"date\" : typeof rawInit === \"boolean\" ? \"boolean\" : typeof rawInit === \"string\" ? \"string\" : typeof rawInit === \"object\" ? \"object\" : !Number.isNaN(rawInit) ? \"number\" : \"any\";\n}\n\nvar __defProp$k = Object.defineProperty;\nvar __getOwnPropSymbols$n = Object.getOwnPropertySymbols;\nvar __hasOwnProp$n = Object.prototype.hasOwnProperty;\nvar __propIsEnum$n = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$k = (obj, key, value) => key in obj ? __defProp$k(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$k = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$n.call(b, prop))\n      __defNormalProp$k(a, prop, b[prop]);\n  if (__getOwnPropSymbols$n)\n    for (var prop of __getOwnPropSymbols$n(b)) {\n      if (__propIsEnum$n.call(b, prop))\n        __defNormalProp$k(a, prop, b[prop]);\n    }\n  return a;\n};\nconst StorageSerializers = {\n  boolean: {\n    read: (v) => v === \"true\",\n    write: (v) => String(v)\n  },\n  object: {\n    read: (v) => JSON.parse(v),\n    write: (v) => JSON.stringify(v)\n  },\n  number: {\n    read: (v) => Number.parseFloat(v),\n    write: (v) => String(v)\n  },\n  any: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  string: {\n    read: (v) => v,\n    write: (v) => String(v)\n  },\n  map: {\n    read: (v) => new Map(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v.entries()))\n  },\n  set: {\n    read: (v) => new Set(JSON.parse(v)),\n    write: (v) => JSON.stringify(Array.from(v))\n  },\n  date: {\n    read: (v) => new Date(v),\n    write: (v) => v.toISOString()\n  }\n};\nconst customStorageEventName = \"vueuse-storage\";\nfunction useStorage(key, defaults, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const data = (shallow ? shallowRef : ref)(defaults);\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  if (!storage)\n    return data;\n  const rawInit = toValue(defaults);\n  const type = guessSerializerType(rawInit);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  const { pause: pauseWatch, resume: resumeWatch } = pausableWatch(\n    data,\n    () => write(data.value),\n    { flush, deep, eventFilter }\n  );\n  if (window && listenToStorageChanges) {\n    useEventListener(window, \"storage\", update);\n    useEventListener(window, customStorageEventName, updateFromCustomEvent);\n  }\n  update();\n  return data;\n  function write(v) {\n    try {\n      if (v == null) {\n        storage.removeItem(key);\n      } else {\n        const serialized = serializer.write(v);\n        const oldValue = storage.getItem(key);\n        if (oldValue !== serialized) {\n          storage.setItem(key, serialized);\n          if (window) {\n            window.dispatchEvent(new CustomEvent(customStorageEventName, {\n              detail: {\n                key,\n                oldValue,\n                newValue: serialized,\n                storageArea: storage\n              }\n            }));\n          }\n        }\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  function read(event) {\n    const rawValue = event ? event.newValue : storage.getItem(key);\n    if (rawValue == null) {\n      if (writeDefaults && rawInit !== null)\n        storage.setItem(key, serializer.write(rawInit));\n      return rawInit;\n    } else if (!event && mergeDefaults) {\n      const value = serializer.read(rawValue);\n      if (typeof mergeDefaults === \"function\")\n        return mergeDefaults(value, rawInit);\n      else if (type === \"object\" && !Array.isArray(value))\n        return __spreadValues$k(__spreadValues$k({}, rawInit), value);\n      return value;\n    } else if (typeof rawValue !== \"string\") {\n      return rawValue;\n    } else {\n      return serializer.read(rawValue);\n    }\n  }\n  function updateFromCustomEvent(event) {\n    update(event.detail);\n  }\n  function update(event) {\n    if (event && event.storageArea !== storage)\n      return;\n    if (event && event.key == null) {\n      data.value = rawInit;\n      return;\n    }\n    if (event && event.key !== key)\n      return;\n    pauseWatch();\n    try {\n      data.value = read(event);\n    } catch (e) {\n      onError(e);\n    } finally {\n      if (event)\n        nextTick(resumeWatch);\n      else\n        resumeWatch();\n    }\n  }\n}\n\nfunction usePreferredDark(options) {\n  return useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n}\n\nvar __defProp$j = Object.defineProperty;\nvar __getOwnPropSymbols$m = Object.getOwnPropertySymbols;\nvar __hasOwnProp$m = Object.prototype.hasOwnProperty;\nvar __propIsEnum$m = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$j = (obj, key, value) => key in obj ? __defProp$j(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$j = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$m.call(b, prop))\n      __defNormalProp$j(a, prop, b[prop]);\n  if (__getOwnPropSymbols$m)\n    for (var prop of __getOwnPropSymbols$m(b)) {\n      if (__propIsEnum$m.call(b, prop))\n        __defNormalProp$j(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useColorMode(options = {}) {\n  const {\n    selector = \"html\",\n    attribute = \"class\",\n    initialValue = \"auto\",\n    window = defaultWindow,\n    storage,\n    storageKey = \"vueuse-color-scheme\",\n    listenToStorageChanges = true,\n    storageRef,\n    emitAuto,\n    disableTransition = true\n  } = options;\n  const modes = __spreadValues$j({\n    auto: \"\",\n    light: \"light\",\n    dark: \"dark\"\n  }, options.modes || {});\n  const preferredDark = usePreferredDark({ window });\n  const system = computed(() => preferredDark.value ? \"dark\" : \"light\");\n  const store = storageRef || (storageKey == null ? toRef(initialValue) : useStorage(storageKey, initialValue, storage, { window, listenToStorageChanges }));\n  const state = computed(\n    () => store.value === \"auto\" ? system.value : store.value\n  );\n  const updateHTMLAttrs = getSSRHandler(\n    \"updateHTMLAttrs\",\n    (selector2, attribute2, value) => {\n      const el = typeof selector2 === \"string\" ? window == null ? void 0 : window.document.querySelector(selector2) : unrefElement(selector2);\n      if (!el)\n        return;\n      let style;\n      if (disableTransition) {\n        style = window.document.createElement(\"style\");\n        style.appendChild(document.createTextNode(\"*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\"));\n        window.document.head.appendChild(style);\n      }\n      if (attribute2 === \"class\") {\n        const current = value.split(/\\s/g);\n        Object.values(modes).flatMap((i) => (i || \"\").split(/\\s/g)).filter(Boolean).forEach((v) => {\n          if (current.includes(v))\n            el.classList.add(v);\n          else\n            el.classList.remove(v);\n        });\n      } else {\n        el.setAttribute(attribute2, value);\n      }\n      if (disableTransition) {\n        window.getComputedStyle(style).opacity;\n        document.head.removeChild(style);\n      }\n    }\n  );\n  function defaultOnChanged(mode) {\n    var _a;\n    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);\n  }\n  function onChanged(mode) {\n    if (options.onChanged)\n      options.onChanged(mode, defaultOnChanged);\n    else\n      defaultOnChanged(mode);\n  }\n  watch(state, onChanged, { flush: \"post\", immediate: true });\n  tryOnMounted(() => onChanged(state.value));\n  const auto = computed({\n    get() {\n      return emitAuto ? store.value : state.value;\n    },\n    set(v) {\n      store.value = v;\n    }\n  });\n  try {\n    return Object.assign(auto, { store, system, state });\n  } catch (e) {\n    return auto;\n  }\n}\n\nfunction useConfirmDialog(revealed = ref(false)) {\n  const confirmHook = createEventHook();\n  const cancelHook = createEventHook();\n  const revealHook = createEventHook();\n  let _resolve = noop;\n  const reveal = (data) => {\n    revealHook.trigger(data);\n    revealed.value = true;\n    return new Promise((resolve) => {\n      _resolve = resolve;\n    });\n  };\n  const confirm = (data) => {\n    revealed.value = false;\n    confirmHook.trigger(data);\n    _resolve({ data, isCanceled: false });\n  };\n  const cancel = (data) => {\n    revealed.value = false;\n    cancelHook.trigger(data);\n    _resolve({ data, isCanceled: true });\n  };\n  return {\n    isRevealed: computed(() => revealed.value),\n    reveal,\n    confirm,\n    cancel,\n    onReveal: revealHook.on,\n    onConfirm: confirmHook.on,\n    onCancel: cancelHook.on\n  };\n}\n\nvar __getOwnPropSymbols$l = Object.getOwnPropertySymbols;\nvar __hasOwnProp$l = Object.prototype.hasOwnProperty;\nvar __propIsEnum$l = Object.prototype.propertyIsEnumerable;\nvar __objRest$3 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$l.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$l)\n    for (var prop of __getOwnPropSymbols$l(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$l.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction useMutationObserver(target, callback, options = {}) {\n  const _a = options, { window = defaultWindow } = _a, mutationOptions = __objRest$3(_a, [\"window\"]);\n  let observer;\n  const isSupported = useSupported(() => window && \"MutationObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const stopWatch = watch(\n    () => unrefElement(target),\n    (el) => {\n      cleanup();\n      if (isSupported.value && window && el) {\n        observer = new MutationObserver(callback);\n        observer.observe(el, mutationOptions);\n      }\n    },\n    { immediate: true }\n  );\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useCssVar(prop, target, options = {}) {\n  const { window = defaultWindow, initialValue = \"\", observe = false } = options;\n  const variable = ref(initialValue);\n  const elRef = computed(() => {\n    var _a;\n    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);\n  });\n  function updateCssVar() {\n    var _a;\n    const key = toValue(prop);\n    const el = toValue(elRef);\n    if (el && window) {\n      const value = (_a = window.getComputedStyle(el).getPropertyValue(key)) == null ? void 0 : _a.trim();\n      variable.value = value || initialValue;\n    }\n  }\n  if (observe) {\n    useMutationObserver(elRef, updateCssVar, {\n      attributes: true,\n      window\n    });\n  }\n  watch(\n    [elRef, () => toValue(prop)],\n    updateCssVar,\n    { immediate: true }\n  );\n  watch(\n    variable,\n    (val) => {\n      var _a;\n      if ((_a = elRef.value) == null ? void 0 : _a.style)\n        elRef.value.style.setProperty(toValue(prop), val);\n    }\n  );\n  return variable;\n}\n\nfunction useCurrentElement() {\n  const vm = getCurrentInstance();\n  const currentElement = computedWithControl(\n    () => null,\n    () => vm.proxy.$el\n  );\n  onUpdated(currentElement.trigger);\n  onMounted(currentElement.trigger);\n  return currentElement;\n}\n\nfunction useCycleList(list, options) {\n  const state = shallowRef(getInitialValue());\n  const listRef = toRef(list);\n  const index = computed({\n    get() {\n      var _a;\n      const targetList = listRef.value;\n      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, targetList) : targetList.indexOf(state.value);\n      if (index2 < 0)\n        index2 = (_a = options == null ? void 0 : options.fallbackIndex) != null ? _a : 0;\n      return index2;\n    },\n    set(v) {\n      set(v);\n    }\n  });\n  function set(i) {\n    const targetList = listRef.value;\n    const length = targetList.length;\n    const index2 = (i % length + length) % length;\n    const value = targetList[index2];\n    state.value = value;\n    return value;\n  }\n  function shift(delta = 1) {\n    return set(index.value + delta);\n  }\n  function next(n = 1) {\n    return shift(n);\n  }\n  function prev(n = 1) {\n    return shift(-n);\n  }\n  function getInitialValue() {\n    var _a, _b;\n    return (_b = toValue((_a = options == null ? void 0 : options.initialValue) != null ? _a : toValue(list)[0])) != null ? _b : void 0;\n  }\n  watch(listRef, () => set(index.value));\n  return {\n    state,\n    index,\n    next,\n    prev\n  };\n}\n\nvar __defProp$i = Object.defineProperty;\nvar __defProps$8 = Object.defineProperties;\nvar __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$k = Object.getOwnPropertySymbols;\nvar __hasOwnProp$k = Object.prototype.hasOwnProperty;\nvar __propIsEnum$k = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$i = (obj, key, value) => key in obj ? __defProp$i(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$i = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$k.call(b, prop))\n      __defNormalProp$i(a, prop, b[prop]);\n  if (__getOwnPropSymbols$k)\n    for (var prop of __getOwnPropSymbols$k(b)) {\n      if (__propIsEnum$k.call(b, prop))\n        __defNormalProp$i(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));\nfunction useDark(options = {}) {\n  const {\n    valueDark = \"dark\",\n    valueLight = \"\"\n  } = options;\n  const mode = useColorMode(__spreadProps$8(__spreadValues$i({}, options), {\n    onChanged: (mode2, defaultHandler) => {\n      var _a;\n      if (options.onChanged)\n        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === \"dark\", defaultHandler, mode2);\n      else\n        defaultHandler(mode2);\n    },\n    modes: {\n      dark: valueDark,\n      light: valueLight\n    }\n  }));\n  const isDark = computed({\n    get() {\n      return mode.value === \"dark\";\n    },\n    set(v) {\n      const modeVal = v ? \"dark\" : \"light\";\n      if (mode.system.value === modeVal)\n        mode.value = \"auto\";\n      else\n        mode.value = modeVal;\n    }\n  });\n  return isDark;\n}\n\nfunction fnBypass(v) {\n  return v;\n}\nfunction fnSetSource(source, value) {\n  return source.value = value;\n}\nfunction defaultDump(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction defaultParse(clone) {\n  return clone ? typeof clone === \"function\" ? clone : cloneFnJSON : fnBypass;\n}\nfunction useManualRefHistory(source, options = {}) {\n  const {\n    clone = false,\n    dump = defaultDump(clone),\n    parse = defaultParse(clone),\n    setSource = fnSetSource\n  } = options;\n  function _createHistoryRecord() {\n    return markRaw({\n      snapshot: dump(source.value),\n      timestamp: timestamp()\n    });\n  }\n  const last = ref(_createHistoryRecord());\n  const undoStack = ref([]);\n  const redoStack = ref([]);\n  const _setSource = (record) => {\n    setSource(source, parse(record.snapshot));\n    last.value = record;\n  };\n  const commit = () => {\n    undoStack.value.unshift(last.value);\n    last.value = _createHistoryRecord();\n    if (options.capacity && undoStack.value.length > options.capacity)\n      undoStack.value.splice(options.capacity, Infinity);\n    if (redoStack.value.length)\n      redoStack.value.splice(0, redoStack.value.length);\n  };\n  const clear = () => {\n    undoStack.value.splice(0, undoStack.value.length);\n    redoStack.value.splice(0, redoStack.value.length);\n  };\n  const undo = () => {\n    const state = undoStack.value.shift();\n    if (state) {\n      redoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const redo = () => {\n    const state = redoStack.value.shift();\n    if (state) {\n      undoStack.value.unshift(last.value);\n      _setSource(state);\n    }\n  };\n  const reset = () => {\n    _setSource(last.value);\n  };\n  const history = computed(() => [last.value, ...undoStack.value]);\n  const canUndo = computed(() => undoStack.value.length > 0);\n  const canRedo = computed(() => redoStack.value.length > 0);\n  return {\n    source,\n    undoStack,\n    redoStack,\n    last,\n    history,\n    canUndo,\n    canRedo,\n    clear,\n    commit,\n    reset,\n    undo,\n    redo\n  };\n}\n\nvar __defProp$h = Object.defineProperty;\nvar __defProps$7 = Object.defineProperties;\nvar __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$j = Object.getOwnPropertySymbols;\nvar __hasOwnProp$j = Object.prototype.hasOwnProperty;\nvar __propIsEnum$j = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$h = (obj, key, value) => key in obj ? __defProp$h(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$h = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$j.call(b, prop))\n      __defNormalProp$h(a, prop, b[prop]);\n  if (__getOwnPropSymbols$j)\n    for (var prop of __getOwnPropSymbols$j(b)) {\n      if (__propIsEnum$j.call(b, prop))\n        __defNormalProp$h(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));\nfunction useRefHistory(source, options = {}) {\n  const {\n    deep = false,\n    flush = \"pre\",\n    eventFilter\n  } = options;\n  const {\n    eventFilter: composedFilter,\n    pause,\n    resume: resumeTracking,\n    isActive: isTracking\n  } = pausableFilter(eventFilter);\n  const {\n    ignoreUpdates,\n    ignorePrevAsyncUpdates,\n    stop\n  } = watchIgnorable(\n    source,\n    commit,\n    { deep, flush, eventFilter: composedFilter }\n  );\n  function setSource(source2, value) {\n    ignorePrevAsyncUpdates();\n    ignoreUpdates(() => {\n      source2.value = value;\n    });\n  }\n  const manualHistory = useManualRefHistory(source, __spreadProps$7(__spreadValues$h({}, options), { clone: options.clone || deep, setSource }));\n  const { clear, commit: manualCommit } = manualHistory;\n  function commit() {\n    ignorePrevAsyncUpdates();\n    manualCommit();\n  }\n  function resume(commitNow) {\n    resumeTracking();\n    if (commitNow)\n      commit();\n  }\n  function batch(fn) {\n    let canceled = false;\n    const cancel = () => canceled = true;\n    ignoreUpdates(() => {\n      fn(cancel);\n    });\n    if (!canceled)\n      commit();\n  }\n  function dispose() {\n    stop();\n    clear();\n  }\n  return __spreadProps$7(__spreadValues$h({}, manualHistory), {\n    isTracking,\n    pause,\n    resume,\n    commit,\n    batch,\n    dispose\n  });\n}\n\nvar __defProp$g = Object.defineProperty;\nvar __defProps$6 = Object.defineProperties;\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$i = Object.getOwnPropertySymbols;\nvar __hasOwnProp$i = Object.prototype.hasOwnProperty;\nvar __propIsEnum$i = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$g = (obj, key, value) => key in obj ? __defProp$g(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$g = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$i.call(b, prop))\n      __defNormalProp$g(a, prop, b[prop]);\n  if (__getOwnPropSymbols$i)\n    for (var prop of __getOwnPropSymbols$i(b)) {\n      if (__propIsEnum$i.call(b, prop))\n        __defNormalProp$g(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\nfunction useDebouncedRefHistory(source, options = {}) {\n  const filter = options.debounce ? debounceFilter(options.debounce) : void 0;\n  const history = useRefHistory(source, __spreadProps$6(__spreadValues$g({}, options), { eventFilter: filter }));\n  return __spreadValues$g({}, history);\n}\n\nfunction useDeviceMotion(options = {}) {\n  const {\n    window = defaultWindow,\n    eventFilter = bypassFilter\n  } = options;\n  const acceleration = ref({ x: null, y: null, z: null });\n  const rotationRate = ref({ alpha: null, beta: null, gamma: null });\n  const interval = ref(0);\n  const accelerationIncludingGravity = ref({\n    x: null,\n    y: null,\n    z: null\n  });\n  if (window) {\n    const onDeviceMotion = createFilterWrapper(\n      eventFilter,\n      (event) => {\n        acceleration.value = event.acceleration;\n        accelerationIncludingGravity.value = event.accelerationIncludingGravity;\n        rotationRate.value = event.rotationRate;\n        interval.value = event.interval;\n      }\n    );\n    useEventListener(window, \"devicemotion\", onDeviceMotion);\n  }\n  return {\n    acceleration,\n    accelerationIncludingGravity,\n    rotationRate,\n    interval\n  };\n}\n\nfunction useDeviceOrientation(options = {}) {\n  const { window = defaultWindow } = options;\n  const isSupported = useSupported(() => window && \"DeviceOrientationEvent\" in window);\n  const isAbsolute = ref(false);\n  const alpha = ref(null);\n  const beta = ref(null);\n  const gamma = ref(null);\n  if (window && isSupported.value) {\n    useEventListener(window, \"deviceorientation\", (event) => {\n      isAbsolute.value = event.absolute;\n      alpha.value = event.alpha;\n      beta.value = event.beta;\n      gamma.value = event.gamma;\n    });\n  }\n  return {\n    isSupported,\n    isAbsolute,\n    alpha,\n    beta,\n    gamma\n  };\n}\n\nfunction useDevicePixelRatio({\n  window = defaultWindow\n} = {}) {\n  const pixelRatio = ref(1);\n  if (window) {\n    let observe = function() {\n      pixelRatio.value = window.devicePixelRatio;\n      cleanup();\n      media = window.matchMedia(`(resolution: ${pixelRatio.value}dppx)`);\n      media.addEventListener(\"change\", observe, { once: true });\n    }, cleanup = function() {\n      media == null ? void 0 : media.removeEventListener(\"change\", observe);\n    };\n    let media;\n    observe();\n    tryOnScopeDispose(cleanup);\n  }\n  return { pixelRatio };\n}\n\nfunction usePermission(permissionDesc, options = {}) {\n  const {\n    controls = false,\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"permissions\" in navigator);\n  let permissionStatus;\n  const desc = typeof permissionDesc === \"string\" ? { name: permissionDesc } : permissionDesc;\n  const state = ref();\n  const onChange = () => {\n    if (permissionStatus)\n      state.value = permissionStatus.state;\n  };\n  const query = createSingletonPromise(async () => {\n    if (!isSupported.value)\n      return;\n    if (!permissionStatus) {\n      try {\n        permissionStatus = await navigator.permissions.query(desc);\n        useEventListener(permissionStatus, \"change\", onChange);\n        onChange();\n      } catch (e) {\n        state.value = \"prompt\";\n      }\n    }\n    return permissionStatus;\n  });\n  query();\n  if (controls) {\n    return {\n      state,\n      isSupported,\n      query\n    };\n  } else {\n    return state;\n  }\n}\n\nfunction useDevicesList(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    requestPermissions = false,\n    constraints = { audio: true, video: true },\n    onUpdated\n  } = options;\n  const devices = ref([]);\n  const videoInputs = computed(() => devices.value.filter((i) => i.kind === \"videoinput\"));\n  const audioInputs = computed(() => devices.value.filter((i) => i.kind === \"audioinput\"));\n  const audioOutputs = computed(() => devices.value.filter((i) => i.kind === \"audiooutput\"));\n  const isSupported = useSupported(() => navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\n  const permissionGranted = ref(false);\n  let stream;\n  async function update() {\n    if (!isSupported.value)\n      return;\n    devices.value = await navigator.mediaDevices.enumerateDevices();\n    onUpdated == null ? void 0 : onUpdated(devices.value);\n    if (stream) {\n      stream.getTracks().forEach((t) => t.stop());\n      stream = null;\n    }\n  }\n  async function ensurePermissions() {\n    if (!isSupported.value)\n      return false;\n    if (permissionGranted.value)\n      return true;\n    const { state, query } = usePermission(\"camera\", { controls: true });\n    await query();\n    if (state.value !== \"granted\") {\n      stream = await navigator.mediaDevices.getUserMedia(constraints);\n      update();\n      permissionGranted.value = true;\n    } else {\n      permissionGranted.value = true;\n    }\n    return permissionGranted.value;\n  }\n  if (isSupported.value) {\n    if (requestPermissions)\n      ensurePermissions();\n    useEventListener(navigator.mediaDevices, \"devicechange\", update);\n    update();\n  }\n  return {\n    devices,\n    ensurePermissions,\n    permissionGranted,\n    videoInputs,\n    audioInputs,\n    audioOutputs,\n    isSupported\n  };\n}\n\nfunction useDisplayMedia(options = {}) {\n  var _a;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const video = options.video;\n  const audio = options.audio;\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getDisplayMedia;\n  });\n  const constraint = { audio, video };\n  const stream = shallowRef();\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);\n    return stream.value;\n  }\n  async function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else\n        _stop();\n    },\n    { immediate: true }\n  );\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    enabled\n  };\n}\n\nfunction useDocumentVisibility({ document = defaultDocument } = {}) {\n  if (!document)\n    return ref(\"visible\");\n  const visibility = ref(document.visibilityState);\n  useEventListener(document, \"visibilitychange\", () => {\n    visibility.value = document.visibilityState;\n  });\n  return visibility;\n}\n\nvar __defProp$f = Object.defineProperty;\nvar __defProps$5 = Object.defineProperties;\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$h = Object.getOwnPropertySymbols;\nvar __hasOwnProp$h = Object.prototype.hasOwnProperty;\nvar __propIsEnum$h = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$f = (obj, key, value) => key in obj ? __defProp$f(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$f = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$h.call(b, prop))\n      __defNormalProp$f(a, prop, b[prop]);\n  if (__getOwnPropSymbols$h)\n    for (var prop of __getOwnPropSymbols$h(b)) {\n      if (__propIsEnum$h.call(b, prop))\n        __defNormalProp$f(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\nfunction useDraggable(target, options = {}) {\n  var _a, _b;\n  const {\n    pointerTypes,\n    preventDefault,\n    stopPropagation,\n    exact,\n    onMove,\n    onEnd,\n    onStart,\n    initialValue,\n    axis = \"both\",\n    draggingElement = defaultWindow,\n    handle: draggingHandle = target\n  } = options;\n  const position = ref(\n    (_a = toValue(initialValue)) != null ? _a : { x: 0, y: 0 }\n  );\n  const pressedDelta = ref();\n  const filterEvent = (e) => {\n    if (pointerTypes)\n      return pointerTypes.includes(e.pointerType);\n    return true;\n  };\n  const handleEvent = (e) => {\n    if (toValue(preventDefault))\n      e.preventDefault();\n    if (toValue(stopPropagation))\n      e.stopPropagation();\n  };\n  const start = (e) => {\n    if (!filterEvent(e))\n      return;\n    if (toValue(exact) && e.target !== toValue(target))\n      return;\n    const rect = toValue(target).getBoundingClientRect();\n    const pos = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n    if ((onStart == null ? void 0 : onStart(pos, e)) === false)\n      return;\n    pressedDelta.value = pos;\n    handleEvent(e);\n  };\n  const move = (e) => {\n    if (!filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    let { x, y } = position.value;\n    if (axis === \"x\" || axis === \"both\")\n      x = e.clientX - pressedDelta.value.x;\n    if (axis === \"y\" || axis === \"both\")\n      y = e.clientY - pressedDelta.value.y;\n    position.value = {\n      x,\n      y\n    };\n    onMove == null ? void 0 : onMove(position.value, e);\n    handleEvent(e);\n  };\n  const end = (e) => {\n    if (!filterEvent(e))\n      return;\n    if (!pressedDelta.value)\n      return;\n    pressedDelta.value = void 0;\n    onEnd == null ? void 0 : onEnd(position.value, e);\n    handleEvent(e);\n  };\n  if (isClient) {\n    const config = { capture: (_b = options.capture) != null ? _b : true };\n    useEventListener(draggingHandle, \"pointerdown\", start, config);\n    useEventListener(draggingElement, \"pointermove\", move, config);\n    useEventListener(draggingElement, \"pointerup\", end, config);\n  }\n  return __spreadProps$5(__spreadValues$f({}, toRefs(position)), {\n    position,\n    isDragging: computed(() => !!pressedDelta.value),\n    style: computed(\n      () => `left:${position.value.x}px;top:${position.value.y}px;`\n    )\n  });\n}\n\nfunction useDropZone(target, onDrop) {\n  const isOverDropZone = ref(false);\n  let counter = 0;\n  if (isClient) {\n    useEventListener(target, \"dragenter\", (event) => {\n      event.preventDefault();\n      counter += 1;\n      isOverDropZone.value = true;\n    });\n    useEventListener(target, \"dragover\", (event) => {\n      event.preventDefault();\n    });\n    useEventListener(target, \"dragleave\", (event) => {\n      event.preventDefault();\n      counter -= 1;\n      if (counter === 0)\n        isOverDropZone.value = false;\n    });\n    useEventListener(target, \"drop\", (event) => {\n      var _a, _b;\n      event.preventDefault();\n      counter = 0;\n      isOverDropZone.value = false;\n      const files = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);\n      onDrop == null ? void 0 : onDrop(files.length === 0 ? null : files);\n    });\n  }\n  return {\n    isOverDropZone\n  };\n}\n\nvar __getOwnPropSymbols$g = Object.getOwnPropertySymbols;\nvar __hasOwnProp$g = Object.prototype.hasOwnProperty;\nvar __propIsEnum$g = Object.prototype.propertyIsEnumerable;\nvar __objRest$2 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$g.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$g)\n    for (var prop of __getOwnPropSymbols$g(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$g.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction useResizeObserver(target, callback, options = {}) {\n  const _a = options, { window = defaultWindow } = _a, observerOptions = __objRest$2(_a, [\"window\"]);\n  let observer;\n  const isSupported = useSupported(() => window && \"ResizeObserver\" in window);\n  const cleanup = () => {\n    if (observer) {\n      observer.disconnect();\n      observer = void 0;\n    }\n  };\n  const targets = computed(\n    () => Array.isArray(target) ? target.map((el) => unrefElement(el)) : [unrefElement(target)]\n  );\n  const stopWatch = watch(\n    targets,\n    (els) => {\n      cleanup();\n      if (isSupported.value && window) {\n        observer = new ResizeObserver(callback);\n        for (const _el of els)\n          _el && observer.observe(_el, observerOptions);\n      }\n    },\n    { immediate: true, flush: \"post\", deep: true }\n  );\n  const stop = () => {\n    cleanup();\n    stopWatch();\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    stop\n  };\n}\n\nfunction useElementBounding(target, options = {}) {\n  const {\n    reset = true,\n    windowResize = true,\n    windowScroll = true,\n    immediate = true\n  } = options;\n  const height = ref(0);\n  const bottom = ref(0);\n  const left = ref(0);\n  const right = ref(0);\n  const top = ref(0);\n  const width = ref(0);\n  const x = ref(0);\n  const y = ref(0);\n  function update() {\n    const el = unrefElement(target);\n    if (!el) {\n      if (reset) {\n        height.value = 0;\n        bottom.value = 0;\n        left.value = 0;\n        right.value = 0;\n        top.value = 0;\n        width.value = 0;\n        x.value = 0;\n        y.value = 0;\n      }\n      return;\n    }\n    const rect = el.getBoundingClientRect();\n    height.value = rect.height;\n    bottom.value = rect.bottom;\n    left.value = rect.left;\n    right.value = rect.right;\n    top.value = rect.top;\n    width.value = rect.width;\n    x.value = rect.x;\n    y.value = rect.y;\n  }\n  useResizeObserver(target, update);\n  watch(() => unrefElement(target), (ele) => !ele && update());\n  if (windowScroll)\n    useEventListener(\"scroll\", update, { capture: true, passive: true });\n  if (windowResize)\n    useEventListener(\"resize\", update, { passive: true });\n  tryOnMounted(() => {\n    if (immediate)\n      update();\n  });\n  return {\n    height,\n    bottom,\n    left,\n    right,\n    top,\n    width,\n    x,\n    y,\n    update\n  };\n}\n\nvar __defProp$e = Object.defineProperty;\nvar __getOwnPropSymbols$f = Object.getOwnPropertySymbols;\nvar __hasOwnProp$f = Object.prototype.hasOwnProperty;\nvar __propIsEnum$f = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$e = (obj, key, value) => key in obj ? __defProp$e(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$e = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$f.call(b, prop))\n      __defNormalProp$e(a, prop, b[prop]);\n  if (__getOwnPropSymbols$f)\n    for (var prop of __getOwnPropSymbols$f(b)) {\n      if (__propIsEnum$f.call(b, prop))\n        __defNormalProp$e(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useElementByPoint(options) {\n  const element = ref(null);\n  const { x, y, document = defaultDocument } = options;\n  const controls = useRafFn(() => {\n    element.value = (document == null ? void 0 : document.elementFromPoint(toValue(x), toValue(y))) || null;\n  });\n  return __spreadValues$e({\n    element\n  }, controls);\n}\n\nfunction useElementHover(el, options = {}) {\n  const {\n    delayEnter = 0,\n    delayLeave = 0,\n    window = defaultWindow\n  } = options;\n  const isHovered = ref(false);\n  let timer;\n  const toggle = (entering) => {\n    const delay = entering ? delayEnter : delayLeave;\n    if (timer) {\n      clearTimeout(timer);\n      timer = void 0;\n    }\n    if (delay)\n      timer = setTimeout(() => isHovered.value = entering, delay);\n    else\n      isHovered.value = entering;\n  };\n  if (!window)\n    return isHovered;\n  useEventListener(el, \"mouseenter\", () => toggle(true), { passive: true });\n  useEventListener(el, \"mouseleave\", () => toggle(false), { passive: true });\n  return isHovered;\n}\n\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\n  const { window = defaultWindow, box = \"content-box\" } = options;\n  const isSVG = computed(() => {\n    var _a, _b;\n    return (_b = (_a = unrefElement(target)) == null ? void 0 : _a.namespaceURI) == null ? void 0 : _b.includes(\"svg\");\n  });\n  const width = ref(initialSize.width);\n  const height = ref(initialSize.height);\n  useResizeObserver(\n    target,\n    ([entry]) => {\n      const boxSize = box === \"border-box\" ? entry.borderBoxSize : box === \"content-box\" ? entry.contentBoxSize : entry.devicePixelContentBoxSize;\n      if (window && isSVG.value) {\n        const $elem = unrefElement(target);\n        if ($elem) {\n          const styles = window.getComputedStyle($elem);\n          width.value = parseFloat(styles.width);\n          height.value = parseFloat(styles.height);\n        }\n      } else {\n        if (boxSize) {\n          const formatBoxSize = Array.isArray(boxSize) ? boxSize : [boxSize];\n          width.value = formatBoxSize.reduce((acc, { inlineSize }) => acc + inlineSize, 0);\n          height.value = formatBoxSize.reduce((acc, { blockSize }) => acc + blockSize, 0);\n        } else {\n          width.value = entry.contentRect.width;\n          height.value = entry.contentRect.height;\n        }\n      }\n    },\n    options\n  );\n  watch(\n    () => unrefElement(target),\n    (ele) => {\n      width.value = ele ? initialSize.width : 0;\n      height.value = ele ? initialSize.height : 0;\n    }\n  );\n  return {\n    width,\n    height\n  };\n}\n\nfunction useIntersectionObserver(target, callback, options = {}) {\n  const {\n    root,\n    rootMargin = \"0px\",\n    threshold = 0.1,\n    window = defaultWindow,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => window && \"IntersectionObserver\" in window);\n  const targets = computed(() => {\n    const _target = toValue(target);\n    return (Array.isArray(_target) ? _target : [_target]).map(unrefElement).filter(notNullish);\n  });\n  let cleanup = noop;\n  const isActive = ref(immediate);\n  const stopWatch = isSupported.value ? watch(\n    () => [targets.value, unrefElement(root), isActive.value],\n    ([targets2, root2]) => {\n      cleanup();\n      if (!isActive.value)\n        return;\n      if (!targets2.length)\n        return;\n      const observer = new IntersectionObserver(\n        callback,\n        {\n          root: unrefElement(root2),\n          rootMargin,\n          threshold\n        }\n      );\n      targets2.forEach((el) => el && observer.observe(el));\n      cleanup = () => {\n        observer.disconnect();\n        cleanup = noop;\n      };\n    },\n    { immediate, flush: \"post\" }\n  ) : noop;\n  const stop = () => {\n    cleanup();\n    stopWatch();\n    isActive.value = false;\n  };\n  tryOnScopeDispose(stop);\n  return {\n    isSupported,\n    isActive,\n    pause() {\n      cleanup();\n      isActive.value = false;\n    },\n    resume() {\n      isActive.value = true;\n    },\n    stop\n  };\n}\n\nfunction useElementVisibility(element, { window = defaultWindow, scrollTarget } = {}) {\n  const elementIsVisible = ref(false);\n  useIntersectionObserver(\n    element,\n    ([{ isIntersecting }]) => {\n      elementIsVisible.value = isIntersecting;\n    },\n    {\n      root: scrollTarget,\n      window\n    }\n  );\n  return elementIsVisible;\n}\n\nconst events = /* @__PURE__ */ new Map();\n\nfunction useEventBus(key) {\n  const scope = getCurrentScope();\n  function on(listener) {\n    var _a;\n    const listeners = events.get(key) || /* @__PURE__ */ new Set();\n    listeners.add(listener);\n    events.set(key, listeners);\n    const _off = () => off(listener);\n    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);\n    return _off;\n  }\n  function once(listener) {\n    function _listener(...args) {\n      off(_listener);\n      listener(...args);\n    }\n    return on(_listener);\n  }\n  function off(listener) {\n    const listeners = events.get(key);\n    if (!listeners)\n      return;\n    listeners.delete(listener);\n    if (!listeners.size)\n      reset();\n  }\n  function reset() {\n    events.delete(key);\n  }\n  function emit(event, payload) {\n    var _a;\n    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));\n  }\n  return { on, once, off, emit, reset };\n}\n\nfunction useEventSource(url, events = [], options = {}) {\n  const event = ref(null);\n  const data = ref(null);\n  const status = ref(\"CONNECTING\");\n  const eventSource = ref(null);\n  const error = shallowRef(null);\n  const {\n    withCredentials = false\n  } = options;\n  const close = () => {\n    if (eventSource.value) {\n      eventSource.value.close();\n      eventSource.value = null;\n      status.value = \"CLOSED\";\n    }\n  };\n  const es = new EventSource(url, { withCredentials });\n  eventSource.value = es;\n  es.onopen = () => {\n    status.value = \"OPEN\";\n    error.value = null;\n  };\n  es.onerror = (e) => {\n    status.value = \"CLOSED\";\n    error.value = e;\n  };\n  es.onmessage = (e) => {\n    event.value = null;\n    data.value = e.data;\n  };\n  for (const event_name of events) {\n    useEventListener(es, event_name, (e) => {\n      event.value = event_name;\n      data.value = e.data || null;\n    });\n  }\n  tryOnScopeDispose(() => {\n    close();\n  });\n  return {\n    eventSource,\n    event,\n    data,\n    status,\n    error,\n    close\n  };\n}\n\nfunction useEyeDropper(options = {}) {\n  const { initialValue = \"\" } = options;\n  const isSupported = useSupported(() => typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  const sRGBHex = ref(initialValue);\n  async function open(openOptions) {\n    if (!isSupported.value)\n      return;\n    const eyeDropper = new window.EyeDropper();\n    const result = await eyeDropper.open(openOptions);\n    sRGBHex.value = result.sRGBHex;\n    return result;\n  }\n  return { isSupported, sRGBHex, open };\n}\n\nfunction useFavicon(newIcon = null, options = {}) {\n  const {\n    baseUrl = \"\",\n    rel = \"icon\",\n    document = defaultDocument\n  } = options;\n  const favicon = toRef(newIcon);\n  const applyIcon = (icon) => {\n    document == null ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`).forEach((el) => el.href = `${baseUrl}${icon}`);\n  };\n  watch(\n    favicon,\n    (i, o) => {\n      if (typeof i === \"string\" && i !== o)\n        applyIcon(i);\n    },\n    { immediate: true }\n  );\n  return favicon;\n}\n\nvar __defProp$d = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$e = Object.getOwnPropertySymbols;\nvar __hasOwnProp$e = Object.prototype.hasOwnProperty;\nvar __propIsEnum$e = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$d = (obj, key, value) => key in obj ? __defProp$d(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$d = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$e.call(b, prop))\n      __defNormalProp$d(a, prop, b[prop]);\n  if (__getOwnPropSymbols$e)\n    for (var prop of __getOwnPropSymbols$e(b)) {\n      if (__propIsEnum$e.call(b, prop))\n        __defNormalProp$d(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nconst payloadMapping = {\n  json: \"application/json\",\n  text: \"text/plain\"\n};\nfunction isFetchOptions(obj) {\n  return obj && containsProp(obj, \"immediate\", \"refetch\", \"initialData\", \"timeout\", \"beforeFetch\", \"afterFetch\", \"onFetchError\", \"fetch\");\n}\nfunction isAbsoluteURL(url) {\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\nfunction headersToObject(headers) {\n  if (typeof Headers !== \"undefined\" && headers instanceof Headers)\n    return Object.fromEntries([...headers.entries()]);\n  return headers;\n}\nfunction combineCallbacks(combination, ...callbacks) {\n  if (combination === \"overwrite\") {\n    return async (ctx) => {\n      const callback = callbacks[callbacks.length - 1];\n      if (callback)\n        return __spreadValues$d(__spreadValues$d({}, ctx), await callback(ctx));\n      return ctx;\n    };\n  } else {\n    return async (ctx) => {\n      for (const callback of callbacks) {\n        if (callback)\n          ctx = __spreadValues$d(__spreadValues$d({}, ctx), await callback(ctx));\n      }\n      return ctx;\n    };\n  }\n}\nfunction createFetch(config = {}) {\n  const _combination = config.combination || \"chain\";\n  const _options = config.options || {};\n  const _fetchOptions = config.fetchOptions || {};\n  function useFactoryFetch(url, ...args) {\n    const computedUrl = computed(() => {\n      const baseUrl = toValue(config.baseUrl);\n      const targetUrl = toValue(url);\n      return baseUrl && !isAbsoluteURL(targetUrl) ? joinPaths(baseUrl, targetUrl) : targetUrl;\n    });\n    let options = _options;\n    let fetchOptions = _fetchOptions;\n    if (args.length > 0) {\n      if (isFetchOptions(args[0])) {\n        options = __spreadProps$4(__spreadValues$d(__spreadValues$d({}, options), args[0]), {\n          beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[0].beforeFetch),\n          afterFetch: combineCallbacks(_combination, _options.afterFetch, args[0].afterFetch),\n          onFetchError: combineCallbacks(_combination, _options.onFetchError, args[0].onFetchError)\n        });\n      } else {\n        fetchOptions = __spreadProps$4(__spreadValues$d(__spreadValues$d({}, fetchOptions), args[0]), {\n          headers: __spreadValues$d(__spreadValues$d({}, headersToObject(fetchOptions.headers) || {}), headersToObject(args[0].headers) || {})\n        });\n      }\n    }\n    if (args.length > 1 && isFetchOptions(args[1])) {\n      options = __spreadProps$4(__spreadValues$d(__spreadValues$d({}, options), args[1]), {\n        beforeFetch: combineCallbacks(_combination, _options.beforeFetch, args[1].beforeFetch),\n        afterFetch: combineCallbacks(_combination, _options.afterFetch, args[1].afterFetch),\n        onFetchError: combineCallbacks(_combination, _options.onFetchError, args[1].onFetchError)\n      });\n    }\n    return useFetch(computedUrl, fetchOptions, options);\n  }\n  return useFactoryFetch;\n}\nfunction useFetch(url, ...args) {\n  var _a;\n  const supportsAbort = typeof AbortController === \"function\";\n  let fetchOptions = {};\n  let options = { immediate: true, refetch: false, timeout: 0 };\n  const config = {\n    method: \"GET\",\n    type: \"text\",\n    payload: void 0\n  };\n  if (args.length > 0) {\n    if (isFetchOptions(args[0]))\n      options = __spreadValues$d(__spreadValues$d({}, options), args[0]);\n    else\n      fetchOptions = args[0];\n  }\n  if (args.length > 1) {\n    if (isFetchOptions(args[1]))\n      options = __spreadValues$d(__spreadValues$d({}, options), args[1]);\n  }\n  const {\n    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,\n    initialData,\n    timeout\n  } = options;\n  const responseEvent = createEventHook();\n  const errorEvent = createEventHook();\n  const finallyEvent = createEventHook();\n  const isFinished = ref(false);\n  const isFetching = ref(false);\n  const aborted = ref(false);\n  const statusCode = ref(null);\n  const response = shallowRef(null);\n  const error = shallowRef(null);\n  const data = shallowRef(initialData || null);\n  const canAbort = computed(() => supportsAbort && isFetching.value);\n  let controller;\n  let timer;\n  const abort = () => {\n    if (supportsAbort) {\n      controller == null ? void 0 : controller.abort();\n      controller = new AbortController();\n      controller.signal.onabort = () => aborted.value = true;\n      fetchOptions = __spreadProps$4(__spreadValues$d({}, fetchOptions), {\n        signal: controller.signal\n      });\n    }\n  };\n  const loading = (isLoading) => {\n    isFetching.value = isLoading;\n    isFinished.value = !isLoading;\n  };\n  if (timeout)\n    timer = useTimeoutFn(abort, timeout, { immediate: false });\n  const execute = async (throwOnFailed = false) => {\n    var _a2;\n    abort();\n    loading(true);\n    error.value = null;\n    statusCode.value = null;\n    aborted.value = false;\n    const defaultFetchOptions = {\n      method: config.method,\n      headers: {}\n    };\n    if (config.payload) {\n      const headers = headersToObject(defaultFetchOptions.headers);\n      if (config.payloadType)\n        headers[\"Content-Type\"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;\n      const payload = toValue(config.payload);\n      defaultFetchOptions.body = config.payloadType === \"json\" ? JSON.stringify(payload) : payload;\n    }\n    let isCanceled = false;\n    const context = {\n      url: toValue(url),\n      options: __spreadValues$d(__spreadValues$d({}, defaultFetchOptions), fetchOptions),\n      cancel: () => {\n        isCanceled = true;\n      }\n    };\n    if (options.beforeFetch)\n      Object.assign(context, await options.beforeFetch(context));\n    if (isCanceled || !fetch) {\n      loading(false);\n      return Promise.resolve(null);\n    }\n    let responseData = null;\n    if (timer)\n      timer.start();\n    return new Promise((resolve, reject) => {\n      var _a3;\n      fetch(\n        context.url,\n        __spreadProps$4(__spreadValues$d(__spreadValues$d({}, defaultFetchOptions), context.options), {\n          headers: __spreadValues$d(__spreadValues$d({}, headersToObject(defaultFetchOptions.headers)), headersToObject((_a3 = context.options) == null ? void 0 : _a3.headers))\n        })\n      ).then(async (fetchResponse) => {\n        response.value = fetchResponse;\n        statusCode.value = fetchResponse.status;\n        responseData = await fetchResponse[config.type]();\n        if (!fetchResponse.ok) {\n          data.value = initialData || null;\n          throw new Error(fetchResponse.statusText);\n        }\n        if (options.afterFetch)\n          ({ data: responseData } = await options.afterFetch({ data: responseData, response: fetchResponse }));\n        data.value = responseData;\n        responseEvent.trigger(fetchResponse);\n        return resolve(fetchResponse);\n      }).catch(async (fetchError) => {\n        let errorData = fetchError.message || fetchError.name;\n        if (options.onFetchError)\n          ({ error: errorData } = await options.onFetchError({ data: responseData, error: fetchError, response: response.value }));\n        error.value = errorData;\n        errorEvent.trigger(fetchError);\n        if (throwOnFailed)\n          return reject(fetchError);\n        return resolve(null);\n      }).finally(() => {\n        loading(false);\n        if (timer)\n          timer.stop();\n        finallyEvent.trigger(null);\n      });\n    });\n  };\n  const refetch = toRef(options.refetch);\n  watch(\n    [\n      refetch,\n      toRef(url)\n    ],\n    ([refetch2]) => refetch2 && execute(),\n    { deep: true }\n  );\n  const shell = {\n    isFinished,\n    statusCode,\n    response,\n    error,\n    data,\n    isFetching,\n    canAbort,\n    aborted,\n    abort,\n    execute,\n    onFetchResponse: responseEvent.on,\n    onFetchError: errorEvent.on,\n    onFetchFinally: finallyEvent.on,\n    // method\n    get: setMethod(\"GET\"),\n    put: setMethod(\"PUT\"),\n    post: setMethod(\"POST\"),\n    delete: setMethod(\"DELETE\"),\n    patch: setMethod(\"PATCH\"),\n    head: setMethod(\"HEAD\"),\n    options: setMethod(\"OPTIONS\"),\n    // type\n    json: setType(\"json\"),\n    text: setType(\"text\"),\n    blob: setType(\"blob\"),\n    arrayBuffer: setType(\"arrayBuffer\"),\n    formData: setType(\"formData\")\n  };\n  function setMethod(method) {\n    return (payload, payloadType) => {\n      if (!isFetching.value) {\n        config.method = method;\n        config.payload = payload;\n        config.payloadType = payloadType;\n        if (isRef(config.payload)) {\n          watch(\n            [\n              refetch,\n              toRef(config.payload)\n            ],\n            ([refetch2]) => refetch2 && execute(),\n            { deep: true }\n          );\n        }\n        const rawPayload = toValue(config.payload);\n        if (!payloadType && rawPayload && Object.getPrototypeOf(rawPayload) === Object.prototype && !(rawPayload instanceof FormData))\n          config.payloadType = \"json\";\n        return __spreadProps$4(__spreadValues$d({}, shell), {\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        });\n      }\n      return void 0;\n    };\n  }\n  function waitUntilFinished() {\n    return new Promise((resolve, reject) => {\n      until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));\n    });\n  }\n  function setType(type) {\n    return () => {\n      if (!isFetching.value) {\n        config.type = type;\n        return __spreadProps$4(__spreadValues$d({}, shell), {\n          then(onFulfilled, onRejected) {\n            return waitUntilFinished().then(onFulfilled, onRejected);\n          }\n        });\n      }\n      return void 0;\n    };\n  }\n  if (options.immediate)\n    Promise.resolve().then(() => execute());\n  return __spreadProps$4(__spreadValues$d({}, shell), {\n    then(onFulfilled, onRejected) {\n      return waitUntilFinished().then(onFulfilled, onRejected);\n    }\n  });\n}\nfunction joinPaths(start, end) {\n  if (!start.endsWith(\"/\") && !end.startsWith(\"/\"))\n    return `${start}/${end}`;\n  return `${start}${end}`;\n}\n\nvar __defProp$c = Object.defineProperty;\nvar __getOwnPropSymbols$d = Object.getOwnPropertySymbols;\nvar __hasOwnProp$d = Object.prototype.hasOwnProperty;\nvar __propIsEnum$d = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$c = (obj, key, value) => key in obj ? __defProp$c(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$c = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$d.call(b, prop))\n      __defNormalProp$c(a, prop, b[prop]);\n  if (__getOwnPropSymbols$d)\n    for (var prop of __getOwnPropSymbols$d(b)) {\n      if (__propIsEnum$d.call(b, prop))\n        __defNormalProp$c(a, prop, b[prop]);\n    }\n  return a;\n};\nconst DEFAULT_OPTIONS = {\n  multiple: true,\n  accept: \"*\"\n};\nfunction useFileDialog(options = {}) {\n  const {\n    document = defaultDocument\n  } = options;\n  const files = ref(null);\n  const { on: onChange, trigger } = createEventHook();\n  let input;\n  if (document) {\n    input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.onchange = (event) => {\n      const result = event.target;\n      files.value = result.files;\n      trigger(files.value);\n    };\n  }\n  const open = (localOptions) => {\n    if (!input)\n      return;\n    const _options = __spreadValues$c(__spreadValues$c(__spreadValues$c({}, DEFAULT_OPTIONS), options), localOptions);\n    input.multiple = _options.multiple;\n    input.accept = _options.accept;\n    if (hasOwn(_options, \"capture\"))\n      input.capture = _options.capture;\n    input.click();\n  };\n  const reset = () => {\n    files.value = null;\n    if (input)\n      input.value = \"\";\n  };\n  return {\n    files: readonly(files),\n    open,\n    reset,\n    onChange\n  };\n}\n\nvar __defProp$b = Object.defineProperty;\nvar __getOwnPropSymbols$c = Object.getOwnPropertySymbols;\nvar __hasOwnProp$c = Object.prototype.hasOwnProperty;\nvar __propIsEnum$c = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$b = (obj, key, value) => key in obj ? __defProp$b(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$b = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$c.call(b, prop))\n      __defNormalProp$b(a, prop, b[prop]);\n  if (__getOwnPropSymbols$c)\n    for (var prop of __getOwnPropSymbols$c(b)) {\n      if (__propIsEnum$c.call(b, prop))\n        __defNormalProp$b(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useFileSystemAccess(options = {}) {\n  const {\n    window: _window = defaultWindow,\n    dataType = \"Text\"\n  } = options;\n  const window = _window;\n  const isSupported = useSupported(() => window && \"showSaveFilePicker\" in window && \"showOpenFilePicker\" in window);\n  const fileHandle = ref();\n  const data = ref();\n  const file = ref();\n  const fileName = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : \"\";\n  });\n  const fileMIME = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : \"\";\n  });\n  const fileSize = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;\n  });\n  const fileLastModified = computed(() => {\n    var _a, _b;\n    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;\n  });\n  async function open(_options = {}) {\n    if (!isSupported.value)\n      return;\n    const [handle] = await window.showOpenFilePicker(__spreadValues$b(__spreadValues$b({}, toValue(options)), _options));\n    fileHandle.value = handle;\n    await updateFile();\n    await updateData();\n  }\n  async function create(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker(__spreadValues$b(__spreadValues$b({}, options), _options));\n    data.value = void 0;\n    await updateFile();\n    await updateData();\n  }\n  async function save(_options = {}) {\n    if (!isSupported.value)\n      return;\n    if (!fileHandle.value)\n      return saveAs(_options);\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function saveAs(_options = {}) {\n    if (!isSupported.value)\n      return;\n    fileHandle.value = await window.showSaveFilePicker(__spreadValues$b(__spreadValues$b({}, options), _options));\n    if (data.value) {\n      const writableStream = await fileHandle.value.createWritable();\n      await writableStream.write(data.value);\n      await writableStream.close();\n    }\n    await updateFile();\n  }\n  async function updateFile() {\n    var _a;\n    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());\n  }\n  async function updateData() {\n    var _a, _b;\n    const type = toValue(dataType);\n    if (type === \"Text\")\n      data.value = await ((_a = file.value) == null ? void 0 : _a.text());\n    else if (type === \"ArrayBuffer\")\n      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());\n    else if (type === \"Blob\")\n      data.value = file.value;\n  }\n  watch(() => toValue(dataType), updateData);\n  return {\n    isSupported,\n    data,\n    file,\n    fileName,\n    fileMIME,\n    fileSize,\n    fileLastModified,\n    open,\n    create,\n    save,\n    saveAs,\n    updateData\n  };\n}\n\nfunction useFocus(target, options = {}) {\n  const { initialValue = false } = options;\n  const innerFocused = ref(false);\n  const targetElement = computed(() => unrefElement(target));\n  useEventListener(targetElement, \"focus\", () => innerFocused.value = true);\n  useEventListener(targetElement, \"blur\", () => innerFocused.value = false);\n  const focused = computed({\n    get: () => innerFocused.value,\n    set(value) {\n      var _a, _b;\n      if (!value && innerFocused.value)\n        (_a = targetElement.value) == null ? void 0 : _a.blur();\n      else if (value && !innerFocused.value)\n        (_b = targetElement.value) == null ? void 0 : _b.focus();\n    }\n  });\n  watch(\n    targetElement,\n    () => {\n      focused.value = initialValue;\n    },\n    { immediate: true, flush: \"post\" }\n  );\n  return { focused };\n}\n\nfunction useFocusWithin(target, options = {}) {\n  const activeElement = useActiveElement(options);\n  const targetElement = computed(() => unrefElement(target));\n  const focused = computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);\n  return { focused };\n}\n\nfunction useFps(options) {\n  var _a;\n  const fps = ref(0);\n  if (typeof performance === \"undefined\")\n    return fps;\n  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;\n  let last = performance.now();\n  let ticks = 0;\n  useRafFn(() => {\n    ticks += 1;\n    if (ticks >= every) {\n      const now = performance.now();\n      const diff = now - last;\n      fps.value = Math.round(1e3 / (diff / ticks));\n      last = now;\n      ticks = 0;\n    }\n  });\n  return fps;\n}\n\nconst eventHandlers = [\n  \"fullscreenchange\",\n  \"webkitfullscreenchange\",\n  \"webkitendfullscreen\",\n  \"mozfullscreenchange\",\n  \"MSFullscreenChange\"\n];\nfunction useFullscreen(target, options = {}) {\n  const {\n    document = defaultDocument,\n    autoExit = false\n  } = options;\n  const targetRef = computed(() => {\n    var _a;\n    return (_a = unrefElement(target)) != null ? _a : document == null ? void 0 : document.querySelector(\"html\");\n  });\n  const isFullscreen = ref(false);\n  const requestMethod = computed(() => {\n    return [\n      \"requestFullscreen\",\n      \"webkitRequestFullscreen\",\n      \"webkitEnterFullscreen\",\n      \"webkitEnterFullScreen\",\n      \"webkitRequestFullScreen\",\n      \"mozRequestFullScreen\",\n      \"msRequestFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const exitMethod = computed(() => {\n    return [\n      \"exitFullscreen\",\n      \"webkitExitFullscreen\",\n      \"webkitExitFullScreen\",\n      \"webkitCancelFullScreen\",\n      \"mozCancelFullScreen\",\n      \"msExitFullscreen\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenEnabled = computed(() => {\n    return [\n      \"fullScreen\",\n      \"webkitIsFullScreen\",\n      \"webkitDisplayingFullscreen\",\n      \"mozFullScreen\",\n      \"msFullscreenElement\"\n    ].find((m) => document && m in document || targetRef.value && m in targetRef.value);\n  });\n  const fullscreenElementMethod = [\n    \"fullscreenElement\",\n    \"webkitFullscreenElement\",\n    \"mozFullScreenElement\",\n    \"msFullscreenElement\"\n  ].find((m) => document && m in document);\n  const isSupported = useSupported(\n    () => targetRef.value && document && requestMethod.value !== void 0 && exitMethod.value !== void 0 && fullscreenEnabled.value !== void 0\n  );\n  const isCurrentElementFullScreen = () => {\n    if (fullscreenElementMethod)\n      return (document == null ? void 0 : document[fullscreenElementMethod]) === targetRef.value;\n    return false;\n  };\n  const isElementFullScreen = () => {\n    if (fullscreenEnabled.value) {\n      if (document && document[fullscreenEnabled.value] != null) {\n        return document[fullscreenEnabled.value];\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[fullscreenEnabled.value]) != null) {\n          return Boolean(target2[fullscreenEnabled.value]);\n        }\n      }\n    }\n    return false;\n  };\n  async function exit() {\n    if (!isSupported.value)\n      return;\n    if (exitMethod.value) {\n      if ((document == null ? void 0 : document[exitMethod.value]) != null) {\n        await document[exitMethod.value]();\n      } else {\n        const target2 = targetRef.value;\n        if ((target2 == null ? void 0 : target2[exitMethod.value]) != null)\n          await target2[exitMethod.value]();\n      }\n    }\n    isFullscreen.value = false;\n  }\n  async function enter() {\n    if (!isSupported.value)\n      return;\n    if (isElementFullScreen())\n      await exit();\n    const target2 = targetRef.value;\n    if (requestMethod.value && (target2 == null ? void 0 : target2[requestMethod.value]) != null) {\n      await target2[requestMethod.value]();\n      isFullscreen.value = true;\n    }\n  }\n  async function toggle() {\n    await (isFullscreen.value ? exit() : enter());\n  }\n  const handlerCallback = () => {\n    const isElementFullScreenValue = isElementFullScreen();\n    if (!isElementFullScreenValue || isElementFullScreenValue && isCurrentElementFullScreen())\n      isFullscreen.value = isElementFullScreenValue;\n  };\n  useEventListener(document, eventHandlers, handlerCallback, false);\n  useEventListener(() => unrefElement(targetRef), eventHandlers, handlerCallback, false);\n  if (autoExit)\n    tryOnScopeDispose(exit);\n  return {\n    isSupported,\n    isFullscreen,\n    enter,\n    exit,\n    toggle\n  };\n}\n\nfunction mapGamepadToXbox360Controller(gamepad) {\n  return computed(() => {\n    if (gamepad.value) {\n      return {\n        buttons: {\n          a: gamepad.value.buttons[0],\n          b: gamepad.value.buttons[1],\n          x: gamepad.value.buttons[2],\n          y: gamepad.value.buttons[3]\n        },\n        bumper: {\n          left: gamepad.value.buttons[4],\n          right: gamepad.value.buttons[5]\n        },\n        triggers: {\n          left: gamepad.value.buttons[6],\n          right: gamepad.value.buttons[7]\n        },\n        stick: {\n          left: {\n            horizontal: gamepad.value.axes[0],\n            vertical: gamepad.value.axes[1],\n            button: gamepad.value.buttons[10]\n          },\n          right: {\n            horizontal: gamepad.value.axes[2],\n            vertical: gamepad.value.axes[3],\n            button: gamepad.value.buttons[11]\n          }\n        },\n        dpad: {\n          up: gamepad.value.buttons[12],\n          down: gamepad.value.buttons[13],\n          left: gamepad.value.buttons[14],\n          right: gamepad.value.buttons[15]\n        },\n        back: gamepad.value.buttons[8],\n        start: gamepad.value.buttons[9]\n      };\n    }\n    return null;\n  });\n}\nfunction useGamepad(options = {}) {\n  const {\n    navigator = defaultNavigator\n  } = options;\n  const isSupported = useSupported(() => navigator && \"getGamepads\" in navigator);\n  const gamepads = ref([]);\n  const onConnectedHook = createEventHook();\n  const onDisconnectedHook = createEventHook();\n  const stateFromGamepad = (gamepad) => {\n    const hapticActuators = [];\n    const vibrationActuator = \"vibrationActuator\" in gamepad ? gamepad.vibrationActuator : null;\n    if (vibrationActuator)\n      hapticActuators.push(vibrationActuator);\n    if (gamepad.hapticActuators)\n      hapticActuators.push(...gamepad.hapticActuators);\n    return {\n      id: gamepad.id,\n      hapticActuators,\n      index: gamepad.index,\n      mapping: gamepad.mapping,\n      connected: gamepad.connected,\n      timestamp: gamepad.timestamp,\n      axes: gamepad.axes.map((axes) => axes),\n      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))\n    };\n  };\n  const updateGamepadState = () => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    for (let i = 0; i < _gamepads.length; ++i) {\n      const gamepad = _gamepads[i];\n      if (gamepad) {\n        const index = gamepads.value.findIndex(({ index: index2 }) => index2 === gamepad.index);\n        if (index > -1)\n          gamepads.value[index] = stateFromGamepad(gamepad);\n      }\n    }\n  };\n  const { isActive, pause, resume } = useRafFn(updateGamepadState);\n  const onGamepadConnected = (gamepad) => {\n    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {\n      gamepads.value.push(stateFromGamepad(gamepad));\n      onConnectedHook.trigger(gamepad.index);\n    }\n    resume();\n  };\n  const onGamepadDisconnected = (gamepad) => {\n    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);\n    onDisconnectedHook.trigger(gamepad.index);\n  };\n  useEventListener(\"gamepadconnected\", (e) => onGamepadConnected(e.gamepad));\n  useEventListener(\"gamepaddisconnected\", (e) => onGamepadDisconnected(e.gamepad));\n  tryOnMounted(() => {\n    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];\n    if (_gamepads) {\n      for (let i = 0; i < _gamepads.length; ++i) {\n        const gamepad = _gamepads[i];\n        if (gamepad)\n          onGamepadConnected(gamepad);\n      }\n    }\n  });\n  pause();\n  return {\n    isSupported,\n    onConnected: onConnectedHook.on,\n    onDisconnected: onDisconnectedHook.on,\n    gamepads,\n    pause,\n    resume,\n    isActive\n  };\n}\n\nfunction useGeolocation(options = {}) {\n  const {\n    enableHighAccuracy = true,\n    maximumAge = 3e4,\n    timeout = 27e3,\n    navigator = defaultNavigator,\n    immediate = true\n  } = options;\n  const isSupported = useSupported(() => navigator && \"geolocation\" in navigator);\n  const locatedAt = ref(null);\n  const error = shallowRef(null);\n  const coords = ref({\n    accuracy: 0,\n    latitude: Infinity,\n    longitude: Infinity,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null\n  });\n  function updatePosition(position) {\n    locatedAt.value = position.timestamp;\n    coords.value = position.coords;\n    error.value = null;\n  }\n  let watcher;\n  function resume() {\n    if (isSupported.value) {\n      watcher = navigator.geolocation.watchPosition(\n        updatePosition,\n        (err) => error.value = err,\n        {\n          enableHighAccuracy,\n          maximumAge,\n          timeout\n        }\n      );\n    }\n  }\n  if (immediate)\n    resume();\n  function pause() {\n    if (watcher && navigator)\n      navigator.geolocation.clearWatch(watcher);\n  }\n  tryOnScopeDispose(() => {\n    pause();\n  });\n  return {\n    isSupported,\n    coords,\n    locatedAt,\n    error,\n    resume,\n    pause\n  };\n}\n\nconst defaultEvents$1 = [\"mousemove\", \"mousedown\", \"resize\", \"keydown\", \"touchstart\", \"wheel\"];\nconst oneMinute = 6e4;\nfunction useIdle(timeout = oneMinute, options = {}) {\n  const {\n    initialState = false,\n    listenForVisibilityChange = true,\n    events = defaultEvents$1,\n    window = defaultWindow,\n    eventFilter = throttleFilter(50)\n  } = options;\n  const idle = ref(initialState);\n  const lastActive = ref(timestamp());\n  let timer;\n  const reset = () => {\n    idle.value = false;\n    clearTimeout(timer);\n    timer = setTimeout(() => idle.value = true, timeout);\n  };\n  const onEvent = createFilterWrapper(\n    eventFilter,\n    () => {\n      lastActive.value = timestamp();\n      reset();\n    }\n  );\n  if (window) {\n    const document = window.document;\n    for (const event of events)\n      useEventListener(window, event, onEvent, { passive: true });\n    if (listenForVisibilityChange) {\n      useEventListener(document, \"visibilitychange\", () => {\n        if (!document.hidden)\n          onEvent();\n      });\n    }\n    reset();\n  }\n  return {\n    idle,\n    lastActive,\n    reset\n  };\n}\n\nvar __defProp$a = Object.defineProperty;\nvar __getOwnPropSymbols$b = Object.getOwnPropertySymbols;\nvar __hasOwnProp$b = Object.prototype.hasOwnProperty;\nvar __propIsEnum$b = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$a = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$b.call(b, prop))\n      __defNormalProp$a(a, prop, b[prop]);\n  if (__getOwnPropSymbols$b)\n    for (var prop of __getOwnPropSymbols$b(b)) {\n      if (__propIsEnum$b.call(b, prop))\n        __defNormalProp$a(a, prop, b[prop]);\n    }\n  return a;\n};\nasync function loadImage(options) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    const { src, srcset, sizes, class: clazz, loading, crossorigin } = options;\n    img.src = src;\n    if (srcset)\n      img.srcset = srcset;\n    if (sizes)\n      img.sizes = sizes;\n    if (clazz)\n      img.className = clazz;\n    if (loading)\n      img.loading = loading;\n    if (crossorigin)\n      img.crossOrigin = crossorigin;\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n  });\n}\nfunction useImage(options, asyncStateOptions = {}) {\n  const state = useAsyncState(\n    () => loadImage(toValue(options)),\n    void 0,\n    __spreadValues$a({\n      resetOnExecute: true\n    }, asyncStateOptions)\n  );\n  watch(\n    () => toValue(options),\n    () => state.execute(asyncStateOptions.delay),\n    { deep: true }\n  );\n  return state;\n}\n\nconst ARRIVED_STATE_THRESHOLD_PIXELS = 1;\nfunction useScroll(element, options = {}) {\n  const {\n    throttle = 0,\n    idle = 200,\n    onStop = noop,\n    onScroll = noop,\n    offset = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    },\n    eventListenerOptions = {\n      capture: false,\n      passive: true\n    },\n    behavior = \"auto\"\n  } = options;\n  const internalX = ref(0);\n  const internalY = ref(0);\n  const x = computed({\n    get() {\n      return internalX.value;\n    },\n    set(x2) {\n      scrollTo(x2, void 0);\n    }\n  });\n  const y = computed({\n    get() {\n      return internalY.value;\n    },\n    set(y2) {\n      scrollTo(void 0, y2);\n    }\n  });\n  function scrollTo(_x, _y) {\n    var _a, _b, _c;\n    const _element = toValue(element);\n    if (!_element)\n      return;\n    (_c = _element instanceof Document ? document.body : _element) == null ? void 0 : _c.scrollTo({\n      top: (_a = toValue(_y)) != null ? _a : y.value,\n      left: (_b = toValue(_x)) != null ? _b : x.value,\n      behavior: toValue(behavior)\n    });\n  }\n  const isScrolling = ref(false);\n  const arrivedState = reactive({\n    left: true,\n    right: false,\n    top: true,\n    bottom: false\n  });\n  const directions = reactive({\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  });\n  const onScrollEnd = (e) => {\n    if (!isScrolling.value)\n      return;\n    isScrolling.value = false;\n    directions.left = false;\n    directions.right = false;\n    directions.top = false;\n    directions.bottom = false;\n    onStop(e);\n  };\n  const onScrollEndDebounced = useDebounceFn(onScrollEnd, throttle + idle);\n  const setArrivedState = (target) => {\n    const el = target === document ? target.documentElement : target;\n    const { display, flexDirection } = getComputedStyle(el);\n    const scrollLeft = el.scrollLeft;\n    directions.left = scrollLeft < internalX.value;\n    directions.right = scrollLeft > internalX.value;\n    const left = Math.abs(scrollLeft) <= 0 + (offset.left || 0);\n    const right = Math.abs(scrollLeft) + el.clientWidth >= el.scrollWidth - (offset.right || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"row-reverse\") {\n      arrivedState.left = right;\n      arrivedState.right = left;\n    } else {\n      arrivedState.left = left;\n      arrivedState.right = right;\n    }\n    internalX.value = scrollLeft;\n    let scrollTop = el.scrollTop;\n    if (target === document && !scrollTop)\n      scrollTop = document.body.scrollTop;\n    directions.top = scrollTop < internalY.value;\n    directions.bottom = scrollTop > internalY.value;\n    const top = Math.abs(scrollTop) <= 0 + (offset.top || 0);\n    const bottom = Math.abs(scrollTop) + el.clientHeight >= el.scrollHeight - (offset.bottom || 0) - ARRIVED_STATE_THRESHOLD_PIXELS;\n    if (display === \"flex\" && flexDirection === \"column-reverse\") {\n      arrivedState.top = bottom;\n      arrivedState.bottom = top;\n    } else {\n      arrivedState.top = top;\n      arrivedState.bottom = bottom;\n    }\n    internalY.value = scrollTop;\n  };\n  const onScrollHandler = (e) => {\n    const eventTarget = e.target === document ? e.target.documentElement : e.target;\n    setArrivedState(eventTarget);\n    isScrolling.value = true;\n    onScrollEndDebounced(e);\n    onScroll(e);\n  };\n  useEventListener(\n    element,\n    \"scroll\",\n    throttle ? useThrottleFn(onScrollHandler, throttle, true, false) : onScrollHandler,\n    eventListenerOptions\n  );\n  useEventListener(\n    element,\n    \"scrollend\",\n    onScrollEnd,\n    eventListenerOptions\n  );\n  return {\n    x,\n    y,\n    isScrolling,\n    arrivedState,\n    directions,\n    measure() {\n      const _element = toValue(element);\n      if (_element)\n        setArrivedState(_element);\n    }\n  };\n}\n\nvar __defProp$9 = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$9 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$a.call(b, prop))\n      __defNormalProp$9(a, prop, b[prop]);\n  if (__getOwnPropSymbols$a)\n    for (var prop of __getOwnPropSymbols$a(b)) {\n      if (__propIsEnum$a.call(b, prop))\n        __defNormalProp$9(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nfunction useInfiniteScroll(element, onLoadMore, options = {}) {\n  var _a;\n  const {\n    direction = \"bottom\",\n    interval = 100\n  } = options;\n  const state = reactive(useScroll(\n    element,\n    __spreadProps$3(__spreadValues$9({}, options), {\n      offset: __spreadValues$9({\n        [direction]: (_a = options.distance) != null ? _a : 0\n      }, options.offset)\n    })\n  ));\n  const promise = ref();\n  const isLoading = computed(() => !!promise.value);\n  function checkAndLoad() {\n    state.measure();\n    const el = toValue(element);\n    if (!el)\n      return;\n    const isNarrower = direction === \"bottom\" || direction === \"top\" ? el.scrollHeight <= el.clientHeight : el.scrollWidth <= el.clientWidth;\n    if (state.arrivedState[direction] || isNarrower) {\n      if (!promise.value) {\n        promise.value = Promise.all([\n          onLoadMore(state),\n          new Promise((resolve) => setTimeout(resolve, interval))\n        ]).finally(() => {\n          promise.value = null;\n          nextTick(() => checkAndLoad());\n        });\n      }\n    }\n  }\n  watch(\n    () => [state.arrivedState[direction], toValue(element)],\n    checkAndLoad,\n    { immediate: true }\n  );\n  return {\n    isLoading\n  };\n}\n\nconst defaultEvents = [\"mousedown\", \"mouseup\", \"keydown\", \"keyup\"];\nfunction useKeyModifier(modifier, options = {}) {\n  const {\n    events = defaultEvents,\n    document = defaultDocument,\n    initial = null\n  } = options;\n  const state = ref(initial);\n  if (document) {\n    events.forEach((listenerEvent) => {\n      useEventListener(document, listenerEvent, (evt) => {\n        if (typeof evt.getModifierState === \"function\")\n          state.value = evt.getModifierState(modifier);\n      });\n    });\n  }\n  return state;\n}\n\nfunction useLocalStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);\n}\n\nconst DefaultMagicKeysAliasMap = {\n  ctrl: \"control\",\n  command: \"meta\",\n  cmd: \"meta\",\n  option: \"alt\",\n  up: \"arrowup\",\n  down: \"arrowdown\",\n  left: \"arrowleft\",\n  right: \"arrowright\"\n};\n\nfunction useMagicKeys(options = {}) {\n  const {\n    reactive: useReactive = false,\n    target = defaultWindow,\n    aliasMap = DefaultMagicKeysAliasMap,\n    passive = true,\n    onEventFired = noop\n  } = options;\n  const current = reactive(/* @__PURE__ */ new Set());\n  const obj = {\n    toJSON() {\n      return {};\n    },\n    current\n  };\n  const refs = useReactive ? reactive(obj) : obj;\n  const metaDeps = /* @__PURE__ */ new Set();\n  const usedKeys = /* @__PURE__ */ new Set();\n  function setRefs(key, value) {\n    if (key in refs) {\n      if (useReactive)\n        refs[key] = value;\n      else\n        refs[key].value = value;\n    }\n  }\n  function reset() {\n    current.clear();\n    for (const key of usedKeys)\n      setRefs(key, false);\n  }\n  function updateRefs(e, value) {\n    var _a, _b;\n    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();\n    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();\n    const values = [code, key].filter(Boolean);\n    if (key) {\n      if (value)\n        current.add(key);\n      else\n        current.delete(key);\n    }\n    for (const key2 of values) {\n      usedKeys.add(key2);\n      setRefs(key2, value);\n    }\n    if (key === \"meta\" && !value) {\n      metaDeps.forEach((key2) => {\n        current.delete(key2);\n        setRefs(key2, false);\n      });\n      metaDeps.clear();\n    } else if (typeof e.getModifierState === \"function\" && e.getModifierState(\"Meta\") && value) {\n      [...current, ...values].forEach((key2) => metaDeps.add(key2));\n    }\n  }\n  useEventListener(target, \"keydown\", (e) => {\n    updateRefs(e, true);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(target, \"keyup\", (e) => {\n    updateRefs(e, false);\n    return onEventFired(e);\n  }, { passive });\n  useEventListener(\"blur\", reset, { passive: true });\n  useEventListener(\"focus\", reset, { passive: true });\n  const proxy = new Proxy(\n    refs,\n    {\n      get(target2, prop, rec) {\n        if (typeof prop !== \"string\")\n          return Reflect.get(target2, prop, rec);\n        prop = prop.toLowerCase();\n        if (prop in aliasMap)\n          prop = aliasMap[prop];\n        if (!(prop in refs)) {\n          if (/[+_-]/.test(prop)) {\n            const keys = prop.split(/[+_-]/g).map((i) => i.trim());\n            refs[prop] = computed(() => keys.every((key) => toValue(proxy[key])));\n          } else {\n            refs[prop] = ref(false);\n          }\n        }\n        const r = Reflect.get(target2, prop, rec);\n        return useReactive ? toValue(r) : r;\n      }\n    }\n  );\n  return proxy;\n}\n\nvar __defProp$8 = Object.defineProperty;\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$8 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$9.call(b, prop))\n      __defNormalProp$8(a, prop, b[prop]);\n  if (__getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(b)) {\n      if (__propIsEnum$9.call(b, prop))\n        __defNormalProp$8(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction usingElRef(source, cb) {\n  if (toValue(source))\n    cb(toValue(source));\n}\nfunction timeRangeToArray(timeRanges) {\n  let ranges = [];\n  for (let i = 0; i < timeRanges.length; ++i)\n    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\n  return ranges;\n}\nfunction tracksToArray(tracks) {\n  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\n}\nconst defaultOptions = {\n  src: \"\",\n  tracks: []\n};\nfunction useMediaControls(target, options = {}) {\n  options = __spreadValues$8(__spreadValues$8({}, defaultOptions), options);\n  const {\n    document = defaultDocument\n  } = options;\n  const currentTime = ref(0);\n  const duration = ref(0);\n  const seeking = ref(false);\n  const volume = ref(1);\n  const waiting = ref(false);\n  const ended = ref(false);\n  const playing = ref(false);\n  const rate = ref(1);\n  const stalled = ref(false);\n  const buffered = ref([]);\n  const tracks = ref([]);\n  const selectedTrack = ref(-1);\n  const isPictureInPicture = ref(false);\n  const muted = ref(false);\n  const supportsPictureInPicture = document && \"pictureInPictureEnabled\" in document;\n  const sourceErrorEvent = createEventHook();\n  const disableTrack = (track) => {\n    usingElRef(target, (el) => {\n      if (track) {\n        const id = typeof track === \"number\" ? track : track.id;\n        el.textTracks[id].mode = \"disabled\";\n      } else {\n        for (let i = 0; i < el.textTracks.length; ++i)\n          el.textTracks[i].mode = \"disabled\";\n      }\n      selectedTrack.value = -1;\n    });\n  };\n  const enableTrack = (track, disableTracks = true) => {\n    usingElRef(target, (el) => {\n      const id = typeof track === \"number\" ? track : track.id;\n      if (disableTracks)\n        disableTrack();\n      el.textTracks[id].mode = \"showing\";\n      selectedTrack.value = id;\n    });\n  };\n  const togglePictureInPicture = () => {\n    return new Promise((resolve, reject) => {\n      usingElRef(target, async (el) => {\n        if (supportsPictureInPicture) {\n          if (!isPictureInPicture.value) {\n            el.requestPictureInPicture().then(resolve).catch(reject);\n          } else {\n            document.exitPictureInPicture().then(resolve).catch(reject);\n          }\n        }\n      });\n    });\n  };\n  watchEffect(() => {\n    if (!document)\n      return;\n    const el = toValue(target);\n    if (!el)\n      return;\n    const src = toValue(options.src);\n    let sources = [];\n    if (!src)\n      return;\n    if (typeof src === \"string\")\n      sources = [{ src }];\n    else if (Array.isArray(src))\n      sources = src;\n    else if (isObject(src))\n      sources = [src];\n    el.querySelectorAll(\"source\").forEach((e) => {\n      e.removeEventListener(\"error\", sourceErrorEvent.trigger);\n      e.remove();\n    });\n    sources.forEach(({ src: src2, type }) => {\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", src2);\n      source.setAttribute(\"type\", type || \"\");\n      source.addEventListener(\"error\", sourceErrorEvent.trigger);\n      el.appendChild(source);\n    });\n    el.load();\n  });\n  tryOnScopeDispose(() => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.querySelectorAll(\"source\").forEach((e) => e.removeEventListener(\"error\", sourceErrorEvent.trigger));\n  });\n  watch([target, volume], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.volume = volume.value;\n  });\n  watch([target, muted], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.muted = muted.value;\n  });\n  watch([target, rate], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.playbackRate = rate.value;\n  });\n  watchEffect(() => {\n    if (!document)\n      return;\n    const textTracks = toValue(options.tracks);\n    const el = toValue(target);\n    if (!textTracks || !textTracks.length || !el)\n      return;\n    el.querySelectorAll(\"track\").forEach((e) => e.remove());\n    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\n      const track = document.createElement(\"track\");\n      track.default = isDefault || false;\n      track.kind = kind;\n      track.label = label;\n      track.src = src;\n      track.srclang = srcLang;\n      if (track.default)\n        selectedTrack.value = i;\n      el.appendChild(track);\n    });\n  });\n  const { ignoreUpdates: ignoreCurrentTimeUpdates } = watchIgnorable(currentTime, (time) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    el.currentTime = time;\n  });\n  const { ignoreUpdates: ignorePlayingUpdates } = watchIgnorable(playing, (isPlaying) => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    isPlaying ? el.play() : el.pause();\n  });\n  useEventListener(target, \"timeupdate\", () => ignoreCurrentTimeUpdates(() => currentTime.value = toValue(target).currentTime));\n  useEventListener(target, \"durationchange\", () => duration.value = toValue(target).duration);\n  useEventListener(target, \"progress\", () => buffered.value = timeRangeToArray(toValue(target).buffered));\n  useEventListener(target, \"seeking\", () => seeking.value = true);\n  useEventListener(target, \"seeked\", () => seeking.value = false);\n  useEventListener(target, \"waiting\", () => waiting.value = true);\n  useEventListener(target, \"playing\", () => {\n    waiting.value = false;\n    ended.value = false;\n  });\n  useEventListener(target, \"ratechange\", () => rate.value = toValue(target).playbackRate);\n  useEventListener(target, \"stalled\", () => stalled.value = true);\n  useEventListener(target, \"ended\", () => ended.value = true);\n  useEventListener(target, \"pause\", () => ignorePlayingUpdates(() => playing.value = false));\n  useEventListener(target, \"play\", () => ignorePlayingUpdates(() => playing.value = true));\n  useEventListener(target, \"enterpictureinpicture\", () => isPictureInPicture.value = true);\n  useEventListener(target, \"leavepictureinpicture\", () => isPictureInPicture.value = false);\n  useEventListener(target, \"volumechange\", () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    volume.value = el.volume;\n    muted.value = el.muted;\n  });\n  const listeners = [];\n  const stop = watch([target], () => {\n    const el = toValue(target);\n    if (!el)\n      return;\n    stop();\n    listeners[0] = useEventListener(el.textTracks, \"addtrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[1] = useEventListener(el.textTracks, \"removetrack\", () => tracks.value = tracksToArray(el.textTracks));\n    listeners[2] = useEventListener(el.textTracks, \"change\", () => tracks.value = tracksToArray(el.textTracks));\n  });\n  tryOnScopeDispose(() => listeners.forEach((listener) => listener()));\n  return {\n    currentTime,\n    duration,\n    waiting,\n    seeking,\n    ended,\n    stalled,\n    buffered,\n    playing,\n    rate,\n    // Volume\n    volume,\n    muted,\n    // Tracks\n    tracks,\n    selectedTrack,\n    enableTrack,\n    disableTrack,\n    // Picture in Picture\n    supportsPictureInPicture,\n    togglePictureInPicture,\n    isPictureInPicture,\n    // Events\n    onSourceError: sourceErrorEvent.on\n  };\n}\n\nfunction getMapVue2Compat() {\n  const data = reactive({});\n  return {\n    get: (key) => data[key],\n    set: (key, value) => set(data, key, value),\n    has: (key) => hasOwn(data, key),\n    delete: (key) => del(data, key),\n    clear: () => {\n      Object.keys(data).forEach((key) => {\n        del(data, key);\n      });\n    }\n  };\n}\nfunction useMemoize(resolver, options) {\n  const initCache = () => {\n    if (options == null ? void 0 : options.cache)\n      return reactive(options.cache);\n    if (isVue2)\n      return getMapVue2Compat();\n    return reactive(/* @__PURE__ */ new Map());\n  };\n  const cache = initCache();\n  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);\n  const _loadData = (key, ...args) => {\n    cache.set(key, resolver(...args));\n    return cache.get(key);\n  };\n  const loadData = (...args) => _loadData(generateKey(...args), ...args);\n  const deleteData = (...args) => {\n    cache.delete(generateKey(...args));\n  };\n  const clearData = () => {\n    cache.clear();\n  };\n  const memoized = (...args) => {\n    const key = generateKey(...args);\n    if (cache.has(key))\n      return cache.get(key);\n    return _loadData(key, ...args);\n  };\n  memoized.load = loadData;\n  memoized.delete = deleteData;\n  memoized.clear = clearData;\n  memoized.generateKey = generateKey;\n  memoized.cache = cache;\n  return memoized;\n}\n\nfunction useMemory(options = {}) {\n  const memory = ref();\n  const isSupported = useSupported(() => typeof performance !== \"undefined\" && \"memory\" in performance);\n  if (isSupported.value) {\n    const { interval = 1e3 } = options;\n    useIntervalFn(() => {\n      memory.value = performance.memory;\n    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });\n  }\n  return { isSupported, memory };\n}\n\nconst BuiltinExtractors = {\n  page: (event) => [event.pageX, event.pageY],\n  client: (event) => [event.clientX, event.clientY],\n  screen: (event) => [event.screenX, event.screenY],\n  movement: (event) => event instanceof Touch ? null : [event.movementX, event.movementY]\n};\nfunction useMouse(options = {}) {\n  const {\n    type = \"page\",\n    touch = true,\n    resetOnTouchEnds = false,\n    initialValue = { x: 0, y: 0 },\n    window = defaultWindow,\n    target = window,\n    eventFilter\n  } = options;\n  const x = ref(initialValue.x);\n  const y = ref(initialValue.y);\n  const sourceType = ref(null);\n  const extractor = typeof type === \"function\" ? type : BuiltinExtractors[type];\n  const mouseHandler = (event) => {\n    const result = extractor(event);\n    if (result) {\n      [x.value, y.value] = result;\n      sourceType.value = \"mouse\";\n    }\n  };\n  const touchHandler = (event) => {\n    if (event.touches.length > 0) {\n      const result = extractor(event.touches[0]);\n      if (result) {\n        [x.value, y.value] = result;\n        sourceType.value = \"touch\";\n      }\n    }\n  };\n  const reset = () => {\n    x.value = initialValue.x;\n    y.value = initialValue.y;\n  };\n  const mouseHandlerWrapper = eventFilter ? (event) => eventFilter(() => mouseHandler(event), {}) : (event) => mouseHandler(event);\n  const touchHandlerWrapper = eventFilter ? (event) => eventFilter(() => touchHandler(event), {}) : (event) => touchHandler(event);\n  if (target) {\n    useEventListener(target, \"mousemove\", mouseHandlerWrapper, { passive: true });\n    useEventListener(target, \"dragover\", mouseHandlerWrapper, { passive: true });\n    if (touch && type !== \"movement\") {\n      useEventListener(target, \"touchstart\", touchHandlerWrapper, { passive: true });\n      useEventListener(target, \"touchmove\", touchHandlerWrapper, { passive: true });\n      if (resetOnTouchEnds)\n        useEventListener(target, \"touchend\", reset, { passive: true });\n    }\n  }\n  return {\n    x,\n    y,\n    sourceType\n  };\n}\n\nfunction useMouseInElement(target, options = {}) {\n  const {\n    handleOutside = true,\n    window = defaultWindow\n  } = options;\n  const { x, y, sourceType } = useMouse(options);\n  const targetRef = ref(target != null ? target : window == null ? void 0 : window.document.body);\n  const elementX = ref(0);\n  const elementY = ref(0);\n  const elementPositionX = ref(0);\n  const elementPositionY = ref(0);\n  const elementHeight = ref(0);\n  const elementWidth = ref(0);\n  const isOutside = ref(true);\n  let stop = () => {\n  };\n  if (window) {\n    stop = watch(\n      [targetRef, x, y],\n      () => {\n        const el = unrefElement(targetRef);\n        if (!el)\n          return;\n        const {\n          left,\n          top,\n          width,\n          height\n        } = el.getBoundingClientRect();\n        elementPositionX.value = left + window.pageXOffset;\n        elementPositionY.value = top + window.pageYOffset;\n        elementHeight.value = height;\n        elementWidth.value = width;\n        const elX = x.value - elementPositionX.value;\n        const elY = y.value - elementPositionY.value;\n        isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;\n        if (handleOutside || !isOutside.value) {\n          elementX.value = elX;\n          elementY.value = elY;\n        }\n      },\n      { immediate: true }\n    );\n    useEventListener(document, \"mouseleave\", () => {\n      isOutside.value = true;\n    });\n  }\n  return {\n    x,\n    y,\n    sourceType,\n    elementX,\n    elementY,\n    elementPositionX,\n    elementPositionY,\n    elementHeight,\n    elementWidth,\n    isOutside,\n    stop\n  };\n}\n\nfunction useMousePressed(options = {}) {\n  const {\n    touch = true,\n    drag = true,\n    initialValue = false,\n    window = defaultWindow\n  } = options;\n  const pressed = ref(initialValue);\n  const sourceType = ref(null);\n  if (!window) {\n    return {\n      pressed,\n      sourceType\n    };\n  }\n  const onPressed = (srcType) => () => {\n    pressed.value = true;\n    sourceType.value = srcType;\n  };\n  const onReleased = () => {\n    pressed.value = false;\n    sourceType.value = null;\n  };\n  const target = computed(() => unrefElement(options.target) || window);\n  useEventListener(target, \"mousedown\", onPressed(\"mouse\"), { passive: true });\n  useEventListener(window, \"mouseleave\", onReleased, { passive: true });\n  useEventListener(window, \"mouseup\", onReleased, { passive: true });\n  if (drag) {\n    useEventListener(target, \"dragstart\", onPressed(\"mouse\"), { passive: true });\n    useEventListener(window, \"drop\", onReleased, { passive: true });\n    useEventListener(window, \"dragend\", onReleased, { passive: true });\n  }\n  if (touch) {\n    useEventListener(target, \"touchstart\", onPressed(\"touch\"), { passive: true });\n    useEventListener(window, \"touchend\", onReleased, { passive: true });\n    useEventListener(window, \"touchcancel\", onReleased, { passive: true });\n  }\n  return {\n    pressed,\n    sourceType\n  };\n}\n\nfunction useNavigatorLanguage(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"language\" in navigator);\n  const language = ref(navigator == null ? void 0 : navigator.language);\n  useEventListener(window, \"languagechange\", () => {\n    if (navigator)\n      language.value = navigator.language;\n  });\n  return {\n    isSupported,\n    language\n  };\n}\n\nfunction useNetwork(options = {}) {\n  const { window = defaultWindow } = options;\n  const navigator = window == null ? void 0 : window.navigator;\n  const isSupported = useSupported(() => navigator && \"connection\" in navigator);\n  const isOnline = ref(true);\n  const saveData = ref(false);\n  const offlineAt = ref(void 0);\n  const onlineAt = ref(void 0);\n  const downlink = ref(void 0);\n  const downlinkMax = ref(void 0);\n  const rtt = ref(void 0);\n  const effectiveType = ref(void 0);\n  const type = ref(\"unknown\");\n  const connection = isSupported.value && navigator.connection;\n  function updateNetworkInformation() {\n    if (!navigator)\n      return;\n    isOnline.value = navigator.onLine;\n    offlineAt.value = isOnline.value ? void 0 : Date.now();\n    onlineAt.value = isOnline.value ? Date.now() : void 0;\n    if (connection) {\n      downlink.value = connection.downlink;\n      downlinkMax.value = connection.downlinkMax;\n      effectiveType.value = connection.effectiveType;\n      rtt.value = connection.rtt;\n      saveData.value = connection.saveData;\n      type.value = connection.type;\n    }\n  }\n  if (window) {\n    useEventListener(window, \"offline\", () => {\n      isOnline.value = false;\n      offlineAt.value = Date.now();\n    });\n    useEventListener(window, \"online\", () => {\n      isOnline.value = true;\n      onlineAt.value = Date.now();\n    });\n  }\n  if (connection)\n    useEventListener(connection, \"change\", updateNetworkInformation, false);\n  updateNetworkInformation();\n  return {\n    isSupported,\n    isOnline,\n    saveData,\n    offlineAt,\n    onlineAt,\n    downlink,\n    downlinkMax,\n    effectiveType,\n    rtt,\n    type\n  };\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$8.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(b)) {\n      if (__propIsEnum$8.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useNow(options = {}) {\n  const {\n    controls: exposeControls = false,\n    interval = \"requestAnimationFrame\"\n  } = options;\n  const now = ref(/* @__PURE__ */ new Date());\n  const update = () => now.value = /* @__PURE__ */ new Date();\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(update, { immediate: true }) : useIntervalFn(update, interval, { immediate: true });\n  if (exposeControls) {\n    return __spreadValues$7({\n      now\n    }, controls);\n  } else {\n    return now;\n  }\n}\n\nfunction useObjectUrl(object) {\n  const url = ref();\n  const release = () => {\n    if (url.value)\n      URL.revokeObjectURL(url.value);\n    url.value = void 0;\n  };\n  watch(\n    () => toValue(object),\n    (newObject) => {\n      release();\n      if (newObject)\n        url.value = URL.createObjectURL(newObject);\n    },\n    { immediate: true }\n  );\n  tryOnScopeDispose(release);\n  return readonly(url);\n}\n\nfunction useClamp(value, min, max) {\n  if (typeof value === \"function\" || isReadonly(value))\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, toValue(min), toValue(max));\n    }\n  });\n}\n\nfunction useOffsetPagination(options) {\n  const {\n    total = Infinity,\n    pageSize = 10,\n    page = 1,\n    onPageChange = noop,\n    onPageSizeChange = noop,\n    onPageCountChange = noop\n  } = options;\n  const currentPageSize = useClamp(pageSize, 1, Infinity);\n  const pageCount = computed(() => Math.max(\n    1,\n    Math.ceil(toValue(total) / toValue(currentPageSize))\n  ));\n  const currentPage = useClamp(page, 1, pageCount);\n  const isFirstPage = computed(() => currentPage.value === 1);\n  const isLastPage = computed(() => currentPage.value === pageCount.value);\n  if (isRef(page))\n    syncRef(page, currentPage);\n  if (isRef(pageSize))\n    syncRef(pageSize, currentPageSize);\n  function prev() {\n    currentPage.value--;\n  }\n  function next() {\n    currentPage.value++;\n  }\n  const returnValue = {\n    currentPage,\n    currentPageSize,\n    pageCount,\n    isFirstPage,\n    isLastPage,\n    prev,\n    next\n  };\n  watch(currentPage, () => {\n    onPageChange(reactive(returnValue));\n  });\n  watch(currentPageSize, () => {\n    onPageSizeChange(reactive(returnValue));\n  });\n  watch(pageCount, () => {\n    onPageCountChange(reactive(returnValue));\n  });\n  return returnValue;\n}\n\nfunction useOnline(options = {}) {\n  const { isOnline } = useNetwork(options);\n  return isOnline;\n}\n\nfunction usePageLeave(options = {}) {\n  const { window = defaultWindow } = options;\n  const isLeft = ref(false);\n  const handler = (event) => {\n    if (!window)\n      return;\n    event = event || window.event;\n    const from = event.relatedTarget || event.toElement;\n    isLeft.value = !from;\n  };\n  if (window) {\n    useEventListener(window, \"mouseout\", handler, { passive: true });\n    useEventListener(window.document, \"mouseleave\", handler, { passive: true });\n    useEventListener(window.document, \"mouseenter\", handler, { passive: true });\n  }\n  return isLeft;\n}\n\nfunction useParallax(target, options = {}) {\n  const {\n    deviceOrientationTiltAdjust = (i) => i,\n    deviceOrientationRollAdjust = (i) => i,\n    mouseTiltAdjust = (i) => i,\n    mouseRollAdjust = (i) => i,\n    window = defaultWindow\n  } = options;\n  const orientation = reactive(useDeviceOrientation({ window }));\n  const {\n    elementX: x,\n    elementY: y,\n    elementWidth: width,\n    elementHeight: height\n  } = useMouseInElement(target, { handleOutside: false, window });\n  const source = computed(() => {\n    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0))\n      return \"deviceOrientation\";\n    return \"mouse\";\n  });\n  const roll = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      const value = -orientation.beta / 90;\n      return deviceOrientationRollAdjust(value);\n    } else {\n      const value = -(y.value - height.value / 2) / height.value;\n      return mouseRollAdjust(value);\n    }\n  });\n  const tilt = computed(() => {\n    if (source.value === \"deviceOrientation\") {\n      const value = orientation.gamma / 90;\n      return deviceOrientationTiltAdjust(value);\n    } else {\n      const value = (x.value - width.value / 2) / width.value;\n      return mouseTiltAdjust(value);\n    }\n  });\n  return { roll, tilt, source };\n}\n\nfunction useParentElement(element = useCurrentElement()) {\n  const parentElement = shallowRef();\n  const update = () => {\n    const el = unrefElement(element);\n    if (el)\n      parentElement.value = el.parentElement;\n  };\n  tryOnMounted(update);\n  watch(() => toValue(element), update);\n  return parentElement;\n}\n\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __objRest$1 = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$7.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$7.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction usePerformanceObserver(options, callback) {\n  const _a = options, {\n    window = defaultWindow,\n    immediate = true\n  } = _a, performanceOptions = __objRest$1(_a, [\n    \"window\",\n    \"immediate\"\n  ]);\n  const isSupported = useSupported(() => window && \"PerformanceObserver\" in window);\n  let observer;\n  const stop = () => {\n    observer == null ? void 0 : observer.disconnect();\n  };\n  const start = () => {\n    if (isSupported.value) {\n      stop();\n      observer = new PerformanceObserver(callback);\n      observer.observe(performanceOptions);\n    }\n  };\n  tryOnScopeDispose(stop);\n  if (immediate)\n    start();\n  return {\n    isSupported,\n    start,\n    stop\n  };\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$6.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(b)) {\n      if (__propIsEnum$6.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nconst defaultState = {\n  x: 0,\n  y: 0,\n  pointerId: 0,\n  pressure: 0,\n  tiltX: 0,\n  tiltY: 0,\n  width: 0,\n  height: 0,\n  twist: 0,\n  pointerType: null\n};\nconst keys = /* @__PURE__ */ Object.keys(defaultState);\nfunction usePointer(options = {}) {\n  const {\n    target = defaultWindow\n  } = options;\n  const isInside = ref(false);\n  const state = ref(options.initialValue || {});\n  Object.assign(state.value, defaultState, state.value);\n  const handler = (event) => {\n    isInside.value = true;\n    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))\n      return;\n    state.value = objectPick(event, keys, false);\n  };\n  if (target) {\n    useEventListener(target, \"pointerdown\", handler, { passive: true });\n    useEventListener(target, \"pointermove\", handler, { passive: true });\n    useEventListener(target, \"pointerleave\", () => isInside.value = false, { passive: true });\n  }\n  return __spreadProps$2(__spreadValues$6({}, toRefs(state)), {\n    isInside\n  });\n}\n\nfunction usePointerLock(target, options = {}) {\n  const { document = defaultDocument, pointerLockOptions } = options;\n  const isSupported = useSupported(() => document && \"pointerLockElement\" in document);\n  const element = ref();\n  const triggerElement = ref();\n  let targetElement;\n  if (isSupported.value) {\n    useEventListener(document, \"pointerlockchange\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        element.value = document.pointerLockElement;\n        if (!element.value)\n          targetElement = triggerElement.value = null;\n      }\n    });\n    useEventListener(document, \"pointerlockerror\", () => {\n      var _a;\n      const currentElement = (_a = document.pointerLockElement) != null ? _a : element.value;\n      if (targetElement && currentElement === targetElement) {\n        const action = document.pointerLockElement ? \"release\" : \"acquire\";\n        throw new Error(`Failed to ${action} pointer lock.`);\n      }\n    });\n  }\n  async function lock(e, options2) {\n    var _a;\n    if (!isSupported.value)\n      throw new Error(\"Pointer Lock API is not supported by your browser.\");\n    triggerElement.value = e instanceof Event ? e.currentTarget : null;\n    targetElement = e instanceof Event ? (_a = unrefElement(target)) != null ? _a : triggerElement.value : unrefElement(e);\n    if (!targetElement)\n      throw new Error(\"Target element undefined.\");\n    targetElement.requestPointerLock(options2 != null ? options2 : pointerLockOptions);\n    return await until(element).toBe(targetElement);\n  }\n  async function unlock() {\n    if (!element.value)\n      return false;\n    document.exitPointerLock();\n    await until(element).toBeNull();\n    return true;\n  }\n  return {\n    isSupported,\n    element,\n    triggerElement,\n    lock,\n    unlock\n  };\n}\n\nfunction usePointerSwipe(target, options = {}) {\n  const targetRef = toRef(target);\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart\n  } = options;\n  const posStart = reactive({ x: 0, y: 0 });\n  const updatePosStart = (x, y) => {\n    posStart.x = x;\n    posStart.y = y;\n  };\n  const posEnd = reactive({ x: 0, y: 0 });\n  const updatePosEnd = (x, y) => {\n    posEnd.x = x;\n    posEnd.y = y;\n  };\n  const distanceX = computed(() => posStart.x - posEnd.x);\n  const distanceY = computed(() => posStart.y - posEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const isPointerDown = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(distanceX.value) > abs(distanceY.value)) {\n      return distanceX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return distanceY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const eventIsAllowed = (e) => {\n    var _a, _b, _c;\n    const isReleasingButton = e.buttons === 0;\n    const isPrimaryButton = e.buttons === 1;\n    return (_c = (_b = (_a = options.pointerTypes) == null ? void 0 : _a.includes(e.pointerType)) != null ? _b : isReleasingButton || isPrimaryButton) != null ? _c : true;\n  };\n  const stops = [\n    useEventListener(target, \"pointerdown\", (e) => {\n      var _a, _b;\n      if (!eventIsAllowed(e))\n        return;\n      isPointerDown.value = true;\n      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"none\");\n      const eventTarget = e.target;\n      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);\n      const { clientX: x, clientY: y } = e;\n      updatePosStart(x, y);\n      updatePosEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }),\n    useEventListener(target, \"pointermove\", (e) => {\n      if (!eventIsAllowed(e))\n        return;\n      if (!isPointerDown.value)\n        return;\n      const { clientX: x, clientY: y } = e;\n      updatePosEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }),\n    useEventListener(target, \"pointerup\", (e) => {\n      var _a, _b;\n      if (!eventIsAllowed(e))\n        return;\n      if (isSwiping.value)\n        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n      isPointerDown.value = false;\n      isSwiping.value = false;\n      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty(\"touch-action\", \"initial\");\n    })\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isSwiping: readonly(isSwiping),\n    direction: readonly(direction),\n    posStart: readonly(posStart),\n    posEnd: readonly(posEnd),\n    distanceX,\n    distanceY,\n    stop\n  };\n}\n\nfunction usePreferredColorScheme(options) {\n  const isLight = useMediaQuery(\"(prefers-color-scheme: light)\", options);\n  const isDark = useMediaQuery(\"(prefers-color-scheme: dark)\", options);\n  return computed(() => {\n    if (isDark.value)\n      return \"dark\";\n    if (isLight.value)\n      return \"light\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredContrast(options) {\n  const isMore = useMediaQuery(\"(prefers-contrast: more)\", options);\n  const isLess = useMediaQuery(\"(prefers-contrast: less)\", options);\n  const isCustom = useMediaQuery(\"(prefers-contrast: custom)\", options);\n  return computed(() => {\n    if (isMore.value)\n      return \"more\";\n    if (isLess.value)\n      return \"less\";\n    if (isCustom.value)\n      return \"custom\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePreferredLanguages(options = {}) {\n  const { window = defaultWindow } = options;\n  if (!window)\n    return ref([\"en\"]);\n  const navigator = window.navigator;\n  const value = ref(navigator.languages);\n  useEventListener(window, \"languagechange\", () => {\n    value.value = navigator.languages;\n  });\n  return value;\n}\n\nfunction usePreferredReducedMotion(options) {\n  const isReduced = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return computed(() => {\n    if (isReduced.value)\n      return \"reduce\";\n    return \"no-preference\";\n  });\n}\n\nfunction usePrevious(value, initialValue) {\n  const previous = shallowRef(initialValue);\n  watch(\n    toRef(value),\n    (_, oldValue) => {\n      previous.value = oldValue;\n    },\n    { flush: \"sync\" }\n  );\n  return readonly(previous);\n}\n\nfunction useScreenOrientation(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const isSupported = useSupported(() => window && \"screen\" in window && \"orientation\" in window.screen);\n  const screenOrientation = isSupported.value ? window.screen.orientation : {};\n  const orientation = ref(screenOrientation.type);\n  const angle = ref(screenOrientation.angle || 0);\n  if (isSupported.value) {\n    useEventListener(window, \"orientationchange\", () => {\n      orientation.value = screenOrientation.type;\n      angle.value = screenOrientation.angle;\n    });\n  }\n  const lockOrientation = (type) => {\n    if (!isSupported.value)\n      return Promise.reject(new Error(\"Not supported\"));\n    return screenOrientation.lock(type);\n  };\n  const unlockOrientation = () => {\n    if (isSupported.value)\n      screenOrientation.unlock();\n  };\n  return {\n    isSupported,\n    orientation,\n    angle,\n    lockOrientation,\n    unlockOrientation\n  };\n}\n\nconst topVarName = \"--vueuse-safe-area-top\";\nconst rightVarName = \"--vueuse-safe-area-right\";\nconst bottomVarName = \"--vueuse-safe-area-bottom\";\nconst leftVarName = \"--vueuse-safe-area-left\";\nfunction useScreenSafeArea() {\n  const top = ref(\"\");\n  const right = ref(\"\");\n  const bottom = ref(\"\");\n  const left = ref(\"\");\n  if (isClient) {\n    const topCssVar = useCssVar(topVarName);\n    const rightCssVar = useCssVar(rightVarName);\n    const bottomCssVar = useCssVar(bottomVarName);\n    const leftCssVar = useCssVar(leftVarName);\n    topCssVar.value = \"env(safe-area-inset-top, 0px)\";\n    rightCssVar.value = \"env(safe-area-inset-right, 0px)\";\n    bottomCssVar.value = \"env(safe-area-inset-bottom, 0px)\";\n    leftCssVar.value = \"env(safe-area-inset-left, 0px)\";\n    update();\n    useEventListener(\"resize\", useDebounceFn(update));\n  }\n  function update() {\n    top.value = getValue(topVarName);\n    right.value = getValue(rightVarName);\n    bottom.value = getValue(bottomVarName);\n    left.value = getValue(leftVarName);\n  }\n  return {\n    top,\n    right,\n    bottom,\n    left,\n    update\n  };\n}\nfunction getValue(position) {\n  return getComputedStyle(document.documentElement).getPropertyValue(position);\n}\n\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\n  const {\n    immediate = true,\n    manual = false,\n    type = \"text/javascript\",\n    async = true,\n    crossOrigin,\n    referrerPolicy,\n    noModule,\n    defer,\n    document = defaultDocument,\n    attrs = {}\n  } = options;\n  const scriptTag = ref(null);\n  let _promise = null;\n  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\n    const resolveWithElement = (el2) => {\n      scriptTag.value = el2;\n      resolve(el2);\n      return el2;\n    };\n    if (!document) {\n      resolve(false);\n      return;\n    }\n    let shouldAppend = false;\n    let el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (!el) {\n      el = document.createElement(\"script\");\n      el.type = type;\n      el.async = async;\n      el.src = toValue(src);\n      if (defer)\n        el.defer = defer;\n      if (crossOrigin)\n        el.crossOrigin = crossOrigin;\n      if (noModule)\n        el.noModule = noModule;\n      if (referrerPolicy)\n        el.referrerPolicy = referrerPolicy;\n      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));\n      shouldAppend = true;\n    } else if (el.hasAttribute(\"data-loaded\")) {\n      resolveWithElement(el);\n    }\n    el.addEventListener(\"error\", (event) => reject(event));\n    el.addEventListener(\"abort\", (event) => reject(event));\n    el.addEventListener(\"load\", () => {\n      el.setAttribute(\"data-loaded\", \"true\");\n      onLoaded(el);\n      resolveWithElement(el);\n    });\n    if (shouldAppend)\n      el = document.head.appendChild(el);\n    if (!waitForScriptLoad)\n      resolveWithElement(el);\n  });\n  const load = (waitForScriptLoad = true) => {\n    if (!_promise)\n      _promise = loadScript(waitForScriptLoad);\n    return _promise;\n  };\n  const unload = () => {\n    if (!document)\n      return;\n    _promise = null;\n    if (scriptTag.value)\n      scriptTag.value = null;\n    const el = document.querySelector(`script[src=\"${toValue(src)}\"]`);\n    if (el)\n      document.head.removeChild(el);\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnUnmounted(unload);\n  return { scriptTag, load, unload };\n}\n\nfunction checkOverflowScroll(ele) {\n  const style = window.getComputedStyle(ele);\n  if (style.overflowX === \"scroll\" || style.overflowY === \"scroll\" || style.overflowX === \"auto\" && ele.clientHeight < ele.scrollHeight || style.overflowY === \"auto\" && ele.clientWidth < ele.scrollWidth) {\n    return true;\n  } else {\n    const parent = ele.parentNode;\n    if (!parent || parent.tagName === \"BODY\")\n      return false;\n    return checkOverflowScroll(parent);\n  }\n}\nfunction preventDefault(rawEvent) {\n  const e = rawEvent || window.event;\n  const _target = e.target;\n  if (checkOverflowScroll(_target))\n    return false;\n  if (e.touches.length > 1)\n    return true;\n  if (e.preventDefault)\n    e.preventDefault();\n  return false;\n}\nfunction useScrollLock(element, initialState = false) {\n  const isLocked = ref(initialState);\n  let stopTouchMoveListener = null;\n  let initialOverflow;\n  watch(toRef(element), (el) => {\n    if (el) {\n      const ele = el;\n      initialOverflow = ele.style.overflow;\n      if (isLocked.value)\n        ele.style.overflow = \"hidden\";\n    }\n  }, {\n    immediate: true\n  });\n  const lock = () => {\n    const ele = toValue(element);\n    if (!ele || isLocked.value)\n      return;\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(\n        ele,\n        \"touchmove\",\n        (e) => {\n          preventDefault(e);\n        },\n        { passive: false }\n      );\n    }\n    ele.style.overflow = \"hidden\";\n    isLocked.value = true;\n  };\n  const unlock = () => {\n    const ele = toValue(element);\n    if (!ele || !isLocked.value)\n      return;\n    isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());\n    ele.style.overflow = initialOverflow;\n    isLocked.value = false;\n  };\n  tryOnScopeDispose(unlock);\n  return computed({\n    get() {\n      return isLocked.value;\n    },\n    set(v) {\n      if (v)\n        lock();\n      else\n        unlock();\n    }\n  });\n}\n\nfunction useSessionStorage(key, initialValue, options = {}) {\n  const { window = defaultWindow } = options;\n  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);\n}\n\nvar __defProp$5 = Object.defineProperty;\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$5.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(b)) {\n      if (__propIsEnum$5.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useShare(shareOptions = {}, options = {}) {\n  const { navigator = defaultNavigator } = options;\n  const _navigator = navigator;\n  const isSupported = useSupported(() => _navigator && \"canShare\" in _navigator);\n  const share = async (overrideOptions = {}) => {\n    if (isSupported.value) {\n      const data = __spreadValues$5(__spreadValues$5({}, toValue(shareOptions)), toValue(overrideOptions));\n      let granted = true;\n      if (data.files && _navigator.canShare)\n        granted = _navigator.canShare({ files: data.files });\n      if (granted)\n        return _navigator.share(data);\n    }\n  };\n  return {\n    isSupported,\n    share\n  };\n}\n\nconst defaultSortFn = (source, compareFn) => source.sort(compareFn);\nconst defaultCompare = (a, b) => a - b;\nfunction useSorted(...args) {\n  var _a, _b, _c, _d;\n  const [source] = args;\n  let compareFn = defaultCompare;\n  let options = {};\n  if (args.length === 2) {\n    if (typeof args[1] === \"object\") {\n      options = args[1];\n      compareFn = (_a = options.compareFn) != null ? _a : defaultCompare;\n    } else {\n      compareFn = (_b = args[1]) != null ? _b : defaultCompare;\n    }\n  } else if (args.length > 2) {\n    compareFn = (_c = args[1]) != null ? _c : defaultCompare;\n    options = (_d = args[2]) != null ? _d : {};\n  }\n  const {\n    dirty = false,\n    sortFn = defaultSortFn\n  } = options;\n  if (!dirty)\n    return computed(() => sortFn([...toValue(source)], compareFn));\n  watchEffect(() => {\n    const result = sortFn(toValue(source), compareFn);\n    if (isRef(source))\n      source.value = result;\n    else\n      source.splice(0, source.length, ...result);\n  });\n  return source;\n}\n\nfunction useSpeechRecognition(options = {}) {\n  const {\n    interimResults = true,\n    continuous = true,\n    window = defaultWindow\n  } = options;\n  const lang = toRef(options.lang || \"en-US\");\n  const isListening = ref(false);\n  const isFinal = ref(false);\n  const result = ref(\"\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isListening.value) => {\n    isListening.value = value;\n  };\n  const start = () => {\n    isListening.value = true;\n  };\n  const stop = () => {\n    isListening.value = false;\n  };\n  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\n  const isSupported = useSupported(() => SpeechRecognition);\n  let recognition;\n  if (isSupported.value) {\n    recognition = new SpeechRecognition();\n    recognition.continuous = continuous;\n    recognition.interimResults = interimResults;\n    recognition.lang = toValue(lang);\n    recognition.onstart = () => {\n      isFinal.value = false;\n    };\n    watch(lang, (lang2) => {\n      if (recognition && !isListening.value)\n        recognition.lang = lang2;\n    });\n    recognition.onresult = (event) => {\n      const transcript = Array.from(event.results).map((result2) => {\n        isFinal.value = result2.isFinal;\n        return result2[0];\n      }).map((result2) => result2.transcript).join(\"\");\n      result.value = transcript;\n      error.value = void 0;\n    };\n    recognition.onerror = (event) => {\n      error.value = event;\n    };\n    recognition.onend = () => {\n      isListening.value = false;\n      recognition.lang = toValue(lang);\n    };\n    watch(isListening, () => {\n      if (isListening.value)\n        recognition.start();\n      else\n        recognition.stop();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isListening.value = false;\n  });\n  return {\n    isSupported,\n    isListening,\n    isFinal,\n    recognition,\n    result,\n    error,\n    toggle,\n    start,\n    stop\n  };\n}\n\nfunction useSpeechSynthesis(text, options = {}) {\n  const {\n    pitch = 1,\n    rate = 1,\n    volume = 1,\n    window = defaultWindow\n  } = options;\n  const synth = window && window.speechSynthesis;\n  const isSupported = useSupported(() => synth);\n  const isPlaying = ref(false);\n  const status = ref(\"init\");\n  const spokenText = toRef(text || \"\");\n  const lang = toRef(options.lang || \"en-US\");\n  const error = shallowRef(void 0);\n  const toggle = (value = !isPlaying.value) => {\n    isPlaying.value = value;\n  };\n  const bindEventsForUtterance = (utterance2) => {\n    utterance2.lang = toValue(lang);\n    utterance2.voice = toValue(options.voice) || null;\n    utterance2.pitch = pitch;\n    utterance2.rate = rate;\n    utterance2.volume = volume;\n    utterance2.onstart = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onpause = () => {\n      isPlaying.value = false;\n      status.value = \"pause\";\n    };\n    utterance2.onresume = () => {\n      isPlaying.value = true;\n      status.value = \"play\";\n    };\n    utterance2.onend = () => {\n      isPlaying.value = false;\n      status.value = \"end\";\n    };\n    utterance2.onerror = (event) => {\n      error.value = event;\n    };\n  };\n  const utterance = computed(() => {\n    isPlaying.value = false;\n    status.value = \"init\";\n    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);\n    bindEventsForUtterance(newUtterance);\n    return newUtterance;\n  });\n  const speak = () => {\n    synth.cancel();\n    utterance && synth.speak(utterance.value);\n  };\n  const stop = () => {\n    synth.cancel();\n    isPlaying.value = false;\n  };\n  if (isSupported.value) {\n    bindEventsForUtterance(utterance.value);\n    watch(lang, (lang2) => {\n      if (utterance.value && !isPlaying.value)\n        utterance.value.lang = lang2;\n    });\n    if (options.voice) {\n      watch(options.voice, () => {\n        synth.cancel();\n      });\n    }\n    watch(isPlaying, () => {\n      if (isPlaying.value)\n        synth.resume();\n      else\n        synth.pause();\n    });\n  }\n  tryOnScopeDispose(() => {\n    isPlaying.value = false;\n  });\n  return {\n    isSupported,\n    isPlaying,\n    status,\n    utterance,\n    error,\n    stop,\n    toggle,\n    speak\n  };\n}\n\nfunction useStepper(steps, initialStep) {\n  const stepsRef = ref(steps);\n  const stepNames = computed(() => Array.isArray(stepsRef.value) ? stepsRef.value : Object.keys(stepsRef.value));\n  const index = ref(stepNames.value.indexOf(initialStep != null ? initialStep : stepNames.value[0]));\n  const current = computed(() => at(index.value));\n  const isFirst = computed(() => index.value === 0);\n  const isLast = computed(() => index.value === stepNames.value.length - 1);\n  const next = computed(() => stepNames.value[index.value + 1]);\n  const previous = computed(() => stepNames.value[index.value - 1]);\n  function at(index2) {\n    if (Array.isArray(stepsRef.value))\n      return stepsRef.value[index2];\n    return stepsRef.value[stepNames.value[index2]];\n  }\n  function get(step) {\n    if (!stepNames.value.includes(step))\n      return;\n    return at(stepNames.value.indexOf(step));\n  }\n  function goTo(step) {\n    if (stepNames.value.includes(step))\n      index.value = stepNames.value.indexOf(step);\n  }\n  function goToNext() {\n    if (isLast.value)\n      return;\n    index.value++;\n  }\n  function goToPrevious() {\n    if (isFirst.value)\n      return;\n    index.value--;\n  }\n  function goBackTo(step) {\n    if (isAfter(step))\n      goTo(step);\n  }\n  function isNext(step) {\n    return stepNames.value.indexOf(step) === index.value + 1;\n  }\n  function isPrevious(step) {\n    return stepNames.value.indexOf(step) === index.value - 1;\n  }\n  function isCurrent(step) {\n    return stepNames.value.indexOf(step) === index.value;\n  }\n  function isBefore(step) {\n    return index.value < stepNames.value.indexOf(step);\n  }\n  function isAfter(step) {\n    return index.value > stepNames.value.indexOf(step);\n  }\n  return {\n    steps: stepsRef,\n    stepNames,\n    index,\n    current,\n    next,\n    previous,\n    isFirst,\n    isLast,\n    at,\n    get,\n    goTo,\n    goToNext,\n    goToPrevious,\n    goBackTo,\n    isNext,\n    isPrevious,\n    isCurrent,\n    isBefore,\n    isAfter\n  };\n}\n\nvar __defProp$4 = Object.defineProperty;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useStorageAsync(key, initialValue, storage, options = {}) {\n  var _a;\n  const {\n    flush = \"pre\",\n    deep = true,\n    listenToStorageChanges = true,\n    writeDefaults = true,\n    mergeDefaults = false,\n    shallow,\n    window = defaultWindow,\n    eventFilter,\n    onError = (e) => {\n      console.error(e);\n    }\n  } = options;\n  const rawInit = toValue(initialValue);\n  const type = guessSerializerType(rawInit);\n  const data = (shallow ? shallowRef : ref)(initialValue);\n  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];\n  if (!storage) {\n    try {\n      storage = getSSRHandler(\"getDefaultStorage\", () => {\n        var _a2;\n        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;\n      })();\n    } catch (e) {\n      onError(e);\n    }\n  }\n  async function read(event) {\n    if (!storage || event && event.key !== key)\n      return;\n    try {\n      const rawValue = event ? event.newValue : await storage.getItem(key);\n      if (rawValue == null) {\n        data.value = rawInit;\n        if (writeDefaults && rawInit !== null)\n          await storage.setItem(key, await serializer.write(rawInit));\n      } else if (mergeDefaults) {\n        const value = await serializer.read(rawValue);\n        if (typeof mergeDefaults === \"function\")\n          data.value = mergeDefaults(value, rawInit);\n        else if (type === \"object\" && !Array.isArray(value))\n          data.value = __spreadValues$4(__spreadValues$4({}, rawInit), value);\n        else\n          data.value = value;\n      } else {\n        data.value = await serializer.read(rawValue);\n      }\n    } catch (e) {\n      onError(e);\n    }\n  }\n  read();\n  if (window && listenToStorageChanges)\n    useEventListener(window, \"storage\", (e) => Promise.resolve().then(() => read(e)));\n  if (storage) {\n    watchWithFilter(\n      data,\n      async () => {\n        try {\n          if (data.value == null)\n            await storage.removeItem(key);\n          else\n            await storage.setItem(key, await serializer.write(data.value));\n        } catch (e) {\n          onError(e);\n        }\n      },\n      {\n        flush,\n        deep,\n        eventFilter\n      }\n    );\n  }\n  return data;\n}\n\nlet _id = 0;\nfunction useStyleTag(css, options = {}) {\n  const isLoaded = ref(false);\n  const {\n    document = defaultDocument,\n    immediate = true,\n    manual = false,\n    id = `vueuse_styletag_${++_id}`\n  } = options;\n  const cssRef = ref(css);\n  let stop = () => {\n  };\n  const load = () => {\n    if (!document)\n      return;\n    const el = document.getElementById(id) || document.createElement(\"style\");\n    if (!el.isConnected) {\n      el.type = \"text/css\";\n      el.id = id;\n      if (options.media)\n        el.media = options.media;\n      document.head.appendChild(el);\n    }\n    if (isLoaded.value)\n      return;\n    stop = watch(\n      cssRef,\n      (value) => {\n        el.textContent = value;\n      },\n      { immediate: true }\n    );\n    isLoaded.value = true;\n  };\n  const unload = () => {\n    if (!document || !isLoaded.value)\n      return;\n    stop();\n    document.head.removeChild(document.getElementById(id));\n    isLoaded.value = false;\n  };\n  if (immediate && !manual)\n    tryOnMounted(load);\n  if (!manual)\n    tryOnScopeDispose(unload);\n  return {\n    id,\n    css: cssRef,\n    unload,\n    load,\n    isLoaded: readonly(isLoaded)\n  };\n}\n\nfunction useSwipe(target, options = {}) {\n  const {\n    threshold = 50,\n    onSwipe,\n    onSwipeEnd,\n    onSwipeStart,\n    passive = true,\n    window = defaultWindow\n  } = options;\n  const coordsStart = reactive({ x: 0, y: 0 });\n  const coordsEnd = reactive({ x: 0, y: 0 });\n  const diffX = computed(() => coordsStart.x - coordsEnd.x);\n  const diffY = computed(() => coordsStart.y - coordsEnd.y);\n  const { max, abs } = Math;\n  const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\n  const isSwiping = ref(false);\n  const direction = computed(() => {\n    if (!isThresholdExceeded.value)\n      return \"none\";\n    if (abs(diffX.value) > abs(diffY.value)) {\n      return diffX.value > 0 ? \"left\" : \"right\";\n    } else {\n      return diffY.value > 0 ? \"up\" : \"down\";\n    }\n  });\n  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\n  const updateCoordsStart = (x, y) => {\n    coordsStart.x = x;\n    coordsStart.y = y;\n  };\n  const updateCoordsEnd = (x, y) => {\n    coordsEnd.x = x;\n    coordsEnd.y = y;\n  };\n  let listenerOptions;\n  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);\n  if (!passive)\n    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };\n  else\n    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };\n  const onTouchEnd = (e) => {\n    if (isSwiping.value)\n      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);\n    isSwiping.value = false;\n  };\n  const stops = [\n    useEventListener(target, \"touchstart\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      if (listenerOptions.capture && !listenerOptions.passive)\n        e.preventDefault();\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsStart(x, y);\n      updateCoordsEnd(x, y);\n      onSwipeStart == null ? void 0 : onSwipeStart(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchmove\", (e) => {\n      if (e.touches.length !== 1)\n        return;\n      const [x, y] = getTouchEventCoords(e);\n      updateCoordsEnd(x, y);\n      if (!isSwiping.value && isThresholdExceeded.value)\n        isSwiping.value = true;\n      if (isSwiping.value)\n        onSwipe == null ? void 0 : onSwipe(e);\n    }, listenerOptions),\n    useEventListener(target, \"touchend\", onTouchEnd, listenerOptions),\n    useEventListener(target, \"touchcancel\", onTouchEnd, listenerOptions)\n  ];\n  const stop = () => stops.forEach((s) => s());\n  return {\n    isPassiveEventSupported,\n    isSwiping,\n    direction,\n    coordsStart,\n    coordsEnd,\n    lengthX: diffX,\n    lengthY: diffY,\n    stop\n  };\n}\nfunction checkPassiveEventSupport(document) {\n  if (!document)\n    return false;\n  let supportsPassive = false;\n  const optionsBlock = {\n    get passive() {\n      supportsPassive = true;\n      return false;\n    }\n  };\n  document.addEventListener(\"x\", noop, optionsBlock);\n  document.removeEventListener(\"x\", noop);\n  return supportsPassive;\n}\n\nfunction useTemplateRefsList() {\n  const refs = ref([]);\n  refs.value.set = (el) => {\n    if (el)\n      refs.value.push(el);\n  };\n  onBeforeUpdate(() => {\n    refs.value.length = 0;\n  });\n  return refs;\n}\n\nfunction useTextDirection(options = {}) {\n  const {\n    document = defaultDocument,\n    selector = \"html\",\n    observe = false,\n    initialValue = \"ltr\"\n  } = options;\n  function getValue() {\n    var _a, _b;\n    return (_b = (_a = document == null ? void 0 : document.querySelector(selector)) == null ? void 0 : _a.getAttribute(\"dir\")) != null ? _b : initialValue;\n  }\n  const dir = ref(getValue());\n  tryOnMounted(() => dir.value = getValue());\n  if (observe && document) {\n    useMutationObserver(\n      document.querySelector(selector),\n      () => dir.value = getValue(),\n      { attributes: true }\n    );\n  }\n  return computed({\n    get() {\n      return dir.value;\n    },\n    set(v) {\n      var _a, _b;\n      dir.value = v;\n      if (!document)\n        return;\n      if (dir.value)\n        (_a = document.querySelector(selector)) == null ? void 0 : _a.setAttribute(\"dir\", dir.value);\n      else\n        (_b = document.querySelector(selector)) == null ? void 0 : _b.removeAttribute(\"dir\");\n    }\n  });\n}\n\nfunction getRangesFromSelection(selection) {\n  var _a;\n  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;\n  const ranges = new Array(rangeCount);\n  for (let i = 0; i < rangeCount; i++) {\n    const range = selection.getRangeAt(i);\n    ranges[i] = range;\n  }\n  return ranges;\n}\nfunction useTextSelection(options = {}) {\n  const {\n    window = defaultWindow\n  } = options;\n  const selection = ref(null);\n  const text = computed(() => {\n    var _a, _b;\n    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : \"\";\n  });\n  const ranges = computed(() => selection.value ? getRangesFromSelection(selection.value) : []);\n  const rects = computed(() => ranges.value.map((range) => range.getBoundingClientRect()));\n  function onSelectionChange() {\n    selection.value = null;\n    if (window)\n      selection.value = window.getSelection();\n  }\n  if (window)\n    useEventListener(window.document, \"selectionchange\", onSelectionChange);\n  return {\n    text,\n    rects,\n    ranges,\n    selection\n  };\n}\n\nfunction useTextareaAutosize(options) {\n  const textarea = ref(options == null ? void 0 : options.element);\n  const input = ref(options == null ? void 0 : options.input);\n  const textareaScrollHeight = ref(1);\n  function triggerResize() {\n    var _a, _b;\n    if (!textarea.value)\n      return;\n    let height = \"\";\n    textarea.value.style.height = \"1px\";\n    textareaScrollHeight.value = (_a = textarea.value) == null ? void 0 : _a.scrollHeight;\n    if (options == null ? void 0 : options.styleTarget)\n      toValue(options.styleTarget).style.height = `${textareaScrollHeight.value}px`;\n    else\n      height = `${textareaScrollHeight.value}px`;\n    textarea.value.style.height = height;\n    (_b = options == null ? void 0 : options.onResize) == null ? void 0 : _b.call(options);\n  }\n  watch([input, textarea], triggerResize, { immediate: true });\n  useResizeObserver(textarea, () => triggerResize());\n  if (options == null ? void 0 : options.watch)\n    watch(options.watch, triggerResize, { immediate: true, deep: true });\n  return {\n    textarea,\n    input,\n    triggerResize\n  };\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nfunction useThrottledRefHistory(source, options = {}) {\n  const { throttle = 200, trailing = true } = options;\n  const filter = throttleFilter(throttle, trailing);\n  const history = useRefHistory(source, __spreadProps$1(__spreadValues$3({}, options), { eventFilter: filter }));\n  return __spreadValues$3({}, history);\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst DEFAULT_UNITS = [\n  { max: 6e4, value: 1e3, name: \"second\" },\n  { max: 276e4, value: 6e4, name: \"minute\" },\n  { max: 72e6, value: 36e5, name: \"hour\" },\n  { max: 5184e5, value: 864e5, name: \"day\" },\n  { max: 24192e5, value: 6048e5, name: \"week\" },\n  { max: 28512e6, value: 2592e6, name: \"month\" },\n  { max: Infinity, value: 31536e6, name: \"year\" }\n];\nconst DEFAULT_MESSAGES = {\n  justNow: \"just now\",\n  past: (n) => n.match(/\\d/) ? `${n} ago` : n,\n  future: (n) => n.match(/\\d/) ? `in ${n}` : n,\n  month: (n, past) => n === 1 ? past ? \"last month\" : \"next month\" : `${n} month${n > 1 ? \"s\" : \"\"}`,\n  year: (n, past) => n === 1 ? past ? \"last year\" : \"next year\" : `${n} year${n > 1 ? \"s\" : \"\"}`,\n  day: (n, past) => n === 1 ? past ? \"yesterday\" : \"tomorrow\" : `${n} day${n > 1 ? \"s\" : \"\"}`,\n  week: (n, past) => n === 1 ? past ? \"last week\" : \"next week\" : `${n} week${n > 1 ? \"s\" : \"\"}`,\n  hour: (n) => `${n} hour${n > 1 ? \"s\" : \"\"}`,\n  minute: (n) => `${n} minute${n > 1 ? \"s\" : \"\"}`,\n  second: (n) => `${n} second${n > 1 ? \"s\" : \"\"}`,\n  invalid: \"\"\n};\nfunction DEFAULT_FORMATTER(date) {\n  return date.toISOString().slice(0, 10);\n}\nfunction useTimeAgo(time, options = {}) {\n  const {\n    controls: exposeControls = false,\n    updateInterval = 3e4\n  } = options;\n  const _a = useNow({ interval: updateInterval, controls: true }), { now } = _a, controls = __objRest(_a, [\"now\"]);\n  const timeAgo = computed(() => formatTimeAgo(new Date(toValue(time)), options, toValue(now.value)));\n  if (exposeControls) {\n    return __spreadValues$2({\n      timeAgo\n    }, controls);\n  } else {\n    return timeAgo;\n  }\n}\nfunction formatTimeAgo(from, options = {}, now = Date.now()) {\n  var _a;\n  const {\n    max,\n    messages = DEFAULT_MESSAGES,\n    fullDateFormatter = DEFAULT_FORMATTER,\n    units = DEFAULT_UNITS,\n    showSecond = false,\n    rounding = \"round\"\n  } = options;\n  const roundFn = typeof rounding === \"number\" ? (n) => +n.toFixed(rounding) : Math[rounding];\n  const diff = +now - +from;\n  const absDiff = Math.abs(diff);\n  function getValue(diff2, unit) {\n    return roundFn(Math.abs(diff2) / unit.value);\n  }\n  function format(diff2, unit) {\n    const val = getValue(diff2, unit);\n    const past = diff2 > 0;\n    const str = applyFormat(unit.name, val, past);\n    return applyFormat(past ? \"past\" : \"future\", str, past);\n  }\n  function applyFormat(name, val, isPast) {\n    const formatter = messages[name];\n    if (typeof formatter === \"function\")\n      return formatter(val, isPast);\n    return formatter.replace(\"{0}\", val.toString());\n  }\n  if (absDiff < 6e4 && !showSecond)\n    return messages.justNow;\n  if (typeof max === \"number\" && absDiff > max)\n    return fullDateFormatter(new Date(from));\n  if (typeof max === \"string\") {\n    const unitMax = (_a = units.find((i) => i.name === max)) == null ? void 0 : _a.max;\n    if (unitMax && absDiff > unitMax)\n      return fullDateFormatter(new Date(from));\n  }\n  for (const [idx, unit] of units.entries()) {\n    const val = getValue(diff, unit);\n    if (val <= 0 && units[idx - 1])\n      return format(diff, units[idx - 1]);\n    if (absDiff < unit.max)\n      return format(diff, unit);\n  }\n  return messages.invalid;\n}\n\nfunction useTimeoutPoll(fn, interval, timeoutPollOptions) {\n  const { start } = useTimeoutFn(loop, interval);\n  const isActive = ref(false);\n  async function loop() {\n    if (!isActive.value)\n      return;\n    await fn();\n    start();\n  }\n  function resume() {\n    if (!isActive.value) {\n      isActive.value = true;\n      loop();\n    }\n  }\n  function pause() {\n    isActive.value = false;\n  }\n  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)\n    resume();\n  tryOnScopeDispose(pause);\n  return {\n    isActive,\n    pause,\n    resume\n  };\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nfunction useTimestamp(options = {}) {\n  const {\n    controls: exposeControls = false,\n    offset = 0,\n    immediate = true,\n    interval = \"requestAnimationFrame\",\n    callback\n  } = options;\n  const ts = ref(timestamp() + offset);\n  const update = () => ts.value = timestamp() + offset;\n  const cb = callback ? () => {\n    update();\n    callback(ts.value);\n  } : update;\n  const controls = interval === \"requestAnimationFrame\" ? useRafFn(cb, { immediate }) : useIntervalFn(cb, interval, { immediate });\n  if (exposeControls) {\n    return __spreadValues$1({\n      timestamp: ts\n    }, controls);\n  } else {\n    return ts;\n  }\n}\n\nfunction useTitle(newTitle = null, options = {}) {\n  var _a, _b;\n  const {\n    document = defaultDocument\n  } = options;\n  const title = toRef((_a = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _a : null);\n  const isReadonly = newTitle && typeof newTitle === \"function\";\n  function format(t) {\n    if (!(\"titleTemplate\" in options))\n      return t;\n    const template = options.titleTemplate || \"%s\";\n    return typeof template === \"function\" ? template(t) : toValue(template).replace(/%s/g, t);\n  }\n  watch(\n    title,\n    (t, o) => {\n      if (t !== o && document)\n        document.title = format(typeof t === \"string\" ? t : \"\");\n    },\n    { immediate: true }\n  );\n  if (options.observe && !options.titleTemplate && document && !isReadonly) {\n    useMutationObserver(\n      (_b = document.head) == null ? void 0 : _b.querySelector(\"title\"),\n      () => {\n        if (document && document.title !== title.value)\n          title.value = format(document.title);\n      },\n      { childList: true }\n    );\n  }\n  return title;\n}\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nconst _TransitionPresets = {\n  easeInSine: [0.12, 0, 0.39, 0],\n  easeOutSine: [0.61, 1, 0.88, 1],\n  easeInOutSine: [0.37, 0, 0.63, 1],\n  easeInQuad: [0.11, 0, 0.5, 0],\n  easeOutQuad: [0.5, 1, 0.89, 1],\n  easeInOutQuad: [0.45, 0, 0.55, 1],\n  easeInCubic: [0.32, 0, 0.67, 0],\n  easeOutCubic: [0.33, 1, 0.68, 1],\n  easeInOutCubic: [0.65, 0, 0.35, 1],\n  easeInQuart: [0.5, 0, 0.75, 0],\n  easeOutQuart: [0.25, 1, 0.5, 1],\n  easeInOutQuart: [0.76, 0, 0.24, 1],\n  easeInQuint: [0.64, 0, 0.78, 0],\n  easeOutQuint: [0.22, 1, 0.36, 1],\n  easeInOutQuint: [0.83, 0, 0.17, 1],\n  easeInExpo: [0.7, 0, 0.84, 0],\n  easeOutExpo: [0.16, 1, 0.3, 1],\n  easeInOutExpo: [0.87, 0, 0.13, 1],\n  easeInCirc: [0.55, 0, 1, 0.45],\n  easeOutCirc: [0, 0.55, 0.45, 1],\n  easeInOutCirc: [0.85, 0, 0.15, 1],\n  easeInBack: [0.36, 0, 0.66, -0.56],\n  easeOutBack: [0.34, 1.56, 0.64, 1],\n  easeInOutBack: [0.68, -0.6, 0.32, 1.6]\n};\nconst TransitionPresets = /* @__PURE__ */ Object.assign({}, { linear: identity }, _TransitionPresets);\nfunction createEasingFunction([p0, p1, p2, p3]) {\n  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\n  const b = (a1, a2) => 3 * a2 - 6 * a1;\n  const c = (a1) => 3 * a1;\n  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\n  const getTforX = (x) => {\n    let aGuessT = x;\n    for (let i = 0; i < 4; ++i) {\n      const currentSlope = getSlope(aGuessT, p0, p2);\n      if (currentSlope === 0)\n        return aGuessT;\n      const currentX = calcBezier(aGuessT, p0, p2) - x;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\n}\nfunction lerp(a, b, alpha) {\n  return a + alpha * (b - a);\n}\nfunction toVec(t) {\n  return (typeof t === \"number\" ? [t] : t) || [];\n}\nfunction executeTransition(source, from, to, options = {}) {\n  var _a, _b;\n  const fromVal = toValue(from);\n  const toVal = toValue(to);\n  const v1 = toVec(fromVal);\n  const v2 = toVec(toVal);\n  const duration = (_a = toValue(options.duration)) != null ? _a : 1e3;\n  const startedAt = Date.now();\n  const endAt = Date.now() + duration;\n  const trans = typeof options.transition === \"function\" ? options.transition : (_b = toValue(options.transition)) != null ? _b : identity;\n  const ease = typeof trans === \"function\" ? trans : createEasingFunction(trans);\n  return new Promise((resolve) => {\n    source.value = fromVal;\n    const tick = () => {\n      var _a2;\n      if ((_a2 = options.abort) == null ? void 0 : _a2.call(options)) {\n        resolve();\n        return;\n      }\n      const now = Date.now();\n      const alpha = ease((now - startedAt) / duration);\n      const arr = toVec(source.value).map((n, i) => lerp(v1[i], v2[i], alpha));\n      if (Array.isArray(source.value))\n        source.value = arr.map((n, i) => {\n          var _a3, _b2;\n          return lerp((_a3 = v1[i]) != null ? _a3 : 0, (_b2 = v2[i]) != null ? _b2 : 0, alpha);\n        });\n      else if (typeof source.value === \"number\")\n        source.value = arr[0];\n      if (now < endAt) {\n        requestAnimationFrame(tick);\n      } else {\n        source.value = toVal;\n        resolve();\n      }\n    };\n    tick();\n  });\n}\nfunction useTransition(source, options = {}) {\n  let currentId = 0;\n  const sourceVal = () => {\n    const v = toValue(source);\n    return typeof v === \"number\" ? v : v.map(toValue);\n  };\n  const outputRef = ref(sourceVal());\n  watch(sourceVal, async (to) => {\n    var _a, _b;\n    if (toValue(options.disabled))\n      return;\n    const id = ++currentId;\n    if (options.delay)\n      await promiseTimeout(toValue(options.delay));\n    if (id !== currentId)\n      return;\n    const toVal = Array.isArray(to) ? to.map(toValue) : toValue(to);\n    (_a = options.onStarted) == null ? void 0 : _a.call(options);\n    await executeTransition(outputRef, outputRef.value, toVal, __spreadProps(__spreadValues({}, options), {\n      abort: () => {\n        var _a2;\n        return id !== currentId || ((_a2 = options.abort) == null ? void 0 : _a2.call(options));\n      }\n    }));\n    (_b = options.onFinished) == null ? void 0 : _b.call(options);\n  }, { deep: true });\n  watch(() => toValue(options.disabled), (disabled) => {\n    if (disabled) {\n      currentId++;\n      outputRef.value = sourceVal();\n    }\n  });\n  tryOnScopeDispose(() => {\n    currentId++;\n  });\n  return computed(() => toValue(options.disabled) ? sourceVal() : outputRef.value);\n}\n\nfunction useUrlSearchParams(mode = \"history\", options = {}) {\n  const {\n    initialValue = {},\n    removeNullishValues = true,\n    removeFalsyValues = false,\n    write: enableWrite = true,\n    window = defaultWindow\n  } = options;\n  if (!window)\n    return reactive(initialValue);\n  const state = reactive({});\n  function getRawParams() {\n    if (mode === \"history\") {\n      return window.location.search || \"\";\n    } else if (mode === \"hash\") {\n      const hash = window.location.hash || \"\";\n      const index = hash.indexOf(\"?\");\n      return index > 0 ? hash.slice(index) : \"\";\n    } else {\n      return (window.location.hash || \"\").replace(/^#/, \"\");\n    }\n  }\n  function constructQuery(params) {\n    const stringified = params.toString();\n    if (mode === \"history\")\n      return `${stringified ? `?${stringified}` : \"\"}${window.location.hash || \"\"}`;\n    if (mode === \"hash-params\")\n      return `${window.location.search || \"\"}${stringified ? `#${stringified}` : \"\"}`;\n    const hash = window.location.hash || \"#\";\n    const index = hash.indexOf(\"?\");\n    if (index > 0)\n      return `${hash.slice(0, index)}${stringified ? `?${stringified}` : \"\"}`;\n    return `${hash}${stringified ? `?${stringified}` : \"\"}`;\n  }\n  function read() {\n    return new URLSearchParams(getRawParams());\n  }\n  function updateState(params) {\n    const unusedKeys = new Set(Object.keys(state));\n    for (const key of params.keys()) {\n      const paramsForKey = params.getAll(key);\n      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || \"\";\n      unusedKeys.delete(key);\n    }\n    Array.from(unusedKeys).forEach((key) => delete state[key]);\n  }\n  const { pause, resume } = pausableWatch(\n    state,\n    () => {\n      const params = new URLSearchParams(\"\");\n      Object.keys(state).forEach((key) => {\n        const mapEntry = state[key];\n        if (Array.isArray(mapEntry))\n          mapEntry.forEach((value) => params.append(key, value));\n        else if (removeNullishValues && mapEntry == null)\n          params.delete(key);\n        else if (removeFalsyValues && !mapEntry)\n          params.delete(key);\n        else\n          params.set(key, mapEntry);\n      });\n      write(params);\n    },\n    { deep: true }\n  );\n  function write(params, shouldUpdate) {\n    pause();\n    if (shouldUpdate)\n      updateState(params);\n    window.history.replaceState(\n      window.history.state,\n      window.document.title,\n      window.location.pathname + constructQuery(params)\n    );\n    resume();\n  }\n  function onChanged() {\n    if (!enableWrite)\n      return;\n    write(read(), true);\n  }\n  useEventListener(window, \"popstate\", onChanged, false);\n  if (mode !== \"history\")\n    useEventListener(window, \"hashchange\", onChanged, false);\n  const initial = read();\n  if (initial.keys().next().value)\n    updateState(initial);\n  else\n    Object.assign(state, initialValue);\n  return state;\n}\n\nfunction useUserMedia(options = {}) {\n  var _a, _b;\n  const enabled = ref((_a = options.enabled) != null ? _a : false);\n  const autoSwitch = ref((_b = options.autoSwitch) != null ? _b : true);\n  const constraints = ref(options.constraints);\n  const { navigator = defaultNavigator } = options;\n  const isSupported = useSupported(() => {\n    var _a2;\n    return (_a2 = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _a2.getUserMedia;\n  });\n  const stream = shallowRef();\n  function getDeviceOptions(type) {\n    switch (type) {\n      case \"video\": {\n        if (constraints.value)\n          return constraints.value.video || false;\n        break;\n      }\n      case \"audio\": {\n        if (constraints.value)\n          return constraints.value.audio || false;\n        break;\n      }\n    }\n  }\n  async function _start() {\n    if (!isSupported.value || stream.value)\n      return;\n    stream.value = await navigator.mediaDevices.getUserMedia({\n      video: getDeviceOptions(\"video\"),\n      audio: getDeviceOptions(\"audio\")\n    });\n    return stream.value;\n  }\n  function _stop() {\n    var _a2;\n    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());\n    stream.value = void 0;\n  }\n  function stop() {\n    _stop();\n    enabled.value = false;\n  }\n  async function start() {\n    await _start();\n    if (stream.value)\n      enabled.value = true;\n    return stream.value;\n  }\n  async function restart() {\n    _stop();\n    return await start();\n  }\n  watch(\n    enabled,\n    (v) => {\n      if (v)\n        _start();\n      else\n        _stop();\n    },\n    { immediate: true }\n  );\n  watch(\n    constraints,\n    () => {\n      if (autoSwitch.value && stream.value)\n        restart();\n    },\n    { immediate: true }\n  );\n  return {\n    isSupported,\n    stream,\n    start,\n    stop,\n    restart,\n    constraints,\n    enabled,\n    autoSwitch\n  };\n}\n\nfunction useVModel(props, key, emit, options = {}) {\n  var _a, _b, _c, _d, _e;\n  const {\n    clone = false,\n    passive = false,\n    eventName,\n    deep = false,\n    defaultValue,\n    shouldEmit\n  } = options;\n  const vm = getCurrentInstance();\n  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm)) || ((_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$emit) == null ? void 0 : _c.bind(vm == null ? void 0 : vm.proxy));\n  let event = eventName;\n  if (!key) {\n    if (isVue2) {\n      const modelOptions = (_e = (_d = vm == null ? void 0 : vm.proxy) == null ? void 0 : _d.$options) == null ? void 0 : _e.model;\n      key = (modelOptions == null ? void 0 : modelOptions.value) || \"value\";\n      if (!eventName)\n        event = (modelOptions == null ? void 0 : modelOptions.event) || \"input\";\n    } else {\n      key = \"modelValue\";\n    }\n  }\n  event = eventName || event || `update:${key.toString()}`;\n  const cloneFn = (val) => !clone ? val : typeof clone === \"function\" ? clone(val) : cloneFnJSON(val);\n  const getValue = () => isDef(props[key]) ? cloneFn(props[key]) : defaultValue;\n  const triggerEmit = (value) => {\n    if (shouldEmit) {\n      if (shouldEmit(value))\n        _emit(event, value);\n    } else {\n      _emit(event, value);\n    }\n  };\n  if (passive) {\n    const initialValue = getValue();\n    const proxy = ref(initialValue);\n    watch(\n      () => props[key],\n      (v) => proxy.value = cloneFn(v)\n    );\n    watch(\n      proxy,\n      (v) => {\n        if (v !== props[key] || deep)\n          triggerEmit(v);\n      },\n      { deep }\n    );\n    return proxy;\n  } else {\n    return computed({\n      get() {\n        return getValue();\n      },\n      set(value) {\n        triggerEmit(value);\n      }\n    });\n  }\n}\n\nfunction useVModels(props, emit, options = {}) {\n  const ret = {};\n  for (const key in props)\n    ret[key] = useVModel(props, key, emit, options);\n  return ret;\n}\n\nfunction useVibrate(options) {\n  const {\n    pattern = [],\n    interval = 0,\n    navigator = defaultNavigator\n  } = options || {};\n  const isSupported = useSupported(() => typeof navigator !== \"undefined\" && \"vibrate\" in navigator);\n  const patternRef = toRef(pattern);\n  let intervalControls;\n  const vibrate = (pattern2 = patternRef.value) => {\n    if (isSupported.value)\n      navigator.vibrate(pattern2);\n  };\n  const stop = () => {\n    if (isSupported.value)\n      navigator.vibrate(0);\n    intervalControls == null ? void 0 : intervalControls.pause();\n  };\n  if (interval > 0) {\n    intervalControls = useIntervalFn(\n      vibrate,\n      interval,\n      {\n        immediate: false,\n        immediateCallback: false\n      }\n    );\n  }\n  return {\n    isSupported,\n    pattern,\n    intervalControls,\n    vibrate,\n    stop\n  };\n}\n\nfunction useVirtualList(list, options) {\n  const { containerStyle, wrapperProps, scrollTo, calculateRange, currentList, containerRef } = \"itemHeight\" in options ? useVerticalVirtualList(options, list) : useHorizontalVirtualList(options, list);\n  return {\n    list: currentList,\n    scrollTo,\n    containerProps: {\n      ref: containerRef,\n      onScroll: () => {\n        calculateRange();\n      },\n      style: containerStyle\n    },\n    wrapperProps\n  };\n}\nfunction useVirtualListResources(list) {\n  const containerRef = ref(null);\n  const size = useElementSize(containerRef);\n  const currentList = ref([]);\n  const source = shallowRef(list);\n  const state = ref({ start: 0, end: 10 });\n  return { state, source, currentList, size, containerRef };\n}\nfunction createGetViewCapacity(state, source, itemSize) {\n  return (containerSize) => {\n    if (typeof itemSize === \"number\")\n      return Math.ceil(containerSize / itemSize);\n    const { start = 0 } = state.value;\n    let sum = 0;\n    let capacity = 0;\n    for (let i = start; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      capacity = i;\n      if (sum > containerSize)\n        break;\n    }\n    return capacity - start;\n  };\n}\nfunction createGetOffset(source, itemSize) {\n  return (scrollDirection) => {\n    if (typeof itemSize === \"number\")\n      return Math.floor(scrollDirection / itemSize) + 1;\n    let sum = 0;\n    let offset = 0;\n    for (let i = 0; i < source.value.length; i++) {\n      const size = itemSize(i);\n      sum += size;\n      if (sum >= scrollDirection) {\n        offset = i;\n        break;\n      }\n    }\n    return offset + 1;\n  };\n}\nfunction createCalculateRange(type, overscan, getOffset, getViewCapacity, { containerRef, state, currentList, source }) {\n  return () => {\n    const element = containerRef.value;\n    if (element) {\n      const offset = getOffset(type === \"vertical\" ? element.scrollTop : element.scrollLeft);\n      const viewCapacity = getViewCapacity(type === \"vertical\" ? element.clientHeight : element.clientWidth);\n      const from = offset - overscan;\n      const to = offset + viewCapacity + overscan;\n      state.value = {\n        start: from < 0 ? 0 : from,\n        end: to > source.value.length ? source.value.length : to\n      };\n      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({\n        data: ele,\n        index: index + state.value.start\n      }));\n    }\n  };\n}\nfunction createGetDistance(itemSize, source) {\n  return (index) => {\n    if (typeof itemSize === \"number\") {\n      const size2 = index * itemSize;\n      return size2;\n    }\n    const size = source.value.slice(0, index).reduce((sum, _, i) => sum + itemSize(i), 0);\n    return size;\n  };\n}\nfunction useWatchForSizes(size, list, calculateRange) {\n  watch([size.width, size.height, list], () => {\n    calculateRange();\n  });\n}\nfunction createComputedTotalSize(itemSize, source) {\n  return computed(() => {\n    if (typeof itemSize === \"number\")\n      return source.value.length * itemSize;\n    return source.value.reduce((sum, _, index) => sum + itemSize(index), 0);\n  });\n}\nconst scrollToDictionaryForElementScrollKey = {\n  horizontal: \"scrollLeft\",\n  vertical: \"scrollTop\"\n};\nfunction createScrollTo(type, calculateRange, getDistance, containerRef) {\n  return (index) => {\n    if (containerRef.value) {\n      containerRef.value[scrollToDictionaryForElementScrollKey[type]] = getDistance(index);\n      calculateRange();\n    }\n  };\n}\nfunction useHorizontalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowX: \"auto\" };\n  const { itemWidth, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemWidth);\n  const getOffset = createGetOffset(source, itemWidth);\n  const calculateRange = createCalculateRange(\"horizontal\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceLeft = createGetDistance(itemWidth, source);\n  const offsetLeft = computed(() => getDistanceLeft(state.value.start));\n  const totalWidth = createComputedTotalSize(itemWidth, source);\n  useWatchForSizes(size, list, calculateRange);\n  const scrollTo = createScrollTo(\"horizontal\", calculateRange, getDistanceLeft, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        height: \"100%\",\n        width: `${totalWidth.value - offsetLeft.value}px`,\n        marginLeft: `${offsetLeft.value}px`,\n        display: \"flex\"\n      }\n    };\n  });\n  return {\n    scrollTo,\n    calculateRange,\n    wrapperProps,\n    containerStyle,\n    currentList,\n    containerRef\n  };\n}\nfunction useVerticalVirtualList(options, list) {\n  const resources = useVirtualListResources(list);\n  const { state, source, currentList, size, containerRef } = resources;\n  const containerStyle = { overflowY: \"auto\" };\n  const { itemHeight, overscan = 5 } = options;\n  const getViewCapacity = createGetViewCapacity(state, source, itemHeight);\n  const getOffset = createGetOffset(source, itemHeight);\n  const calculateRange = createCalculateRange(\"vertical\", overscan, getOffset, getViewCapacity, resources);\n  const getDistanceTop = createGetDistance(itemHeight, source);\n  const offsetTop = computed(() => getDistanceTop(state.value.start));\n  const totalHeight = createComputedTotalSize(itemHeight, source);\n  useWatchForSizes(size, list, calculateRange);\n  const scrollTo = createScrollTo(\"vertical\", calculateRange, getDistanceTop, containerRef);\n  const wrapperProps = computed(() => {\n    return {\n      style: {\n        width: \"100%\",\n        height: `${totalHeight.value - offsetTop.value}px`,\n        marginTop: `${offsetTop.value}px`\n      }\n    };\n  });\n  return {\n    calculateRange,\n    scrollTo,\n    containerStyle,\n    wrapperProps,\n    currentList,\n    containerRef\n  };\n}\n\nfunction useWakeLock(options = {}) {\n  const {\n    navigator = defaultNavigator,\n    document = defaultDocument\n  } = options;\n  let wakeLock;\n  const isSupported = useSupported(() => navigator && \"wakeLock\" in navigator);\n  const isActive = ref(false);\n  async function onVisibilityChange() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    if (document && document.visibilityState === \"visible\")\n      wakeLock = await navigator.wakeLock.request(\"screen\");\n    isActive.value = !wakeLock.released;\n  }\n  if (document)\n    useEventListener(document, \"visibilitychange\", onVisibilityChange, { passive: true });\n  async function request(type) {\n    if (!isSupported.value)\n      return;\n    wakeLock = await navigator.wakeLock.request(type);\n    isActive.value = !wakeLock.released;\n  }\n  async function release() {\n    if (!isSupported.value || !wakeLock)\n      return;\n    await wakeLock.release();\n    isActive.value = !wakeLock.released;\n    wakeLock = null;\n  }\n  return {\n    isSupported,\n    isActive,\n    request,\n    release\n  };\n}\n\nfunction useWebNotification(defaultOptions = {}) {\n  const {\n    window = defaultWindow\n  } = defaultOptions;\n  const isSupported = useSupported(() => !!window && \"Notification\" in window);\n  const notification = ref(null);\n  const requestPermission = async () => {\n    if (!isSupported.value)\n      return;\n    if (\"permission\" in Notification && Notification.permission !== \"denied\")\n      await Notification.requestPermission();\n  };\n  const { on: onClick, trigger: clickTrigger } = createEventHook();\n  const { on: onShow, trigger: showTrigger } = createEventHook();\n  const { on: onError, trigger: errorTrigger } = createEventHook();\n  const { on: onClose, trigger: closeTrigger } = createEventHook();\n  const show = async (overrides) => {\n    if (!isSupported.value)\n      return;\n    await requestPermission();\n    const options = Object.assign({}, defaultOptions, overrides);\n    notification.value = new Notification(options.title || \"\", options);\n    notification.value.onclick = clickTrigger;\n    notification.value.onshow = showTrigger;\n    notification.value.onerror = errorTrigger;\n    notification.value.onclose = closeTrigger;\n    return notification.value;\n  };\n  const close = () => {\n    if (notification.value)\n      notification.value.close();\n    notification.value = null;\n  };\n  tryOnMounted(async () => {\n    if (isSupported.value)\n      await requestPermission();\n  });\n  tryOnScopeDispose(close);\n  if (isSupported.value && window) {\n    const document = window.document;\n    useEventListener(document, \"visibilitychange\", (e) => {\n      e.preventDefault();\n      if (document.visibilityState === \"visible\") {\n        close();\n      }\n    });\n  }\n  return {\n    isSupported,\n    notification,\n    show,\n    close,\n    onClick,\n    onShow,\n    onError,\n    onClose\n  };\n}\n\nconst DEFAULT_PING_MESSAGE = \"ping\";\nfunction resolveNestedOptions(options) {\n  if (options === true)\n    return {};\n  return options;\n}\nfunction useWebSocket(url, options = {}) {\n  const {\n    onConnected,\n    onDisconnected,\n    onError,\n    onMessage,\n    immediate = true,\n    autoClose = true,\n    protocols = []\n  } = options;\n  const data = ref(null);\n  const status = ref(\"CLOSED\");\n  const wsRef = ref();\n  const urlRef = toRef(url);\n  let heartbeatPause;\n  let heartbeatResume;\n  let explicitlyClosed = false;\n  let retried = 0;\n  let bufferedData = [];\n  let pongTimeoutWait;\n  const close = (code = 1e3, reason) => {\n    if (!wsRef.value)\n      return;\n    explicitlyClosed = true;\n    heartbeatPause == null ? void 0 : heartbeatPause();\n    wsRef.value.close(code, reason);\n  };\n  const _sendBuffer = () => {\n    if (bufferedData.length && wsRef.value && status.value === \"OPEN\") {\n      for (const buffer of bufferedData)\n        wsRef.value.send(buffer);\n      bufferedData = [];\n    }\n  };\n  const resetHeartbeat = () => {\n    clearTimeout(pongTimeoutWait);\n    pongTimeoutWait = void 0;\n  };\n  const send = (data2, useBuffer = true) => {\n    if (!wsRef.value || status.value !== \"OPEN\") {\n      if (useBuffer)\n        bufferedData.push(data2);\n      return false;\n    }\n    _sendBuffer();\n    wsRef.value.send(data2);\n    return true;\n  };\n  const _init = () => {\n    if (explicitlyClosed || typeof urlRef.value === \"undefined\")\n      return;\n    const ws = new WebSocket(urlRef.value, protocols);\n    wsRef.value = ws;\n    status.value = \"CONNECTING\";\n    ws.onopen = () => {\n      status.value = \"OPEN\";\n      onConnected == null ? void 0 : onConnected(ws);\n      heartbeatResume == null ? void 0 : heartbeatResume();\n      _sendBuffer();\n    };\n    ws.onclose = (ev) => {\n      status.value = \"CLOSED\";\n      wsRef.value = void 0;\n      onDisconnected == null ? void 0 : onDisconnected(ws, ev);\n      if (!explicitlyClosed && options.autoReconnect) {\n        const {\n          retries = -1,\n          delay = 1e3,\n          onFailed\n        } = resolveNestedOptions(options.autoReconnect);\n        retried += 1;\n        if (typeof retries === \"number\" && (retries < 0 || retried < retries))\n          setTimeout(_init, delay);\n        else if (typeof retries === \"function\" && retries())\n          setTimeout(_init, delay);\n        else\n          onFailed == null ? void 0 : onFailed();\n      }\n    };\n    ws.onerror = (e) => {\n      onError == null ? void 0 : onError(ws, e);\n    };\n    ws.onmessage = (e) => {\n      if (options.heartbeat) {\n        resetHeartbeat();\n        const {\n          message = DEFAULT_PING_MESSAGE\n        } = resolveNestedOptions(options.heartbeat);\n        if (e.data === message)\n          return;\n      }\n      data.value = e.data;\n      onMessage == null ? void 0 : onMessage(ws, e);\n    };\n  };\n  if (options.heartbeat) {\n    const {\n      message = DEFAULT_PING_MESSAGE,\n      interval = 1e3,\n      pongTimeout = 1e3\n    } = resolveNestedOptions(options.heartbeat);\n    const { pause, resume } = useIntervalFn(\n      () => {\n        send(message, false);\n        if (pongTimeoutWait != null)\n          return;\n        pongTimeoutWait = setTimeout(() => {\n          close();\n        }, pongTimeout);\n      },\n      interval,\n      { immediate: false }\n    );\n    heartbeatPause = pause;\n    heartbeatResume = resume;\n  }\n  if (autoClose) {\n    useEventListener(window, \"beforeunload\", () => close());\n    tryOnScopeDispose(close);\n  }\n  const open = () => {\n    close();\n    explicitlyClosed = false;\n    retried = 0;\n    _init();\n  };\n  if (immediate)\n    watch(urlRef, open, { immediate: true });\n  return {\n    data,\n    status,\n    close,\n    send,\n    open,\n    ws: wsRef\n  };\n}\n\nfunction useWebWorker(arg0, workerOptions, options) {\n  const {\n    window = defaultWindow\n  } = options != null ? options : {};\n  const data = ref(null);\n  const worker = shallowRef();\n  const post = function post2(val) {\n    if (!worker.value)\n      return;\n    worker.value.postMessage(val);\n  };\n  const terminate = function terminate2() {\n    if (!worker.value)\n      return;\n    worker.value.terminate();\n  };\n  if (window) {\n    if (typeof arg0 === \"string\")\n      worker.value = new Worker(arg0, workerOptions);\n    else if (typeof arg0 === \"function\")\n      worker.value = arg0();\n    else\n      worker.value = arg0;\n    worker.value.onmessage = (e) => {\n      data.value = e.data;\n    };\n    tryOnScopeDispose(() => {\n      if (worker.value)\n        worker.value.terminate();\n    });\n  }\n  return {\n    data,\n    post,\n    terminate,\n    worker\n  };\n}\n\nfunction jobRunner(userFunc) {\n  return (e) => {\n    const userFuncArgs = e.data[0];\n    return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {\n      postMessage([\"SUCCESS\", result]);\n    }).catch((error) => {\n      postMessage([\"ERROR\", error]);\n    });\n  };\n}\n\nfunction depsParser(deps) {\n  if (deps.length === 0)\n    return \"\";\n  const depsString = deps.map((dep) => `'${dep}'`).toString();\n  return `importScripts(${depsString})`;\n}\n\nfunction createWorkerBlobUrl(fn, deps) {\n  const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;\n  const blob = new Blob([blobCode], { type: \"text/javascript\" });\n  const url = URL.createObjectURL(blob);\n  return url;\n}\n\nfunction useWebWorkerFn(fn, options = {}) {\n  const {\n    dependencies = [],\n    timeout,\n    window = defaultWindow\n  } = options;\n  const worker = ref();\n  const workerStatus = ref(\"PENDING\");\n  const promise = ref({});\n  const timeoutId = ref();\n  const workerTerminate = (status = \"PENDING\") => {\n    if (worker.value && worker.value._url && window) {\n      worker.value.terminate();\n      URL.revokeObjectURL(worker.value._url);\n      promise.value = {};\n      worker.value = void 0;\n      window.clearTimeout(timeoutId.value);\n      workerStatus.value = status;\n    }\n  };\n  workerTerminate();\n  tryOnScopeDispose(workerTerminate);\n  const generateWorker = () => {\n    const blobUrl = createWorkerBlobUrl(fn, dependencies);\n    const newWorker = new Worker(blobUrl);\n    newWorker._url = blobUrl;\n    newWorker.onmessage = (e) => {\n      const { resolve = () => {\n      }, reject = () => {\n      } } = promise.value;\n      const [status, result] = e.data;\n      switch (status) {\n        case \"SUCCESS\":\n          resolve(result);\n          workerTerminate(status);\n          break;\n        default:\n          reject(result);\n          workerTerminate(\"ERROR\");\n          break;\n      }\n    };\n    newWorker.onerror = (e) => {\n      const { reject = () => {\n      } } = promise.value;\n      reject(e);\n      workerTerminate(\"ERROR\");\n    };\n    if (timeout) {\n      timeoutId.value = setTimeout(\n        () => workerTerminate(\"TIMEOUT_EXPIRED\"),\n        timeout\n      );\n    }\n    return newWorker;\n  };\n  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\n    promise.value = {\n      resolve,\n      reject\n    };\n    worker.value && worker.value.postMessage([[...fnArgs]]);\n    workerStatus.value = \"RUNNING\";\n  });\n  const workerFn = (...fnArgs) => {\n    if (workerStatus.value === \"RUNNING\") {\n      console.error(\n        \"[useWebWorkerFn] You can only run one instance of the worker at a time.\"\n      );\n      return Promise.reject();\n    }\n    worker.value = generateWorker();\n    return callWorker(...fnArgs);\n  };\n  return {\n    workerFn,\n    workerStatus,\n    workerTerminate\n  };\n}\n\nfunction useWindowFocus({ window = defaultWindow } = {}) {\n  if (!window)\n    return ref(false);\n  const focused = ref(window.document.hasFocus());\n  useEventListener(window, \"blur\", () => {\n    focused.value = false;\n  });\n  useEventListener(window, \"focus\", () => {\n    focused.value = true;\n  });\n  return focused;\n}\n\nfunction useWindowScroll({ window = defaultWindow } = {}) {\n  if (!window) {\n    return {\n      x: ref(0),\n      y: ref(0)\n    };\n  }\n  const x = ref(window.scrollX);\n  const y = ref(window.scrollY);\n  useEventListener(\n    window,\n    \"scroll\",\n    () => {\n      x.value = window.scrollX;\n      y.value = window.scrollY;\n    },\n    {\n      capture: false,\n      passive: true\n    }\n  );\n  return { x, y };\n}\n\nfunction useWindowSize(options = {}) {\n  const {\n    window = defaultWindow,\n    initialWidth = Infinity,\n    initialHeight = Infinity,\n    listenOrientation = true,\n    includeScrollbar = true\n  } = options;\n  const width = ref(initialWidth);\n  const height = ref(initialHeight);\n  const update = () => {\n    if (window) {\n      if (includeScrollbar) {\n        width.value = window.innerWidth;\n        height.value = window.innerHeight;\n      } else {\n        width.value = window.document.documentElement.clientWidth;\n        height.value = window.document.documentElement.clientHeight;\n      }\n    }\n  };\n  update();\n  tryOnMounted(update);\n  useEventListener(\"resize\", update, { passive: true });\n  if (listenOrientation) {\n    const matches = useMediaQuery(\"(orientation: portrait)\");\n    watch(matches, () => update());\n  }\n  return { width, height };\n}\n\nexport { DefaultMagicKeysAliasMap, StorageSerializers, TransitionPresets, computedAsync as asyncComputed, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsMasterCss, breakpointsQuasar, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, cloneFnJSON, computedAsync, computedInject, createFetch, createReusableTemplate, createTemplatePromise, createUnrefFn, customStorageEventName, defaultDocument, defaultLocation, defaultNavigator, defaultWindow, executeTransition, formatTimeAgo, getSSRHandler, mapGamepadToXbox360Controller, onClickOutside, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onLongPress, onStartTyping, setSSRHandler, templateRef, unrefElement, useActiveElement, useAnimate, useAsyncQueue, useAsyncState, useBase64, useBattery, useBluetooth, useBreakpoints, useBroadcastChannel, useBrowserLocation, useCached, useClipboard, useCloned, useColorMode, useConfirmDialog, useCssVar, useCurrentElement, useCycleList, useDark, useDebouncedRefHistory, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDisplayMedia, useDocumentVisibility, useDraggable, useDropZone, useElementBounding, useElementByPoint, useElementHover, useElementSize, useElementVisibility, useEventBus, useEventListener, useEventSource, useEyeDropper, useFavicon, useFetch, useFileDialog, useFileSystemAccess, useFocus, useFocusWithin, useFps, useFullscreen, useGamepad, useGeolocation, useIdle, useImage, useInfiniteScroll, useIntersectionObserver, useKeyModifier, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMemoize, useMemory, useMounted, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNavigatorLanguage, useNetwork, useNow, useObjectUrl, useOffsetPagination, useOnline, usePageLeave, useParallax, useParentElement, usePerformanceObserver, usePermission, usePointer, usePointerLock, usePointerSwipe, usePreferredColorScheme, usePreferredContrast, usePreferredDark, usePreferredLanguages, usePreferredReducedMotion, usePrevious, useRafFn, useRefHistory, useResizeObserver, useScreenOrientation, useScreenSafeArea, useScriptTag, useScroll, useScrollLock, useSessionStorage, useShare, useSorted, useSpeechRecognition, useSpeechSynthesis, useStepper, useStorage, useStorageAsync, useStyleTag, useSupported, useSwipe, useTemplateRefsList, useTextDirection, useTextSelection, useTextareaAutosize, useThrottledRefHistory, useTimeAgo, useTimeoutPoll, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useVibrate, useVirtualList, useWakeLock, useWebNotification, useWebSocket, useWebWorker, useWebWorkerFn, useWindowFocus, useWindowScroll, useWindowSize };\n","export const version = \"14.8.49\";\n//# sourceMappingURL=version.js.map","export const createExtendedExponentialRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-extended-exponential-ramp-to-value-automation-event.js.map","export const createExtendedLinearRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-extended-linear-ramp-to-value-automation-event.js.map","export const createSetValueAutomationEvent = (value, startTime) => {\n    return { startTime, type: 'setValue', value };\n};\n//# sourceMappingURL=create-set-value-automation-event.js.map","export const createSetValueCurveAutomationEvent = (values, startTime, duration) => {\n    return { duration, startTime, type: 'setValueCurve', values };\n};\n//# sourceMappingURL=create-set-value-curve-automation-event.js.map","export const getTargetValueAtTime = (time, valueAtStartTime, { startTime, target, timeConstant }) => {\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n};\n//# sourceMappingURL=get-target-value-at-time.js.map","export const isExponentialRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'exponentialRampToValue';\n};\n//# sourceMappingURL=exponential-ramp-to-value-automation-event.js.map","export const isLinearRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'linearRampToValue';\n};\n//# sourceMappingURL=linear-ramp-to-value-automation-event.js.map","import { isExponentialRampToValueAutomationEvent } from './exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from './linear-ramp-to-value-automation-event';\nexport const isAnyRampToValueAutomationEvent = (automationEvent) => {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n};\n//# sourceMappingURL=any-ramp-to-value-automation-event.js.map","export const isSetValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValue';\n};\n//# sourceMappingURL=set-value-automation-event.js.map","export const isSetValueCurveAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValueCurve';\n};\n//# sourceMappingURL=set-value-curve-automation-event.js.map","import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n    const automationEvent = automationEvents[index];\n    return automationEvent === undefined\n        ? defaultValue\n        : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent)\n            ? automationEvent.value\n            : isSetValueCurveAutomationEvent(automationEvent)\n                ? automationEvent.values[automationEvent.values.length - 1]\n                : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};\n//# sourceMappingURL=get-value-of-automation-event-at-index-at-time.js.map","import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n    return currentAutomationEvent === undefined\n        ? [nextAutomationEvent.insertTime, defaultValue]\n        : isAnyRampToValueAutomationEvent(currentAutomationEvent)\n            ? [currentAutomationEvent.endTime, currentAutomationEvent.value]\n            : isSetValueAutomationEvent(currentAutomationEvent)\n                ? [currentAutomationEvent.startTime, currentAutomationEvent.value]\n                : isSetValueCurveAutomationEvent(currentAutomationEvent)\n                    ? [\n                        currentAutomationEvent.startTime + currentAutomationEvent.duration,\n                        currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n                    ]\n                    : [\n                        currentAutomationEvent.startTime,\n                        getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n                    ];\n};\n//# sourceMappingURL=get-end-time-and-value-of-previous-automation-event.js.map","export const isCancelAndHoldAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelAndHold';\n};\n//# sourceMappingURL=cancel-and-hold-automation-event.js.map","export const isCancelScheduledValuesAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelScheduledValues';\n};\n//# sourceMappingURL=cancel-scheduled-values-automation-event.js.map","import { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nexport const getEventTime = (automationEvent) => {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n    }\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n    }\n    return automationEvent.startTime;\n};\n//# sourceMappingURL=get-event-time.js.map","export const getExponentialRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    if (valueAtStartTime === value) {\n        return value;\n    }\n    if ((0 < valueAtStartTime && 0 < value) || (valueAtStartTime < 0 && value < 0)) {\n        return valueAtStartTime * (value / valueAtStartTime) ** ((time - startTime) / (endTime - startTime));\n    }\n    return 0;\n};\n//# sourceMappingURL=get-exponential-ramp-value-at-time.js.map","export const getLinearRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    return valueAtStartTime + ((time - startTime) / (endTime - startTime)) * (value - valueAtStartTime);\n};\n//# sourceMappingURL=get-linear-ramp-value-at-time.js.map","export const interpolateValue = (values, theoreticIndex) => {\n    const lowerIndex = Math.floor(theoreticIndex);\n    const upperIndex = Math.ceil(theoreticIndex);\n    if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n    }\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n};\n//# sourceMappingURL=interpolate-value.js.map","import { interpolateValue } from './interpolate-value';\nexport const getValueCurveValueAtTime = (time, { duration, startTime, values }) => {\n    const theoreticIndex = ((time - startTime) / duration) * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n};\n//# sourceMappingURL=get-value-curve-value-at-time.js.map","export const isSetTargetAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setTarget';\n};\n//# sourceMappingURL=set-target-automation-event.js.map","import { createExtendedExponentialRampToValueAutomationEvent } from '../functions/create-extended-exponential-ramp-to-value-automation-event';\nimport { createExtendedLinearRampToValueAutomationEvent } from '../functions/create-extended-linear-ramp-to-value-automation-event';\nimport { createSetValueAutomationEvent } from '../functions/create-set-value-automation-event';\nimport { createSetValueCurveAutomationEvent } from '../functions/create-set-value-curve-automation-event';\nimport { getEndTimeAndValueOfPreviousAutomationEvent } from '../functions/get-end-time-and-value-of-previous-automation-event';\nimport { getEventTime } from '../functions/get-event-time';\nimport { getExponentialRampValueAtTime } from '../functions/get-exponential-ramp-value-at-time';\nimport { getLinearRampValueAtTime } from '../functions/get-linear-ramp-value-at-time';\nimport { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { getValueCurveValueAtTime } from '../functions/get-value-curve-value-at-time';\nimport { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nimport { isSetTargetAutomationEvent } from '../guards/set-target-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport class AutomationEventList {\n    constructor(defaultValue) {\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n    }\n    [Symbol.iterator]() {\n        return this._automationEvents[Symbol.iterator]();\n    }\n    add(automationEvent) {\n        const eventTime = getEventTime(automationEvent);\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => {\n                if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                    return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n                }\n                return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            const removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n                this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n                const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n                if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                    if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                        throw new Error('The internal list is malformed.');\n                    }\n                    const startTime = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.startTime + lastAutomationEvent.duration\n                        : getEventTime(lastAutomationEvent);\n                    const startValue = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1]\n                        : lastAutomationEvent.value;\n                    const value = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent)\n                        : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                    const truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime)\n                        : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                    this._automationEvents.push(truncatedAutomationEvent);\n                }\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                    this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n                }\n                if (lastAutomationEvent !== undefined &&\n                    isSetValueCurveAutomationEvent(lastAutomationEvent) &&\n                    lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                    this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n                }\n            }\n        }\n        else {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > eventTime);\n            const previousAutomationEvent = index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[index - 1];\n            if (previousAutomationEvent !== undefined &&\n                isSetValueCurveAutomationEvent(previousAutomationEvent) &&\n                getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n                return false;\n            }\n            const persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent)\n                ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime)\n                : isLinearRampToValueAutomationEvent(automationEvent)\n                    ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime)\n                    : automationEvent;\n            if (index === -1) {\n                this._automationEvents.push(persistentAutomationEvent);\n            }\n            else {\n                if (isSetValueCurveAutomationEvent(automationEvent) &&\n                    eventTime + automationEvent.duration > getEventTime(this._automationEvents[index])) {\n                    return false;\n                }\n                this._automationEvents.splice(index, 0, persistentAutomationEvent);\n            }\n        }\n        return true;\n    }\n    flush(time) {\n        const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > time);\n        if (index > 1) {\n            const remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            const firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n                remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n        }\n    }\n    getValue(time) {\n        if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n        }\n        const indexOfNextEvent = this._automationEvents.findIndex((automationEvent) => getEventTime(automationEvent) > time);\n        const nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n        const indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n        const currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n        if (currentAutomationEvent !== undefined &&\n            isSetTargetAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueCurveAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n                return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n        if (currentAutomationEvent !== undefined &&\n            isAnyRampToValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getLinearRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        return this._defaultValue;\n    }\n}\n//# sourceMappingURL=automation-event-list.js.map","export const createCancelAndHoldAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelAndHold' };\n};\n//# sourceMappingURL=create-cancel-and-hold-automation-event.js.map","export const createCancelScheduledValuesAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelScheduledValues' };\n};\n//# sourceMappingURL=create-cancel-scheduled-values-automation-event.js.map","export const createExponentialRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-exponential-ramp-to-value-automation-event.js.map","export const createLinearRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-linear-ramp-to-value-automation-event.js.map","export const createSetTargetAutomationEvent = (target, startTime, timeConstant) => {\n    return { startTime, target, timeConstant, type: 'setTarget' };\n};\n//# sourceMappingURL=create-set-target-automation-event.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData).then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            }, (err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1, port2 } = new MessageChannel();\n    return new Promise((resolve) => {\n        const closeAndResolve = () => {\n            port2.onmessage = null;\n            port1.close();\n            port2.close();\n            resolve();\n        };\n        port2.onmessage = () => closeAndResolve();\n        try {\n            port1.postMessage(arrayBuffer, [arrayBuffer]);\n        }\n        finally {\n            closeAndResolve();\n        }\n    });\n};\n//# sourceMappingURL=detach-array-buffer.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Edge do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                detachArrayBuffer(audioData).catch(() => {\n                    // Ignore errors.\n                });\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = async () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    await detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete().then(() => resolve(audioBuffer));\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Edge throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        const buffer = new Float32Array(1);\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                getFirstSample(inputBuffer, buffer, 0),\n                getFirstSample(inputBuffer, buffer, 1),\n                getFirstSample(inputBuffer, buffer, 2)\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                getFirstSample(inputBuffer, buffer, 3),\n                getFirstSample(inputBuffer, buffer, 4),\n                getFirstSample(inputBuffer, buffer, 5)\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome and Edge will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0]);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n    return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined(arg) {\n    return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg) {\n    return (typeof arg === \"number\");\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg) {\n    return (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg) {\n    return (typeof arg === \"boolean\");\n}\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg) {\n    return (Array.isArray(arg));\n}\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg) {\n    return (typeof arg === \"string\");\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg) {\n    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n//# sourceMappingURL=TypeCheck.js.map","import { isUndef } from \"./TypeCheck\";\n/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n    if (!statement) {\n        throw new Error(error);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value, gte, lte = Infinity) {\n    if (!(gte <= value && value <= lte)) {\n        throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n    }\n}\n/**\n * Warn if the context is not running.\n */\nexport function assertContextRunning(context) {\n    // add a warning if the context is not started\n    if (!context.isOffline && context.state !== \"running\") {\n        warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n    }\n}\n/**\n * If it is currently inside a scheduled callback\n */\nlet isInsideScheduledCallback = false;\nlet printedScheduledWarning = false;\n/**\n * Notify that the following block of code is occurring inside a Transport callback.\n */\nexport function enterScheduledCallback(insideCallback) {\n    isInsideScheduledCallback = insideCallback;\n}\n/**\n * Make sure that a time was passed into\n */\nexport function assertUsedScheduleTime(time) {\n    if (isUndef(time) && isInsideScheduledCallback && !printedScheduledWarning) {\n        printedScheduledWarning = true;\n        warn(\"Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing\");\n    }\n}\n/**\n * The default logger is the console\n */\nlet defaultLogger = console;\n/**\n * Set the logging interface\n */\nexport function setLogger(logger) {\n    defaultLogger = logger;\n}\n/**\n * Log anything\n */\nexport function log(...args) {\n    defaultLogger.log(...args);\n}\n/**\n * Warn anything\n */\nexport function warn(...args) {\n    defaultLogger.warn(...args);\n}\n//# sourceMappingURL=Debug.js.map","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options) {\n    return new stdAudioContext(options);\n}\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n    return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n    (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n    assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n    // @ts-ignore\n    return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n//# sourceMappingURL=AudioContext.js.map","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n    constructor(callback, type, updateInterval, contextSampleRate) {\n        this._callback = callback;\n        this._type = type;\n        this._minimumUpdateInterval = Math.max(128 / (contextSampleRate || 44100), .001);\n        this.updateInterval = updateInterval;\n        // create the clock source for the first time\n        this._createClock();\n    }\n    /**\n     * Generate a web worker\n     */\n    _createWorker() {\n        const blob = new Blob([\n            /* javascript */ `\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n        ], { type: \"text/javascript\" });\n        const blobUrl = URL.createObjectURL(blob);\n        const worker = new Worker(blobUrl);\n        worker.onmessage = this._callback.bind(this);\n        this._worker = worker;\n    }\n    /**\n     * Create a timeout loop\n     */\n    _createTimeout() {\n        this._timeout = setTimeout(() => {\n            this._createTimeout();\n            this._callback();\n        }, this._updateInterval * 1000);\n    }\n    /**\n     * Create the clock source.\n     */\n    _createClock() {\n        if (this._type === \"worker\") {\n            try {\n                this._createWorker();\n            }\n            catch (e) {\n                // workers not supported, fallback to timeout\n                this._type = \"timeout\";\n                this._createClock();\n            }\n        }\n        else if (this._type === \"timeout\") {\n            this._createTimeout();\n        }\n    }\n    /**\n     * Clean up the current clock source\n     */\n    _disposeClock() {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n        }\n        if (this._worker) {\n            this._worker.terminate();\n            this._worker.onmessage = null;\n        }\n    }\n    /**\n     * The rate in seconds the ticker will update\n     */\n    get updateInterval() {\n        return this._updateInterval;\n    }\n    set updateInterval(interval) {\n        var _a;\n        this._updateInterval = Math.max(interval, this._minimumUpdateInterval);\n        if (this._type === \"worker\") {\n            (_a = this._worker) === null || _a === void 0 ? void 0 : _a.postMessage(this._updateInterval * 1000);\n        }\n    }\n    /**\n     * The type of the ticker, either a worker or a timeout\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._disposeClock();\n        this._type = type;\n        this._createClock();\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this._disposeClock();\n    }\n}\n//# sourceMappingURL=Ticker.js.map","import { AudioBuffer, isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg) {\n    return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg) {\n    return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg) {\n    return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg) {\n    return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg) {\n    return arg instanceof AudioBuffer;\n}\n//# sourceMappingURL=AdvancedTypeCheck.js.map","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key, arg) {\n    return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\nexport function deepMerge(target, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (noCopy(key, source[key])) {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    // @ts-ignore\n    return deepMerge(target, ...sources);\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals(arrayA, arrayB) {\n    return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments(defaults, argsArray, keys = [], objKey) {\n    const opts = {};\n    const args = Array.from(argsArray);\n    // if the first argument is an object and has an object key\n    if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n        // if it's not part of the defaults\n        const partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n        if (!partOfDefaults) {\n            // merge that key\n            deepMerge(opts, { [objKey]: args[0] });\n            // remove the obj key from the keys\n            keys.splice(keys.indexOf(objKey), 1);\n            // shift the first argument off\n            args.shift();\n        }\n    }\n    if (args.length === 1 && isObject(args[0])) {\n        deepMerge(opts, args[0]);\n    }\n    else {\n        for (let i = 0; i < keys.length; i++) {\n            if (isDefined(args[i])) {\n                opts[keys[i]] = args[i];\n            }\n        }\n    }\n    return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance(instance) {\n    return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg(given, fallback) {\n    if (isUndef(given)) {\n        return fallback;\n    }\n    else {\n        return given;\n    }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject(obj, omit) {\n    omit.forEach(prop => {\n        if (Reflect.has(obj, prop)) {\n            delete obj[prop];\n        }\n    });\n    return obj;\n}\n//# sourceMappingURL=Defaults.js.map","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * Tone is the base class of all other classes.\n *\n * @category Core\n * @constructor\n */\nexport class Tone {\n    constructor() {\n        //-------------------------------------\n        // \tDEBUGGING\n        //-------------------------------------\n        /**\n         * Set this debug flag to log all events that happen in this class.\n         */\n        this.debug = false;\n        //-------------------------------------\n        // \tDISPOSING\n        //-------------------------------------\n        /**\n         * Indicates if the instance was disposed\n         */\n        this._wasDisposed = false;\n    }\n    /**\n     * Returns all of the default options belonging to the class.\n     */\n    static getDefaults() {\n        return {};\n    }\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * // prints all logs originating from this oscillator\n     * osc.debug = true;\n     * // calls to start/stop will print in the console\n     * osc.start();\n     */\n    log(...args) {\n        // if the object is either set to debug = true\n        // or if there is a string on the Tone.global.with the class name\n        if (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n            log(this, ...args);\n        }\n    }\n    /**\n     * disconnect and dispose.\n     */\n    dispose() {\n        this._wasDisposed = true;\n        return this;\n    }\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n    get disposed() {\n        return this._wasDisposed;\n    }\n    /**\n     * Convert the class to a string\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.toString());\n     */\n    toString() {\n        return this.name;\n    }\n}\n/**\n * The version number semver\n */\nTone.version = version;\n//# sourceMappingURL=Tone.js.map","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\nexport function GT(a, b) {\n    return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a, b) {\n    return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\nexport function LT(a, b) {\n    return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\nexport function EQ(a, b) {\n    return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n//# sourceMappingURL=Math.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline extends Tone {\n    constructor() {\n        super();\n        this.name = \"Timeline\";\n        /**\n         * The array of scheduled timeline events\n         */\n        this._timeline = [];\n        const options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n        this.memory = options.memory;\n        this.increasing = options.increasing;\n    }\n    static getDefaults() {\n        return {\n            memory: Infinity,\n            increasing: false,\n        };\n    }\n    /**\n     * The number of items in the timeline.\n     */\n    get length() {\n        return this._timeline.length;\n    }\n    /**\n     * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     * @param event  The event object to insert into the timeline.\n     */\n    add(event) {\n        // the event needs to have a time attribute\n        assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n        event.time = event.time.valueOf();\n        if (this.increasing && this.length) {\n            const lastValue = this._timeline[this.length - 1];\n            assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n            this._timeline.push(event);\n        }\n        else {\n            const index = this._search(event.time);\n            this._timeline.splice(index + 1, 0, event);\n        }\n        // if the length is more than the memory, remove the previous ones\n        if (this.length > this.memory) {\n            const diff = this.length - this.memory;\n            this._timeline.splice(0, diff);\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  {Object}  event  The event object to remove from the list.\n     * @returns {Timeline} this\n     */\n    remove(event) {\n        const index = this._timeline.indexOf(event);\n        if (index !== -1) {\n            this._timeline.splice(index, 1);\n        }\n        return this;\n    }\n    /**\n     * Get the nearest event whose time is less than or equal to the given time.\n     * @param  time  The time to query.\n     */\n    get(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index !== -1) {\n            return this._timeline[index];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Return the first event in the timeline without removing it\n     * @returns {Object} The first event object\n     */\n    peek() {\n        return this._timeline[0];\n    }\n    /**\n     * Return the first event in the timeline and remove it\n     */\n    shift() {\n        return this._timeline.shift();\n    }\n    /**\n     * Get the event which is scheduled after the given time.\n     * @param  time  The time to query.\n     */\n    getAfter(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index + 1 < this._timeline.length) {\n            return this._timeline[index + 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Get the event before the event at the given time.\n     * @param  time  The time to query.\n     */\n    getBefore(time) {\n        const len = this._timeline.length;\n        // if it's after the last item, return the last item\n        if (len > 0 && this._timeline[len - 1].time < time) {\n            return this._timeline[len - 1];\n        }\n        const index = this._search(time);\n        if (index - 1 >= 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Cancel events at and after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        if (this._timeline.length > 1) {\n            let index = this._search(after);\n            if (index >= 0) {\n                if (EQ(this._timeline[index].time, after)) {\n                    // get the first item with that time\n                    for (let i = index; i >= 0; i--) {\n                        if (EQ(this._timeline[i].time, after)) {\n                            index = i;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    this._timeline = this._timeline.slice(0, index);\n                }\n                else {\n                    this._timeline = this._timeline.slice(0, index + 1);\n                }\n            }\n            else {\n                this._timeline = [];\n            }\n        }\n        else if (this._timeline.length === 1) {\n            // the first item's time\n            if (GTE(this._timeline[0].time, after)) {\n                this._timeline = [];\n            }\n        }\n        return this;\n    }\n    /**\n     * Cancel events before or equal to the given time.\n     * @param  time  The time to cancel before.\n     */\n    cancelBefore(time) {\n        const index = this._search(time);\n        if (index >= 0) {\n            this._timeline = this._timeline.slice(index + 1);\n        }\n        return this;\n    }\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  event The event to find the previous one of\n     * @return The event right before the given event\n     */\n    previousEvent(event) {\n        const index = this._timeline.indexOf(event);\n        if (index > 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Does a binary search on the timeline array and returns the\n     * nearest event index whose time is after or equal to the given time.\n     * If a time is searched before the first index in the timeline, -1 is returned.\n     * If the time is after the end, the index of the last item is returned.\n     */\n    _search(time, param = \"time\") {\n        if (this._timeline.length === 0) {\n            return -1;\n        }\n        let beginning = 0;\n        const len = this._timeline.length;\n        let end = len;\n        if (len > 0 && this._timeline[len - 1][param] <= time) {\n            return len - 1;\n        }\n        while (beginning < end) {\n            // calculate the midpoint for roughly equal partition\n            let midPoint = Math.floor(beginning + (end - beginning) / 2);\n            const event = this._timeline[midPoint];\n            const nextEvent = this._timeline[midPoint + 1];\n            if (EQ(event[param], time)) {\n                // choose the last one that has the same time\n                for (let i = midPoint; i < this._timeline.length; i++) {\n                    const testEvent = this._timeline[i];\n                    if (EQ(testEvent[param], time)) {\n                        midPoint = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return midPoint;\n            }\n            else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n                return midPoint;\n            }\n            else if (GT(event[param], time)) {\n                // search lower\n                end = midPoint;\n            }\n            else {\n                // search upper\n                beginning = midPoint + 1;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Internal iterator. Applies extra safety checks for\n     * removing items from the array.\n     */\n    _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {\n        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    }\n    /**\n     * Iterate over everything in the array\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        this._iterate(callback);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or before the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBefore(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array after the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAfter(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const lowerBound = this._search(time);\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array between the startTime and endTime.\n     * The timerange is inclusive of the startTime, but exclusive of the endTime.\n     * range = [startTime, endTime).\n     * @param  startTime The time to check if items are before\n     * @param  endTime The end of the test interval.\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBetween(startTime, endTime, callback) {\n        let lowerBound = this._search(startTime);\n        let upperBound = this._search(endTime);\n        if (lowerBound !== -1 && upperBound !== -1) {\n            if (this._timeline[lowerBound].time !== startTime) {\n                lowerBound += 1;\n            }\n            // exclusive of the end time\n            if (this._timeline[upperBound].time === endTime) {\n                upperBound -= 1;\n            }\n            this._iterate(callback, lowerBound, upperBound);\n        }\n        else if (lowerBound === -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or after the given time. Similar to\n     * forEachAfter, but includes the item(s) at the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        let lowerBound = this._search(time);\n        // work backwards until the event time is less than time\n        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n            lowerBound--;\n        }\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at the given time\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n            let lowerBound = upperBound;\n            for (let i = upperBound; i >= 0; i--) {\n                if (EQ(this._timeline[i].time, time)) {\n                    lowerBound = i;\n                }\n                else {\n                    break;\n                }\n            }\n            this._iterate(event => {\n                callback(event);\n            }, lowerBound, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._timeline = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Timeline.js.map","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb) {\n    notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx) {\n    // add any additional modules\n    notifyNewContext.forEach(cb => cb(ctx));\n}\n/**\n * Array of callbacks to invoke when a new context is closed\n */\nconst notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb) {\n    notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n    // remove any additional modules\n    notifyCloseContext.forEach(cb => cb(ctx));\n}\n//# sourceMappingURL=ContextInitialization.js.map","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"Emitter\";\n    }\n    /**\n     * Bind a callback to a specific event.\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    on(event, callback) {\n        // split the event\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (!this._events.hasOwnProperty(eventName)) {\n                this._events[eventName] = [];\n            }\n            this._events[eventName].push(callback);\n        });\n        return this;\n    }\n    /**\n     * Bind a callback which is only invoked once\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    once(event, callback) {\n        const boundCallback = (...args) => {\n            // invoke the callback\n            callback(...args);\n            // remove the event\n            this.off(event, boundCallback);\n        };\n        this.on(event, boundCallback);\n        return this;\n    }\n    /**\n     * Remove the event listener.\n     * @param  event     The event to stop listening to.\n     * @param  callback  The callback which was bound to the event with Emitter.on.\n     *                   If no callback is given, all callbacks events are removed.\n     */\n    off(event, callback) {\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (this._events.hasOwnProperty(eventName)) {\n                if (isUndef(callback)) {\n                    this._events[eventName] = [];\n                }\n                else {\n                    const eventList = this._events[eventName];\n                    for (let i = eventList.length - 1; i >= 0; i--) {\n                        if (eventList[i] === callback) {\n                            eventList.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Invoke all of the callbacks bound to the event\n     * with any arguments passed in.\n     * @param  event  The name of the event.\n     * @param args The arguments to pass to the functions listening.\n     */\n    emit(event, ...args) {\n        if (this._events) {\n            if (this._events.hasOwnProperty(event)) {\n                const eventList = this._events[event].slice(0);\n                for (let i = 0, len = eventList.length; i < len; i++) {\n                    eventList[i].apply(this, args);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Add Emitter functions (on/off/emit) to the object\n     */\n    static mixin(constr) {\n        // instance._events = {};\n        [\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n            const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n            Object.defineProperty(constr.prototype, name, property);\n        });\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._events = undefined;\n        return this;\n    }\n}\n//# sourceMappingURL=Emitter.js.map","import { Emitter } from \"../util/Emitter\";\nexport class BaseContext extends Emitter {\n    constructor() {\n        super(...arguments);\n        this.isOffline = false;\n    }\n    /*\n     * This is a placeholder so that JSON.stringify does not throw an error\n     * This matches what JSON.stringify(audioContext) returns on a native\n     * audioContext instance.\n     */\n    toJSON() {\n        return {};\n    }\n}\n//# sourceMappingURL=BaseContext.js.map","import { __awaiter } from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode, } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n    constructor() {\n        var _a, _b;\n        super();\n        this.name = \"Context\";\n        /**\n         * An object containing all of the constants AudioBufferSourceNodes\n         */\n        this._constants = new Map();\n        /**\n         * All of the setTimeout events.\n         */\n        this._timeouts = new Timeline();\n        /**\n         * The timeout id counter\n         */\n        this._timeoutIds = 0;\n        /**\n         * Private indicator if the context has been initialized\n         */\n        this._initialized = false;\n        /**\n         * Private indicator if a close() has been called on the context, since close is async\n         */\n        this._closeStarted = false;\n        /**\n         * Indicates if the context is an OfflineAudioContext or an AudioContext\n         */\n        this.isOffline = false;\n        //--------------------------------------------\n        // AUDIO WORKLET\n        //--------------------------------------------\n        /**\n         * Maps a module name to promise of the addModule method\n         */\n        this._workletPromise = null;\n        const options = optionsFromArguments(Context.getDefaults(), arguments, [\n            \"context\",\n        ]);\n        if (options.context) {\n            this._context = options.context;\n            // custom context provided, latencyHint unknown (unless explicitly provided in options)\n            this._latencyHint = ((_a = arguments[0]) === null || _a === void 0 ? void 0 : _a.latencyHint) || \"\";\n        }\n        else {\n            this._context = createAudioContext({\n                latencyHint: options.latencyHint,\n            });\n            this._latencyHint = options.latencyHint;\n        }\n        this._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval, this._context.sampleRate);\n        this.on(\"tick\", this._timeoutLoop.bind(this));\n        // fwd events from the context\n        this._context.onstatechange = () => {\n            this.emit(\"statechange\", this.state);\n        };\n        // if no custom updateInterval provided, updateInterval will be derived by lookAhead setter\n        this[((_b = arguments[0]) === null || _b === void 0 ? void 0 : _b.hasOwnProperty(\"updateInterval\")) ? \"_lookAhead\" : \"lookAhead\"] = options.lookAhead;\n    }\n    static getDefaults() {\n        return {\n            clockSource: \"worker\",\n            latencyHint: \"interactive\",\n            lookAhead: 0.1,\n            updateInterval: 0.05,\n        };\n    }\n    /**\n     * Finish setting up the context. **You usually do not need to do this manually.**\n     */\n    initialize() {\n        if (!this._initialized) {\n            // add any additional modules\n            initializeContext(this);\n            this._initialized = true;\n        }\n        return this;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return this._context.createAnalyser();\n    }\n    createOscillator() {\n        return this._context.createOscillator();\n    }\n    createBufferSource() {\n        return this._context.createBufferSource();\n    }\n    createBiquadFilter() {\n        return this._context.createBiquadFilter();\n    }\n    createBuffer(numberOfChannels, length, sampleRate) {\n        return this._context.createBuffer(numberOfChannels, length, sampleRate);\n    }\n    createChannelMerger(numberOfInputs) {\n        return this._context.createChannelMerger(numberOfInputs);\n    }\n    createChannelSplitter(numberOfOutputs) {\n        return this._context.createChannelSplitter(numberOfOutputs);\n    }\n    createConstantSource() {\n        return this._context.createConstantSource();\n    }\n    createConvolver() {\n        return this._context.createConvolver();\n    }\n    createDelay(maxDelayTime) {\n        return this._context.createDelay(maxDelayTime);\n    }\n    createDynamicsCompressor() {\n        return this._context.createDynamicsCompressor();\n    }\n    createGain() {\n        return this._context.createGain();\n    }\n    createIIRFilter(feedForward, feedback) {\n        // @ts-ignore\n        return this._context.createIIRFilter(feedForward, feedback);\n    }\n    createPanner() {\n        return this._context.createPanner();\n    }\n    createPeriodicWave(real, imag, constraints) {\n        return this._context.createPeriodicWave(real, imag, constraints);\n    }\n    createStereoPanner() {\n        return this._context.createStereoPanner();\n    }\n    createWaveShaper() {\n        return this._context.createWaveShaper();\n    }\n    createMediaStreamSource(stream) {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamSource(stream);\n    }\n    createMediaElementSource(element) {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaElementSource(element);\n    }\n    createMediaStreamDestination() {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamDestination();\n    }\n    decodeAudioData(audioData) {\n        return this._context.decodeAudioData(audioData);\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get currentTime() {\n        return this._context.currentTime;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get state() {\n        return this._context.state;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get sampleRate() {\n        return this._context.sampleRate;\n    }\n    /**\n     * The listener\n     */\n    get listener() {\n        this.initialize();\n        return this._listener;\n    }\n    set listener(l) {\n        assert(!this._initialized, \"The listener cannot be set after initialization.\");\n        this._listener = l;\n    }\n    /**\n     * There is only one Transport per Context. It is created on initialization.\n     */\n    get transport() {\n        this.initialize();\n        return this._transport;\n    }\n    set transport(t) {\n        assert(!this._initialized, \"The transport cannot be set after initialization.\");\n        this._transport = t;\n    }\n    /**\n     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n     */\n    get draw() {\n        this.initialize();\n        return this._draw;\n    }\n    set draw(d) {\n        assert(!this._initialized, \"Draw cannot be set after initialization.\");\n        this._draw = d;\n    }\n    /**\n     * A reference to the Context's destination node.\n     */\n    get destination() {\n        this.initialize();\n        return this._destination;\n    }\n    set destination(d) {\n        assert(!this._initialized, \"The destination cannot be set after initialization.\");\n        this._destination = d;\n    }\n    /**\n     * Create an audio worklet node from a name and options. The module\n     * must first be loaded using [[addAudioWorkletModule]].\n     */\n    createAudioWorkletNode(name, options) {\n        return createAudioWorkletNode(this.rawContext, name, options);\n    }\n    /**\n     * Add an AudioWorkletProcessor module\n     * @param url The url of the module\n     */\n    addAudioWorkletModule(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n            if (!this._workletPromise) {\n                this._workletPromise = this.rawContext.audioWorklet.addModule(url);\n            }\n            yield this._workletPromise;\n        });\n    }\n    /**\n     * Returns a promise which resolves when all of the worklets have been loaded on this context\n     */\n    workletsAreReady() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (yield this._workletPromise) ? this._workletPromise : Promise.resolve();\n        });\n    }\n    //---------------------------\n    // TICKER\n    //---------------------------\n    /**\n     * How often the interval callback is invoked.\n     * This number corresponds to how responsive the scheduling\n     * can be. Setting to 0 will result in the lowest practial interval\n     * based on context properties. context.updateInterval + context.lookAhead\n     * gives you the total latency between scheduling an event and hearing it.\n     */\n    get updateInterval() {\n        return this._ticker.updateInterval;\n    }\n    set updateInterval(interval) {\n        this._ticker.updateInterval = interval;\n    }\n    /**\n     * What the source of the clock is, either \"worker\" (default),\n     * \"timeout\", or \"offline\" (none).\n     */\n    get clockSource() {\n        return this._ticker.type;\n    }\n    set clockSource(type) {\n        this._ticker.type = type;\n    }\n    /**\n     * The amount of time into the future events are scheduled. Giving Web Audio\n     * a short amount of time into the future to schedule events can reduce clicks and\n     * improve performance. This value can be set to 0 to get the lowest latency.\n     * Adjusting this value also affects the [[updateInterval]].\n     */\n    get lookAhead() {\n        return this._lookAhead;\n    }\n    set lookAhead(time) {\n        this._lookAhead = time;\n        // if lookAhead is 0, default to .01 updateInterval\n        this.updateInterval = time ? (time / 2) : .01;\n    }\n    /**\n     * The type of playback, which affects tradeoffs between audio\n     * output latency and responsiveness.\n     * In addition to setting the value in seconds, the latencyHint also\n     * accepts the strings \"interactive\" (prioritizes low latency),\n     * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n     * latency and performance).\n     * @example\n     * // prioritize sustained playback\n     * const context = new Tone.Context({ latencyHint: \"playback\" });\n     * // set this context as the global Context\n     * Tone.setContext(context);\n     * // the global context is gettable with Tone.getContext()\n     * console.log(Tone.getContext().latencyHint);\n     */\n    get latencyHint() {\n        return this._latencyHint;\n    }\n    /**\n     * The unwrapped AudioContext or OfflineAudioContext\n     */\n    get rawContext() {\n        return this._context;\n    }\n    /**\n     * The current audio context time plus a short [[lookAhead]].\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(\"now\", Tone.now());\n     * }, 100);\n     */\n    now() {\n        return this._context.currentTime + this._lookAhead;\n    }\n    /**\n     * The current audio context time without the [[lookAhead]].\n     * In most cases it is better to use [[now]] instead of [[immediate]] since\n     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n     */\n    immediate() {\n        return this._context.currentTime;\n    }\n    /**\n     * Starts the audio context from a suspended state. This is required\n     * to initially start the AudioContext. See [[Tone.start]]\n     */\n    resume() {\n        if (isAudioContext(this._context)) {\n            return this._context.resume();\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * Close the context. Once closed, the context can no longer be used and\n     * any AudioNodes created from the context will be silent.\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isAudioContext(this._context) && (this.state !== \"closed\") && !this._closeStarted) {\n                this._closeStarted = true;\n                yield this._context.close();\n            }\n            if (this._initialized) {\n                closeContext(this);\n            }\n        });\n    }\n    /**\n     * **Internal** Generate a looped buffer at some constant value.\n     */\n    getConstant(val) {\n        if (this._constants.has(val)) {\n            return this._constants.get(val);\n        }\n        else {\n            const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n            const arr = buffer.getChannelData(0);\n            for (let i = 0; i < arr.length; i++) {\n                arr[i] = val;\n            }\n            const constant = this._context.createBufferSource();\n            constant.channelCount = 1;\n            constant.channelCountMode = \"explicit\";\n            constant.buffer = buffer;\n            constant.loop = true;\n            constant.start(0);\n            this._constants.set(val, constant);\n            return constant;\n        }\n    }\n    /**\n     * Clean up. Also closes the audio context.\n     */\n    dispose() {\n        super.dispose();\n        this._ticker.dispose();\n        this._timeouts.dispose();\n        Object.keys(this._constants).map((val) => this._constants[val].disconnect());\n        this.close();\n        return this;\n    }\n    //---------------------------\n    // TIMEOUTS\n    //---------------------------\n    /**\n     * The private loop which keeps track of the context scheduled timeouts\n     * Is invoked from the clock source\n     */\n    _timeoutLoop() {\n        const now = this.now();\n        let firstEvent = this._timeouts.peek();\n        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n            // invoke the callback\n            firstEvent.callback();\n            // shift the first event off\n            this._timeouts.shift();\n            // get the next one\n            firstEvent = this._timeouts.peek();\n        }\n    }\n    /**\n     * A setTimeout which is guaranteed by the clock source.\n     * Also runs in the offline context.\n     * @param  fn       The callback to invoke\n     * @param  timeout  The timeout in seconds\n     * @returns ID to use when invoking Context.clearTimeout\n     */\n    setTimeout(fn, timeout) {\n        this._timeoutIds++;\n        const now = this.now();\n        this._timeouts.add({\n            callback: fn,\n            id: this._timeoutIds,\n            time: now + timeout,\n        });\n        return this._timeoutIds;\n    }\n    /**\n     * Clears a previously scheduled timeout with Tone.context.setTimeout\n     * @param  id  The ID returned from setTimeout\n     */\n    clearTimeout(id) {\n        this._timeouts.forEach((event) => {\n            if (event.id === id) {\n                this._timeouts.remove(event);\n            }\n        });\n        return this;\n    }\n    /**\n     * Clear the function scheduled by [[setInterval]]\n     */\n    clearInterval(id) {\n        return this.clearTimeout(id);\n    }\n    /**\n     * Adds a repeating event to the context's callback clock\n     */\n    setInterval(fn, interval) {\n        const id = ++this._timeoutIds;\n        const intervalFn = () => {\n            const now = this.now();\n            this._timeouts.add({\n                callback: () => {\n                    // invoke the callback\n                    fn();\n                    // invoke the event to repeat it\n                    intervalFn();\n                },\n                id,\n                time: now + interval,\n            });\n        };\n        // kick it off\n        intervalFn();\n        return id;\n    }\n}\n//# sourceMappingURL=Context.js.map","import { __awaiter } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\nexport class DummyContext extends BaseContext {\n    constructor() {\n        super(...arguments);\n        this.lookAhead = 0;\n        this.latencyHint = 0;\n        this.isOffline = false;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return {};\n    }\n    createOscillator() {\n        return {};\n    }\n    createBufferSource() {\n        return {};\n    }\n    createBiquadFilter() {\n        return {};\n    }\n    createBuffer(_numberOfChannels, _length, _sampleRate) {\n        return {};\n    }\n    createChannelMerger(_numberOfInputs) {\n        return {};\n    }\n    createChannelSplitter(_numberOfOutputs) {\n        return {};\n    }\n    createConstantSource() {\n        return {};\n    }\n    createConvolver() {\n        return {};\n    }\n    createDelay(_maxDelayTime) {\n        return {};\n    }\n    createDynamicsCompressor() {\n        return {};\n    }\n    createGain() {\n        return {};\n    }\n    createIIRFilter(_feedForward, _feedback) {\n        return {};\n    }\n    createPanner() {\n        return {};\n    }\n    createPeriodicWave(_real, _imag, _constraints) {\n        return {};\n    }\n    createStereoPanner() {\n        return {};\n    }\n    createWaveShaper() {\n        return {};\n    }\n    createMediaStreamSource(_stream) {\n        return {};\n    }\n    createMediaElementSource(_element) {\n        return {};\n    }\n    createMediaStreamDestination() {\n        return {};\n    }\n    decodeAudioData(_audioData) {\n        return Promise.resolve({});\n    }\n    //---------------------------\n    // TONE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAudioWorkletNode(_name, _options) {\n        return {};\n    }\n    get rawContext() {\n        return {};\n    }\n    addAudioWorkletModule(_url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n    resume() {\n        return Promise.resolve();\n    }\n    setTimeout(_fn, _timeout) {\n        return 0;\n    }\n    clearTimeout(_id) {\n        return this;\n    }\n    setInterval(_fn, _interval) {\n        return 0;\n    }\n    clearInterval(_id) {\n        return this;\n    }\n    getConstant(_val) {\n        return {};\n    }\n    get currentTime() {\n        return 0;\n    }\n    get state() {\n        return {};\n    }\n    get sampleRate() {\n        return 0;\n    }\n    get listener() {\n        return {};\n    }\n    get transport() {\n        return {};\n    }\n    get draw() {\n        return {};\n    }\n    set draw(_d) { }\n    get destination() {\n        return {};\n    }\n    set destination(_d) { }\n    now() {\n        return 0;\n    }\n    immediate() {\n        return 0;\n    }\n}\n//# sourceMappingURL=DummyContext.js.map","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => readOnly(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => writable(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport const noOp = () => {\n    // no operation here!\n};\n//# sourceMappingURL=Interface.js.map","import { __awaiter } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/audio/casio/A1.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffer\";\n        /**\n         * Callback when the buffer is loaded.\n         */\n        this.onload = noOp;\n        const options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n        this.reverse = options.reverse;\n        this.onload = options.onload;\n        if (isString(options.url)) {\n            // initiate the download\n            this.load(options.url).catch(options.onerror);\n        }\n        else if (options.url) {\n            this.set(options.url);\n        }\n    }\n    static getDefaults() {\n        return {\n            onerror: noOp,\n            onload: noOp,\n            reverse: false,\n        };\n    }\n    /**\n     * The sample rate of the AudioBuffer\n     */\n    get sampleRate() {\n        if (this._buffer) {\n            return this._buffer.sampleRate;\n        }\n        else {\n            return getContext().sampleRate;\n        }\n    }\n    /**\n     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n     */\n    set(buffer) {\n        if (buffer instanceof ToneAudioBuffer) {\n            // if it's loaded, set it\n            if (buffer.loaded) {\n                this._buffer = buffer.get();\n            }\n            else {\n                // otherwise when it's loaded, invoke it's callback\n                buffer.onload = () => {\n                    this.set(buffer);\n                    this.onload(this);\n                };\n            }\n        }\n        else {\n            this._buffer = buffer;\n        }\n        // reverse it initially\n        if (this._reversed) {\n            this._reverse();\n        }\n        return this;\n    }\n    /**\n     * The audio buffer stored in the object.\n     */\n    get() {\n        return this._buffer;\n    }\n    /**\n     * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n     * Invokes the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     * @returns A Promise which resolves with this ToneAudioBuffer\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doneLoading = ToneAudioBuffer.load(url).then((audioBuffer) => {\n                this.set(audioBuffer);\n                // invoke the onload method\n                this.onload(this);\n            });\n            ToneAudioBuffer.downloads.push(doneLoading);\n            try {\n                yield doneLoading;\n            }\n            finally {\n                // remove the downloaded file\n                const index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n                ToneAudioBuffer.downloads.splice(index, 1);\n            }\n            return this;\n        });\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffer = undefined;\n        return this;\n    }\n    /**\n     * Set the audio buffer from the array.\n     * To create a multichannel AudioBuffer, pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     */\n    fromArray(array) {\n        const isMultidimensional = isArray(array) && array[0].length > 0;\n        const channels = isMultidimensional ? array.length : 1;\n        const len = isMultidimensional\n            ? array[0].length\n            : array.length;\n        const context = getContext();\n        const buffer = context.createBuffer(channels, len, context.sampleRate);\n        const multiChannelArray = !isMultidimensional && channels === 1\n            ? [array]\n            : array;\n        for (let c = 0; c < channels; c++) {\n            buffer.copyToChannel(multiChannelArray[c], c);\n        }\n        this._buffer = buffer;\n        return this;\n    }\n    /**\n     * Sums multiple channels into 1 channel\n     * @param chanNum Optionally only copy a single channel from the array.\n     */\n    toMono(chanNum) {\n        if (isNumber(chanNum)) {\n            this.fromArray(this.toArray(chanNum));\n        }\n        else {\n            let outputArray = new Float32Array(this.length);\n            const numChannels = this.numberOfChannels;\n            for (let channel = 0; channel < numChannels; channel++) {\n                const channelArray = this.toArray(channel);\n                for (let i = 0; i < channelArray.length; i++) {\n                    outputArray[i] += channelArray[i];\n                }\n            }\n            // divide by the number of channels\n            outputArray = outputArray.map((sample) => sample / numChannels);\n            this.fromArray(outputArray);\n        }\n        return this;\n    }\n    /**\n     * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n     * Float32Array, and multichannel buffers will return multidimensional arrays.\n     * @param channel Optionally only copy a single channel from the array.\n     */\n    toArray(channel) {\n        if (isNumber(channel)) {\n            return this.getChannelData(channel);\n        }\n        else if (this.numberOfChannels === 1) {\n            return this.toArray(0);\n        }\n        else {\n            const ret = [];\n            for (let c = 0; c < this.numberOfChannels; c++) {\n                ret[c] = this.getChannelData(c);\n            }\n            return ret;\n        }\n    }\n    /**\n     * Returns the Float32Array representing the PCM audio data for the specific channel.\n     * @param  channel  The channel number to return\n     * @return The audio as a TypedArray\n     */\n    getChannelData(channel) {\n        if (this._buffer) {\n            return this._buffer.getChannelData(channel);\n        }\n        else {\n            return new Float32Array(0);\n        }\n    }\n    /**\n     * Cut a subsection of the array and return a buffer of the\n     * subsection. Does not modify the original buffer\n     * @param start The time to start the slice\n     * @param end The end time to slice. If none is given will default to the end of the buffer\n     */\n    slice(start, end = this.duration) {\n        assert(this.loaded, \"Buffer is not loaded\");\n        const startSamples = Math.floor(start * this.sampleRate);\n        const endSamples = Math.floor(end * this.sampleRate);\n        assert(startSamples < endSamples, \"The start time must be less than the end time\");\n        const length = endSamples - startSamples;\n        const retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n        for (let channel = 0; channel < this.numberOfChannels; channel++) {\n            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n        }\n        return new ToneAudioBuffer(retBuffer);\n    }\n    /**\n     * Reverse the buffer.\n     */\n    _reverse() {\n        if (this.loaded) {\n            for (let i = 0; i < this.numberOfChannels; i++) {\n                this.getChannelData(i).reverse();\n            }\n        }\n        return this;\n    }\n    /**\n     * If the buffer is loaded or not\n     */\n    get loaded() {\n        return this.length > 0;\n    }\n    /**\n     * The duration of the buffer in seconds.\n     */\n    get duration() {\n        if (this._buffer) {\n            return this._buffer.duration;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The length of the buffer in samples\n     */\n    get length() {\n        if (this._buffer) {\n            return this._buffer.length;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n     */\n    get numberOfChannels() {\n        if (this._buffer) {\n            return this._buffer.numberOfChannels;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Reverse the buffer.\n     */\n    get reverse() {\n        return this._reversed;\n    }\n    set reverse(rev) {\n        if (this._reversed !== rev) {\n            this._reversed = rev;\n            this._reverse();\n        }\n    }\n    /**\n     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n     * pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     * @return A ToneAudioBuffer created from the array\n     */\n    static fromArray(array) {\n        return new ToneAudioBuffer().fromArray(array);\n    }\n    /**\n     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n     * @param  url The url to load.\n     * @return A promise which resolves to a ToneAudioBuffer\n     */\n    static fromUrl(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buffer = new ToneAudioBuffer();\n            return yield buffer.load(url);\n        });\n    }\n    /**\n     * Loads a url using fetch and returns the AudioBuffer.\n     */\n    static load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // test if the url contains multiple extensions\n            const matches = url.match(/\\[([^\\]\\[]+\\|.+)\\]$/);\n            if (matches) {\n                const extensions = matches[1].split(\"|\");\n                let extension = extensions[0];\n                for (const ext of extensions) {\n                    if (ToneAudioBuffer.supportsType(ext)) {\n                        extension = ext;\n                        break;\n                    }\n                }\n                url = url.replace(matches[0], extension);\n            }\n            // make sure there is a slash between the baseUrl and the url\n            const baseUrl = ToneAudioBuffer.baseUrl === \"\" ||\n                ToneAudioBuffer.baseUrl.endsWith(\"/\")\n                ? ToneAudioBuffer.baseUrl\n                : ToneAudioBuffer.baseUrl + \"/\";\n            // encode special characters in file path\n            const location = document.createElement(\"a\");\n            location.href = baseUrl + url;\n            location.pathname = (location.pathname + location.hash)\n                .split(\"/\")\n                .map(encodeURIComponent)\n                .join(\"/\");\n            const response = yield fetch(location.href);\n            if (!response.ok) {\n                throw new Error(`could not load url: ${url}`);\n            }\n            const arrayBuffer = yield response.arrayBuffer();\n            const audioBuffer = yield getContext().decodeAudioData(arrayBuffer);\n            return audioBuffer;\n        });\n    }\n    /**\n     * Checks a url's extension to see if the current browser can play that file type.\n     * @param url The url/extension to test\n     * @return If the file extension can be played\n     * @static\n     * @example\n     * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n     * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n     */\n    static supportsType(url) {\n        const extensions = url.split(\".\");\n        const extension = extensions[extensions.length - 1];\n        const response = document\n            .createElement(\"audio\")\n            .canPlayType(\"audio/\" + extension);\n        return response !== \"\";\n    }\n    /**\n     * Returns a Promise which resolves when all of the buffers have loaded\n     */\n    static loaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // this makes sure that the function is always async\n            yield Promise.resolve();\n            while (ToneAudioBuffer.downloads.length) {\n                yield ToneAudioBuffer.downloads[0];\n            }\n        });\n    }\n}\n//-------------------------------------\n// STATIC METHODS\n//-------------------------------------\n/**\n * A path which is prefixed before every url.\n */\nToneAudioBuffer.baseUrl = \"\";\n/**\n * All of the downloads\n */\nToneAudioBuffer.downloads = [];\n//# sourceMappingURL=ToneAudioBuffer.js.map","import { __awaiter } from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5, 44100);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n    constructor() {\n        super({\n            clockSource: \"offline\",\n            context: isOfflineAudioContext(arguments[0]) ?\n                arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n            lookAhead: 0,\n            updateInterval: isOfflineAudioContext(arguments[0]) ?\n                128 / arguments[0].sampleRate : 128 / arguments[2],\n        });\n        this.name = \"OfflineContext\";\n        /**\n         * An artificial clock source\n         */\n        this._currentTime = 0;\n        this.isOffline = true;\n        this._duration = isOfflineAudioContext(arguments[0]) ?\n            arguments[0].length / arguments[0].sampleRate : arguments[1];\n    }\n    /**\n     * Override the now method to point to the internal clock time\n     */\n    now() {\n        return this._currentTime;\n    }\n    /**\n     * Same as this.now()\n     */\n    get currentTime() {\n        return this._currentTime;\n    }\n    /**\n     * Render just the clock portion of the audio context.\n     */\n    _renderClock(asynchronous) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let index = 0;\n            while (this._duration - this._currentTime >= 0) {\n                // invoke all the callbacks on that time\n                this.emit(\"tick\");\n                // increment the clock in block-sized chunks\n                this._currentTime += 128 / this.sampleRate;\n                // yield once a second of audio\n                index++;\n                const yieldEvery = Math.floor(this.sampleRate / 128);\n                if (asynchronous && index % yieldEvery === 0) {\n                    yield new Promise(done => setTimeout(done, 1));\n                }\n            }\n        });\n    }\n    /**\n     * Render the output of the OfflineContext\n     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n     */\n    render(asynchronous = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.workletsAreReady();\n            yield this._renderClock(asynchronous);\n            const buffer = yield this._context.startRendering();\n            return new ToneAudioBuffer(buffer);\n        });\n    }\n    /**\n     * Close the context\n     */\n    close() {\n        return Promise.resolve();\n    }\n}\n//# sourceMappingURL=OfflineContext.js.map","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext() {\n    if (globalContext === dummyContext && hasAudioContext) {\n        setContext(new Context());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n * @param context\n * @param disposeOld Pass `true` if you don't need the old context to dispose it.\n * @category Core\n */\nexport function setContext(context, disposeOld = false) {\n    if (disposeOld) {\n        globalContext.dispose();\n    }\n    if (isAudioContext(context)) {\n        globalContext = new Context(context);\n    }\n    else if (isOfflineAudioContext(context)) {\n        globalContext = new OfflineContext(context);\n    }\n    else {\n        globalContext = context;\n    }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start() {\n    return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n    let prefix = \"v\";\n    if (version === \"dev\") {\n        prefix = \"\";\n    }\n    const printString = ` * Tone.js ${prefix}${version} * `;\n    // eslint-disable-next-line no-console\n    console.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n//# sourceMappingURL=Global.js.map","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n    const piFactor = 0.5 * Math.PI;\n    return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db) {\n    return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain) {\n    return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval) {\n    return Math.pow(2, (interval / 12));\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4 = 440;\nexport function getA4() {\n    return A4;\n}\nexport function setA4(freq) {\n    A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency) {\n    return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency) {\n    return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi) {\n    return A4 * Math.pow(2, (midi - 69) / 12);\n}\n//# sourceMappingURL=Conversions.js.map","import { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport class TimeBaseClass extends Tone {\n    /**\n     * @param context The context associated with the time value. Used to compute\n     * Transport and context-relative timing.\n     * @param  value  The time value as a number, string or object\n     * @param  units  Unit values\n     */\n    constructor(context, value, units) {\n        super();\n        /**\n         * The default units\n         */\n        this.defaultUnits = \"s\";\n        this._val = value;\n        this._units = units;\n        this.context = context;\n        this._expressions = this._getExpressions();\n    }\n    /**\n     * All of the time encoding expressions\n     */\n    _getExpressions() {\n        return {\n            hz: {\n                method: (value) => {\n                    return this._frequencyToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n            },\n            i: {\n                method: (value) => {\n                    return this._ticksToUnits(parseInt(value, 10));\n                },\n                regexp: /^(\\d+)i$/i,\n            },\n            m: {\n                method: (value) => {\n                    return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n                },\n                regexp: /^(\\d+)m$/i,\n            },\n            n: {\n                method: (value, dot) => {\n                    const numericValue = parseInt(value, 10);\n                    const scalar = dot === \".\" ? 1.5 : 1;\n                    if (numericValue === 1) {\n                        return this._beatsToUnits(this._getTimeSignature()) * scalar;\n                    }\n                    else {\n                        return this._beatsToUnits(4 / numericValue) * scalar;\n                    }\n                },\n                regexp: /^(\\d+)n(\\.?)$/i,\n            },\n            number: {\n                method: (value) => {\n                    return this._expressions[this.defaultUnits].method.call(this, value);\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)$/,\n            },\n            s: {\n                method: (value) => {\n                    return this._secondsToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)s$/,\n            },\n            samples: {\n                method: (value) => {\n                    return parseInt(value, 10) / this.context.sampleRate;\n                },\n                regexp: /^(\\d+)samples$/,\n            },\n            t: {\n                method: (value) => {\n                    const numericValue = parseInt(value, 10);\n                    return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n                },\n                regexp: /^(\\d+)t$/i,\n            },\n            tr: {\n                method: (m, q, s) => {\n                    let total = 0;\n                    if (m && m !== \"0\") {\n                        total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n            },\n        };\n    }\n    //-------------------------------------\n    // \tVALUE OF\n    //-------------------------------------\n    /**\n     * Evaluate the time value. Returns the time in seconds.\n     */\n    valueOf() {\n        if (this._val instanceof TimeBaseClass) {\n            this.fromType(this._val);\n        }\n        if (isUndef(this._val)) {\n            return this._noArg();\n        }\n        else if (isString(this._val) && isUndef(this._units)) {\n            for (const units in this._expressions) {\n                if (this._expressions[units].regexp.test(this._val.trim())) {\n                    this._units = units;\n                    break;\n                }\n            }\n        }\n        else if (isObject(this._val)) {\n            let total = 0;\n            for (const typeName in this._val) {\n                if (isDefined(this._val[typeName])) {\n                    const quantity = this._val[typeName];\n                    // @ts-ignore\n                    const time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n                    total += time;\n                }\n            }\n            return total;\n        }\n        if (isDefined(this._units)) {\n            const expr = this._expressions[this._units];\n            const matching = this._val.toString().trim().match(expr.regexp);\n            if (matching) {\n                return expr.method.apply(this, matching.slice(1));\n            }\n            else {\n                return expr.method.call(this, this._val);\n            }\n        }\n        else if (isString(this._val)) {\n            return parseFloat(this._val);\n        }\n        else {\n            return this._val;\n        }\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return 1 / freq;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return (60 / this._getBpm()) * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return seconds;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());\n    }\n    /**\n     * With no arguments, return 'now'\n     */\n    _noArg() {\n        return this._now();\n    }\n    //-------------------------------------\n    // \tTEMPO CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the bpm\n     */\n    _getBpm() {\n        return this.context.transport.bpm.value;\n    }\n    /**\n     * Return the timeSignature\n     */\n    _getTimeSignature() {\n        return this.context.transport.timeSignature;\n    }\n    /**\n     * Return the PPQ or 192 if Transport is not available\n     */\n    _getPPQ() {\n        return this.context.transport.PPQ;\n    }\n    //-------------------------------------\n    // \tCONVERSION INTERFACE\n    //-------------------------------------\n    /**\n     * Coerce a time type into this units type.\n     * @param type Any time type units\n     */\n    fromType(type) {\n        this._units = undefined;\n        switch (this.defaultUnits) {\n            case \"s\":\n                this._val = type.toSeconds();\n                break;\n            case \"i\":\n                this._val = type.toTicks();\n                break;\n            case \"hz\":\n                this._val = type.toFrequency();\n                break;\n            case \"midi\":\n                this._val = type.toMidi();\n                break;\n        }\n        return this;\n    }\n    /**\n     * Return the value in hertz\n     */\n    toFrequency() {\n        return 1 / this.toSeconds();\n    }\n    /**\n     * Return the time in samples\n     */\n    toSamples() {\n        return this.toSeconds() * this.context.sampleRate;\n    }\n    /**\n     * Return the time in milliseconds.\n     */\n    toMilliseconds() {\n        return this.toSeconds() * 1000;\n    }\n}\n//# sourceMappingURL=TimeBase.js.map","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass extends TimeBaseClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TimeClass\";\n    }\n    _getExpressions() {\n        return Object.assign(super._getExpressions(), {\n            now: {\n                method: (capture) => {\n                    return this._now() + new this.constructor(this.context, capture).valueOf();\n                },\n                regexp: /^\\+(.+)/,\n            },\n            quantize: {\n                method: (capture) => {\n                    const quantTo = new TimeClass(this.context, capture).valueOf();\n                    return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n                },\n                regexp: /^@(.+)/,\n            },\n        });\n    }\n    /**\n     * Quantize the time by the given subdivision. Optionally add a\n     * percentage which will move the time value towards the ideal\n     * quantized value by that percentage.\n     * @param  subdiv    The subdivision to quantize to\n     * @param  percent  Move the time value towards the quantized value by a percentage.\n     * @example\n     * Tone.Time(21).quantize(2); // returns 22\n     * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n     */\n    quantize(subdiv, percent = 1) {\n        const subdivision = new this.constructor(this.context, subdiv).valueOf();\n        const value = this.valueOf();\n        const multiple = Math.round(value / subdivision);\n        const ideal = multiple * subdivision;\n        const diff = ideal - value;\n        return value + diff * percent;\n    }\n    //-------------------------------------\n    // CONVERSIONS\n    //-------------------------------------\n    /**\n     * Convert a Time to Notation. The notation values are will be the\n     * closest representation between 1m to 128th note.\n     * @return {Notation}\n     * @example\n     * // if the Transport is at 120bpm:\n     * Tone.Time(2).toNotation(); // returns \"1m\"\n     */\n    toNotation() {\n        const time = this.toSeconds();\n        const testNotations = [\"1m\"];\n        for (let power = 1; power < 9; power++) {\n            const subdiv = Math.pow(2, power);\n            testNotations.push(subdiv + \"n.\");\n            testNotations.push(subdiv + \"n\");\n            testNotations.push(subdiv + \"t\");\n        }\n        testNotations.push(\"0\");\n        // find the closets notation representation\n        let closest = testNotations[0];\n        let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n        testNotations.forEach(notation => {\n            const notationSeconds = new TimeClass(this.context, notation).toSeconds();\n            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n                closest = notation;\n                closestSeconds = notationSeconds;\n            }\n        });\n        return closest;\n    }\n    /**\n     * Return the time encoded as Bars:Beats:Sixteenths.\n     */\n    toBarsBeatsSixteenths() {\n        const quarterTime = this._beatsToUnits(1);\n        let quarters = this.valueOf() / quarterTime;\n        quarters = parseFloat(quarters.toFixed(4));\n        const measures = Math.floor(quarters / this._getTimeSignature());\n        let sixteenths = (quarters % 1) * 4;\n        quarters = Math.floor(quarters) % this._getTimeSignature();\n        const sixteenthString = sixteenths.toString();\n        if (sixteenthString.length > 3) {\n            // the additional parseFloat removes insignificant trailing zeroes\n            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n        }\n        const progress = [measures, quarters, sixteenths];\n        return progress.join(\":\");\n    }\n    /**\n     * Return the time in ticks.\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return quarters * this._getPPQ();\n    }\n    /**\n     * Return the time in seconds.\n     */\n    toSeconds() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value as a midi note.\n     */\n    toMidi() {\n        return ftom(this.toFrequency());\n    }\n    _now() {\n        return this.context.now();\n    }\n}\n/**\n * Create a TimeClass from a time string or number. The time is computed against the\n * global Tone.Context. To use a specific context, use [[TimeClass]]\n * @param value A value which represents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n * @example\n * const time = Tone.Time(\"4n\").toSeconds();\n * console.log(time);\n * @example\n * const note = Tone.Time(1).toNotation();\n * console.log(note);\n * @example\n * const freq = Tone.Time(0.5).toFrequency();\n * console.log(freq);\n */\nexport function Time(value, units) {\n    return new TimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=Time.js.map","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `valueOf` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Frequency\";\n        this.defaultUnits = \"hz\";\n    }\n    /**\n     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n     * to generate all the other pitch values from notes. A4's values in Hertz.\n     */\n    static get A4() {\n        return getA4();\n    }\n    static set A4(freq) {\n        setA4(freq);\n    }\n    //-------------------------------------\n    // \tAUGMENT BASE EXPRESSIONS\n    //-------------------------------------\n    _getExpressions() {\n        return Object.assign({}, super._getExpressions(), {\n            midi: {\n                regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n                method(value) {\n                    if (this.defaultUnits === \"midi\") {\n                        return value;\n                    }\n                    else {\n                        return FrequencyClass.mtof(value);\n                    }\n                },\n            },\n            note: {\n                regexp: /^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,\n                method(pitch, octave) {\n                    const index = noteToScaleIndex[pitch.toLowerCase()];\n                    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n                    if (this.defaultUnits === \"midi\") {\n                        return noteNumber;\n                    }\n                    else {\n                        return FrequencyClass.mtof(noteNumber);\n                    }\n                },\n            },\n            tr: {\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n                method(m, q, s) {\n                    let total = 1;\n                    if (m && m !== \"0\") {\n                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n            },\n        });\n    }\n    //-------------------------------------\n    // \tEXPRESSIONS\n    //-------------------------------------\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return  A new transposed frequency\n     * @example\n     * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n    }\n    /**\n     * Takes an array of semitone intervals and returns\n     * an array of frequencies transposed by those intervals.\n     * @return  Returns an array of Frequencies\n     * @example\n     * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n     */\n    harmonize(intervals) {\n        return intervals.map(interval => {\n            return this.transpose(interval);\n        });\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Frequency(\"C4\").toMidi(); // 60\n     */\n    toMidi() {\n        return ftom(this.valueOf());\n    }\n    /**\n     * Return the value of the frequency in Scientific Pitch Notation\n     * @example\n     * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n     */\n    toNote() {\n        const freq = this.toFrequency();\n        const log = Math.log2(freq / FrequencyClass.A4);\n        let noteNumber = Math.round(12 * log) + 57;\n        const octave = Math.floor(noteNumber / 12);\n        if (octave < 0) {\n            noteNumber += -12 * octave;\n        }\n        const noteName = scaleIndexToNote[noteNumber % 12];\n        return noteName + octave.toString();\n    }\n    /**\n     * Return the duration of one cycle in seconds.\n     */\n    toSeconds() {\n        return 1 / super.toSeconds();\n    }\n    /**\n     * Return the duration of one cycle in ticks\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.floor(quarters * this._getPPQ());\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS HELPERS\n    //-------------------------------------\n    /**\n     * With no arguments, return 0\n     */\n    _noArg() {\n        return 0;\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return freq;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return 1 / super._beatsToUnits(beats);\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return 1 / seconds;\n    }\n    /**\n     * Convert a MIDI note to frequency value.\n     * @param  midi The midi number to convert.\n     * @return The corresponding frequency value\n     */\n    static mtof(midi) {\n        return mtof(midi);\n    }\n    /**\n     * Convert a frequency value to a MIDI note.\n     * @param frequency The value to frequency value to convert.\n     */\n    static ftom(frequency) {\n        return ftom(frequency);\n    }\n}\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n/**\n * Note to scale index.\n * @hidden\n */\nconst noteToScaleIndex = {\n    cbbb: -3, cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2, \"c##\": 2, \"c###\": 3, \"cx#\": 3, \"c#x\": 3,\n    dbbb: -1, dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4, \"d##\": 4, \"d###\": 5, \"dx#\": 5, \"d#x\": 5,\n    ebbb: 1, ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6, \"e##\": 6, \"e###\": 7, \"ex#\": 7, \"e#x\": 7,\n    fbbb: 2, fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7, \"f##\": 7, \"f###\": 8, \"fx#\": 8, \"f#x\": 8,\n    gbbb: 4, gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9, \"g##\": 9, \"g###\": 10, \"gx#\": 10, \"g#x\": 10,\n    abbb: 6, abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11, \"a##\": 11, \"a###\": 12, \"ax#\": 12, \"a#x\": 12,\n    bbbb: 8, bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13, \"b##\": 13, \"b###\": 14, \"bx#\": 14, \"b#x\": 14,\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n * @example\n * const midi = Tone.Frequency(\"C3\").toMidi();\n * console.log(midi);\n * @example\n * const hertz = Tone.Frequency(38, \"midi\").toFrequency();\n * console.log(hertz);\n */\nexport function Frequency(value, units) {\n    return new FrequencyClass(getContext(), value, units);\n}\n//# sourceMappingURL=Frequency.js.map","import { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TransportTime\";\n    }\n    /**\n     * Return the current time in whichever context is relevant\n     */\n    _now() {\n        return this.context.transport.seconds;\n    }\n}\n/**\n * TransportTime is a time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value, units) {\n    return new TransportTimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=TransportTime.js.map","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { assertUsedScheduleTime } from \"../util/Debug\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport class ToneWithContext extends Tone {\n    constructor() {\n        super();\n        const options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n        if (this.defaultContext) {\n            this.context = this.defaultContext;\n        }\n        else {\n            this.context = options.context;\n        }\n    }\n    static getDefaults() {\n        return {\n            context: getContext(),\n        };\n    }\n    /**\n     * Return the current time of the Context clock plus the lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.now());\n     * }, 100);\n     */\n    now() {\n        return this.context.currentTime + this.context.lookAhead;\n    }\n    /**\n     * Return the current time of the Context clock without any lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.immediate());\n     * }, 100);\n     */\n    immediate() {\n        return this.context.currentTime;\n    }\n    /**\n     * The duration in seconds of one sample.\n     * @example\n     * console.log(Tone.Transport.sampleTime);\n     */\n    get sampleTime() {\n        return 1 / this.context.sampleRate;\n    }\n    /**\n     * The number of seconds of 1 processing block (128 samples)\n     * @example\n     * console.log(Tone.Destination.blockTime);\n     */\n    get blockTime() {\n        return 128 / this.context.sampleRate;\n    }\n    /**\n     * Convert the incoming time to seconds.\n     * This is calculated against the current [[Tone.Transport]] bpm\n     * @example\n     * const gain = new Tone.Gain();\n     * setInterval(() => console.log(gain.toSeconds(\"4n\")), 100);\n     * // ramp the tempo to 60 bpm over 30 seconds\n     * Tone.getTransport().bpm.rampTo(60, 30);\n     */\n    toSeconds(time) {\n        assertUsedScheduleTime(time);\n        return new TimeClass(this.context, time).toSeconds();\n    }\n    /**\n     * Convert the input to a frequency number\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toFrequency(\"4n\"));\n     */\n    toFrequency(freq) {\n        return new FrequencyClass(this.context, freq).toFrequency();\n    }\n    /**\n     * Convert the input time into ticks\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toTicks(\"4n\"));\n     */\n    toTicks(time) {\n        return new TransportTimeClass(this.context, time).toTicks();\n    }\n    //-------------------------------------\n    // \tGET/SET\n    //-------------------------------------\n    /**\n     * Get a subset of the properties which are in the partial props\n     */\n    _getPartialProperties(props) {\n        const options = this.get();\n        // remove attributes from the prop that are not in the partial\n        Object.keys(options).forEach(name => {\n            if (isUndef(props[name])) {\n                delete options[name];\n            }\n        });\n        return options;\n    }\n    /**\n     * Get the object's attributes.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.get());\n     */\n    get() {\n        const defaults = getDefaultsFromInstance(this);\n        Object.keys(defaults).forEach(attribute => {\n            if (Reflect.has(this, attribute)) {\n                const member = this[attribute];\n                if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n                    defaults[attribute] = member.value;\n                }\n                else if (member instanceof ToneWithContext) {\n                    defaults[attribute] = member._getPartialProperties(defaults[attribute]);\n                    // otherwise make sure it's a serializable type\n                }\n                else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n                    defaults[attribute] = member;\n                }\n                else {\n                    // remove all undefined and unserializable attributes\n                    delete defaults[attribute];\n                }\n            }\n        });\n        return defaults;\n    }\n    /**\n     * Set multiple properties at once with an object.\n     * @example\n     * const filter = new Tone.Filter().toDestination();\n     * // set values using an object\n     * filter.set({\n     * \tfrequency: \"C6\",\n     * \ttype: \"highpass\"\n     * });\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3\").connect(filter);\n     * player.autostart = true;\n     */\n    set(props) {\n        Object.keys(props).forEach(attribute => {\n            if (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n                if (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n                    // small optimization\n                    if (this[attribute].value !== props[attribute]) {\n                        this[attribute].value = props[attribute];\n                    }\n                }\n                else if (this[attribute] instanceof ToneWithContext) {\n                    this[attribute].set(props[attribute]);\n                }\n                else {\n                    this[attribute] = props[attribute];\n                }\n            }\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=ToneWithContext.js.map","import { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline extends Timeline {\n    constructor(initial = \"stopped\") {\n        super();\n        this.name = \"StateTimeline\";\n        this._initial = initial;\n        this.setStateAtTime(this._initial, 0);\n    }\n    /**\n     * Returns the scheduled state scheduled before or at\n     * the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     */\n    getValueAtTime(time) {\n        const event = this.get(time);\n        if (event !== null) {\n            return event.state;\n        }\n        else {\n            return this._initial;\n        }\n    }\n    /**\n     * Add a state to the timeline.\n     * @param  state The name of the state to set.\n     * @param  time  The time to query.\n     * @param options Any additional options that are needed in the timeline.\n     */\n    setStateAtTime(state, time, options) {\n        assertRange(time, 0);\n        this.add(Object.assign({}, options, {\n            state,\n            time,\n        }));\n        return this;\n    }\n    /**\n     * Return the event before the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check before\n     * @return  The event with the given state before the time\n     */\n    getLastState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        for (let i = index; i >= 0; i--) {\n            const event = this._timeline[i];\n            if (event.state === state) {\n                return event;\n            }\n        }\n    }\n    /**\n     * Return the event after the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check from\n     * @return  The event with the given state after the time\n     */\n    getNextState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        if (index !== -1) {\n            for (let i = index; i < this._timeline.length; i++) {\n                const event = this._timeline[i];\n                if (event.state === state) {\n                    return event;\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=StateTimeline.js.map","import { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n * @category Core\n */\nexport class Param extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n        this.name = \"Param\";\n        this.overridden = false;\n        /**\n         * The minimum output value\n         */\n        this._minOutput = 1e-7;\n        const options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n        assert(isDefined(options.param) &&\n            (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n        while (!isAudioParam(options.param)) {\n            options.param = options.param._param;\n        }\n        this._swappable = isDefined(options.swappable) ? options.swappable : false;\n        if (this._swappable) {\n            this.input = this.context.createGain();\n            // initialize\n            this._param = options.param;\n            this.input.connect(this._param);\n        }\n        else {\n            this._param = this.input = options.param;\n        }\n        this._events = new Timeline(1000);\n        this._initialValue = this._param.defaultValue;\n        this.units = options.units;\n        this.convert = options.convert;\n        this._minValue = options.minValue;\n        this._maxValue = options.maxValue;\n        // if the value is defined, set it immediately\n        if (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n            this.setValueAtTime(options.value, 0);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            convert: true,\n            units: \"number\",\n        });\n    }\n    get value() {\n        const now = this.now();\n        return this.getValueAtTime(now);\n    }\n    set value(value) {\n        this.cancelScheduledValues(this.now());\n        this.setValueAtTime(value, this.now());\n    }\n    get minValue() {\n        // if it's not the default minValue, return it\n        if (isDefined(this._minValue)) {\n            return this._minValue;\n        }\n        else if (this.units === \"time\" || this.units === \"frequency\" ||\n            this.units === \"normalRange\" || this.units === \"positive\" ||\n            this.units === \"transportTime\" || this.units === \"ticks\" ||\n            this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n            return 0;\n        }\n        else if (this.units === \"audioRange\") {\n            return -1;\n        }\n        else if (this.units === \"decibels\") {\n            return -Infinity;\n        }\n        else {\n            return this._param.minValue;\n        }\n    }\n    get maxValue() {\n        if (isDefined(this._maxValue)) {\n            return this._maxValue;\n        }\n        else if (this.units === \"normalRange\" ||\n            this.units === \"audioRange\") {\n            return 1;\n        }\n        else {\n            return this._param.maxValue;\n        }\n    }\n    /**\n     * Type guard based on the unit name\n     */\n    _is(arg, type) {\n        return this.units === type;\n    }\n    /**\n     * Make sure the value is always in the defined range\n     */\n    _assertRange(value) {\n        if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n            assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n        }\n        return value;\n    }\n    /**\n     * Convert the given value from the type specified by Param.units\n     * into the destination value (such as Gain or Frequency).\n     */\n    _fromType(val) {\n        if (this.convert && !this.overridden) {\n            if (this._is(val, \"time\")) {\n                return this.toSeconds(val);\n            }\n            else if (this._is(val, \"decibels\")) {\n                return dbToGain(val);\n            }\n            else if (this._is(val, \"frequency\")) {\n                return this.toFrequency(val);\n            }\n            else {\n                return val;\n            }\n        }\n        else if (this.overridden) {\n            // if it's overridden, should only schedule 0s\n            return 0;\n        }\n        else {\n            return val;\n        }\n    }\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n    _toType(val) {\n        if (this.convert && this.units === \"decibels\") {\n            return gainToDb(val);\n        }\n        else {\n            return val;\n        }\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        const numericValue = this._fromType(value);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n        this._assertRange(numericValue);\n        this.log(this.units, \"setValueAtTime\", value, computedTime);\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: numericValue,\n        });\n        this._param.setValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    getValueAtTime(time) {\n        const computedTime = Math.max(this.toSeconds(time), 0);\n        const after = this._events.getAfter(computedTime);\n        const before = this._events.get(computedTime);\n        let value = this._initialValue;\n        // if it was set by\n        if (before === null) {\n            value = this._initialValue;\n        }\n        else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n            const previous = this._events.getBefore(before.time);\n            let previousVal;\n            if (previous === null) {\n                previousVal = this._initialValue;\n            }\n            else {\n                previousVal = previous.value;\n            }\n            if (before.type === \"setTargetAtTime\") {\n                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n            }\n        }\n        else if (after === null) {\n            value = before.value;\n        }\n        else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n            let beforeValue = before.value;\n            if (before.type === \"setTargetAtTime\") {\n                const previous = this._events.getBefore(before.time);\n                if (previous === null) {\n                    beforeValue = this._initialValue;\n                }\n                else {\n                    beforeValue = previous.value;\n                }\n            }\n            if (after.type === \"linearRampToValueAtTime\") {\n                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n            else {\n                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n        }\n        else {\n            value = before.value;\n        }\n        return this._toType(value);\n    }\n    setRampPoint(time) {\n        time = this.toSeconds(time);\n        let currentVal = this.getValueAtTime(time);\n        this.cancelAndHoldAtTime(time);\n        if (this._fromType(currentVal) === 0) {\n            currentVal = this._toType(this._minOutput);\n        }\n        this.setValueAtTime(currentVal, time);\n        return this;\n    }\n    linearRampToValueAtTime(value, endTime) {\n        const numericValue = this._fromType(value);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        this._assertRange(numericValue);\n        this._events.add({\n            time: computedTime,\n            type: \"linearRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n        this._param.linearRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, endTime) {\n        let numericValue = this._fromType(value);\n        // the value can't be 0\n        numericValue = EQ(numericValue, 0) ? this._minOutput : numericValue;\n        this._assertRange(numericValue);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        // store the event\n        this._events.add({\n            time: computedTime,\n            type: \"exponentialRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n        this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialApproachValueAtTime(value, startTime, rampTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        time = this.toSeconds(time);\n        rampTime = this.toSeconds(rampTime);\n        const timeConstant = Math.log(rampTime + 1) / Math.log(200);\n        this.setTargetAtTime(value, time, timeConstant);\n        // at 90% start a linear ramp to the final value\n        this.cancelAndHoldAtTime(time + rampTime * 0.9);\n        this.linearRampToValueAtTime(value, time + rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        const numericValue = this._fromType(value);\n        // The value will never be able to approach without timeConstant > 0.\n        assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n        const computedTime = this.toSeconds(startTime);\n        this._assertRange(numericValue);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n        this._events.add({\n            constant: timeConstant,\n            time: computedTime,\n            type: \"setTargetAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling = 1) {\n        duration = this.toSeconds(duration);\n        startTime = this.toSeconds(startTime);\n        const startingValue = this._fromType(values[0]) * scaling;\n        this.setValueAtTime(this._toType(startingValue), startTime);\n        const segTime = duration / (values.length - 1);\n        for (let i = 1; i < values.length; i++) {\n            const numericValue = this._fromType(values[i]) * scaling;\n            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n        }\n        return this;\n    }\n    cancelScheduledValues(time) {\n        const computedTime = this.toSeconds(time);\n        assert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n        this._events.cancel(computedTime);\n        this._param.cancelScheduledValues(computedTime);\n        this.log(this.units, \"cancelScheduledValues\", computedTime);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n        // remove the schedule events\n        assert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n        this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n        // if there is an event at the given computedTime\n        // and that even is not a \"set\"\n        const before = this._events.get(computedTime);\n        const after = this._events.getAfter(computedTime);\n        if (before && EQ(before.time, computedTime)) {\n            // remove everything after\n            if (after) {\n                this._param.cancelScheduledValues(after.time);\n                this._events.cancel(after.time);\n            }\n            else {\n                this._param.cancelAndHoldAtTime(computedTime);\n                this._events.cancel(computedTime + this.sampleTime);\n            }\n        }\n        else if (after) {\n            this._param.cancelScheduledValues(after.time);\n            // cancel the next event(s)\n            this._events.cancel(after.time);\n            if (after.type === \"linearRampToValueAtTime\") {\n                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n            else if (after.type === \"exponentialRampToValueAtTime\") {\n                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n        }\n        // set the value at the given time\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: valueAtTime,\n        });\n        this._param.setValueAtTime(valueAtTime, computedTime);\n        return this;\n    }\n    rampTo(value, rampTime = 0.1, startTime) {\n        if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n            this.exponentialRampTo(value, rampTime, startTime);\n        }\n        else {\n            this.linearRampTo(value, rampTime, startTime);\n        }\n        return this;\n    }\n    /**\n     * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n     * The applied values will start at the context's current time and schedule\n     * all of the events which are scheduled on this Param onto the passed in param.\n     */\n    apply(param) {\n        const now = this.context.currentTime;\n        // set the param's value at the current time and schedule everything else\n        param.setValueAtTime(this.getValueAtTime(now), now);\n        // if the previous event was a curve, then set the rest of it\n        const previousEvent = this._events.get(now);\n        if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n            // approx it until the next event with linear ramps\n            const nextEvent = this._events.getAfter(previousEvent.time);\n            // or for 2 seconds if there is no event\n            const endTime = nextEvent ? nextEvent.time : now + 2;\n            const subdivisions = (endTime - now) / 10;\n            for (let i = now; i < endTime; i += subdivisions) {\n                param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n            }\n        }\n        this._events.forEachAfter(this.context.currentTime, event => {\n            if (event.type === \"cancelScheduledValues\") {\n                param.cancelScheduledValues(event.time);\n            }\n            else if (event.type === \"setTargetAtTime\") {\n                param.setTargetAtTime(event.value, event.time, event.constant);\n            }\n            else {\n                param[event.type](event.value, event.time);\n            }\n        });\n        return this;\n    }\n    /**\n     * Replace the Param's internal AudioParam. Will apply scheduled curves\n     * onto the parameter and replace the connections.\n     */\n    setParam(param) {\n        assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n        const input = this.input;\n        input.disconnect(this._param);\n        this.apply(param);\n        this._param = param;\n        input.connect(this._param);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        return this;\n    }\n    get defaultValue() {\n        return this._toType(this._param.defaultValue);\n    }\n    //-------------------------------------\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    //-------------------------------------\n    // Calculates the the value along the curve produced by setTargetAtTime\n    _exponentialApproach(t0, v0, v1, timeConstant, t) {\n        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    }\n    // Calculates the the value along the curve produced by linearRampToValueAtTime\n    _linearInterpolate(t0, v0, t1, v1, t) {\n        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    }\n    // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n    _exponentialInterpolate(t0, v0, t1, v1, t) {\n        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    }\n}\n//# sourceMappingURL=Param.js.map","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport class ToneAudioNode extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        /**\n         * List all of the node that must be set to match the ChannelProperties\n         */\n        this._internalChannels = [];\n    }\n    /**\n     * The number of inputs feeding into the AudioNode.\n     * For source nodes, this will be 0.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfInputs);\n     */\n    get numberOfInputs() {\n        if (isDefined(this.input)) {\n            if (isAudioParam(this.input) || this.input instanceof Param) {\n                return 1;\n            }\n            else {\n                return this.input.numberOfInputs;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of outputs of the AudioNode.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfOutputs);\n     */\n    get numberOfOutputs() {\n        if (isDefined(this.output)) {\n            return this.output.numberOfOutputs;\n        }\n        else {\n            return 0;\n        }\n    }\n    //-------------------------------------\n    // AUDIO PROPERTIES\n    //-------------------------------------\n    /**\n     * Used to decide which nodes to get/set properties on\n     */\n    _isAudioNode(node) {\n        return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n    }\n    /**\n     * Get all of the audio nodes (either internal or input/output) which together\n     * make up how the class node responds to channel input/output\n     */\n    _getInternalNodes() {\n        const nodeList = this._internalChannels.slice(0);\n        if (this._isAudioNode(this.input)) {\n            nodeList.push(this.input);\n        }\n        if (this._isAudioNode(this.output)) {\n            if (this.input !== this.output) {\n                nodeList.push(this.output);\n            }\n        }\n        return nodeList;\n    }\n    /**\n     * Set the audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     * @param options\n     */\n    _setChannelProperties(options) {\n        const nodeList = this._getInternalNodes();\n        nodeList.forEach(node => {\n            node.channelCount = options.channelCount;\n            node.channelCountMode = options.channelCountMode;\n            node.channelInterpretation = options.channelInterpretation;\n        });\n    }\n    /**\n     * Get the current audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     */\n    _getChannelProperties() {\n        const nodeList = this._getInternalNodes();\n        assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n        // use the first node to get properties\n        // they should all be the same\n        const node = nodeList[0];\n        return {\n            channelCount: node.channelCount,\n            channelCountMode: node.channelCountMode,\n            channelInterpretation: node.channelInterpretation,\n        };\n    }\n    /**\n     * channelCount is the number of channels used when up-mixing and down-mixing\n     * connections to any inputs to the node. The default value is 2 except for\n     * specific nodes where its value is specially determined.\n     */\n    get channelCount() {\n        return this._getChannelProperties().channelCount;\n    }\n    set channelCount(channelCount) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCount }));\n    }\n    /**\n     * channelCountMode determines how channels will be counted when up-mixing and\n     * down-mixing connections to any inputs to the node.\n     * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n     * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n     * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n     * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n     */\n    get channelCountMode() {\n        return this._getChannelProperties().channelCountMode;\n    }\n    set channelCountMode(channelCountMode) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCountMode }));\n    }\n    /**\n     * channelInterpretation determines how individual channels will be treated\n     * when up-mixing and down-mixing connections to any inputs to the node.\n     * The default value is \"speakers\".\n     */\n    get channelInterpretation() {\n        return this._getChannelProperties().channelInterpretation;\n    }\n    set channelInterpretation(channelInterpretation) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelInterpretation }));\n    }\n    //-------------------------------------\n    // CONNECTIONS\n    //-------------------------------------\n    /**\n     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n     * @param destination The output to connect to\n     * @param outputNum The output to connect from\n     * @param inputNum The input to connect to\n     */\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * @example\n     * const osc = new Tone.Oscillator(\"C2\").start();\n     * osc.toDestination();\n     */\n    toDestination() {\n        this.connect(this.context.destination);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * See [[toDestination]]\n     * @deprecated\n     */\n    toMaster() {\n        warn(\"toMaster() has been renamed toDestination()\");\n        return this.toDestination();\n    }\n    /**\n     * disconnect the output\n     */\n    disconnect(destination, outputNum = 0, inputNum = 0) {\n        disconnect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output of this node to the rest of the nodes in series.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3\");\n     * player.autostart = true;\n     * const filter = new Tone.AutoFilter(4).start();\n     * const distortion = new Tone.Distortion(0.5);\n     * // connect the player to the filter, distortion and then to the master output\n     * player.chain(filter, distortion, Tone.Destination);\n     */\n    chain(...nodes) {\n        connectSeries(this, ...nodes);\n        return this;\n    }\n    /**\n     * connect the output of this node to the rest of the nodes in parallel.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n     * player.autostart = true;\n     * const pitchShift = new Tone.PitchShift(4).toDestination();\n     * const filter = new Tone.Filter(\"G5\").toDestination();\n     * // connect a node to the pitch shift and filter in parallel\n     * player.fan(pitchShift, filter);\n     */\n    fan(...nodes) {\n        nodes.forEach(node => this.connect(node));\n        return this;\n    }\n    /**\n     * Dispose and disconnect\n     */\n    dispose() {\n        super.dispose();\n        if (isDefined(this.input)) {\n            if (this.input instanceof ToneAudioNode) {\n                this.input.dispose();\n            }\n            else if (isAudioNode(this.input)) {\n                this.input.disconnect();\n            }\n        }\n        if (isDefined(this.output)) {\n            if (this.output instanceof ToneAudioNode) {\n                this.output.dispose();\n            }\n            else if (isAudioNode(this.output)) {\n                this.output.disconnect();\n            }\n        }\n        this._internalChannels = [];\n        return this;\n    }\n}\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes) {\n    const first = nodes.shift();\n    nodes.reduce((prev, current) => {\n        if (prev instanceof ToneAudioNode) {\n            prev.connect(current);\n        }\n        else if (isAudioNode(prev)) {\n            connect(prev, current);\n        }\n        return current;\n    }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n    assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n    if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n        assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n    }\n    assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n    // resolve the input of the dstNode\n    while ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n        if (isDefined(dstNode.input)) {\n            dstNode = dstNode.input;\n        }\n    }\n    while (srcNode instanceof ToneAudioNode) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    // make the connection\n    if (isAudioParam(dstNode)) {\n        srcNode.connect(dstNode, outputNumber);\n    }\n    else {\n        srcNode.connect(dstNode, outputNumber, inputNumber);\n    }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    // resolve the destination node\n    if (isDefined(dstNode)) {\n        while (dstNode instanceof ToneAudioNode) {\n            dstNode = dstNode.input;\n        }\n    }\n    // resolve the src node\n    while (!(isAudioNode(srcNode))) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    if (isAudioParam(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber);\n    }\n    else if (isAudioNode(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber, inputNumber);\n    }\n    else {\n        srcNode.disconnect();\n    }\n}\n/**\n * Connect the output of one or more source nodes to a single destination node\n * @param nodes One or more source nodes followed by one destination node\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n * const player1 = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3\");\n * const filter = new Tone.Filter(\"G5\").toDestination();\n * // connect nodes to a common destination\n * fanIn(player, player1, filter);\n */\nexport function fanIn(...nodes) {\n    const dstNode = nodes.pop();\n    if (isDefined(dstNode)) {\n        nodes.forEach(node => connect(node, dstNode));\n    }\n}\n//# sourceMappingURL=ToneAudioNode.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst gainNode = new Tone.Gain(0).toDestination();\n * \tconst osc = new Tone.Oscillator(30).connect(gainNode).start();\n * \tgainNode.gain.rampTo(1, 0.1);\n * \tgainNode.gain.rampTo(0, 0.4, 0.2);\n * }, 0.7, 1);\n */\nexport class Gain extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n        this.name = \"Gain\";\n        /**\n         * The wrapped GainNode.\n         */\n        this._gainNode = this.context.createGain();\n        // input = output\n        this.input = this._gainNode;\n        this.output = this._gainNode;\n        const options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n        this.gain = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._gainNode.gain,\n            units: options.units,\n            value: options.gain,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        readOnly(this, \"gain\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            gain: 1,\n            units: \"gain\",\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Gain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode, } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\nexport class OneShotSource extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * The callback to invoke after the\n         * source is done playing.\n         */\n        this.onended = noOp;\n        /**\n         * The start time\n         */\n        this._startTime = -1;\n        /**\n         * The stop time\n         */\n        this._stopTime = -1;\n        /**\n         * The id of the timeout\n         */\n        this._timeout = -1;\n        /**\n         * The public output node\n         */\n        this.output = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output gain node.\n         */\n        this._gainNode = this.output;\n        /**\n         * Get the playback state at the given time\n         */\n        this.getStateAtTime = function (time) {\n            const computedTime = this.toSeconds(time);\n            if (this._startTime !== -1 &&\n                computedTime >= this._startTime &&\n                (this._stopTime === -1 || computedTime <= this._stopTime)) {\n                return \"started\";\n            }\n            else {\n                return \"stopped\";\n            }\n        };\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n        this._curve = options.curve;\n        this.onended = options.onended;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            curve: \"linear\",\n            fadeIn: 0,\n            fadeOut: 0,\n            onended: noOp,\n        });\n    }\n    /**\n     * Start the source at the given time\n     * @param  time When to start the source\n     */\n    _startGain(time, gain = 1) {\n        assert(this._startTime === -1, \"Source cannot be started more than once\");\n        // apply a fade in envelope\n        const fadeInTime = this.toSeconds(this._fadeIn);\n        // record the start time\n        this._startTime = time + fadeInTime;\n        this._startTime = Math.max(this._startTime, this.context.currentTime);\n        // schedule the envelope\n        if (fadeInTime > 0) {\n            this._gainNode.gain.setValueAtTime(0, time);\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n            }\n            else {\n                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n            }\n        }\n        else {\n            this._gainNode.gain.setValueAtTime(gain, time);\n        }\n        return this;\n    }\n    /**\n     * Stop the source node at the given time.\n     * @param time When to stop the source\n     */\n    stop(time) {\n        this.log(\"stop\", time);\n        this._stopGain(this.toSeconds(time));\n        return this;\n    }\n    /**\n     * Stop the source at the given time\n     * @param  time When to stop the source\n     */\n    _stopGain(time) {\n        assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n        // cancel the previous stop\n        this.cancelStop();\n        // the fadeOut time\n        const fadeOutTime = this.toSeconds(this._fadeOut);\n        // schedule the stop callback\n        this._stopTime = this.toSeconds(time) + fadeOutTime;\n        this._stopTime = Math.max(this._stopTime, this.now());\n        if (fadeOutTime > 0) {\n            // start the fade out curve at the given time\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n            }\n            else {\n                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n            }\n        }\n        else {\n            // stop any ongoing ramps, and set the value to 0\n            this._gainNode.gain.cancelAndHoldAtTime(time);\n            this._gainNode.gain.setValueAtTime(0, time);\n        }\n        this.context.clearTimeout(this._timeout);\n        this._timeout = this.context.setTimeout(() => {\n            // allow additional time for the exponential curve to fully decay\n            const additionalTail = this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n            this._stopSource(this.now() + additionalTail);\n            this._onended();\n        }, this._stopTime - this.context.currentTime);\n        return this;\n    }\n    /**\n     * Invoke the onended callback\n     */\n    _onended() {\n        if (this.onended !== noOp) {\n            this.onended(this);\n            // overwrite onended to make sure it only is called once\n            this.onended = noOp;\n            // dispose when it's ended to free up for garbage collection only in the online context\n            if (!this.context.isOffline) {\n                const disposeCallback = () => this.dispose();\n                // @ts-ignore\n                if (typeof window.requestIdleCallback !== \"undefined\") {\n                    // @ts-ignore\n                    window.requestIdleCallback(disposeCallback);\n                }\n                else {\n                    setTimeout(disposeCallback, 1000);\n                }\n            }\n        }\n    }\n    /**\n     * Get the playback state at the current time\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Cancel a scheduled stop event\n     */\n    cancelStop() {\n        this.log(\"cancelStop\");\n        assert(this._startTime !== -1, \"Source is not started\");\n        // cancel the stop envelope\n        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n        this.context.clearTimeout(this._timeout);\n        this._stopTime = -1;\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._gainNode.dispose();\n        this.onended = noOp;\n        return this;\n    }\n}\n//# sourceMappingURL=OneShotSource.js.map","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n        this.name = \"ToneConstantSource\";\n        /**\n         * The signal generator\n         */\n        this._source = this.context.createConstantSource();\n        const options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n        connect(this._source, this._gainNode);\n        this.offset = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._source.offset,\n            units: options.units,\n            value: options.offset,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            convert: true,\n            offset: 1,\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the source node at the given time\n     * @param  time When to start the source\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._source.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._source.stop(time);\n    }\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._source.disconnect();\n        this.offset.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneConstantSource.js.map","import { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n        this.name = \"Signal\";\n        /**\n         * Indicates if the value should be overridden on connection.\n         */\n        this.override = true;\n        const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        this.output = this._constantSource = new ToneConstantSource({\n            context: this.context,\n            convert: options.convert,\n            offset: options.value,\n            units: options.units,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this._constantSource.start(0);\n        this.input = this._param = this._constantSource.offset;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            units: \"number\",\n            value: 0,\n        });\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        // start it only when connected to something\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        this._constantSource.dispose();\n        return this;\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // just a proxy for the ConstantSourceNode's offset AudioParam\n    // all docs are generated from AbstractParam.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        this._param.setValueAtTime(value, time);\n        return this;\n    }\n    getValueAtTime(time) {\n        return this._param.getValueAtTime(time);\n    }\n    setRampPoint(time) {\n        this._param.setRampPoint(time);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        this._param.linearRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        this._param.exponentialRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        this._param.exponentialRampTo(value, rampTime, startTime);\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        this._param.linearRampTo(value, rampTime, startTime);\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        this._param.targetRampTo(value, rampTime, startTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        this._param.exponentialApproachValueAtTime(value, time, rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        this._param.setTargetAtTime(value, startTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling) {\n        this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n        return this;\n    }\n    cancelScheduledValues(time) {\n        this._param.cancelScheduledValues(time);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        this._param.cancelAndHoldAtTime(time);\n        return this;\n    }\n    rampTo(value, rampTime, startTime) {\n        this._param.rampTo(value, rampTime, startTime);\n        return this;\n    }\n    get value() {\n        return this._param.value;\n    }\n    set value(value) {\n        this._param.value = value;\n    }\n    get convert() {\n        return this._param.convert;\n    }\n    set convert(convert) {\n        this._param.convert = convert;\n    }\n    get units() {\n        return this._param.units;\n    }\n    get overridden() {\n        return this._param.overridden;\n    }\n    set overridden(overridden) {\n        this._param.overridden = overridden;\n    }\n    get maxValue() {\n        return this._param.maxValue;\n    }\n    get minValue() {\n        return this._param.minValue;\n    }\n    /**\n     * See [[Param.apply]].\n     */\n    apply(param) {\n        this._param.apply(param);\n        return this;\n    }\n}\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n    if (destination instanceof Param || isAudioParam(destination) ||\n        (destination instanceof Signal && destination.override)) {\n        // cancel changes\n        destination.cancelScheduledValues(0);\n        // reset the value\n        destination.setValueAtTime(0, 0);\n        // mark the value as overridden\n        if (destination instanceof Signal) {\n            destination.overridden = true;\n        }\n    }\n    connect(signal, destination, outputNum, inputNum);\n}\n//# sourceMappingURL=Signal.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam extends Param {\n    constructor() {\n        super(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickParam\";\n        /**\n         * The timeline which tracks all of the automations.\n         */\n        this._events = new Timeline(Infinity);\n        /**\n         * The internal holder for the multiplier value\n         */\n        this._multiplier = 1;\n        const options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n        // set the multiplier\n        this._multiplier = options.multiplier;\n        // clear the ticks from the beginning\n        this._events.cancel(0);\n        // set an initial event\n        this._events.add({\n            ticks: 0,\n            time: 0,\n            type: \"setValueAtTime\",\n            value: this._fromType(options.value),\n        });\n        this.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Param.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    setTargetAtTime(value, time, constant) {\n        // approximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        this.setRampPoint(time);\n        const computedValue = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        const segments = Math.round(Math.max(1 / constant, 1));\n        for (let i = 0; i <= segments; i++) {\n            const segTime = constant * i + time;\n            const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.setValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.linearRampToValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        // aproximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        const computedVal = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        // approx 10 segments per second\n        const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n        const segmentDur = ((time - prevEvent.time) / segments);\n        for (let i = 0; i <= segments; i++) {\n            const segTime = segmentDur * i + prevEvent.time;\n            const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  event The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    _getTicksUntilEvent(event, time) {\n        if (event === null) {\n            event = {\n                ticks: 0,\n                time: 0,\n                type: \"setValueAtTime\",\n                value: 0,\n            };\n        }\n        else if (isUndef(event.ticks)) {\n            const previousEvent = this._events.previousEvent(event);\n            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n        }\n        const val0 = this._fromType(this.getValueAtTime(event.time));\n        let val1 = this._fromType(this.getValueAtTime(time));\n        // if it's right on the line, take the previous value\n        const onTheLineEvent = this._events.get(time);\n        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n        }\n        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const event = this._events.get(computedTime);\n        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n    }\n    /**\n     * Return the elapsed time of the number of ticks from the given time\n     * @param ticks The number of ticks to calculate\n     * @param  time The time to get the next tick from\n     * @return The duration of the number of ticks from the given time in seconds\n     */\n    getDurationOfTicks(ticks, time) {\n        const computedTime = this.toSeconds(time);\n        const currentTick = this.getTicksAtTime(time);\n        return this.getTimeOfTick(currentTick + ticks) - computedTime;\n    }\n    /**\n     * Given a tick, returns the time that tick occurs at.\n     * @return The time that the tick occurs.\n     */\n    getTimeOfTick(tick) {\n        const before = this._events.get(tick, \"ticks\");\n        const after = this._events.getAfter(tick, \"ticks\");\n        if (before && before.ticks === tick) {\n            return before.time;\n        }\n        else if (before && after &&\n            after.type === \"linearRampToValueAtTime\" &&\n            before.value !== after.value) {\n            const val0 = this._fromType(this.getValueAtTime(before.time));\n            const val1 = this._fromType(this.getValueAtTime(after.time));\n            const delta = (val1 - val0) / (after.time - before.time);\n            const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n            const sol1 = (-val0 + k) / delta;\n            const sol2 = (-val0 - k) / delta;\n            return (sol1 > 0 ? sol1 : sol2) + before.time;\n        }\n        else if (before) {\n            if (before.value === 0) {\n                return Infinity;\n            }\n            else {\n                return before.time + (tick - before.ticks) / before.value;\n            }\n        }\n        else {\n            return tick / this._initialValue;\n        }\n    }\n    /**\n     * Convert some number of ticks their the duration in seconds accounting\n     * for any automation curves starting at the given time.\n     * @param  ticks The number of ticks to convert to seconds.\n     * @param  when  When along the automation timeline to convert the ticks.\n     * @return The duration in seconds of the ticks.\n     */\n    ticksToTime(ticks, when) {\n        return this.getDurationOfTicks(ticks, when);\n    }\n    /**\n     * The inverse of [[ticksToTime]]. Convert a duration in\n     * seconds to the corresponding number of ticks accounting for any\n     * automation curves starting at the given time.\n     * @param  duration The time interval to convert to ticks.\n     * @param  when When along the automation timeline to convert the ticks.\n     * @return The duration in ticks.\n     */\n    timeToTicks(duration, when) {\n        const computedTime = this.toSeconds(when);\n        const computedDuration = this.toSeconds(duration);\n        const startTicks = this.getTicksAtTime(computedTime);\n        const endTicks = this.getTicksAtTime(computedTime + computedDuration);\n        return endTicks - startTicks;\n    }\n    /**\n     * Convert from the type when the unit value is BPM\n     */\n    _fromType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return 1 / (60 / val / this.multiplier);\n        }\n        else {\n            return super._fromType(val);\n        }\n    }\n    /**\n     * Special case of type conversion where the units === \"bpm\"\n     */\n    _toType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return (val / this.multiplier) * 60;\n        }\n        else {\n            return super._toType(val);\n        }\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._multiplier;\n    }\n    set multiplier(m) {\n        // get and reset the current value with the new multiplier\n        // might be necessary to clear all the previous values\n        const currentVal = this.value;\n        this._multiplier = m;\n        this.cancelScheduledValues(0);\n        this.setValueAtTime(currentVal, 0);\n    }\n}\n//# sourceMappingURL=TickParam.js.map","import { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal extends Signal {\n    constructor() {\n        super(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickSignal\";\n        const options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n        this.input = this._param = new TickParam({\n            context: this.context,\n            convert: options.convert,\n            multiplier: options.multiplier,\n            param: this._constantSource.offset,\n            units: options.units,\n            value: options.value,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    ticksToTime(ticks, when) {\n        return this._param.ticksToTime(ticks, when);\n    }\n    timeToTicks(duration, when) {\n        return this._param.timeToTicks(duration, when);\n    }\n    getTimeOfTick(tick) {\n        return this._param.getTimeOfTick(tick);\n    }\n    getDurationOfTicks(ticks, time) {\n        return this._param.getDurationOfTicks(ticks, time);\n    }\n    getTicksAtTime(time) {\n        return this._param.getTicksAtTime(time);\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._param.multiplier;\n    }\n    set multiplier(m) {\n        this._param.multiplier = m;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSignal.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"TickSource\";\n        /**\n         * The state timeline\n         */\n        this._state = new StateTimeline();\n        /**\n         * The offset values of the ticks\n         */\n        this._tickOffset = new Timeline();\n        /**\n         * Memoized values of getTicksAtTime at events with state other than \"started\"\n         */\n        this._ticksAtTime = new Timeline();\n        /**\n         * Memoized values of getSecondsAtTime at events with state other than \"started\"\n         */\n        this._secondsAtTime = new Timeline();\n        const options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n        this.frequency = new TickSignal({\n            context: this.context,\n            units: options.units,\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        // set the initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // add the first event\n        this.setTicksAtTime(0, 0);\n    }\n    static getDefaults() {\n        return Object.assign({\n            frequency: 1,\n            units: \"hertz\",\n        }, ToneWithContext.getDefaults());\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset The number of ticks to start the source at\n     */\n    start(time, offset) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (isDefined(offset)) {\n                this.setTicksAtTime(offset, computedTime);\n            }\n            this._ticksAtTime.cancel(computedTime);\n            this._secondsAtTime.cancel(computedTime);\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        // cancel the previous stop\n        if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n            const event = this._state.get(computedTime);\n            if (event && event.time > 0) {\n                this._tickOffset.cancel(event.time);\n                this._state.cancel(event.time);\n            }\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this.setTicksAtTime(0, computedTime);\n        this._ticksAtTime.cancel(computedTime);\n        this._secondsAtTime.cancel(computedTime);\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._ticksAtTime.cancel(computedTime);\n            this._secondsAtTime.cancel(computedTime);\n        }\n        return this;\n    }\n    /**\n     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n     * @param time When to clear the events after\n     */\n    cancel(time) {\n        time = this.toSeconds(time);\n        this._state.cancel(time);\n        this._tickOffset.cancel(time);\n        this._ticksAtTime.cancel(time);\n        this._secondsAtTime.cancel(time);\n        return this;\n    }\n    /**\n     * Get the elapsed ticks at the given time\n     * @param  time  When to get the tick value\n     * @return The number of ticks\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", computedTime);\n        // get previously memoized ticks if available\n        const memoizedEvent = this._ticksAtTime.get(computedTime);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time: computedTime };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = memoizedEvent ? memoizedEvent : stopEvent;\n        let elapsedTicks = memoizedEvent ? memoizedEvent.ticks : 0;\n        let eventToMemoize = null;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(lastState.time, computedTime + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedTicks = offsetEvent.ticks;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n                // do not memoize the temporary event\n                if (e.time != tmpEvent.time) {\n                    eventToMemoize = { state: e.state, time: e.time, ticks: elapsedTicks };\n                }\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // memoize the ticks at the most recent event with state other than \"started\"\n        if (eventToMemoize) {\n            this._ticksAtTime.add(eventToMemoize);\n        }\n        // return the ticks\n        return elapsedTicks;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked. Returns -1 when stopped.\n     */\n    get ticks() {\n        return this.getTicksAtTime(this.now());\n    }\n    set ticks(t) {\n        this.setTicksAtTime(t, this.now());\n    }\n    /**\n     * The time since ticks=0 that the TickSource has been running. Accounts\n     * for tempo curves\n     */\n    get seconds() {\n        return this.getSecondsAtTime(this.now());\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this.frequency.timeToTicks(s, now);\n        this.setTicksAtTime(ticks, now);\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        time = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", time);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time };\n        this._state.add(tmpEvent);\n        // get previously memoized seconds if available\n        const memoizedEvent = this._secondsAtTime.get(time);\n        // keep track of the previous offset event\n        let lastState = memoizedEvent ? memoizedEvent : stopEvent;\n        let elapsedSeconds = memoizedEvent ? memoizedEvent.seconds : 0;\n        let eventToMemoize = null;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(lastState.time, time + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedSeconds = offsetEvent.seconds;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedSeconds += e.time - periodStartTime;\n                // do not memoize the temporary event\n                if (e.time != tmpEvent.time) {\n                    eventToMemoize = { state: e.state, time: e.time, seconds: elapsedSeconds };\n                }\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // memoize the seconds at the most recent event with state other than \"started\"\n        if (eventToMemoize) {\n            this._secondsAtTime.add(eventToMemoize);\n        }\n        // return the seconds\n        return elapsedSeconds;\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        time = this.toSeconds(time);\n        this._tickOffset.cancel(time);\n        this._tickOffset.add({\n            seconds: this.frequency.getDurationOfTicks(ticks, time),\n            ticks,\n            time,\n        });\n        this._ticksAtTime.cancel(time);\n        this._secondsAtTime.cancel(time);\n        return this;\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     */\n    getStateAtTime(time) {\n        time = this.toSeconds(time);\n        return this._state.getValueAtTime(time);\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        const offset = this._tickOffset.get(before);\n        const event = this._state.get(before);\n        const startTime = Math.max(offset.time, event.time);\n        const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n        return this.frequency.getTimeOfTick(absoluteTicks);\n    }\n    /**\n     * Invoke the callback event at all scheduled ticks between the\n     * start time and the end time\n     * @param  startTime  The beginning of the search range\n     * @param  endTime    The end of the search range\n     * @param  callback   The callback to invoke with each tick\n     */\n    forEachTickBetween(startTime, endTime, callback) {\n        // only iterate through the sections where it is \"started\"\n        let lastStateEvent = this._state.get(startTime);\n        this._state.forEachBetween(startTime, endTime, event => {\n            if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n                this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n            }\n            lastStateEvent = event;\n        });\n        let error = null;\n        if (lastStateEvent && lastStateEvent.state === \"started\") {\n            const maxStartTime = Math.max(lastStateEvent.time, startTime);\n            // figure out the difference between the frequency ticks and the\n            const startTicks = this.frequency.getTicksAtTime(maxStartTime);\n            const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n            const diff = startTicks - ticksAtStart;\n            let offset = Math.ceil(diff) - diff;\n            // guard against floating point issues\n            offset = EQ(offset, 1) ? 0 : offset;\n            let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n            while (nextTickTime < endTime) {\n                try {\n                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n                }\n                catch (e) {\n                    error = e;\n                    break;\n                }\n                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n            }\n        }\n        if (error) {\n            throw error;\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._state.dispose();\n        this._tickOffset.dispose();\n        this._ticksAtTime.dispose();\n        this._secondsAtTime.dispose();\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSource.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n        this.name = \"Clock\";\n        /**\n         * The callback function to invoke at the scheduled tick.\n         */\n        this.callback = noOp;\n        /**\n         * The last time the loop callback was invoked\n         */\n        this._lastUpdate = 0;\n        /**\n         * Keep track of the playback state\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * Context bound reference to the _loop method\n         * This is necessary to remove the event in the end.\n         */\n        this._boundLoop = this._loop.bind(this);\n        const options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n        this.callback = options.callback;\n        this._tickSource = new TickSource({\n            context: this.context,\n            frequency: options.frequency,\n            units: options.units,\n        });\n        this._lastUpdate = 0;\n        this.frequency = this._tickSource.frequency;\n        readOnly(this, \"frequency\");\n        // add an initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // bind a callback to the worker thread\n        this.context.on(\"tick\", this._boundLoop);\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            frequency: 1,\n            units: \"hertz\",\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this._state.getValueAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset  Where the tick counter starts counting from.\n     */\n    start(time, offset) {\n        // make sure the context is running\n        assertContextRunning(this.context);\n        // start the loop\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            this._tickSource.start(computedTime, offset);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"start\", computedTime, offset);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     * @example\n     * const clock = new Tone.Clock(time => {\n     * \tconsole.log(time);\n     * }, 1);\n     * clock.start();\n     * // stop the clock after 10 seconds\n     * clock.stop(\"+10\");\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"stop\", computedTime);\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this._tickSource.stop(computedTime);\n        if (computedTime < this._lastUpdate) {\n            this.emit(\"stop\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._tickSource.pause(computedTime);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"pause\", computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked.\n     */\n    get ticks() {\n        return Math.ceil(this.getTicksAtTime(this.now()));\n    }\n    set ticks(t) {\n        this._tickSource.ticks = t;\n    }\n    /**\n     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n     */\n    get seconds() {\n        return this._tickSource.seconds;\n    }\n    set seconds(s) {\n        this._tickSource.seconds = s;\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._tickSource.getSecondsAtTime(time);\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        this._tickSource.setTicksAtTime(ticks, time);\n        return this;\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        return this._tickSource.getTimeOfTick(tick, before);\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return this._tickSource.getTicksAtTime(time);\n    }\n    /**\n     * Get the time of the next tick\n     * @param  offset The tick number.\n     */\n    nextTickTime(offset, when) {\n        const computedTime = this.toSeconds(when);\n        const currentTick = this.getTicksAtTime(computedTime);\n        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n    }\n    /**\n     * The scheduling loop.\n     */\n    _loop() {\n        const startTime = this._lastUpdate;\n        const endTime = this.now();\n        this._lastUpdate = endTime;\n        this.log(\"loop\", startTime, endTime);\n        if (startTime !== endTime) {\n            // the state change events\n            this._state.forEachBetween(startTime, endTime, e => {\n                switch (e.state) {\n                    case \"started\":\n                        const offset = this._tickSource.getTicksAtTime(e.time);\n                        this.emit(\"start\", e.time, offset);\n                        break;\n                    case \"stopped\":\n                        if (e.time !== 0) {\n                            this.emit(\"stop\", e.time);\n                        }\n                        break;\n                    case \"paused\":\n                        this.emit(\"pause\", e.time);\n                        break;\n                }\n            });\n            // the tick callbacks\n            this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n                this.callback(time, ticks);\n            });\n        }\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     * @example\n     * const clock = new Tone.Clock();\n     * clock.start(\"+0.1\");\n     * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n     */\n    getStateAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        return this._state.getValueAtTime(computedTime);\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.context.off(\"tick\", this._boundLoop);\n        this._tickSource.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Clock);\n//# sourceMappingURL=Clock.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n * @example\n * return Tone.Offline(() => {\n * \tconst delay = new Tone.Delay(0.1).toDestination();\n * \t// connect the signal to both the delay and the destination\n * \tconst pulse = new Tone.PulseOscillator().connect(delay).toDestination();\n * \t// start and stop the pulse\n * \tpulse.start(0).stop(0.01);\n * }, 0.5, 1);\n */\nexport class Delay extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n        this.name = \"Delay\";\n        const options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n        const maxDelayInSeconds = this.toSeconds(options.maxDelay);\n        this._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n        this._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n        this.delayTime = new Param({\n            context: this.context,\n            param: this._delayNode.delayTime,\n            units: \"time\",\n            value: options.delayTime,\n            minValue: 0,\n            maxValue: this.maxDelay,\n        });\n        readOnly(this, \"delayTime\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0,\n            maxDelay: 1,\n        });\n    }\n    /**\n     * The maximum delay time. This cannot be changed after\n     * the value is passed into the constructor.\n     */\n    get maxDelay() {\n        return this._maxDelay;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._delayNode.disconnect();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Delay.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tA1: \"https://tonejs.github.io/audio/casio/A1.mp3\",\n * \tA2: \"https://tonejs.github.io/audio/casio/A2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"A2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t A1: \"A1.mp3\",\n * \t\t A2: \"A2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffers\";\n        /**\n         * All of the buffers\n         */\n        this._buffers = new Map();\n        /**\n         * Keep track of the number of loaded buffers\n         */\n        this._loadingCount = 0;\n        const options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        this.baseUrl = options.baseUrl;\n        // add each one\n        Object.keys(options.urls).forEach(name => {\n            this._loadingCount++;\n            const url = options.urls[name];\n            this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n        });\n    }\n    static getDefaults() {\n        return {\n            baseUrl: \"\",\n            onerror: noOp,\n            onload: noOp,\n            urls: {},\n        };\n    }\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param  name  The key or index of the buffer.\n     */\n    has(name) {\n        return this._buffers.has(name.toString());\n    }\n    /**\n     * Get a buffer by name. If an array was loaded,\n     * then use the array index.\n     * @param  name  The key or index of the buffer.\n     */\n    get(name) {\n        assert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n        return this._buffers.get(name.toString());\n    }\n    /**\n     * A buffer was loaded. decrement the counter.\n     */\n    _bufferLoaded(callback) {\n        this._loadingCount--;\n        if (this._loadingCount === 0 && callback) {\n            callback();\n        }\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n    }\n    /**\n     * Add a buffer by name and url to the Buffers\n     * @param  name      A unique name to give the buffer\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     * @param  onerror  Invoked if the buffer can't be loaded\n     */\n    add(name, url, callback = noOp, onerror = noOp) {\n        if (isString(url)) {\n            // don't include the baseUrl if the url is a base64 encoded sound\n            if (this.baseUrl && url.trim().substring(0, 11).toLowerCase() === \"data:audio/\") {\n                this.baseUrl = \"\";\n            }\n            this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n        }\n        else {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n        }\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._buffers.forEach(buffer => buffer.dispose());\n        this._buffers.clear();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioBuffers.js.map","import { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\nexport class MidiClass extends FrequencyClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"MidiClass\";\n        this.defaultUnits = \"midi\";\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return ftom(super._frequencyToUnits(freq));\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ftom(super._ticksToUnits(ticks));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return ftom(super._beatsToUnits(beats));\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return ftom(super._secondsToUnits(seconds));\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toMidi(); // 60\n     */\n    toMidi() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toFrequency(); // 261.6255653005986\n     */\n    toFrequency() {\n        return mtof(this.toMidi());\n    }\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return A new transposed MidiClass\n     * @example\n     * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new MidiClass(this.context, this.toMidi() + interval);\n    }\n}\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Midi(value, units) {\n    return new MidiClass(getContext(), value, units);\n}\n//# sourceMappingURL=Midi.js.map","import { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Ticks\";\n        this.defaultUnits = \"i\";\n    }\n    /**\n     * Get the current time in the given units\n     */\n    _now() {\n        return this.context.transport.ticks;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return this._getPPQ() * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ticks;\n    }\n    /**\n     * Return the time in ticks\n     */\n    toTicks() {\n        return this.valueOf();\n    }\n    /**\n     * Return the time in seconds\n     */\n    toSeconds() {\n        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n    }\n}\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value, units) {\n    return new TicksClass(getContext(), value, units);\n}\n//# sourceMappingURL=Ticks.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        this.name = \"Draw\";\n        /**\n         * The duration after which events are not invoked.\n         */\n        this.expiration = 0.25;\n        /**\n         * The amount of time before the scheduled time\n         * that the callback can be invoked. Default is\n         * half the time of an animation frame (0.008 seconds).\n         */\n        this.anticipation = 0.008;\n        /**\n         * All of the events.\n         */\n        this._events = new Timeline();\n        /**\n         * The draw loop\n         */\n        this._boundDrawLoop = this._drawLoop.bind(this);\n        /**\n         * The animation frame id\n         */\n        this._animationFrame = -1;\n    }\n    /**\n     * Schedule a function at the given time to be invoked\n     * on the nearest animation frame.\n     * @param  callback  Callback is invoked at the given time.\n     * @param  time      The time relative to the AudioContext time to invoke the callback.\n     * @example\n     * Tone.Transport.scheduleRepeat(time => {\n     * \tTone.Draw.schedule(() => console.log(time), time);\n     * }, 1);\n     * Tone.Transport.start();\n     */\n    schedule(callback, time) {\n        this._events.add({\n            callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    }\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    cancel(after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * The draw loop\n     */\n    _drawLoop() {\n        const now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            const event = this._events.shift();\n            if (event && now - event.time <= this.expiration) {\n                event.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.draw = new Draw({ context });\n});\nonContextClose(context => {\n    context.draw.dispose();\n});\n//# sourceMappingURL=Draw.js.map","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"IntervalTimeline\";\n        /**\n         * The root node of the inteval tree\n         */\n        this._root = null;\n        /**\n         * Keep track of the length of the timeline.\n         */\n        this._length = 0;\n    }\n    /**\n     * The event to add to the timeline. All events must\n     * have a time and duration value\n     * @param  event  The event to add to the timeline\n     */\n    add(event) {\n        assert(isDefined(event.time), \"Events must have a time property\");\n        assert(isDefined(event.duration), \"Events must have a duration parameter\");\n        event.time = event.time.valueOf();\n        let node = new IntervalNode(event.time, event.time + event.duration, event);\n        if (this._root === null) {\n            this._root = node;\n        }\n        else {\n            this._root.insert(node);\n        }\n        this._length++;\n        // Restructure tree to be balanced\n        while (node !== null) {\n            node.updateHeight();\n            node.updateMax();\n            this._rebalance(node);\n            node = node.parent;\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  event  The event to remove from the timeline\n     */\n    remove(event) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(event.time, results);\n            for (const node of results) {\n                if (node.event === event) {\n                    this._removeNode(node);\n                    this._length--;\n                    break;\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of items in the timeline.\n     * @readOnly\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * Remove events whose time time is after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        this.forEachFrom(after, event => this.remove(event));\n        return this;\n    }\n    /**\n     * Set the root node as the given node\n     */\n    _setRoot(node) {\n        this._root = node;\n        if (this._root !== null) {\n            this._root.parent = null;\n        }\n    }\n    /**\n     * Replace the references to the node in the node's parent\n     * with the replacement node.\n     */\n    _replaceNodeInParent(node, replacement) {\n        if (node.parent !== null) {\n            if (node.isLeftChild()) {\n                node.parent.left = replacement;\n            }\n            else {\n                node.parent.right = replacement;\n            }\n            this._rebalance(node.parent);\n        }\n        else {\n            this._setRoot(replacement);\n        }\n    }\n    /**\n     * Remove the node from the tree and replace it with\n     * a successor which follows the schema.\n     */\n    _removeNode(node) {\n        if (node.left === null && node.right === null) {\n            this._replaceNodeInParent(node, null);\n        }\n        else if (node.right === null) {\n            this._replaceNodeInParent(node, node.left);\n        }\n        else if (node.left === null) {\n            this._replaceNodeInParent(node, node.right);\n        }\n        else {\n            const balance = node.getBalance();\n            let replacement;\n            let temp = null;\n            if (balance > 0) {\n                if (node.left.right === null) {\n                    replacement = node.left;\n                    replacement.right = node.right;\n                    temp = replacement;\n                }\n                else {\n                    replacement = node.left.right;\n                    while (replacement.right !== null) {\n                        replacement = replacement.right;\n                    }\n                    if (replacement.parent) {\n                        replacement.parent.right = replacement.left;\n                        temp = replacement.parent;\n                        replacement.left = node.left;\n                        replacement.right = node.right;\n                    }\n                }\n            }\n            else if (node.right.left === null) {\n                replacement = node.right;\n                replacement.left = node.left;\n                temp = replacement;\n            }\n            else {\n                replacement = node.right.left;\n                while (replacement.left !== null) {\n                    replacement = replacement.left;\n                }\n                if (replacement.parent) {\n                    replacement.parent.left = replacement.right;\n                    temp = replacement.parent;\n                    replacement.left = node.left;\n                    replacement.right = node.right;\n                }\n            }\n            if (node.parent !== null) {\n                if (node.isLeftChild()) {\n                    node.parent.left = replacement;\n                }\n                else {\n                    node.parent.right = replacement;\n                }\n            }\n            else {\n                this._setRoot(replacement);\n            }\n            if (temp) {\n                this._rebalance(temp);\n            }\n        }\n        node.dispose();\n    }\n    /**\n     * Rotate the tree to the left\n     */\n    _rotateLeft(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.right the new root of this sub tree (instead of node)\n        const pivotNode = node.right;\n        if (pivotNode) {\n            node.right = pivotNode.left;\n            pivotNode.left = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Rotate the tree to the right\n     */\n    _rotateRight(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.left the new root of this sub tree (instead of node)\n        const pivotNode = node.left;\n        if (pivotNode) {\n            node.left = pivotNode.right;\n            pivotNode.right = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Balance the BST\n     */\n    _rebalance(node) {\n        const balance = node.getBalance();\n        if (balance > 1 && node.left) {\n            if (node.left.getBalance() < 0) {\n                this._rotateLeft(node.left);\n            }\n            else {\n                this._rotateRight(node);\n            }\n        }\n        else if (balance < -1 && node.right) {\n            if (node.right.getBalance() > 0) {\n                this._rotateRight(node.right);\n            }\n            else {\n                this._rotateLeft(node);\n            }\n        }\n    }\n    /**\n     * Get an event whose time and duration span the give time. Will\n     * return the match whose \"time\" value is closest to the given time.\n     * @return  The event which spans the desired time\n     */\n    get(time) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            if (results.length > 0) {\n                let max = results[0];\n                for (let i = 1; i < results.length; i++) {\n                    if (results[i].low > max.low) {\n                        max = results[i];\n                    }\n                }\n                return max.event;\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterate over everything in the timeline.\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        if (this._root !== null) {\n            const allNodes = [];\n            this._root.traverse(node => allNodes.push(node));\n            allNodes.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the given time\n     * overlaps with the time and duration time of the event.\n     * @param  time The time to check if items are overlapping\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the time is greater\n     * than or equal to the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.searchAfter(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        if (this._root !== null) {\n            this._root.traverse(node => node.dispose());\n        }\n        this._root = null;\n        return this;\n    }\n}\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n    constructor(low, high, event) {\n        // the nodes to the left\n        this._left = null;\n        // the nodes to the right\n        this._right = null;\n        // the parent node\n        this.parent = null;\n        // the number of child nodes\n        this.height = 0;\n        this.event = event;\n        // the low value\n        this.low = low;\n        // the high value\n        this.high = high;\n        // the high value for this and all child nodes\n        this.max = this.high;\n    }\n    /**\n     * Insert a node into the correct spot in the tree\n     */\n    insert(node) {\n        if (node.low <= this.low) {\n            if (this.left === null) {\n                this.left = node;\n            }\n            else {\n                this.left.insert(node);\n            }\n        }\n        else if (this.right === null) {\n            this.right = node;\n        }\n        else {\n            this.right.insert(node);\n        }\n    }\n    /**\n     * Search the tree for nodes which overlap\n     * with the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    search(point, results) {\n        // If p is to the right of the rightmost point of any interval\n        // in this node and all children, there won't be any matches.\n        if (point > this.max) {\n            return;\n        }\n        // Search left children\n        if (this.left !== null) {\n            this.left.search(point, results);\n        }\n        // Check this node\n        if (this.low <= point && this.high > point) {\n            results.push(this);\n        }\n        // If p is to the left of the time of this interval,\n        // then it can't be in any child to the right.\n        if (this.low > point) {\n            return;\n        }\n        // Search right children\n        if (this.right !== null) {\n            this.right.search(point, results);\n        }\n    }\n    /**\n     * Search the tree for nodes which are less\n     * than the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    searchAfter(point, results) {\n        // Check this node\n        if (this.low >= point) {\n            results.push(this);\n            if (this.left !== null) {\n                this.left.searchAfter(point, results);\n            }\n        }\n        // search the right side\n        if (this.right !== null) {\n            this.right.searchAfter(point, results);\n        }\n    }\n    /**\n     * Invoke the callback on this element and both it's branches\n     * @param  {Function}  callback\n     */\n    traverse(callback) {\n        callback(this);\n        if (this.left !== null) {\n            this.left.traverse(callback);\n        }\n        if (this.right !== null) {\n            this.right.traverse(callback);\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateHeight() {\n        if (this.left !== null && this.right !== null) {\n            this.height = Math.max(this.left.height, this.right.height) + 1;\n        }\n        else if (this.right !== null) {\n            this.height = this.right.height + 1;\n        }\n        else if (this.left !== null) {\n            this.height = this.left.height + 1;\n        }\n        else {\n            this.height = 0;\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateMax() {\n        this.max = this.high;\n        if (this.left !== null) {\n            this.max = Math.max(this.max, this.left.max);\n        }\n        if (this.right !== null) {\n            this.max = Math.max(this.max, this.right.max);\n        }\n    }\n    /**\n     * The balance is how the leafs are distributed on the node\n     * @return  Negative numbers are balanced to the right\n     */\n    getBalance() {\n        let balance = 0;\n        if (this.left !== null && this.right !== null) {\n            balance = this.left.height - this.right.height;\n        }\n        else if (this.left !== null) {\n            balance = this.left.height + 1;\n        }\n        else if (this.right !== null) {\n            balance = -(this.right.height + 1);\n        }\n        return balance;\n    }\n    /**\n     * @returns true if this node is the left child of its parent\n     */\n    isLeftChild() {\n        return this.parent !== null && this.parent.left === this;\n    }\n    /**\n     * get/set the left node\n     */\n    get left() {\n        return this._left;\n    }\n    set left(node) {\n        this._left = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * get/set the right node\n     */\n    get right() {\n        return this._right;\n    }\n    set right(node) {\n        this._right = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * null out references.\n     */\n    dispose() {\n        this.parent = null;\n        this._left = null;\n        this._right = null;\n        this.event = null;\n    }\n}\n//# sourceMappingURL=IntervalTimeline.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n        this.name = \"Volume\";\n        const options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n            gain: options.volume,\n            units: \"decibels\",\n        });\n        this.volume = this.output.gain;\n        readOnly(this, \"volume\");\n        this._unmutedVolume = options.volume;\n        // set the mute initially\n        this.mute = options.mute;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const vol = new Tone.Volume(-12).toDestination();\n     * const osc = new Tone.Oscillator().connect(vol).start();\n     * // mute the output\n     * vol.mute = true;\n     */\n    get mute() {\n        return this.volume.value === -Infinity;\n    }\n    set mute(mute) {\n        if (!this.mute && mute) {\n            this._unmutedVolume = this.volume.value;\n            // maybe it should ramp here?\n            this.volume.value = -Infinity;\n        }\n        else if (this.mute && !mute) {\n            this.volume.value = this._unmutedVolume;\n        }\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Volume.js.map","import { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.getDestination());\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Destination.getDefaults(), arguments));\n        this.name = \"Destination\";\n        this.input = new Volume({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        /**\n         * The volume of the master output in decibels. -Infinity is silent, and 0 is no change.\n         * @example\n         * const osc = new Tone.Oscillator().toDestination();\n         * osc.start();\n         * // ramp the volume down to silent over 10 seconds\n         * Tone.getDestination().volume.rampTo(-Infinity, 10);\n         */\n        this.volume = this.input.volume;\n        const options = optionsFromArguments(Destination.getDefaults(), arguments);\n        connectSeries(this.input, this.output, this.context.rawContext.destination);\n        this.mute = options.mute;\n        this._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const oscillator = new Tone.Oscillator().start().toDestination();\n     * setTimeout(() => {\n     * \t// mute the output\n     * \tTone.Destination.mute = true;\n     * }, 1000);\n     */\n    get mute() {\n        return this.input.mute;\n    }\n    set mute(mute) {\n        this.input.mute = mute;\n    }\n    /**\n     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n     * chained in the master effects chain.\n     * @param args All arguments will be connected in a row and the Master will be routed through it.\n     * @example\n     * // route all audio through a filter and compressor\n     * const lowpass = new Tone.Filter(800, \"lowpass\");\n     * const compressor = new Tone.Compressor(-18);\n     * Tone.Destination.chain(lowpass, compressor);\n     */\n    chain(...args) {\n        this.input.disconnect();\n        args.unshift(this.input);\n        args.push(this.output);\n        connectSeries(...args);\n        return this;\n    }\n    /**\n     * The maximum number of channels the system can output\n     * @example\n     * console.log(Tone.Destination.maxChannelCount);\n     */\n    get maxChannelCount() {\n        return this.context.rawContext.destination.maxChannelCount;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.destination = new Destination({ context });\n});\nonContextClose(context => {\n    context.destination.dispose();\n});\n//# sourceMappingURL=Destination.js.map","import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue extends Tone {\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    constructor(initialValue) {\n        super();\n        this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        this._timeline = new Timeline({ memory: 10 });\n        this._initialValue = initialValue;\n    }\n    /**\n     * Set the value at the given time\n     */\n    set(value, time) {\n        this._timeline.add({\n            value, time\n        });\n        return this;\n    }\n    /**\n     * Get the value at the given time\n     */\n    get(time) {\n        const event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    }\n}\n//# sourceMappingURL=TimelineValue.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport class SignalOperator extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n}\n//# sourceMappingURL=SignalOperator.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n        this.name = \"WaveShaper\";\n        /**\n         * the waveshaper node\n         */\n        this._shaper = this.context.createWaveShaper();\n        /**\n         * The input to the waveshaper node.\n         */\n        this.input = this._shaper;\n        /**\n         * The output from the waveshaper node\n         */\n        this.output = this._shaper;\n        const options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n        if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n            this.curve = Float32Array.from(options.mapping);\n        }\n        else if (isFunction(options.mapping)) {\n            this.setMap(options.mapping, options.length);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            length: 1024,\n        });\n    }\n    /**\n     * Uses a mapping function to set the value of the curve.\n     * @param mapping The function used to define the values.\n     *                The mapping function take two arguments:\n     *                the first is the value at the current position\n     *                which goes from -1 to 1 over the number of elements\n     *                in the curve array. The second argument is the array position.\n     * @example\n     * const shaper = new Tone.WaveShaper();\n     * // map the input signal from [-1, 1] to [0, 10]\n     * shaper.setMap((val, index) => (val + 1) * 5);\n     */\n    setMap(mapping, length = 1024) {\n        const array = new Float32Array(length);\n        for (let i = 0, len = length; i < len; i++) {\n            const normalized = (i / (len - 1)) * 2 - 1;\n            array[i] = mapping(normalized, i);\n        }\n        this.curve = array;\n        return this;\n    }\n    /**\n     * The array to set as the waveshaper curve. For linear curves\n     * array length does not make much difference, but for complex curves\n     * longer arrays will provide smoother interpolation.\n     */\n    get curve() {\n        return this._shaper.curve;\n    }\n    set curve(mapping) {\n        this._shaper.curve = mapping;\n    }\n    /**\n     * Specifies what type of oversampling (if any) should be used when\n     * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        const isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n        assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n        this._shaper.oversample = oversampling;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._shaper.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=WaveShaper.js.map","import { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * const pow = new Tone.Pow(2);\n * const sig = new Tone.Signal(0.5).connect(pow);\n * // output of pow is 0.25.\n * @category Signal\n */\nexport class Pow extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Pow\";\n        const options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n        this._exponentScaler = this.input = this.output = new WaveShaper({\n            context: this.context,\n            mapping: this._expFunc(options.value),\n            length: 8192,\n        });\n        this._exponent = options.value;\n    }\n    static getDefaults() {\n        return Object.assign(SignalOperator.getDefaults(), {\n            value: 1,\n        });\n    }\n    /**\n     * the function which maps the waveshaper\n     * @param exponent exponent value\n     */\n    _expFunc(exponent) {\n        return (val) => {\n            return Math.pow(Math.abs(val), exponent);\n        };\n    }\n    /**\n     * The value of the exponent.\n     */\n    get value() {\n        return this._exponent;\n    }\n    set value(exponent) {\n        this._exponent = exponent;\n        this._exponentScaler.setMap(this._expFunc(this._exponent));\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._exponentScaler.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Pow.js.map","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        /**\n         * The remaining value between the passed in time, and Math.floor(time).\n         * This value is later added back when scheduling to get sub-tick precision.\n         */\n        this._remainderTime = 0;\n        const options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = Math.floor(options.time);\n        this._remainderTime = options.time - this.time;\n    }\n    static getDefaults() {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    }\n    /**\n     * Get the time and remainder time.\n     */\n    get floatTime() {\n        return this.time + this._remainderTime;\n    }\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        if (this.callback) {\n            const tickDuration = this.transport.bpm.getDurationOfTicks(1, time);\n            this.callback(time + this._remainderTime * tickDuration);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this.callback = undefined;\n        return this;\n    }\n}\n/**\n * Current ID counter\n */\nTransportEvent._eventId = 0;\n//# sourceMappingURL=TransportEvent.js.map","import { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { GT, LT } from \"../util/Math\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        super(transport, opts);\n        /**\n         * The ID of the current timeline event\n         */\n        this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        this._nextTick = this.time;\n        /**\n         * a reference to the bound start method\n         */\n        this._boundRestart = this._restart.bind(this);\n        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        this.duration = options.duration;\n        this._interval = options.interval;\n        this._nextTick = options.time;\n        this.transport.on(\"start\", this._boundRestart);\n        this.transport.on(\"loopStart\", this._boundRestart);\n        this.transport.on(\"ticks\", this._boundRestart);\n        this.context = this.transport.context;\n        this._restart();\n    }\n    static getDefaults() {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    }\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        super.invoke(time);\n    }\n    /**\n     * Create an event on the transport on the nextTick\n     */\n    _createEvent() {\n        if (LT(this._nextTick, this.floatTime + this.duration)) {\n            return this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n        return -1;\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _createEvents(time) {\n        // schedule the next event\n        // const ticks = this.transport.getTicksAtTime(time);\n        // if the next tick is within the bounds set by \"duration\"\n        if (LT(this._nextTick + this._interval, this.floatTime + this.duration)) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    }\n    /**\n     * Re-compute the events when the transport time has changed from a start/ticks/loopStart event\n     */\n    _restart(time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        // start at the first event\n        this._nextTick = this.floatTime;\n        const ticks = this.transport.getTicksAtTime(time);\n        if (GT(ticks, this.time)) {\n            // the event is not being scheduled from the beginning and should be offset\n            this._nextTick = this.floatTime + Math.ceil((ticks - this.floatTime) / this._interval) * this._interval;\n        }\n        this._currentId = this._createEvent();\n        this._nextTick += this._interval;\n        this._nextId = this._createEvent();\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        this.transport.off(\"ticks\", this._boundRestart);\n        return this;\n    }\n}\n//# sourceMappingURL=TransportRepeatEvent.js.map","import { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { Pow } from \"../../signal/Pow\";\nimport { onContextClose, onContextInit, } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext, } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { enterScheduledCallback } from \"../util/Debug\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Transport.getDefaults(), arguments));\n        this.name = \"Transport\";\n        //-------------------------------------\n        // \tLOOPING\n        //-------------------------------------\n        /**\n         * If the transport loops or not.\n         */\n        this._loop = new TimelineValue(false);\n        /**\n         * The loop start position in ticks\n         */\n        this._loopStart = 0;\n        /**\n         * The loop end position in ticks\n         */\n        this._loopEnd = 0;\n        //-------------------------------------\n        // \tTIMELINE EVENTS\n        //-------------------------------------\n        /**\n         * All the events in an object to keep track by ID\n         */\n        this._scheduledEvents = {};\n        /**\n         * The scheduled events.\n         */\n        this._timeline = new Timeline();\n        /**\n         * Repeated events\n         */\n        this._repeatedEvents = new IntervalTimeline();\n        /**\n         * All of the synced Signals\n         */\n        this._syncedSignals = [];\n        /**\n         * The swing amount\n         */\n        this._swingAmount = 0;\n        const options = optionsFromArguments(Transport.getDefaults(), arguments);\n        // CLOCK/TEMPO\n        this._ppq = options.ppq;\n        this._clock = new Clock({\n            callback: this._processTick.bind(this),\n            context: this.context,\n            frequency: 0,\n            units: \"bpm\",\n        });\n        this._bindClockEvents();\n        this.bpm = this._clock.frequency;\n        this._clock.frequency.multiplier = options.ppq;\n        this.bpm.setValueAtTime(options.bpm, 0);\n        readOnly(this, \"bpm\");\n        this._timeSignature = options.timeSignature;\n        // SWING\n        this._swingTicks = options.ppq / 2; // 8n\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            bpm: 120,\n            loopEnd: \"4m\",\n            loopStart: 0,\n            ppq: 192,\n            swing: 0,\n            swingSubdivision: \"8n\",\n            timeSignature: 4,\n        });\n    }\n    //-------------------------------------\n    // \tTICKS\n    //-------------------------------------\n    /**\n     * called on every tick\n     * @param  tickTime clock relative tick time\n     */\n    _processTick(tickTime, ticks) {\n        // do the loop test\n        if (this._loop.get(tickTime)) {\n            if (ticks >= this._loopEnd) {\n                this.emit(\"loopEnd\", tickTime);\n                this._clock.setTicksAtTime(this._loopStart, tickTime);\n                ticks = this._loopStart;\n                this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n                this.emit(\"loop\", tickTime);\n            }\n        }\n        // handle swing\n        if (this._swingAmount > 0 &&\n            ticks % this._ppq !== 0 && // not on a downbeat\n            ticks % (this._swingTicks * 2) !== 0) {\n            // add some swing\n            const progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n            const amount = Math.sin(progress * Math.PI) * this._swingAmount;\n            tickTime +=\n                new TicksClass(this.context, (this._swingTicks * 2) / 3).toSeconds() * amount;\n        }\n        // invoke the timeline events scheduled on this tick\n        enterScheduledCallback(true);\n        this._timeline.forEachAtTime(ticks, (event) => event.invoke(tickTime));\n        enterScheduledCallback(false);\n    }\n    //-------------------------------------\n    // \tSCHEDULABLE EVENTS\n    //-------------------------------------\n    /**\n     * Schedule an event along the timeline.\n     * @param callback The callback to be invoked at the time.\n     * @param time The time to invoke the callback at.\n     * @return The id of the event which can be used for canceling the event.\n     * @example\n     * // schedule an event on the 16th measure\n     * Tone.Transport.schedule((time) => {\n     * \t// invoked on measure 16\n     * \tconsole.log(\"measure 16!\");\n     * }, \"16:0:0\");\n     */\n    schedule(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Schedule a repeated event along the timeline. The event will fire\n     * at the `interval` starting at the `startTime` and for the specified\n     * `duration`.\n     * @param  callback   The callback to invoke.\n     * @param  interval   The duration between successive callbacks. Must be a positive number.\n     * @param  startTime  When along the timeline the events should start being invoked.\n     * @param  duration How long the event should repeat.\n     * @return  The ID of the scheduled event. Use this to cancel the event.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // a callback invoked every eighth note after the first measure\n     * Tone.Transport.scheduleRepeat((time) => {\n     * \tosc.start(time).stop(time + 0.1);\n     * }, \"8n\", \"1m\");\n     */\n    scheduleRepeat(callback, interval, startTime, duration = Infinity) {\n        const event = new TransportRepeatEvent(this, {\n            callback,\n            duration: new TimeClass(this.context, duration).toTicks(),\n            interval: new TimeClass(this.context, interval).toTicks(),\n            time: new TransportTimeClass(this.context, startTime).toTicks(),\n        });\n        // kick it off if the Transport is started\n        // @ts-ignore\n        return this._addEvent(event, this._repeatedEvents);\n    }\n    /**\n     * Schedule an event that will be removed after it is invoked.\n     * @param callback The callback to invoke once.\n     * @param time The time the callback should be invoked.\n     * @returns The ID of the scheduled event.\n     */\n    scheduleOnce(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            once: true,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Clear the passed in event id from the timeline\n     * @param eventId The id of the event.\n     */\n    clear(eventId) {\n        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n            const item = this._scheduledEvents[eventId.toString()];\n            item.timeline.remove(item.event);\n            item.event.dispose();\n            delete this._scheduledEvents[eventId.toString()];\n        }\n        return this;\n    }\n    /**\n     * Add an event to the correct timeline. Keep track of the\n     * timeline it was added to.\n     * @returns the event id which was just added\n     */\n    _addEvent(event, timeline) {\n        this._scheduledEvents[event.id.toString()] = {\n            event,\n            timeline,\n        };\n        timeline.add(event);\n        return event.id;\n    }\n    /**\n     * Remove scheduled events from the timeline after\n     * the given time. Repeated events will be removed\n     * if their startTime is after the given time\n     * @param after Clear all events after this time.\n     */\n    cancel(after = 0) {\n        const computedAfter = this.toTicks(after);\n        this._timeline.forEachFrom(computedAfter, (event) => this.clear(event.id));\n        this._repeatedEvents.forEachFrom(computedAfter, (event) => this.clear(event.id));\n        return this;\n    }\n    //-------------------------------------\n    // \tSTART/STOP/PAUSE\n    //-------------------------------------\n    /**\n     * Bind start/stop/pause events from the clock and emit them.\n     */\n    _bindClockEvents() {\n        this._clock.on(\"start\", (time, offset) => {\n            offset = new TicksClass(this.context, offset).toSeconds();\n            this.emit(\"start\", time, offset);\n        });\n        this._clock.on(\"stop\", (time) => {\n            this.emit(\"stop\", time);\n        });\n        this._clock.on(\"pause\", (time) => {\n            this.emit(\"pause\", time);\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n     */\n    get state() {\n        return this._clock.getStateAtTime(this.now());\n    }\n    /**\n     * Start the transport and all sources synced to the transport.\n     * @param  time The time when the transport should start.\n     * @param  offset The timeline offset to start the transport.\n     * @example\n     * // start the transport in one second starting at beginning of the 5th measure.\n     * Tone.Transport.start(\"+1\", \"4:0:0\");\n     */\n    start(time, offset) {\n        // start the context\n        this.context.resume();\n        let offsetTicks;\n        if (isDefined(offset)) {\n            offsetTicks = this.toTicks(offset);\n        }\n        // start the clock\n        this._clock.start(time, offsetTicks);\n        return this;\n    }\n    /**\n     * Stop the transport and all sources synced to the transport.\n     * @param time The time when the transport should stop.\n     * @example\n     * Tone.Transport.stop();\n     */\n    stop(time) {\n        this._clock.stop(time);\n        return this;\n    }\n    /**\n     * Pause the transport and all sources synced to the transport.\n     */\n    pause(time) {\n        this._clock.pause(time);\n        return this;\n    }\n    /**\n     * Toggle the current state of the transport. If it is\n     * started, it will stop it, otherwise it will start the Transport.\n     * @param  time The time of the event\n     */\n    toggle(time) {\n        time = this.toSeconds(time);\n        if (this._clock.getStateAtTime(time) !== \"started\") {\n            this.start(time);\n        }\n        else {\n            this.stop(time);\n        }\n        return this;\n    }\n    //-------------------------------------\n    // \tSETTERS/GETTERS\n    //-------------------------------------\n    /**\n     * The time signature as just the numerator over 4.\n     * For example 4/4 would be just 4 and 6/8 would be 3.\n     * @example\n     * // common time\n     * Tone.Transport.timeSignature = 4;\n     * // 7/8\n     * Tone.Transport.timeSignature = [7, 8];\n     * // this will be reduced to a single number\n     * Tone.Transport.timeSignature; // returns 3.5\n     */\n    get timeSignature() {\n        return this._timeSignature;\n    }\n    set timeSignature(timeSig) {\n        if (isArray(timeSig)) {\n            timeSig = (timeSig[0] / timeSig[1]) * 4;\n        }\n        this._timeSignature = timeSig;\n    }\n    /**\n     * When the Transport.loop = true, this is the starting position of the loop.\n     */\n    get loopStart() {\n        return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n    }\n    set loopStart(startPosition) {\n        this._loopStart = this.toTicks(startPosition);\n    }\n    /**\n     * When the Transport.loop = true, this is the ending position of the loop.\n     */\n    get loopEnd() {\n        return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n    }\n    set loopEnd(endPosition) {\n        this._loopEnd = this.toTicks(endPosition);\n    }\n    /**\n     * If the transport loops or not.\n     */\n    get loop() {\n        return this._loop.get(this.now());\n    }\n    set loop(loop) {\n        this._loop.set(loop, this.now());\n    }\n    /**\n     * Set the loop start and stop at the same time.\n     * @example\n     * // loop over the first measure\n     * Tone.Transport.setLoopPoints(0, \"1m\");\n     * Tone.Transport.loop = true;\n     */\n    setLoopPoints(startPosition, endPosition) {\n        this.loopStart = startPosition;\n        this.loopEnd = endPosition;\n        return this;\n    }\n    /**\n     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n     */\n    get swing() {\n        return this._swingAmount;\n    }\n    set swing(amount) {\n        // scale the values to a normal range\n        this._swingAmount = amount;\n    }\n    /**\n     * Set the subdivision which the swing will be applied to.\n     * The default value is an 8th note. Value must be less\n     * than a quarter note.\n     */\n    get swingSubdivision() {\n        return new TicksClass(this.context, this._swingTicks).toNotation();\n    }\n    set swingSubdivision(subdivision) {\n        this._swingTicks = this.toTicks(subdivision);\n    }\n    /**\n     * The Transport's position in Bars:Beats:Sixteenths.\n     * Setting the value will jump to that position right away.\n     */\n    get position() {\n        const now = this.now();\n        const ticks = this._clock.getTicksAtTime(now);\n        return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n    }\n    set position(progress) {\n        const ticks = this.toTicks(progress);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's position in seconds.\n     * Setting the value will jump to that position right away.\n     */\n    get seconds() {\n        return this._clock.seconds;\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this._clock.frequency.timeToTicks(s, now);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's loop position as a normalized value. Always\n     * returns 0 if the Transport.loop = false.\n     */\n    get progress() {\n        if (this.loop) {\n            const now = this.now();\n            const ticks = this._clock.getTicksAtTime(now);\n            return ((ticks - this._loopStart) / (this._loopEnd - this._loopStart));\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The Transport's current tick position.\n     */\n    get ticks() {\n        return this._clock.ticks;\n    }\n    set ticks(t) {\n        if (this._clock.ticks !== t) {\n            const now = this.now();\n            // stop everything synced to the transport\n            if (this.state === \"started\") {\n                const ticks = this._clock.getTicksAtTime(now);\n                // schedule to start on the next tick, #573\n                const remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);\n                const time = now + remainingTick;\n                this.emit(\"stop\", time);\n                this._clock.setTicksAtTime(t, time);\n                // restart it with the new time\n                this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n            }\n            else {\n                this.emit(\"ticks\", now);\n                this._clock.setTicksAtTime(t, now);\n            }\n        }\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return this._clock.getTicksAtTime(time);\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._clock.getSecondsAtTime(time);\n    }\n    /**\n     * Pulses Per Quarter note. This is the smallest resolution\n     * the Transport timing supports. This should be set once\n     * on initialization and not set again. Changing this value\n     * after other objects have been created can cause problems.\n     */\n    get PPQ() {\n        return this._clock.frequency.multiplier;\n    }\n    set PPQ(ppq) {\n        this._clock.frequency.multiplier = ppq;\n    }\n    //-------------------------------------\n    // \tSYNCING\n    //-------------------------------------\n    /**\n     * Returns the time aligned to the next subdivision\n     * of the Transport. If the Transport is not started,\n     * it will return 0.\n     * Note: this will not work precisely during tempo ramps.\n     * @param  subdivision  The subdivision to quantize to\n     * @return  The context time of the next subdivision.\n     * @example\n     * // the transport must be started, otherwise returns 0\n     * Tone.Transport.start();\n     * Tone.Transport.nextSubdivision(\"4n\");\n     */\n    nextSubdivision(subdivision) {\n        subdivision = this.toTicks(subdivision);\n        if (this.state !== \"started\") {\n            // if the transport's not started, return 0\n            return 0;\n        }\n        else {\n            const now = this.now();\n            // the remainder of the current ticks and the subdivision\n            const transportPos = this.getTicksAtTime(now);\n            const remainingTicks = subdivision - (transportPos % subdivision);\n            return this._clock.nextTickTime(remainingTicks, now);\n        }\n    }\n    /**\n     * Attaches the signal to the tempo control signal so that\n     * any changes in the tempo will change the signal in the same\n     * ratio.\n     *\n     * @param signal\n     * @param ratio Optionally pass in the ratio between the two signals.\n     * \t\t\tOtherwise it will be computed based on their current values.\n     */\n    syncSignal(signal, ratio) {\n        const now = this.now();\n        let source = this.bpm;\n        let sourceValue = 1 / (60 / source.getValueAtTime(now) / this.PPQ);\n        let nodes = [];\n        // If the signal is in the time domain, sync it to the reciprocal of\n        // the tempo instead of the tempo.\n        if (signal.units === \"time\") {\n            // The input to Pow should be in the range [1 / 4096, 1], where\n            // where 4096 is half of the buffer size of Pow's waveshaper.\n            // Pick a scaling factor based on the initial tempo that ensures\n            // that the initial input is in this range, while leaving room for\n            // tempo changes.\n            const scaleFactor = 1 / 64 / sourceValue;\n            const scaleBefore = new Gain(scaleFactor);\n            const reciprocal = new Pow(-1);\n            const scaleAfter = new Gain(scaleFactor);\n            // @ts-ignore\n            source.chain(scaleBefore, reciprocal, scaleAfter);\n            source = scaleAfter;\n            sourceValue = 1 / sourceValue;\n            nodes = [scaleBefore, reciprocal, scaleAfter];\n        }\n        if (!ratio) {\n            // get the sync ratio\n            if (signal.getValueAtTime(now) !== 0) {\n                ratio = signal.getValueAtTime(now) / sourceValue;\n            }\n            else {\n                ratio = 0;\n            }\n        }\n        const ratioSignal = new Gain(ratio);\n        // @ts-ignore\n        source.connect(ratioSignal);\n        // @ts-ignore\n        ratioSignal.connect(signal._param);\n        nodes.push(ratioSignal);\n        this._syncedSignals.push({\n            initial: signal.value,\n            nodes: nodes,\n            signal,\n        });\n        signal.value = 0;\n        return this;\n    }\n    /**\n     * Unsyncs a previously synced signal from the transport's control.\n     * See Transport.syncSignal.\n     */\n    unsyncSignal(signal) {\n        for (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n            const syncedSignal = this._syncedSignals[i];\n            if (syncedSignal.signal === signal) {\n                syncedSignal.nodes.forEach((node) => node.dispose());\n                syncedSignal.signal.value = syncedSignal.initial;\n                this._syncedSignals.splice(i, 1);\n            }\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._clock.dispose();\n        writable(this, \"bpm\");\n        this._timeline.dispose();\n        this._repeatedEvents.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Transport);\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit((context) => {\n    context.transport = new Transport({ context });\n});\nonContextClose((context) => {\n    context.transport.dispose();\n});\n//# sourceMappingURL=Transport.js.map","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode, } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline, } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport class Source extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * Sources have no inputs\n         */\n        this.input = undefined;\n        /**\n         * Keep track of the scheduled state.\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * The synced `start` callback function from the transport\n         */\n        this._synced = false;\n        /**\n         * Keep track of all of the scheduled event ids\n         */\n        this._scheduled = [];\n        /**\n         * Placeholder functions for syncing/unsyncing to transport\n         */\n        this._syncedStart = noOp;\n        this._syncedStop = noOp;\n        this._state.memory = 100;\n        this._state.increasing = true;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            mute: options.mute,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this.onstop = options.onstop;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            onstop: noOp,\n            volume: 0,\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/ahntone_c3.mp3\", () => {\n     * \tplayer.start();\n     * \tconsole.log(player.state);\n     * }).toDestination();\n     */\n    get state() {\n        if (this._synced) {\n            if (this.context.transport.state === \"started\") {\n                return this._state.getValueAtTime(this.context.transport.seconds);\n            }\n            else {\n                return \"stopped\";\n            }\n        }\n        else {\n            return this._state.getValueAtTime(this.now());\n        }\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // mute the output\n     * osc.mute = true;\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    /**\n     * Ensure that the scheduled time is not before the current time.\n     * Should only be used when scheduled unsynced.\n     */\n    _clampToCurrentTime(time) {\n        if (this._synced) {\n            return time;\n        }\n        else {\n            return Math.max(time, this.context.currentTime);\n        }\n    }\n    /**\n     * Start the source at the specified time. If no time is given,\n     * start the source now.\n     * @param  time When the source should be started.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n     */\n    start(time, offset, duration) {\n        let computedTime = isUndef(time) && this._synced\n            ? this.context.transport.seconds\n            : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        // if it's started, stop it and restart it\n        if (!this._synced &&\n            this._state.getValueAtTime(computedTime) === \"started\") {\n            // time should be strictly greater than the previous start time\n            assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            this.log(\"restart\", computedTime);\n            this.restart(computedTime, offset, duration);\n        }\n        else {\n            this.log(\"start\", computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (this._synced) {\n                // add the offset time to the event\n                const event = this._state.get(computedTime);\n                if (event) {\n                    event.offset = this.toSeconds(defaultArg(offset, 0));\n                    event.duration = duration\n                        ? this.toSeconds(duration)\n                        : undefined;\n                }\n                const sched = this.context.transport.schedule((t) => {\n                    this._start(t, offset, duration);\n                }, computedTime);\n                this._scheduled.push(sched);\n                // if the transport is already started\n                // and the time is greater than where the transport is\n                if (this.context.transport.state === \"started\" &&\n                    this.context.transport.getSecondsAtTime(this.immediate()) >\n                        computedTime) {\n                    this._syncedStart(this.now(), this.context.transport.seconds);\n                }\n            }\n            else {\n                assertContextRunning(this.context);\n                this._start(computedTime, offset, duration);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the source at the specified time. If no time is given,\n     * stop the source now.\n     * @param  time When the source should be stopped.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start();\n     * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n     */\n    stop(time) {\n        let computedTime = isUndef(time) && this._synced\n            ? this.context.transport.seconds\n            : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        if (this._state.getValueAtTime(computedTime) === \"started\" ||\n            isDefined(this._state.getNextState(\"started\", computedTime))) {\n            this.log(\"stop\", computedTime);\n            if (!this._synced) {\n                this._stop(computedTime);\n            }\n            else {\n                const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n                this._scheduled.push(sched);\n            }\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"stopped\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Restart the source.\n     */\n    restart(time, offset, duration) {\n        time = this.toSeconds(time);\n        if (this._state.getValueAtTime(time) === \"started\") {\n            this._state.cancel(time);\n            this._restart(time, offset, duration);\n        }\n        return this;\n    }\n    /**\n     * Sync the source to the Transport so that all subsequent\n     * calls to `start` and `stop` are synced to the TransportTime\n     * instead of the AudioContext time.\n     *\n     * @example\n     * const osc = new Tone.Oscillator().toDestination();\n     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n     * osc.sync().start(0).stop(0.3);\n     * // start the transport.\n     * Tone.Transport.start();\n     * // set it to loop once a second\n     * Tone.Transport.loop = true;\n     * Tone.Transport.loopEnd = 1;\n     */\n    sync() {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncedStart = (time, offset) => {\n                if (GT(offset, 0)) {\n                    // get the playback state at that time\n                    const stateEvent = this._state.get(offset);\n                    // listen for start events which may occur in the middle of the sync'ed time\n                    if (stateEvent &&\n                        stateEvent.state === \"started\" &&\n                        stateEvent.time !== offset) {\n                        // get the offset\n                        const startOffset = offset - this.toSeconds(stateEvent.time);\n                        let duration;\n                        if (stateEvent.duration) {\n                            duration =\n                                this.toSeconds(stateEvent.duration) -\n                                    startOffset;\n                        }\n                        this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n                    }\n                }\n            };\n            this._syncedStop = (time) => {\n                const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n                if (this._state.getValueAtTime(seconds) === \"started\") {\n                    this._stop(time);\n                }\n            };\n            this.context.transport.on(\"start\", this._syncedStart);\n            this.context.transport.on(\"loopStart\", this._syncedStart);\n            this.context.transport.on(\"stop\", this._syncedStop);\n            this.context.transport.on(\"pause\", this._syncedStop);\n            this.context.transport.on(\"loopEnd\", this._syncedStop);\n        }\n        return this;\n    }\n    /**\n     * Unsync the source to the Transport. See Source.sync\n     */\n    unsync() {\n        if (this._synced) {\n            this.context.transport.off(\"stop\", this._syncedStop);\n            this.context.transport.off(\"pause\", this._syncedStop);\n            this.context.transport.off(\"loopEnd\", this._syncedStop);\n            this.context.transport.off(\"start\", this._syncedStart);\n            this.context.transport.off(\"loopStart\", this._syncedStart);\n        }\n        this._synced = false;\n        // clear all of the scheduled ids\n        this._scheduled.forEach((id) => this.context.transport.clear(id));\n        this._scheduled = [];\n        this._state.cancel(0);\n        // stop it also\n        this._stop(0);\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.onstop = noOp;\n        this.unsync();\n        this._volume.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Source.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"ToneBufferSource\";\n        /**\n         * The oscillator\n         */\n        this._source = this.context.createBufferSource();\n        this._internalChannels = [this._source];\n        /**\n         * indicators if the source has started/stopped\n         */\n        this._sourceStarted = false;\n        this._sourceStopped = false;\n        const options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n        connect(this._source, this._gainNode);\n        this._source.onended = () => this._stopSource();\n        /**\n         * The playbackRate of the buffer\n         */\n        this.playbackRate = new Param({\n            context: this.context,\n            param: this._source.playbackRate,\n            units: \"positive\",\n            value: options.playbackRate,\n        });\n        // set some values initially\n        this.loop = options.loop;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n        this._internalChannels.push(this._source);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            url: new ToneAudioBuffer(),\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n        });\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(t) {\n        this._fadeIn = t;\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(t) {\n        this._fadeOut = t;\n    }\n    /**\n     * The curve applied to the fades, either \"linear\" or \"exponential\"\n     */\n    get curve() {\n        return this._curve;\n    }\n    set curve(t) {\n        this._curve = t;\n    }\n    /**\n     * Start the buffer\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     * @param  gain  The gain to play the buffer back at.\n     */\n    start(time, offset, duration, gain = 1) {\n        assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n        const computedTime = this.toSeconds(time);\n        // apply the gain envelope\n        this._startGain(computedTime, gain);\n        // if it's a loop the default offset is the loopstart point\n        if (this.loop) {\n            offset = defaultArg(offset, this.loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // make sure the offset is not less than 0\n        let computedOffset = Math.max(this.toSeconds(offset), 0);\n        // start the buffer source\n        if (this.loop) {\n            // modify the offset if it's greater than the loop time\n            const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n            const loopStart = this.toSeconds(this.loopStart);\n            const loopDuration = loopEnd - loopStart;\n            // move the offset back\n            if (GTE(computedOffset, loopEnd)) {\n                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n            }\n            // when the offset is very close to the duration, set it to 0\n            if (EQ(computedOffset, this.buffer.duration)) {\n                computedOffset = 0;\n            }\n        }\n        // this.buffer.loaded would have return false if the AudioBuffer was undefined\n        this._source.buffer = this.buffer.get();\n        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n        if (LT(computedOffset, this.buffer.duration)) {\n            this._sourceStarted = true;\n            this._source.start(computedTime, computedOffset);\n        }\n        // if a duration is given, schedule a stop\n        if (isDefined(duration)) {\n            let computedDur = this.toSeconds(duration);\n            // make sure it's never negative\n            computedDur = Math.max(computedDur, 0);\n            this.stop(computedTime + computedDur);\n        }\n        return this;\n    }\n    _stopSource(time) {\n        if (!this._sourceStopped && this._sourceStarted) {\n            this._sourceStopped = true;\n            this._source.stop(this.toSeconds(time));\n            this._onended();\n        }\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._source.loopStart;\n    }\n    set loopStart(loopStart) {\n        this._source.loopStart = this.toSeconds(loopStart);\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._source.loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._source.loopEnd = this.toSeconds(loopEnd);\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get loop() {\n        return this._source.loop;\n    }\n    set loop(loop) {\n        this._source.loop = loop;\n        if (this._sourceStarted) {\n            this.cancelStop();\n        }\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._source.onended = null;\n        this._source.disconnect();\n        this._buffer.dispose();\n        this.playbackRate.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneBufferSource.js.map","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\nexport class Noise extends Source {\n    constructor() {\n        super(optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]));\n        this.name = \"Noise\";\n        /**\n         * Private reference to the source\n         */\n        this._source = null;\n        const options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n        this._playbackRate = options.playbackRate;\n        this.type = options.type;\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            fadeIn: 0,\n            fadeOut: 0,\n            playbackRate: 1,\n            type: \"white\",\n        });\n    }\n    /**\n     * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n     * @example\n     * const noise = new Tone.Noise().toDestination().start();\n     * noise.type = \"brown\";\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n        if (this._type !== type) {\n            this._type = type;\n            // if it's playing, stop and restart it\n            if (this.state === \"started\") {\n                const now = this.now();\n                this._stop(now);\n                this._start(now);\n            }\n        }\n    }\n    /**\n     * The playback rate of the noise. Affects\n     * the \"frequency\" of the noise.\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        if (this._source) {\n            this._source.playbackRate.value = rate;\n        }\n    }\n    /**\n     * internal start method\n     */\n    _start(time) {\n        const buffer = _noiseBuffers[this._type];\n        this._source = new ToneBufferSource({\n            url: buffer,\n            context: this.context,\n            fadeIn: this._fadeIn,\n            fadeOut: this._fadeOut,\n            loop: true,\n            onended: () => this.onstop(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n    }\n    /**\n     * internal stop method\n     */\n    _stop(time) {\n        if (this._source) {\n            this._source.stop(this.toSeconds(time));\n            this._source = null;\n        }\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(time) {\n        this._fadeIn = time;\n        if (this._source) {\n            this._source.fadeIn = this._fadeIn;\n        }\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(time) {\n        this._fadeOut = time;\n        if (this._source) {\n            this._source.fadeOut = this._fadeOut;\n        }\n    }\n    _restart(time) {\n        // TODO could be optimized by cancelling the buffer source 'stop'\n        this._stop(time);\n        this._start(time);\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this._source) {\n            this._source.disconnect();\n        }\n        return this;\n    }\n}\n//--------------------\n// THE NOISE BUFFERS\n//--------------------\n// Noise buffer stats\nconst BUFFER_LENGTH = 44100 * 5;\nconst NUM_CHANNELS = 2;\n/**\n * Cache the noise buffers\n */\nconst _noiseCache = {\n    brown: null,\n    pink: null,\n    white: null,\n};\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nconst _noiseBuffers = {\n    get brown() {\n        if (!_noiseCache.brown) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                let lastOut = 0.0;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    const white = Math.random() * 2 - 1;\n                    channel[i] = (lastOut + (0.02 * white)) / 1.02;\n                    lastOut = channel[i];\n                    channel[i] *= 3.5; // (roughly) compensate for gain\n                }\n            }\n            _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.brown;\n    },\n    get pink() {\n        if (!_noiseCache.pink) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                let b0, b1, b2, b3, b4, b5, b6;\n                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    const white = Math.random() * 2 - 1;\n                    b0 = 0.99886 * b0 + white * 0.0555179;\n                    b1 = 0.99332 * b1 + white * 0.0750759;\n                    b2 = 0.96900 * b2 + white * 0.1538520;\n                    b3 = 0.86650 * b3 + white * 0.3104856;\n                    b4 = 0.55000 * b4 + white * 0.5329522;\n                    b5 = -0.7616 * b5 - white * 0.0168980;\n                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                    channel[i] *= 0.11; // (roughly) compensate for gain\n                    b6 = white * 0.115926;\n                }\n            }\n            _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.pink;\n    },\n    get white() {\n        if (!_noiseCache.white) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    channel[i] = Math.random() * 2 - 1;\n                }\n            }\n            _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.white;\n    },\n};\n//# sourceMappingURL=Noise.js.map","import { __awaiter } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport function generateWaveform(instance, length) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const duration = length / instance.context.sampleRate;\n        const context = new OfflineContext(1, duration, instance.context.sampleRate);\n        const clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context\n        })).toDestination();\n        clone.start(0);\n        const buffer = yield context.render();\n        return buffer.getChannelData(0);\n    });\n}\n//# sourceMappingURL=OscillatorInterface.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"ToneOscillatorNode\";\n        /**\n         * The oscillator\n         */\n        this._oscillator = this.context.createOscillator();\n        this._internalChannels = [this._oscillator];\n        const options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        connect(this._oscillator, this._gainNode);\n        this.type = options.type;\n        this.frequency = new Param({\n            context: this.context,\n            param: this._oscillator.frequency,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Param({\n            context: this.context,\n            param: this._oscillator.detune,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            type: \"sine\",\n        });\n    }\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._oscillator.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._oscillator.stop(time);\n    }\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n    setPeriodicWave(periodicWave) {\n        this._oscillator.setPeriodicWave(periodicWave);\n        return this;\n    }\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._oscillator.disconnect();\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneOscillatorNode.js.map","import { __awaiter } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"Oscillator\";\n        /**\n         * the main oscillator\n         */\n        this._oscillator = null;\n        const options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, \"detune\");\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        this._type = options.type;\n        if (options.partialCount && options.type !== \"custom\") {\n            this._type = this.baseType + options.partialCount.toString();\n        }\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            partialCount: 0,\n            partials: [],\n            phase: 0,\n            type: \"sine\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        const computedTime = this.toSeconds(time);\n        // new oscillator with previous values\n        const oscillator = new ToneOscillatorNode({\n            context: this.context,\n            onended: () => this.onstop(this),\n        });\n        this._oscillator = oscillator;\n        if (this._wave) {\n            this._oscillator.setPeriodicWave(this._wave);\n        }\n        else {\n            this._oscillator.type = this._type;\n        }\n        // connect the control signal to the oscillator frequency & detune\n        this._oscillator.connect(this.output);\n        this.frequency.connect(this._oscillator.frequency);\n        this.detune.connect(this._oscillator.detune);\n        // start the oscillator\n        this._oscillator.start(computedTime);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._oscillator) {\n            this._oscillator.stop(computedTime);\n        }\n    }\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n    _restart(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"restart\", computedTime);\n        if (this._oscillator) {\n            this._oscillator.cancelStop();\n        }\n        this._state.cancel(computedTime);\n        return this;\n    }\n    /**\n     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     * will also affect the oscillators frequency.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * osc.frequency.value = 440;\n     * // the ratio between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * // double the tempo\n     * Tone.Transport.bpm.value *= 2;\n     * // the frequency of the oscillator is doubled to 880\n     */\n    syncFrequency() {\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Unsync the oscillator's frequency from the Transport.\n     * See Oscillator.syncFrequency\n     */\n    unsyncFrequency() {\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Get a cached periodic wave. Avoids having to recompute\n     * the oscillator values when they have already been computed\n     * with the same values.\n     */\n    _getCachedPeriodicWave() {\n        if (this._type === \"custom\") {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.phase === this._phase &&\n                    deepEquals(description.partials, this._partials);\n            });\n            return oscProps;\n        }\n        else {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.type === this._type &&\n                    description.phase === this._phase;\n            });\n            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n            return oscProps;\n        }\n    }\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        const isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n        if (this._phase === 0 && isBasicType) {\n            this._wave = undefined;\n            this._partialCount = 0;\n            // just go with the basic approach\n            if (this._oscillator !== null) {\n                // already tested that it's a basic type\n                this._oscillator.type = type;\n            }\n        }\n        else {\n            // first check if the value is cached\n            const cache = this._getCachedPeriodicWave();\n            if (isDefined(cache)) {\n                const { partials, wave } = cache;\n                this._wave = wave;\n                this._partials = partials;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n            }\n            else {\n                const [real, imag] = this._getRealImaginary(type, this._phase);\n                const periodicWave = this.context.createPeriodicWave(real, imag);\n                this._wave = periodicWave;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n                // set the cache\n                Oscillator._periodicWaveCache.push({\n                    imag,\n                    partialCount: this._partialCount,\n                    partials: this._partials,\n                    phase: this._phase,\n                    real,\n                    type: this._type,\n                    wave: this._wave,\n                });\n                if (Oscillator._periodicWaveCache.length > 100) {\n                    Oscillator._periodicWaveCache.shift();\n                }\n            }\n        }\n    }\n    get baseType() {\n        return this._type.replace(this.partialCount.toString(), \"\");\n    }\n    set baseType(baseType) {\n        if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n            this.type = baseType + this.partialCount;\n        }\n        else {\n            this.type = baseType;\n        }\n    }\n    get partialCount() {\n        return this._partialCount;\n    }\n    set partialCount(p) {\n        assertRange(p, 0);\n        let type = this._type;\n        const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n        if (partial) {\n            type = partial[1];\n        }\n        if (this._type !== \"custom\") {\n            if (p === 0) {\n                this.type = type;\n            }\n            else {\n                this.type = type + p.toString();\n            }\n        }\n        else {\n            // extend or shorten the partials array\n            const fullPartials = new Float32Array(p);\n            // copy over the partials array\n            this._partials.forEach((v, i) => fullPartials[i] = v);\n            this._partials = Array.from(fullPartials);\n            this.type = this._type;\n        }\n    }\n    /**\n     * Returns the real and imaginary components based\n     * on the oscillator type.\n     * @returns [real: Float32Array, imaginary: Float32Array]\n     */\n    _getRealImaginary(type, phase) {\n        const fftSize = 4096;\n        let periodicWaveSize = fftSize / 2;\n        const real = new Float32Array(periodicWaveSize);\n        const imag = new Float32Array(periodicWaveSize);\n        let partialCount = 1;\n        if (type === \"custom\") {\n            partialCount = this._partials.length + 1;\n            this._partialCount = this._partials.length;\n            periodicWaveSize = partialCount;\n            // if the partial count is 0, don't bother doing any computation\n            if (this._partials.length === 0) {\n                return [real, imag];\n            }\n        }\n        else {\n            const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n            if (partial) {\n                partialCount = parseInt(partial[2], 10) + 1;\n                this._partialCount = parseInt(partial[2], 10);\n                type = partial[1];\n                partialCount = Math.max(partialCount, 2);\n                periodicWaveSize = partialCount;\n            }\n            else {\n                this._partialCount = 0;\n            }\n            this._partials = [];\n        }\n        for (let n = 1; n < periodicWaveSize; ++n) {\n            const piFactor = 2 / (n * Math.PI);\n            let b;\n            switch (type) {\n                case \"sine\":\n                    b = (n <= partialCount) ? 1 : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"square\":\n                    b = (n & 1) ? 2 * piFactor : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"sawtooth\":\n                    b = piFactor * ((n & 1) ? 1 : -1);\n                    this._partials[n - 1] = b;\n                    break;\n                case \"triangle\":\n                    if (n & 1) {\n                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n                    }\n                    else {\n                        b = 0;\n                    }\n                    this._partials[n - 1] = b;\n                    break;\n                case \"custom\":\n                    b = this._partials[n - 1];\n                    break;\n                default:\n                    throw new TypeError(\"Oscillator: invalid type: \" + type);\n            }\n            if (b !== 0) {\n                real[n] = -b * Math.sin(phase * n);\n                imag[n] = b * Math.cos(phase * n);\n            }\n            else {\n                real[n] = 0;\n                imag[n] = 0;\n            }\n        }\n        return [real, imag];\n    }\n    /**\n     * Compute the inverse FFT for a given phase.\n     */\n    _inverseFFT(real, imag, phase) {\n        let sum = 0;\n        const len = real.length;\n        for (let i = 0; i < len; i++) {\n            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n        }\n        return sum;\n    }\n    /**\n     * Returns the initial value of the oscillator when stopped.\n     * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n     */\n    getInitialValue() {\n        const [real, imag] = this._getRealImaginary(this._type, 0);\n        let maxValue = 0;\n        const twoPi = Math.PI * 2;\n        const testPositions = 32;\n        // check for peaks in 16 places\n        for (let i = 0; i < testPositions; i++) {\n            maxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n        }\n        return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n    }\n    get partials() {\n        return this._partials.slice(0, this.partialCount);\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this.type = \"custom\";\n        }\n    }\n    get phase() {\n        return this._phase * (180 / Math.PI);\n    }\n    set phase(phase) {\n        this._phase = phase * Math.PI / 180;\n        // reset the type\n        this.type = this._type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._oscillator !== null) {\n            this._oscillator.dispose();\n        }\n        this._wave = undefined;\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n/**\n * Cache the periodic waves to avoid having to redo computations\n */\nOscillator._periodicWaveCache = [];\n//# sourceMappingURL=Oscillator.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"AudioToGain\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => (x + 1) / 2,\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The GainRange output [0, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AudioToGain.js.map","import { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Multiply\";\n        /**\n         * Indicates if the value should be overridden on connection\n         */\n        this.override = false;\n        const options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n        this._mult = this.input = this.output = new Gain({\n            context: this.context,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this.factor = this._param = this._mult.gain;\n        this.factor.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Multiply.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * }, 0.2, 1);\n * @category Source\n */\nexport class AMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"AMOscillator\";\n        /**\n         * convert the -1,1 output to 0,1\n         */\n        this._modulationScale = new AudioToGain({ context: this.context });\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n        });\n        const options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.frequency = this._carrier.frequency,\n            this.detune = this._carrier.detune;\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        // connections\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n        this._carrier.chain(this._modulationNode, this.output);\n        readOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n    }\n    /**\n     * The type of the carrier oscillator\n     */\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this._modulationScale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst fmOsc = new Tone.FMOscillator({\n * \t\tfrequency: 200,\n * \t\ttype: \"square\",\n * \t\tmodulationType: \"triangle\",\n * \t\tharmonicity: 0.2,\n * \t\tmodulationIndex: 3\n * \t}).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class FMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"FMOscillator\";\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        const options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: 0,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.detune = this._carrier.detune;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        this.modulationIndex = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.modulationIndex,\n        });\n        // connections\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.frequency.chain(this.modulationIndex, this._modulationNode);\n        this._modulator.connect(this._modulationNode.gain);\n        this._modulationNode.connect(this._carrier.frequency);\n        this._carrier.connect(this.output);\n        this.detune.connect(this._modulator.detune);\n        readOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationIndex: 2,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    }\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PulseOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n        this.name = \"PulseOscillator\";\n        /**\n         * gate the width amount\n         */\n        this._widthGate = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * Threshold the signal to turn it into a square\n         */\n        this._thresh = new WaveShaper({\n            context: this.context,\n            mapping: val => val <= 0 ? -1 : 1,\n        });\n        const options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n        this.width = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: options.width,\n        });\n        this._triangle = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: \"triangle\",\n        });\n        this.frequency = this._triangle.frequency;\n        this.detune = this._triangle.detune;\n        // connections\n        this._triangle.chain(this._thresh, this.output);\n        this.width.chain(this._widthGate, this._thresh);\n        readOnly(this, [\"width\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            phase: 0,\n            type: \"pulse\",\n            width: 0.2,\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._triangle.start(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._triangle.stop(time);\n        // the width is still connected to the output.\n        // that needs to be stopped also\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(0, time);\n    }\n    _restart(time) {\n        this._triangle.restart(time);\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._triangle.phase;\n    }\n    set phase(phase) {\n        this._triangle.phase = phase;\n    }\n    /**\n     * The type of the oscillator. Always returns \"pulse\".\n     */\n    get type() {\n        return \"pulse\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pulse\".\n     */\n    get baseType() {\n        return \"pulse\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * *Internal use* The carrier oscillator type is fed through the\n     * waveshaper node to create the pulse. Using different carrier oscillators\n     * changes oscillator's behavior.\n     */\n    set carrierType(type) {\n        this._triangle.type = type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up method.\n     */\n    dispose() {\n        super.dispose();\n        this._triangle.dispose();\n        this.width.dispose();\n        this._widthGate.dispose();\n        this._thresh.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PulseOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n        this.name = \"FatOscillator\";\n        /**\n         * The array of oscillators\n         */\n        this._oscillators = [];\n        const options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this._spread = options.spread;\n        this._type = options.type;\n        this._phase = options.phase;\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        // set the count initially\n        this.count = options.count;\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            count: 3,\n            spread: 20,\n            type: \"sawtooth\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.start(time));\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.stop(time));\n    }\n    _restart(time) {\n        this._forEach(osc => osc.restart(time));\n    }\n    /**\n     * Iterate over all of the oscillators\n     */\n    _forEach(iterator) {\n        for (let i = 0; i < this._oscillators.length; i++) {\n            iterator(this._oscillators[i], i);\n        }\n    }\n    /**\n     * The type of the oscillator\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        this._forEach(osc => osc.type = type);\n    }\n    /**\n     * The detune spread between the oscillators. If \"count\" is\n     * set to 3 oscillators and the \"spread\" is set to 40,\n     * the three oscillators would be detuned like this: [-20, 0, 20]\n     * for a total detune spread of 40 cents.\n     * @example\n     * const fatOsc = new Tone.FatOscillator().toDestination().start();\n     * fatOsc.spread = 70;\n     */\n    get spread() {\n        return this._spread;\n    }\n    set spread(spread) {\n        this._spread = spread;\n        if (this._oscillators.length > 1) {\n            const start = -spread / 2;\n            const step = spread / (this._oscillators.length - 1);\n            this._forEach((osc, i) => osc.detune.value = start + step * i);\n        }\n    }\n    /**\n     * The number of detuned oscillators. Must be an integer greater than 1.\n     * @example\n     * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n     * // use 4 sawtooth oscillators\n     * fatOsc.count = 4;\n     */\n    get count() {\n        return this._oscillators.length;\n    }\n    set count(count) {\n        assertRange(count, 1);\n        if (this._oscillators.length !== count) {\n            // dispose the previous oscillators\n            this._forEach(osc => osc.dispose());\n            this._oscillators = [];\n            for (let i = 0; i < count; i++) {\n                const osc = new Oscillator({\n                    context: this.context,\n                    volume: -6 - count * 1.1,\n                    type: this._type,\n                    phase: this._phase + (i / count) * 360,\n                    partialCount: this._partialCount,\n                    onstop: i === 0 ? () => this.onstop(this) : noOp,\n                });\n                if (this.type === \"custom\") {\n                    osc.partials = this._partials;\n                }\n                this.frequency.connect(osc.frequency);\n                this.detune.connect(osc.detune);\n                osc.detune.overridden = false;\n                osc.connect(this.output);\n                this._oscillators[i] = osc;\n            }\n            // set the spread\n            this.spread = this._spread;\n            if (this.state === \"started\") {\n                this._forEach(osc => osc.start());\n            }\n        }\n    }\n    get phase() {\n        return this._phase;\n    }\n    set phase(phase) {\n        this._phase = phase;\n        this._forEach((osc, i) => osc.phase = this._phase + (i / this.count) * 360);\n    }\n    get baseType() {\n        return this._oscillators[0].baseType;\n    }\n    set baseType(baseType) {\n        this._forEach(osc => osc.baseType = baseType);\n        this._type = this._oscillators[0].type;\n    }\n    get partials() {\n        return this._oscillators[0].partials;\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this._type = \"custom\";\n            this._forEach(osc => osc.partials = partials);\n        }\n    }\n    get partialCount() {\n        return this._oscillators[0].partialCount;\n    }\n    set partialCount(partialCount) {\n        this._partialCount = partialCount;\n        this._forEach(osc => osc.partialCount = partialCount);\n        this._type = this._oscillators[0].type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._forEach(osc => osc.dispose());\n        return this;\n    }\n}\n//# sourceMappingURL=FatOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @example\n * return Tone.Offline(() => {\n * \tconst pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class PWMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n        this.name = \"PWMOscillator\";\n        this.sourceType = \"pwm\";\n        /**\n         * Scale the oscillator so it doesn't go silent\n         * at the extreme values.\n         */\n        this._scale = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        const options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n        this._pulse = new PulseOscillator({\n            context: this.context,\n            frequency: options.modulationFrequency,\n        });\n        // change the pulse oscillator type\n        this._pulse.carrierType = \"sine\";\n        this.modulationFrequency = this._pulse.frequency;\n        this._modulator = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n        });\n        this.frequency = this._modulator.frequency;\n        this.detune = this._modulator.detune;\n        // connections\n        this._modulator.chain(this._scale, this._pulse.width);\n        this._pulse.connect(this.output);\n        readOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            modulationFrequency: 0.4,\n            phase: 0,\n            type: \"pwm\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._modulator.start(time);\n        this._pulse.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._modulator.stop(time);\n        this._pulse.stop(time);\n    }\n    /**\n     * restart the oscillator\n     */\n    _restart(time) {\n        this._modulator.restart(time);\n        this._pulse.restart(time);\n    }\n    /**\n     * The type of the oscillator. Always returns \"pwm\".\n     */\n    get type() {\n        return \"pwm\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pwm\".\n     */\n    get baseType() {\n        return \"pwm\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._modulator.phase;\n    }\n    set phase(phase) {\n        this._modulator.phase = phase;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._pulse.dispose();\n        this._scale.dispose();\n        this._modulator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PWMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nconst OmniOscillatorSourceMap = {\n    am: AMOscillator,\n    fat: FatOscillator,\n    fm: FMOscillator,\n    oscillator: Oscillator,\n    pulse: PulseOscillator,\n    pwm: PWMOscillator,\n};\n/**\n * OmniOscillator aggregates all of the oscillator types into one.\n * @example\n * return Tone.Offline(() => {\n * \tconst omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * }, 0.1, 1);\n * @category Source\n */\nexport class OmniOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"OmniOscillator\";\n        const options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n        // set the options\n        this.set(options);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._oscillator.start(time);\n    }\n    /**\n     * start the oscillator\n     */\n    _stop(time) {\n        this._oscillator.stop(time);\n    }\n    _restart(time) {\n        this._oscillator.restart(time);\n        return this;\n    }\n    /**\n     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n     * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n     * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n     * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n     * when it's not.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n     * omniOsc.type = \"pwm\";\n     * // modulationFrequency is parameter which is available\n     * // only when the type is \"pwm\".\n     * omniOsc.modulationFrequency.value = 0.5;\n     */\n    get type() {\n        let prefix = \"\";\n        if ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n            prefix = this._sourceType;\n        }\n        return prefix + this._oscillator.type;\n    }\n    set type(type) {\n        if (type.substr(0, 2) === \"fm\") {\n            this._createNewOscillator(\"fm\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 2) === \"am\") {\n            this._createNewOscillator(\"am\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 3) === \"fat\") {\n            this._createNewOscillator(\"fat\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(3);\n        }\n        else if (type === \"pwm\") {\n            this._createNewOscillator(\"pwm\");\n            this._oscillator = this._oscillator;\n        }\n        else if (type === \"pulse\") {\n            this._createNewOscillator(\"pulse\");\n        }\n        else {\n            this._createNewOscillator(\"oscillator\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type;\n        }\n    }\n    /**\n     * The value is an empty array when the type is not \"custom\".\n     * This is not available on \"pwm\" and \"pulse\" oscillator types.\n     * See [[Oscillator.partials]]\n     */\n    get partials() {\n        return this._oscillator.partials;\n    }\n    set partials(partials) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partials = partials;\n        }\n    }\n    get partialCount() {\n        return this._oscillator.partialCount;\n    }\n    set partialCount(partialCount) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partialCount = partialCount;\n        }\n    }\n    set(props) {\n        // make sure the type is set first\n        if (Reflect.has(props, \"type\") && props.type) {\n            this.type = props.type;\n        }\n        // then set the rest\n        super.set(props);\n        return this;\n    }\n    /**\n     * connect the oscillator to the frequency and detune signals\n     */\n    _createNewOscillator(oscType) {\n        if (oscType !== this._sourceType) {\n            this._sourceType = oscType;\n            const OscConstructor = OmniOscillatorSourceMap[oscType];\n            // short delay to avoid clicks on the change\n            const now = this.now();\n            if (this._oscillator) {\n                const oldOsc = this._oscillator;\n                oldOsc.stop(now);\n                // dispose the old one\n                this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n            }\n            this._oscillator = new OscConstructor({\n                context: this.context,\n            });\n            this.frequency.connect(this._oscillator.frequency);\n            this.detune.connect(this._oscillator.detune);\n            this._oscillator.connect(this.output);\n            this._oscillator.onstop = () => this.onstop(this);\n            if (this.state === \"started\") {\n                this._oscillator.start(now);\n            }\n        }\n    }\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n    }\n    /**\n     * The source type of the oscillator.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n     * console.log(omniOsc.sourceType); // 'fm'\n     */\n    get sourceType() {\n        return this._sourceType;\n    }\n    set sourceType(sType) {\n        // the basetype defaults to sine\n        let baseType = \"sine\";\n        if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n            baseType = this._oscillator.type;\n        }\n        // set the type\n        if (sType === \"fm\") {\n            this.type = \"fm\" + baseType;\n        }\n        else if (sType === \"am\") {\n            this.type = \"am\" + baseType;\n        }\n        else if (sType === \"fat\") {\n            this.type = \"fat\" + baseType;\n        }\n        else if (sType === \"oscillator\") {\n            this.type = baseType;\n        }\n        else if (sType === \"pulse\") {\n            this.type = \"pulse\";\n        }\n        else if (sType === \"pwm\") {\n            this.type = \"pwm\";\n        }\n    }\n    _getOscType(osc, sourceType) {\n        return osc instanceof OmniOscillatorSourceMap[sourceType];\n    }\n    /**\n     * The base type of the oscillator. See [[Oscillator.baseType]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n     */\n    get baseType() {\n        return this._oscillator.baseType;\n    }\n    set baseType(baseType) {\n        if (!this._getOscType(this._oscillator, \"pulse\") &&\n            !this._getOscType(this._oscillator, \"pwm\") &&\n            baseType !== \"pulse\" && baseType !== \"pwm\") {\n            this._oscillator.baseType = baseType;\n        }\n    }\n    /**\n     * The width of the oscillator when sourceType === \"pulse\".\n     * See [[PWMOscillator.width]]\n     */\n    get width() {\n        if (this._getOscType(this._oscillator, \"pulse\")) {\n            return this._oscillator.width;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The number of detuned oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get count() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set count(count) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n            this._oscillator.count = count;\n        }\n    }\n    /**\n     * The detune spread between the oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get spread() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.spread;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set spread(spread) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n            this._oscillator.spread = spread;\n        }\n    }\n    /**\n     * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get modulationType() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.modulationType;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set modulationType(mType) {\n        if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n            this._oscillator.modulationType = mType;\n        }\n    }\n    /**\n     * The modulation index when the sourceType === \"fm\"\n     * See [[FMOscillator]].\n     */\n    get modulationIndex() {\n        if (this._getOscType(this._oscillator, \"fm\")) {\n            return this._oscillator.modulationIndex;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get harmonicity() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.harmonicity;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n     * see [[PWMOscillator]]\n     * @min 0.1\n     * @max 5\n     */\n    get modulationFrequency() {\n        if (this._getOscType(this._oscillator, \"pwm\")) {\n            return this._oscillator.modulationFrequency;\n        }\n        else {\n            return undefined;\n        }\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.detune.dispose();\n        this.frequency.dispose();\n        this._oscillator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=OmniOscillator.js.map","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst add = new Tone.Add(2).toDestination();\n * \tadd.addend.setValueAtTime(1, 0.2);\n * \tconst signal = new Tone.Signal(2);\n * \t// add a signal and a scalar\n * \tsignal.connect(add);\n * \tsignal.setValueAtTime(1, 0.1);\n * }, 0.5, 1);\n * @category Signal\n */\nexport class Add extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n        this.override = false;\n        this.name = \"Add\";\n        /**\n         * the summing node\n         */\n        this._sum = new Gain({ context: this.context });\n        this.input = this._sum;\n        this.output = this._sum;\n        /**\n         * The value which is added to the input signal\n         */\n        this.addend = this._param;\n        connectSeries(this._constantSource, this._sum);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sum.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Add.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n        this.name = \"Scale\";\n        const options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n        this._mult = this.input = new Multiply({\n            context: this.context,\n            value: options.max - options.min,\n        });\n        this._add = this.output = new Add({\n            context: this.context,\n            value: options.min,\n        });\n        this._min = options.min;\n        this._max = options.max;\n        this.input.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(SignalOperator.getDefaults(), {\n            max: 1,\n            min: 0,\n        });\n    }\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get min() {\n        return this._min;\n    }\n    set min(min) {\n        this._min = min;\n        this._setRange();\n    }\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n    get max() {\n        return this._max;\n    }\n    set max(max) {\n        this._max = max;\n        this._setRange();\n    }\n    /**\n     * set the values\n     */\n    _setRange() {\n        this._add.value = this._min;\n        this._mult.value = this._max - this._min;\n    }\n    dispose() {\n        super.dispose();\n        this._add.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Scale.js.map","import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n        this.name = \"Zero\";\n        /**\n         * The gain node which connects the constant source to the output\n         */\n        this._gain = new Gain({ context: this.context });\n        /**\n         * Only outputs 0\n         */\n        this.output = this._gain;\n        /**\n         * no input node\n         */\n        this.input = undefined;\n        connect(this.context.getConstant(0), this._gain);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        disconnect(this.context.getConstant(0), this._gain);\n        return this;\n    }\n}\n//# sourceMappingURL=Zero.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n * @example\n * return Tone.Offline(() => {\n * \tconst lfo = new Tone.LFO(\"4n\", 400, 4000).start().toDestination();\n * }, 0.5, 1);\n * @category Source\n */\nexport class LFO extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]));\n        this.name = \"LFO\";\n        /**\n         * The value that the LFO outputs when it's stopped\n         */\n        this._stoppedValue = 0;\n        /**\n         * A private placeholder for the units\n         */\n        this._units = \"number\";\n        /**\n         * If the input value is converted using the [[units]]\n         */\n        this.convert = true;\n        /**\n         * Private methods borrowed from Param\n         */\n        // @ts-ignore\n        this._fromType = Param.prototype._fromType;\n        // @ts-ignore\n        this._toType = Param.prototype._toType;\n        // @ts-ignore\n        this._is = Param.prototype._is;\n        // @ts-ignore\n        this._clampValue = Param.prototype._clampValue;\n        const options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n        this._oscillator = new Oscillator(options);\n        this.frequency = this._oscillator.frequency;\n        this._amplitudeGain = new Gain({\n            context: this.context,\n            gain: options.amplitude,\n            units: \"normalRange\",\n        });\n        this.amplitude = this._amplitudeGain.gain;\n        this._stoppedSignal = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: 0,\n        });\n        this._zeros = new Zero({ context: this.context });\n        this._a2g = new AudioToGain({ context: this.context });\n        this._scaler = this.output = new Scale({\n            context: this.context,\n            max: options.max,\n            min: options.min,\n        });\n        this.units = options.units;\n        this.min = options.min;\n        this.max = options.max;\n        // connect it up\n        this._oscillator.chain(this._amplitudeGain, this._a2g, this._scaler);\n        this._zeros.connect(this._a2g);\n        this._stoppedSignal.connect(this._a2g);\n        readOnly(this, [\"amplitude\", \"frequency\"]);\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            amplitude: 1,\n            frequency: \"4n\",\n            max: 1,\n            min: 0,\n            type: \"sine\",\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the LFO.\n     * @param time The time the LFO will start\n     */\n    start(time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(0, time);\n        this._oscillator.start(time);\n        return this;\n    }\n    /**\n     * Stop the LFO.\n     * @param  time The time the LFO will stop\n     */\n    stop(time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n        this._oscillator.stop(time);\n        return this;\n    }\n    /**\n     * Sync the start/stop/pause to the transport\n     * and the frequency to the bpm of the transport\n     * @example\n     * const lfo = new Tone.LFO(\"8n\");\n     * lfo.sync().start(0);\n     * // the rate of the LFO will always be an eighth note, even as the tempo changes\n     */\n    sync() {\n        this._oscillator.sync();\n        this._oscillator.syncFrequency();\n        return this;\n    }\n    /**\n     * unsync the LFO from transport control\n     */\n    unsync() {\n        this._oscillator.unsync();\n        this._oscillator.unsyncFrequency();\n        return this;\n    }\n    /**\n     * After the oscillator waveform is updated, reset the `_stoppedSignal` value to match the updated waveform\n     */\n    _setStoppedValue() {\n        this._stoppedValue = this._oscillator.getInitialValue();\n        this._stoppedSignal.value = this._stoppedValue;\n    }\n    /**\n     * The minimum output of the LFO.\n     */\n    get min() {\n        return this._toType(this._scaler.min);\n    }\n    set min(min) {\n        min = this._fromType(min);\n        this._scaler.min = min;\n    }\n    /**\n     * The maximum output of the LFO.\n     */\n    get max() {\n        return this._toType(this._scaler.max);\n    }\n    set max(max) {\n        max = this._fromType(max);\n        this._scaler.max = max;\n    }\n    /**\n     * The type of the oscillator: See [[Oscillator.type]]\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n        this._setStoppedValue();\n    }\n    /**\n     * The oscillator's partials array: See [[Oscillator.partials]]\n     */\n    get partials() {\n        return this._oscillator.partials;\n    }\n    set partials(partials) {\n        this._oscillator.partials = partials;\n        this._setStoppedValue();\n    }\n    /**\n     * The phase of the LFO.\n     */\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n        this._setStoppedValue();\n    }\n    /**\n     * The output units of the LFO.\n     */\n    get units() {\n        return this._units;\n    }\n    set units(val) {\n        const currentMin = this.min;\n        const currentMax = this.max;\n        // convert the min and the max\n        this._units = val;\n        this.min = currentMin;\n        this.max = currentMax;\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     */\n    get state() {\n        return this._oscillator.state;\n    }\n    /**\n     * @param node the destination to connect to\n     * @param outputNum the optional output number\n     * @param inputNum the input number\n     */\n    connect(node, outputNum, inputNum) {\n        if (node instanceof Param || node instanceof Signal) {\n            this.convert = node.convert;\n            this.units = node.units;\n        }\n        connectSignal(this, node, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._oscillator.dispose();\n        this._stoppedSignal.dispose();\n        this._zeros.dispose();\n        this._scaler.dispose();\n        this._a2g.dispose();\n        this._amplitudeGain.dispose();\n        this.amplitude.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LFO.js.map","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(newValue, min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(this.toSeconds(newValue), min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n//# sourceMappingURL=Decorator.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gong_1.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source {\n    constructor() {\n        super(optionsFromArguments(Player.getDefaults(), arguments, [\n            \"url\",\n            \"onload\",\n        ]));\n        this.name = \"Player\";\n        /**\n         * All of the active buffer source nodes\n         */\n        this._activeSources = new Set();\n        const options = optionsFromArguments(Player.getDefaults(), arguments, [\n            \"url\",\n            \"onload\",\n        ]);\n        this._buffer = new ToneAudioBuffer({\n            onload: this._onload.bind(this, options.onload),\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        this.autostart = options.autostart;\n        this._loop = options.loop;\n        this._loopStart = options.loopStart;\n        this._loopEnd = options.loopEnd;\n        this._playbackRate = options.playbackRate;\n        this.fadeIn = options.fadeIn;\n        this.fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            autostart: false,\n            fadeIn: 0,\n            fadeOut: 0,\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n            reverse: false,\n        });\n    }\n    /**\n     * Load the audio file as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * Note: this does not need to be called if a url\n     * was passed in to the constructor. Only use this\n     * if you want to manually load a new url.\n     * @param url The url of the buffer to load. Filetype support depends on the browser.\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._buffer.load(url);\n            this._onload();\n            return this;\n        });\n    }\n    /**\n     * Internal callback when the buffer is loaded.\n     */\n    _onload(callback = noOp) {\n        callback();\n        if (this.autostart) {\n            this.start();\n        }\n    }\n    /**\n     * Internal callback when the buffer is done playing.\n     */\n    _onSourceEnd(source) {\n        // invoke the onstop function\n        this.onstop(this);\n        // delete the source from the active sources\n        this._activeSources.delete(source);\n        if (this._activeSources.size === 0 &&\n            !this._synced &&\n            this._state.getValueAtTime(this.now()) === \"started\") {\n            // remove the 'implicitEnd' event and replace with an explicit end\n            this._state.cancel(this.now());\n            this._state.setStateAtTime(\"stopped\", this.now());\n        }\n    }\n    /**\n     * Play the buffer at the given startTime. Optionally add an offset\n     * and/or duration which will play the buffer from a position\n     * within the buffer for the given duration.\n     *\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     */\n    start(time, offset, duration) {\n        super.start(time, offset, duration);\n        return this;\n    }\n    /**\n     * Internal start method\n     */\n    _start(startTime, offset, duration) {\n        // if it's a loop the default offset is the loopStart point\n        if (this._loop) {\n            offset = defaultArg(offset, this._loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // compute the values in seconds\n        const computedOffset = this.toSeconds(offset);\n        // compute the duration which is either the passed in duration of the buffer.duration - offset\n        const origDuration = duration;\n        duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n        let computedDuration = this.toSeconds(duration);\n        // scale it by the playback rate\n        computedDuration = computedDuration / this._playbackRate;\n        // get the start time\n        startTime = this.toSeconds(startTime);\n        // make the source\n        const source = new ToneBufferSource({\n            url: this._buffer,\n            context: this.context,\n            fadeIn: this.fadeIn,\n            fadeOut: this.fadeOut,\n            loop: this._loop,\n            loopEnd: this._loopEnd,\n            loopStart: this._loopStart,\n            onended: this._onSourceEnd.bind(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        // set the looping properties\n        if (!this._loop && !this._synced) {\n            // cancel the previous stop\n            this._state.cancel(startTime + computedDuration);\n            // if it's not looping, set the state change at the end of the sample\n            this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n                implicitEnd: true,\n            });\n        }\n        // add it to the array of active sources\n        this._activeSources.add(source);\n        // start it\n        if (this._loop && isUndef(origDuration)) {\n            source.start(startTime, computedOffset);\n        }\n        else {\n            // subtract the fade out time\n            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n        }\n    }\n    /**\n     * Stop playback.\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach((source) => source.stop(computedTime));\n    }\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    restart(time, offset, duration) {\n        super.restart(time, offset, duration);\n        return this;\n    }\n    _restart(time, offset, duration) {\n        var _a;\n        (_a = [...this._activeSources].pop()) === null || _a === void 0 ? void 0 : _a.stop(time); // explicitly stop only the most recently created source, to avoid edge case when > 1 source exists and _stop() erroneously sets all stop times past original end offset\n        this._start(time, offset, duration);\n    }\n    /**\n     * Seek to a specific time in the player's buffer. If the\n     * source is no longer playing at that time, it will stop.\n     * @param offset The time to seek to.\n     * @param when The time for the seek event to occur.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3\", () => {\n     * \tplayer.start();\n     * \t// seek to the offset in 1 second from now\n     * \tplayer.seek(0.4, \"+1\");\n     * }).toDestination();\n     */\n    seek(offset, when) {\n        const computedTime = this.toSeconds(when);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            const computedOffset = this.toSeconds(offset);\n            // if it's currently playing, stop it\n            this._stop(computedTime);\n            // restart it at the given time\n            this._start(computedTime, computedOffset);\n        }\n        return this;\n    }\n    /**\n     * Set the loop start and end. Will only loop if loop is set to true.\n     * @param loopStart The loop start time\n     * @param loopEnd The loop end time\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3\").toDestination();\n     * // loop between the given points\n     * player.setLoopPoints(0.2, 0.3);\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    setLoopPoints(loopStart, loopEnd) {\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        return this;\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(loopStart) {\n        this._loopStart = loopStart;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach((source) => {\n            source.loopStart = loopStart;\n        });\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = loopEnd;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach((source) => {\n            source.loopEnd = loopEnd;\n        });\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/drum-samples/breakbeat.mp3\").toDestination();\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        // if no change, do nothing\n        if (this._loop === loop) {\n            return;\n        }\n        this._loop = loop;\n        // set the loop of all of the sources\n        this._activeSources.forEach((source) => {\n            source.loop = loop;\n        });\n        if (loop) {\n            // remove the next stopEvent\n            const stopEvent = this._state.getNextState(\"stopped\", this.now());\n            if (stopEvent) {\n                this._state.cancel(stopEvent.time);\n            }\n        }\n    }\n    /**\n     * Normal speed is 1. The pitch will change with the playback rate.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3\").toDestination();\n     * // play at 1/4 speed\n     * player.playbackRate = 0.25;\n     * // play as soon as the buffer is loaded\n     * player.autostart = true;\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        const now = this.now();\n        // cancel the stop event since it's at a different time now\n        const stopEvent = this._state.getNextState(\"stopped\", now);\n        if (stopEvent && stopEvent.implicitEnd) {\n            this._state.cancel(stopEvent.time);\n            this._activeSources.forEach((source) => source.cancelStop());\n        }\n        // set all the sources\n        this._activeSources.forEach((source) => {\n            source.playbackRate.setValueAtTime(rate, now);\n        });\n    }\n    /**\n     * If the buffer should be reversed. Note that this sets the underlying [[ToneAudioBuffer.reverse]], so\n     * if multiple players are pointing at the same ToneAudioBuffer, they will all be reversed.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/audio/berklee/chime_1.mp3\").toDestination();\n     * player.autostart = true;\n     * player.reverse = true;\n     */\n    get reverse() {\n        return this._buffer.reverse;\n    }\n    set reverse(rev) {\n        this._buffer.reverse = rev;\n    }\n    /**\n     * If the buffer is loaded\n     */\n    get loaded() {\n        return this._buffer.loaded;\n    }\n    dispose() {\n        super.dispose();\n        // disconnect all of the players\n        this._activeSources.forEach((source) => source.dispose());\n        this._activeSources.clear();\n        this._buffer.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeIn\", void 0);\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeOut\", void 0);\n//# sourceMappingURL=Player.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"GainToAudio\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => Math.abs(x) * 2 - 1,\n        });\n        /**\n         * The NormalRange input [0, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The AudioRange output [-1, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GainToAudio.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @example\n * return Tone.Offline(() => {\n * \tconst env = new Tone.Envelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 0.5,\n * \t\trelease: 0.8,\n * \t}).toDestination();\n * \tenv.triggerAttackRelease(0.5);\n * }, 1.5, 1);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"Envelope\";\n        /**\n         * the signal which is output.\n         */\n        this._sig = new Signal({\n            context: this.context,\n            value: 0,\n        });\n        /**\n         * The output signal of the envelope\n         */\n        this.output = this._sig;\n        /**\n         * Envelope has no input\n         */\n        this.input = undefined;\n        const options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this.attack = options.attack;\n        this.decay = options.decay;\n        this.sustain = options.sustain;\n        this.release = options.release;\n        this.attackCurve = options.attackCurve;\n        this.releaseCurve = options.releaseCurve;\n        this.decayCurve = options.decayCurve;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.01,\n            attackCurve: \"linear\",\n            decay: 0.1,\n            decayCurve: \"exponential\",\n            release: 1,\n            releaseCurve: \"exponential\",\n            sustain: 0.5,\n        });\n    }\n    /**\n     * Read the current value of the envelope. Useful for\n     * synchronizing visual output to the envelope.\n     */\n    get value() {\n        return this.getValueAtTime(this.now());\n    }\n    /**\n     * Get the curve\n     * @param  curve\n     * @param  direction  In/Out\n     * @return The curve name\n     */\n    _getCurve(curve, direction) {\n        if (isString(curve)) {\n            return curve;\n        }\n        else {\n            // look up the name in the curves array\n            let curveName;\n            for (curveName in EnvelopeCurves) {\n                if (EnvelopeCurves[curveName][direction] === curve) {\n                    return curveName;\n                }\n            }\n            // return the custom curve\n            return curve;\n        }\n    }\n    /**\n     * Assign a the curve to the given name using the direction\n     * @param  name\n     * @param  direction In/Out\n     * @param  curve\n     */\n    _setCurve(name, direction, curve) {\n        // check if it's a valid type\n        if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n            const curveDef = EnvelopeCurves[curve];\n            if (isObject(curveDef)) {\n                if (name !== \"_decayCurve\") {\n                    this[name] = curveDef[direction];\n                }\n            }\n            else {\n                this[name] = curveDef;\n            }\n        }\n        else if (isArray(curve) && name !== \"_decayCurve\") {\n            this[name] = curve;\n        }\n        else {\n            throw new Error(\"Envelope: invalid curve: \" + curve);\n        }\n    }\n    /**\n     * The shape of the attack.\n     * Can be any of these strings:\n     * * \"linear\"\n     * * \"exponential\"\n     * * \"sine\"\n     * * \"cosine\"\n     * * \"bounce\"\n     * * \"ripple\"\n     * * \"step\"\n     *\n     * Can also be an array which describes the curve. Values\n     * in the array are evenly subdivided and linearly\n     * interpolated over the duration of the attack.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope(0.4).toDestination();\n     * \tenv.attackCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get attackCurve() {\n        return this._getCurve(this._attackCurve, \"In\");\n    }\n    set attackCurve(curve) {\n        this._setCurve(\"_attackCurve\", \"In\", curve);\n    }\n    /**\n     * The shape of the release. See the attack curve types.\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\trelease: 0.8\n     * \t}).toDestination();\n     * \tenv.triggerAttack();\n     * \t// release curve could also be defined by an array\n     * \tenv.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n     * \tenv.triggerRelease(0.2);\n     * }, 1, 1);\n     */\n    get releaseCurve() {\n        return this._getCurve(this._releaseCurve, \"Out\");\n    }\n    set releaseCurve(curve) {\n        this._setCurve(\"_releaseCurve\", \"Out\", curve);\n    }\n    /**\n     * The shape of the decay either \"linear\" or \"exponential\"\n     * @example\n     * return Tone.Offline(() => {\n     * \tconst env = new Tone.Envelope({\n     * \t\tsustain: 0.1,\n     * \t\tdecay: 0.5\n     * \t}).toDestination();\n     * \tenv.decayCurve = \"linear\";\n     * \tenv.triggerAttack();\n     * }, 1, 1);\n     */\n    get decayCurve() {\n        return this._getCurve(this._decayCurve, \"Out\");\n    }\n    set decayCurve(curve) {\n        this._setCurve(\"_decayCurve\", \"Out\", curve);\n    }\n    /**\n     * Trigger the attack/decay portion of the ADSR envelope.\n     * @param  time When the attack should start.\n     * @param velocity The velocity of the envelope scales the vales.\n     *                             number between 0-1\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n     * env.triggerAttack(\"+0.5\", 0.2);\n     */\n    triggerAttack(time, velocity = 1) {\n        this.log(\"triggerAttack\", time, velocity);\n        time = this.toSeconds(time);\n        const originalAttack = this.toSeconds(this.attack);\n        let attack = originalAttack;\n        const decay = this.toSeconds(this.decay);\n        // check if it's not a complete attack\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            // subtract the current value from the attack time\n            const attackRate = 1 / attack;\n            const remainingDistance = 1 - currentValue;\n            // the attack is now the remaining time\n            attack = remainingDistance / attackRate;\n        }\n        // attack\n        if (attack < this.sampleTime) {\n            this._sig.cancelScheduledValues(time);\n            // case where the attack time is 0 should set instantly\n            this._sig.setValueAtTime(velocity, time);\n        }\n        else if (this._attackCurve === \"linear\") {\n            this._sig.linearRampTo(velocity, attack, time);\n        }\n        else if (this._attackCurve === \"exponential\") {\n            this._sig.targetRampTo(velocity, attack, time);\n        }\n        else {\n            this._sig.cancelAndHoldAtTime(time);\n            let curve = this._attackCurve;\n            // find the starting position in the curve\n            for (let i = 1; i < curve.length; i++) {\n                // the starting index is between the two values\n                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n                    curve = this._attackCurve.slice(i);\n                    // the first index is the current value\n                    curve[0] = currentValue;\n                    break;\n                }\n            }\n            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n        }\n        // decay\n        if (decay && this.sustain < 1) {\n            const decayValue = velocity * this.sustain;\n            const decayStart = time + attack;\n            this.log(\"decay\", decayStart);\n            if (this._decayCurve === \"linear\") {\n                this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n            }\n            else {\n                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n            }\n        }\n        return this;\n    }\n    /**\n     * Triggers the release of the envelope.\n     * @param  time When the release portion of the envelope should start.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator({\n     * \ttype: \"sawtooth\"\n     * }).connect(env).start();\n     * env.triggerAttack();\n     * // trigger the release half a second after the attack\n     * env.triggerRelease(\"+0.5\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        time = this.toSeconds(time);\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            const release = this.toSeconds(this.release);\n            if (release < this.sampleTime) {\n                this._sig.setValueAtTime(0, time);\n            }\n            else if (this._releaseCurve === \"linear\") {\n                this._sig.linearRampTo(0, release, time);\n            }\n            else if (this._releaseCurve === \"exponential\") {\n                this._sig.targetRampTo(0, release, time);\n            }\n            else {\n                assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n                this._sig.cancelAndHoldAtTime(time);\n                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n            }\n        }\n        return this;\n    }\n    /**\n     * Get the scheduled value at the given time. This will\n     * return the unconverted (raw) value.\n     * @example\n     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n     * env.triggerAttackRelease(2);\n     * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);\n     */\n    getValueAtTime(time) {\n        return this._sig.getValueAtTime(time);\n    }\n    /**\n     * triggerAttackRelease is shorthand for triggerAttack, then waiting\n     * some duration, then triggerRelease.\n     * @param duration The duration of the sustain.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity of the envelope.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the release 0.5 seconds after the attack\n     * env.triggerAttackRelease(0.5);\n     */\n    triggerAttackRelease(duration, time, velocity = 1) {\n        time = this.toSeconds(time);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + this.toSeconds(duration));\n        return this;\n    }\n    /**\n     * Cancels all scheduled envelope changes after the given time.\n     */\n    cancel(after) {\n        this._sig.cancelScheduledValues(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * Connect the envelope to a destination node.\n     */\n    connect(destination, outputNumber = 0, inputNumber = 0) {\n        connectSignal(this, destination, outputNumber, inputNumber);\n        return this;\n    }\n    /**\n     * Render the envelope curve to an array of the given length.\n     * Good for visualizing the envelope curve. Rescales the duration of the\n     * envelope to fit the length.\n     */\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const duration = length / this.context.sampleRate;\n            const context = new OfflineContext(1, duration, this.context.sampleRate);\n            // normalize the ADSR for the given duration with 20% sustain time\n            const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n            const envelopeDuration = attackPortion + this.toSeconds(this.release);\n            const sustainTime = envelopeDuration * 0.1;\n            const totalDuration = envelopeDuration + sustainTime;\n            // @ts-ignore\n            const clone = new this.constructor(Object.assign(this.get(), {\n                attack: duration * this.toSeconds(this.attack) / totalDuration,\n                decay: duration * this.toSeconds(this.decay) / totalDuration,\n                release: duration * this.toSeconds(this.release) / totalDuration,\n                context\n            }));\n            clone._sig.toDestination();\n            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n            const buffer = yield context.render();\n            return buffer.getChannelData(0);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sig.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"decay\", void 0);\n__decorate([\n    range(0, 1)\n], Envelope.prototype, \"sustain\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"release\", void 0);\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves = (() => {\n    const curveLen = 128;\n    let i;\n    let k;\n    // cosine curve\n    const cosineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n    }\n    // ripple curve\n    const rippleCurve = [];\n    const rippleCurveFreq = 6.4;\n    for (i = 0; i < curveLen - 1; i++) {\n        k = (i / (curveLen - 1));\n        const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n        rippleCurve[i] = sineWave / 10 + k * 0.83;\n    }\n    rippleCurve[curveLen - 1] = 1;\n    // stairs curve\n    const stairsCurve = [];\n    const steps = 5;\n    for (i = 0; i < curveLen; i++) {\n        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n    }\n    // in-out easing curve\n    const sineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    // a bounce curve\n    const bounceCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        const freq = Math.pow(k, 3) * 4 + 0.2;\n        const val = Math.cos(freq * Math.PI * 2 * k);\n        bounceCurve[i] = Math.abs(val * (1 - k));\n    }\n    /**\n     * Invert a value curve to make it work for the release\n     */\n    function invertCurve(curve) {\n        const out = new Array(curve.length);\n        for (let j = 0; j < curve.length; j++) {\n            out[j] = 1 - curve[j];\n        }\n        return out;\n    }\n    /**\n     * reverse the curve\n     */\n    function reverseCurve(curve) {\n        return curve.slice(0).reverse();\n    }\n    /**\n     * attack and release curve arrays\n     */\n    return {\n        bounce: {\n            In: invertCurve(bounceCurve),\n            Out: bounceCurve,\n        },\n        cosine: {\n            In: cosineCurve,\n            Out: reverseCurve(cosineCurve),\n        },\n        exponential: \"exponential\",\n        linear: \"linear\",\n        ripple: {\n            In: rippleCurve,\n            Out: invertCurve(rippleCurve),\n        },\n        sine: {\n            In: sineCurve,\n            Out: invertCurve(sineCurve),\n        },\n        step: {\n            In: stairsCurve,\n            Out: invertCurve(stairsCurve),\n        },\n    };\n})();\n//# sourceMappingURL=Envelope.js.map","import { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\nexport class Instrument extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Instrument.getDefaults(), arguments));\n        /**\n         * Keep track of all events scheduled to the transport\n         * when the instrument is 'synced'\n         */\n        this._scheduledEvents = [];\n        /**\n         * If the instrument is currently synced\n         */\n        this._synced = false;\n        this._original_triggerAttack = this.triggerAttack;\n        this._original_triggerRelease = this.triggerRelease;\n        /**\n         * The release which is scheduled to the timeline.\n         */\n        this._syncedRelease = (time) => this._original_triggerRelease(time);\n        const options = optionsFromArguments(Instrument.getDefaults(), arguments);\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            volume: 0,\n        });\n    }\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n     * @example\n     * const fmSynth = new Tone.FMSynth().toDestination();\n     * fmSynth.volume.value = -6;\n     * fmSynth.sync();\n     * // schedule 3 notes when the transport first starts\n     * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n     * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n     * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n     * // start the transport to hear the notes\n     * Tone.Transport.start();\n     */\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 0);\n            this.context.transport.on(\"stop\", this._syncedRelease);\n            this.context.transport.on(\"pause\", this._syncedRelease);\n            this.context.transport.on(\"loopEnd\", this._syncedRelease);\n        }\n        return this;\n    }\n    /**\n     * set _sync\n     */\n    _syncState() {\n        let changed = false;\n        if (!this._synced) {\n            this._synced = true;\n            changed = true;\n        }\n        return changed;\n    }\n    /**\n     * Wrap the given method so that it can be synchronized\n     * @param method Which method to wrap and sync\n     * @param  timePosition What position the time argument appears in\n     */\n    _syncMethod(method, timePosition) {\n        const originalMethod = this[\"_original_\" + method] = this[method];\n        this[method] = (...args) => {\n            const time = args[timePosition];\n            const id = this.context.transport.schedule((t) => {\n                args[timePosition] = t;\n                originalMethod.apply(this, args);\n            }, time);\n            this._scheduledEvents.push(id);\n        };\n    }\n    /**\n     * Unsync the instrument from the Transport\n     */\n    unsync() {\n        this._scheduledEvents.forEach(id => this.context.transport.clear(id));\n        this._scheduledEvents = [];\n        if (this._synced) {\n            this._synced = false;\n            this.triggerAttack = this._original_triggerAttack;\n            this.triggerRelease = this._original_triggerRelease;\n            this.context.transport.off(\"stop\", this._syncedRelease);\n            this.context.transport.off(\"pause\", this._syncedRelease);\n            this.context.transport.off(\"loopEnd\", this._syncedRelease);\n        }\n        return this;\n    }\n    /**\n     * Trigger the attack and then the release after the duration.\n     * @param  note     The note to trigger.\n     * @param  duration How long the note should be held for before\n     *                         triggering the release. This value must be greater than 0.\n     * @param time  When the note should be triggered.\n     * @param  velocity The velocity the note should be triggered at.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger \"C4\" for the duration of an 8th note\n     * synth.triggerAttackRelease(\"C4\", \"8n\");\n     */\n    triggerAttackRelease(note, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        const computedDuration = this.toSeconds(duration);\n        this.triggerAttack(note, computedTime, velocity);\n        this.triggerRelease(computedTime + computedDuration);\n        return this;\n    }\n    /**\n     * clean up\n     * @returns {Instrument} this\n     */\n    dispose() {\n        super.dispose();\n        this._volume.dispose();\n        this.unsync();\n        this._scheduledEvents = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Instrument.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport class Monophonic extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Monophonic.getDefaults(), arguments));\n        const options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n        this.portamento = options.portamento;\n        this.onsilence = options.onsilence;\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            detune: 0,\n            onsilence: noOp,\n            portamento: 0,\n        });\n    }\n    /**\n     * Trigger the attack of the note optionally with a given velocity.\n     * @param  note The note to trigger.\n     * @param  time When the note should start.\n     * @param  velocity The velocity determines how \"loud\" the note will be.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger the note a half second from now at half velocity\n     * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n     */\n    triggerAttack(note, time, velocity = 1) {\n        this.log(\"triggerAttack\", note, time, velocity);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeAttack(seconds, velocity);\n        this.setNote(note, seconds);\n        return this;\n    }\n    /**\n     * Trigger the release portion of the envelope.\n     * @param  time If no time is given, the release happens immediately.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // trigger the release a second from now\n     * synth.triggerRelease(\"+1\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeRelease(seconds);\n        return this;\n    }\n    /**\n     * Set the note at the given time. If no time is given, the note\n     * will set immediately.\n     * @param note The note to change to.\n     * @param  time The time when the note should be set.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // change to F#6 in one quarter note from now.\n     * synth.setNote(\"F#6\", \"+4n\");\n     */\n    setNote(note, time) {\n        const computedTime = this.toSeconds(time);\n        const computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n            const portTime = this.toSeconds(this.portamento);\n            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n        }\n        else {\n            this.frequency.setValueAtTime(computedFrequency, computedTime);\n        }\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Monophonic.prototype, \"portamento\", void 0);\n//# sourceMappingURL=Monophonic.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst ampEnv = new Tone.AmplitudeEnvelope({\n * \t\tattack: 0.1,\n * \t\tdecay: 0.2,\n * \t\tsustain: 1.0,\n * \t\trelease: 0.8\n * \t}).toDestination();\n * \t// create an oscillator and connect it\n * \tconst osc = new Tone.Oscillator().connect(ampEnv).start();\n * \t// trigger the envelopes attack and release \"8t\" apart\n * \tampEnv.triggerAttackRelease(\"8t\");\n * }, 1.5, 1);\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"AmplitudeEnvelope\";\n        this._gainNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n        this._sig.connect(this._gainNode.gain);\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AmplitudeEnvelope.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(Synth.getDefaults(), arguments));\n        this.name = \"Synth\";\n        const options = optionsFromArguments(Synth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign({\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }, options.oscillator));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: this.context,\n        }, options.envelope));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.envelope, this.output);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.3,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]), {\n                type: \"triangle\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        this.oscillator.start(time);\n        // if there is no release portion, stop the oscillator\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Synth.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Param } from \"../../core/context/Param\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode).\n * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the \"rolloff\" value.\n * @category Component\n */\nexport class BiquadFilter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"BiquadFilter\";\n        const options = optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this._filter = this.context.createBiquadFilter();\n        this.input = this.output = this._filter;\n        this.Q = new Param({\n            context: this.context,\n            units: \"number\",\n            value: options.Q,\n            param: this._filter.Q,\n        });\n        this.frequency = new Param({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n            param: this._filter.frequency,\n        });\n        this.detune = new Param({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n            param: this._filter.detune,\n        });\n        this.gain = new Param({\n            context: this.context,\n            units: \"decibels\",\n            convert: false,\n            value: options.gain,\n            param: this._filter.gain,\n        });\n        this.type = options.type;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            type: \"lowpass\",\n            frequency: 350,\n            detune: 0,\n            gain: 0,\n        });\n    }\n    /**\n     * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the\n     * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)\n     */\n    get type() {\n        return this._filter.type;\n    }\n    set type(type) {\n        const types = [\"lowpass\", \"highpass\", \"bandpass\",\n            \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n        assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n        this._filter.type = type;\n    }\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    getFrequencyResponse(len = 128) {\n        // start with all 1s\n        const freqValues = new Float32Array(len);\n        for (let i = 0; i < len; i++) {\n            const norm = Math.pow(i / len, 2);\n            const freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        const magValues = new Float32Array(len);\n        const phaseValues = new Float32Array(len);\n        // clone the filter to remove any connections which may be changing the value\n        const filterClone = this.context.createBiquadFilter();\n        filterClone.type = this.type;\n        filterClone.Q.value = this.Q.value;\n        filterClone.frequency.value = this.frequency.value;\n        filterClone.gain.value = this.gain.value;\n        filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n        return magValues;\n    }\n    dispose() {\n        super.dispose();\n        this._filter.disconnect();\n        this.Q.dispose();\n        this.frequency.dispose();\n        this.gain.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=BiquadFilter.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\nimport { BiquadFilter } from \"./BiquadFilter\";\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * const filter = new Tone.Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Tone.Noise().connect(filter).start();\n * @category Component\n */\nexport class Filter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]));\n        this.name = \"Filter\";\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this._filters = [];\n        const options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n        this._filters = [];\n        this.Q = new Signal({\n            context: this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this.gain = new Signal({\n            context: this.context,\n            units: \"decibels\",\n            convert: false,\n            value: options.gain,\n        });\n        this._type = options.type;\n        this.rolloff = options.rolloff;\n        readOnly(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            detune: 0,\n            frequency: 350,\n            gain: 0,\n            rolloff: -12,\n            type: \"lowpass\",\n        });\n    }\n    /**\n     * The type of the filter. Types: \"lowpass\", \"highpass\",\n     * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        const types = [\"lowpass\", \"highpass\", \"bandpass\",\n            \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n        assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n        this._type = type;\n        this._filters.forEach(filter => filter.type = type);\n    }\n    /**\n     * The rolloff of the filter which is the drop in db\n     * per octave. Implemented internally by cascading filters.\n     * Only accepts the values -12, -24, -48 and -96.\n     */\n    get rolloff() {\n        return this._rolloff;\n    }\n    set rolloff(rolloff) {\n        const rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n        const possibilities = [-12, -24, -48, -96];\n        let cascadingCount = possibilities.indexOf(rolloffNum);\n        // check the rolloff is valid\n        assert(cascadingCount !== -1, `rolloff can only be ${possibilities.join(\", \")}`);\n        cascadingCount += 1;\n        this._rolloff = rolloffNum;\n        this.input.disconnect();\n        this._filters.forEach(filter => filter.disconnect());\n        this._filters = new Array(cascadingCount);\n        for (let count = 0; count < cascadingCount; count++) {\n            const filter = new BiquadFilter({\n                context: this.context,\n            });\n            filter.type = this._type;\n            this.frequency.connect(filter.frequency);\n            this.detune.connect(filter.detune);\n            this.Q.connect(filter.Q);\n            this.gain.connect(filter.gain);\n            this._filters[count] = filter;\n        }\n        this._internalChannels = this._filters;\n        connectSeries(this.input, ...this._internalChannels, this.output);\n    }\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    getFrequencyResponse(len = 128) {\n        const filterClone = new BiquadFilter({\n            frequency: this.frequency.value,\n            gain: this.gain.value,\n            Q: this.Q.value,\n            type: this._type,\n            detune: this.detune.value,\n        });\n        // start with all 1s\n        const totalResponse = new Float32Array(len).map(() => 1);\n        this._filters.forEach(() => {\n            const response = filterClone.getFrequencyResponse(len);\n            response.forEach((val, i) => totalResponse[i] *= val);\n        });\n        filterClone.dispose();\n        return totalResponse;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._filters.forEach(filter => {\n            filter.dispose();\n        });\n        writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n        this.frequency.dispose();\n        this.Q.dispose();\n        this.detune.dispose();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Filter.js.map","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps.\n * @example\n * const oscillator = new Tone.Oscillator().toDestination().start();\n * const freqEnv = new Tone.FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n * @category Component\n */\nexport class FrequencyEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"FrequencyEnvelope\";\n        const options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this._octaves = options.octaves;\n        this._baseFrequency = this.toFrequency(options.baseFrequency);\n        this._exponent = this.input = new Pow({\n            context: this.context,\n            value: options.exponent\n        });\n        this._scale = this.output = new Scale({\n            context: this.context,\n            min: this._baseFrequency,\n            max: this._baseFrequency * Math.pow(2, this._octaves),\n        });\n        this._sig.chain(this._exponent, this._scale);\n    }\n    static getDefaults() {\n        return Object.assign(Envelope.getDefaults(), {\n            baseFrequency: 200,\n            exponent: 1,\n            octaves: 4,\n        });\n    }\n    /**\n     * The envelope's minimum output value. This is the value which it\n     * starts at.\n     */\n    get baseFrequency() {\n        return this._baseFrequency;\n    }\n    set baseFrequency(min) {\n        const freq = this.toFrequency(min);\n        assertRange(freq, 0);\n        this._baseFrequency = freq;\n        this._scale.min = this._baseFrequency;\n        // update the max value when the min changes\n        this.octaves = this._octaves;\n    }\n    /**\n     * The number of octaves above the baseFrequency that the\n     * envelope will scale to.\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(octaves) {\n        this._octaves = octaves;\n        this._scale.max = this._baseFrequency * Math.pow(2, octaves);\n    }\n    /**\n     * The envelope's exponent value.\n     */\n    get exponent() {\n        return this._exponent.value;\n    }\n    set exponent(exponent) {\n        this._exponent.value = exponent;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._exponent.dispose();\n        this._scale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FrequencyEnvelope.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class MonoSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(MonoSynth.getDefaults(), arguments));\n        this.name = \"MonoSynth\";\n        const options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.filter = new Filter(Object.assign(options.filter, { context: this.context }));\n        this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: this.context }));\n        this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, { context: this.context }));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.filter, this.envelope, this.output);\n        // connect the filter envelope\n        this.filterEnvelope.connect(this.filter.frequency);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.9,\n            }),\n            filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                Q: 1,\n                rolloff: -12,\n                type: \"lowpass\",\n            }),\n            filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.6,\n                baseFrequency: 200,\n                decay: 0.2,\n                exponent: 2,\n                octaves: 3,\n                release: 2,\n                sustain: 0.5,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"sawtooth\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity = 1) {\n        this.envelope.triggerAttack(time, velocity);\n        this.filterEnvelope.triggerAttack(time);\n        this.oscillator.start(time);\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.filterEnvelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        this.filterEnvelope.dispose();\n        this.filter.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MonoSynth.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth {\n    constructor() {\n        super(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n        this.name = \"MembraneSynth\";\n        /**\n         * Portamento is ignored in this synth. use pitch decay instead.\n         */\n        this.portamento = 0;\n        const options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n        this.pitchDecay = options.pitchDecay;\n        this.octaves = options.octaves;\n        readOnly(this, [\"oscillator\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n            envelope: {\n                attack: 0.001,\n                attackCurve: \"exponential\",\n                decay: 0.4,\n                release: 1.4,\n                sustain: 0.01,\n            },\n            octaves: 10,\n            oscillator: {\n                type: \"sine\",\n            },\n            pitchDecay: 0.05,\n        });\n    }\n    setNote(note, time) {\n        const seconds = this.toSeconds(time);\n        const hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n        const maxNote = hertz * this.octaves;\n        this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        return this;\n    }\n}\n__decorate([\n    range(0)\n], MembraneSynth.prototype, \"octaves\", void 0);\n__decorate([\n    timeRange(0)\n], MembraneSynth.prototype, \"pitchDecay\", void 0);\n//# sourceMappingURL=MembraneSynth.js.map","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext = new Set();\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction) {\n    workletContext.add(classOrFunction);\n}\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name, classDesc) {\n    const processor = /* javascript */ `registerProcessor(\"${name}\", ${classDesc})`;\n    workletContext.add(processor);\n}\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope() {\n    return Array.from(workletContext).join(\"\\n\");\n}\n//# sourceMappingURL=WorkletGlobalScope.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\naddToWorklet(toneAudioWorkletProcessor);\n//# sourceMappingURL=ToneAudioWorkletProcessor.worklet.js.map","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\naddToWorklet(singleIOProcess);\n//# sourceMappingURL=SingleIOProcessor.worklet.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\naddToWorklet(delayLine);\n//# sourceMappingURL=DelayLine.worklet.js.map","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"feedback-comb-filter\";\nconst feedbackCombFilter = /* javascript */ `\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, feedbackCombFilter);\n//# sourceMappingURL=FeedbackCombFilter.worklet.js.map","import { MidiClass } from \"../core/type/Midi\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"./Instrument\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second parameter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\nexport class PolySynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]));\n        this.name = \"PolySynth\";\n        /**\n         * The voices which are not currently in use\n         */\n        this._availableVoices = [];\n        /**\n         * The currently active voices\n         */\n        this._activeVoices = [];\n        /**\n         * All of the allocated voices for this synth.\n         */\n        this._voices = [];\n        /**\n         * The GC timeout. Held so that it could be cancelled when the node is disposed.\n         */\n        this._gcTimeout = -1;\n        /**\n         * A moving average of the number of active voices\n         */\n        this._averageActiveVoices = 0;\n        /**\n         * The release which is scheduled to the timeline.\n         */\n        this._syncedRelease = (time) => this.releaseAll(time);\n        const options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n        // check against the old API (pre 14.3.0)\n        assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n        const defaults = options.voice.getDefaults();\n        this.options = Object.assign(defaults, options.options);\n        this.voice = options.voice;\n        this.maxPolyphony = options.maxPolyphony;\n        // create the first voice\n        this._dummyVoice = this._getNextAvailableVoice();\n        // remove it from the voices list\n        const index = this._voices.indexOf(this._dummyVoice);\n        this._voices.splice(index, 1);\n        // kick off the GC interval\n        this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            maxPolyphony: 32,\n            options: {},\n            voice: Synth,\n        });\n    }\n    /**\n     * The number of active voices.\n     */\n    get activeVoices() {\n        return this._activeVoices.length;\n    }\n    /**\n     * Invoked when the source is done making sound, so that it can be\n     * readded to the pool of available voices\n     */\n    _makeVoiceAvailable(voice) {\n        this._availableVoices.push(voice);\n        // remove the midi note from 'active voices'\n        const activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);\n        this._activeVoices.splice(activeVoiceIndex, 1);\n    }\n    /**\n     * Get an available voice from the pool of available voices.\n     * If one is not available and the maxPolyphony limit is reached,\n     * steal a voice, otherwise return null.\n     */\n    _getNextAvailableVoice() {\n        // if there are available voices, return the first one\n        if (this._availableVoices.length) {\n            return this._availableVoices.shift();\n        }\n        else if (this._voices.length < this.maxPolyphony) {\n            // otherwise if there is still more maxPolyphony, make a new voice\n            const voice = new this.voice(Object.assign(this.options, {\n                context: this.context,\n                onsilence: this._makeVoiceAvailable.bind(this),\n            }));\n            assert(voice instanceof Monophonic, \"Voice must extend Monophonic class\");\n            voice.connect(this.output);\n            this._voices.push(voice);\n            return voice;\n        }\n        else {\n            warn(\"Max polyphony exceeded. Note dropped.\");\n        }\n    }\n    /**\n     * Occasionally check if there are any allocated voices which can be cleaned up.\n     */\n    _collectGarbage() {\n        this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n        if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n            // take off an available note\n            const firstAvail = this._availableVoices.shift();\n            const index = this._voices.indexOf(firstAvail);\n            this._voices.splice(index, 1);\n            if (!this.context.isOffline) {\n                firstAvail.dispose();\n            }\n        }\n    }\n    /**\n     * Internal method which triggers the attack\n     */\n    _triggerAttack(notes, time, velocity) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const voice = this._getNextAvailableVoice();\n            if (voice) {\n                voice.triggerAttack(note, time, velocity);\n                this._activeVoices.push({\n                    midi: midiNote, voice, released: false,\n                });\n                this.log(\"triggerAttack\", note, time);\n            }\n        });\n    }\n    /**\n     * Internal method which triggers the release\n     */\n    _triggerRelease(notes, time) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);\n            if (event) {\n                // trigger release on that note\n                event.voice.triggerRelease(time);\n                // mark it as released\n                event.released = true;\n                this.log(\"triggerRelease\", note, time);\n            }\n        });\n    }\n    /**\n     * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n     * to wait for just-in-time scheduling\n     */\n    _scheduleEvent(type, notes, time, velocity) {\n        assert(!this.disposed, \"Synth was already disposed\");\n        // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n        if (time <= this.now()) {\n            // do it immediately\n            if (type === \"attack\") {\n                this._triggerAttack(notes, time, velocity);\n            }\n            else {\n                this._triggerRelease(notes, time);\n            }\n        }\n        else {\n            // schedule it to start in the future\n            this.context.setTimeout(() => {\n                if (!this.disposed) {\n                    this._scheduleEvent(type, notes, time, velocity);\n                }\n            }, time - this.now());\n        }\n    }\n    /**\n     * Trigger the attack portion of the note\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  The start time of the note.\n     * @param velocity The velocity of the note.\n     * @example\n     * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n     * // trigger a chord immediately with a velocity of 0.2\n     * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n     */\n    triggerAttack(notes, time, velocity) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n        return this;\n    }\n    /**\n     * Trigger the release of the note. Unlike monophonic instruments,\n     * a note (or array of notes) needs to be passed in as the first argument.\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  When the release will be triggered.\n     * @example\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n     * // trigger the release of the given notes.\n     * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n     * poly.triggerRelease(\"F5\", \"+3\");\n     */\n    triggerRelease(notes, time) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"release\", notes, computedTime);\n        return this;\n    }\n    /**\n     * Trigger the attack and release after the specified duration\n     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n     * @param  duration the duration of the note\n     * @param  time  if no time is given, defaults to now\n     * @param  velocity the velocity of the attack (0-1)\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * // can pass in an array of durations as well\n     * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n     */\n    triggerAttackRelease(notes, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n            notes = notes;\n            for (let i = 0; i < notes.length; i++) {\n                const d = duration[Math.min(i, duration.length - 1)];\n                const durationSeconds = this.toSeconds(d);\n                assert(durationSeconds > 0, \"The duration must be greater than 0\");\n                this.triggerRelease(notes[i], computedTime + durationSeconds);\n            }\n        }\n        else {\n            const durationSeconds = this.toSeconds(duration);\n            assert(durationSeconds > 0, \"The duration must be greater than 0\");\n            this.triggerRelease(notes, computedTime + durationSeconds);\n        }\n        return this;\n    }\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 1);\n            // make sure that the sound doesn't play after its been stopped\n            this.context.transport.on(\"stop\", this._syncedRelease);\n            this.context.transport.on(\"pause\", this._syncedRelease);\n            this.context.transport.on(\"loopEnd\", this._syncedRelease);\n        }\n        return this;\n    }\n    /**\n     * Set a member/attribute of the voices\n     * @example\n     * const poly = new Tone.PolySynth().toDestination();\n     * // set all of the voices using an options object for the synth type\n     * poly.set({\n     * \tenvelope: {\n     * \t\tattack: 0.25\n     * \t}\n     * });\n     * poly.triggerAttackRelease(\"Bb3\", 0.2);\n     */\n    set(options) {\n        // remove options which are controlled by the PolySynth\n        const sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n        // store all of the options\n        this.options = deepMerge(this.options, sanitizedOptions);\n        this._voices.forEach(voice => voice.set(sanitizedOptions));\n        this._dummyVoice.set(sanitizedOptions);\n        return this;\n    }\n    get() {\n        return this._dummyVoice.get();\n    }\n    /**\n     * Trigger the release portion of all the currently active voices immediately.\n     * Useful for silencing the synth.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeVoices.forEach(({ voice }) => {\n            voice.triggerRelease(computedTime);\n        });\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._dummyVoice.dispose();\n        this._voices.forEach(v => v.dispose());\n        this._activeVoices = [];\n        this._availableVoices = [];\n        this.context.clearInterval(this._gcTimeout);\n        return this;\n    }\n}\n//# sourceMappingURL=PolySynth.js.map","import { __decorate } from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { ftomf, intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tA1: \"A1.mp3\",\n * \t\tA2: \"A2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t}\n * }).toDestination();\n * @category Instrument\n */\nexport class Sampler extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n        this.name = \"Sampler\";\n        /**\n         * The object of all currently playing BufferSources\n         */\n        this._activeSources = new Map();\n        const options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        const urlMap = {};\n        Object.keys(options.urls).forEach((note) => {\n            const noteNumber = parseInt(note, 10);\n            assert(isNote(note)\n                || (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n            if (isNote(note)) {\n                // convert the note name to MIDI\n                const mid = new FrequencyClass(this.context, note).toMidi();\n                urlMap[mid] = options.urls[note];\n            }\n            else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n                // otherwise if it's numbers assume it's midi\n                urlMap[noteNumber] = options.urls[noteNumber];\n            }\n        });\n        this._buffers = new ToneAudioBuffers({\n            urls: urlMap,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror,\n        });\n        this.attack = options.attack;\n        this.release = options.release;\n        this.curve = options.curve;\n        // invoke the callback if it's already loaded\n        if (this._buffers.loaded) {\n            // invoke onload deferred\n            Promise.resolve().then(options.onload);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            attack: 0,\n            baseUrl: \"\",\n            curve: \"exponential\",\n            onload: noOp,\n            onerror: noOp,\n            release: 0.1,\n            urls: {},\n        });\n    }\n    /**\n     * Returns the difference in steps between the given midi note at the closets sample.\n     */\n    _findClosest(midi) {\n        // searches within 8 octaves of the given midi note\n        const MAX_INTERVAL = 96;\n        let interval = 0;\n        while (interval < MAX_INTERVAL) {\n            // check above and below\n            if (this._buffers.has(midi + interval)) {\n                return -interval;\n            }\n            else if (this._buffers.has(midi - interval)) {\n                return interval;\n            }\n            interval++;\n        }\n        throw new Error(`No available buffers for note: ${midi}`);\n    }\n    /**\n     * @param  notes\tThe note to play, or an array of notes.\n     * @param  time     When to play the note\n     * @param  velocity The velocity to play the sample back.\n     */\n    triggerAttack(notes, time, velocity = 1) {\n        this.log(\"triggerAttack\", notes, time, velocity);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midiFloat = ftomf(new FrequencyClass(this.context, note).toFrequency());\n            const midi = Math.round(midiFloat);\n            const remainder = midiFloat - midi;\n            // find the closest note pitch\n            const difference = this._findClosest(midi);\n            const closestNote = midi - difference;\n            const buffer = this._buffers.get(closestNote);\n            const playbackRate = intervalToFrequencyRatio(difference + remainder);\n            // play that note\n            const source = new ToneBufferSource({\n                url: buffer,\n                context: this.context,\n                curve: this.curve,\n                fadeIn: this.attack,\n                fadeOut: this.release,\n                playbackRate,\n            }).connect(this.output);\n            source.start(time, 0, buffer.duration / playbackRate, velocity);\n            // add it to the active sources\n            if (!isArray(this._activeSources.get(midi))) {\n                this._activeSources.set(midi, []);\n            }\n            this._activeSources.get(midi).push(source);\n            // remove it when it's done\n            source.onended = () => {\n                if (this._activeSources && this._activeSources.has(midi)) {\n                    const sources = this._activeSources.get(midi);\n                    const index = sources.indexOf(source);\n                    if (index !== -1) {\n                        sources.splice(index, 1);\n                    }\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * @param  notes\tThe note to release, or an array of notes.\n     * @param  time     \tWhen to release the note.\n     */\n    triggerRelease(notes, time) {\n        this.log(\"triggerRelease\", notes, time);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midi = new FrequencyClass(this.context, note).toMidi();\n            // find the note\n            if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {\n                const sources = this._activeSources.get(midi);\n                time = this.toSeconds(time);\n                sources.forEach(source => {\n                    source.stop(time);\n                });\n                this._activeSources.set(midi, []);\n            }\n        });\n        return this;\n    }\n    /**\n     * Release all currently active notes.\n     * @param  time     \tWhen to release the notes.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(sources => {\n            while (sources.length) {\n                const source = sources.shift();\n                source.stop(computedTime);\n            }\n        });\n        return this;\n    }\n    sync() {\n        if (this._syncState()) {\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 1);\n        }\n        return this;\n    }\n    /**\n     * Invoke the attack phase, then after the duration, invoke the release.\n     * @param  notes\tThe note to play and release, or an array of notes.\n     * @param  duration The time the note should be held\n     * @param  time     When to start the attack\n     * @param  velocity The velocity of the attack\n     */\n    triggerAttackRelease(notes, duration, time, velocity = 1) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"notes must be an array when duration is array\");\n            notes.forEach((note, index) => {\n                const d = duration[Math.min(index, duration.length - 1)];\n                this.triggerRelease(note, computedTime + this.toSeconds(d));\n            });\n        }\n        else {\n            this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n        }\n        return this;\n    }\n    /**\n     * Add a note to the sampler.\n     * @param  note      The buffer's pitch.\n     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     */\n    add(note, url, callback) {\n        assert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n        if (isNote(note)) {\n            // convert the note name to MIDI\n            const mid = new FrequencyClass(this.context, note).toMidi();\n            this._buffers.add(mid, url, callback);\n        }\n        else {\n            // otherwise if it's numbers assume it's midi\n            this._buffers.add(note, url, callback);\n        }\n        return this;\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return this._buffers.loaded;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffers.dispose();\n        this._activeSources.forEach(sources => {\n            sources.forEach(source => source.dispose());\n        });\n        this._activeSources.clear();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"release\", void 0);\n//# sourceMappingURL=Sampler.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nexport class CrossFade extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n        this.name = \"CrossFade\";\n        /**\n         * The crossfading is done by a StereoPannerNode\n         */\n        this._panner = this.context.createStereoPanner();\n        /**\n         * Split the output of the panner node into two values used to control the gains.\n         */\n        this._split = this.context.createChannelSplitter(2);\n        /**\n         * Convert the fade value into an audio range value so it can be connected\n         * to the panner.pan AudioParam\n         */\n        this._g2a = new GainToAudio({ context: this.context });\n        /**\n         * The input which is at full level when fade = 0\n         */\n        this.a = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The input which is at full level when fade = 1\n         */\n        this.b = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output is a mix between `a` and `b` at the ratio of `fade`\n         */\n        this.output = new Gain({ context: this.context });\n        this._internalChannels = [this.a, this.b];\n        const options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n        this.fade = new Signal({\n            context: this.context,\n            units: \"normalRange\",\n            value: options.fade,\n        });\n        readOnly(this, \"fade\");\n        this.context.getConstant(1).connect(this._panner);\n        this._panner.connect(this._split);\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = 1;\n        this._panner.channelCountMode = \"explicit\";\n        connect(this._split, this.a.gain, 0);\n        connect(this._split, this.b.gain, 1);\n        this.fade.chain(this._g2a, this._panner.pan);\n        this.a.connect(this.output);\n        this.b.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            fade: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.a.dispose();\n        this.b.dispose();\n        this.output.dispose();\n        this.fade.dispose();\n        this._g2a.dispose();\n        this._panner.disconnect();\n        this._split.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=CrossFade.js.map","import { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nexport class Effect extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"Effect\";\n        /**\n         * the drywet knob to control the amount of effect\n         */\n        this._dryWet = new CrossFade({ context: this.context });\n        /**\n         * The wet control is how much of the effected\n         * will pass through to the output. 1 = 100% effected\n         * signal, 0 = 100% dry signal.\n         */\n        this.wet = this._dryWet.fade;\n        /**\n         * connect the effectSend to the input of hte effect\n         */\n        this.effectSend = new Gain({ context: this.context });\n        /**\n         * connect the output of the effect to the effectReturn\n         */\n        this.effectReturn = new Gain({ context: this.context });\n        /**\n         * The effect input node\n         */\n        this.input = new Gain({ context: this.context });\n        /**\n         * The effect output\n         */\n        this.output = this._dryWet;\n        // connections\n        this.input.fan(this._dryWet.a, this.effectSend);\n        this.effectReturn.connect(this._dryWet.b);\n        this.wet.setValueAtTime(options.wet, 0);\n        this._internalChannels = [this.effectReturn, this.effectSend];\n        readOnly(this, \"wet\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    }\n    /**\n     * chains the effect in between the effectSend and effectReturn\n     */\n    connectEffect(effect) {\n        // add it to the internal channels\n        this._internalChannels.push(effect);\n        this.effectSend.chain(effect, this.effectReturn);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._dryWet.dispose();\n        this.effectSend.dispose();\n        this.effectReturn.dispose();\n        this.wet.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Effect.js.map","import { Effect } from \"../effect/Effect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for LFO-based effects.\n */\nexport class LFOEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"LFOEffect\";\n        this._lfo = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            amplitude: options.depth,\n        });\n        this.depth = this._lfo.amplitude;\n        this.frequency = this._lfo.frequency;\n        this.type = options.type;\n        readOnly(this, [\"frequency\", \"depth\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            frequency: 1,\n            type: \"sine\",\n            depth: 1,\n        });\n    }\n    /**\n     * Start the effect.\n     */\n    start(time) {\n        this._lfo.start(time);\n        return this;\n    }\n    /**\n     * Stop the lfo\n     */\n    stop(time) {\n        this._lfo.stop(time);\n        return this;\n    }\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n    sync() {\n        this._lfo.sync();\n        return this;\n    }\n    /**\n     * Unsync the filter from the transport.\n     */\n    unsync() {\n        this._lfo.unsync();\n        return this;\n    }\n    /**\n     * The type of the LFO's oscillator: See [[Oscillator.type]]\n     * @example\n     * const autoFilter = new Tone.AutoFilter().start().toDestination();\n     * const noise = new Tone.Noise().start().connect(autoFilter);\n     * autoFilter.type = \"square\";\n     */\n    get type() {\n        return this._lfo.type;\n    }\n    set type(type) {\n        this._lfo.type = type;\n    }\n    dispose() {\n        super.dispose();\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LFOEffect.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @example\n * return Tone.Offline(() => {\n * // move the input signal from right to left\n * \tconst panner = new Tone.Panner(1).toDestination();\n * \tpanner.pan.rampTo(-1, 0.5);\n * \tconst osc = new Tone.Oscillator(100).connect(panner).start();\n * }, 0.5, 2);\n * @category Component\n */\nexport class Panner extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n        this.name = \"Panner\";\n        /**\n         * the panner node\n         */\n        this._panner = this.context.createStereoPanner();\n        this.input = this._panner;\n        this.output = this._panner;\n        const options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n        this.pan = new Param({\n            context: this.context,\n            param: this._panner.pan,\n            value: options.pan,\n            minValue: -1,\n            maxValue: 1,\n        });\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = options.channelCount;\n        this._panner.channelCountMode = \"explicit\";\n        // initial value\n        readOnly(this, \"pan\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            channelCount: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.disconnect();\n        this.pan.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Panner.js.map","import { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nexport class AutoPanner extends LFOEffect {\n    constructor() {\n        super(optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"AutoPanner\";\n        const options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n        this._panner = new Panner({\n            context: this.context,\n            channelCount: options.channelCount\n        });\n        // connections\n        this.connectEffect(this._panner);\n        this._lfo.connect(this._panner.pan);\n        this._lfo.min = -1;\n        this._lfo.max = 1;\n    }\n    static getDefaults() {\n        return Object.assign(LFOEffect.getDefaults(), {\n            channelCount: 1\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AutoPanner.js.map","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"bit-crusher\";\nexport const bitCrusherWorklet = /* javascript */ `\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, bitCrusherWorklet);\n//# sourceMappingURL=BitCrusher.worklet.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\nexport class Merge extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n        this.name = \"Merge\";\n        const options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n        this._merger = this.output = this.input = this.context.createChannelMerger(options.channels);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._merger.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Merge.js.map","import { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport class FeedbackEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"FeedbackEffect\";\n        this._feedbackGain = new Gain({\n            context: this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        this.feedback = this._feedbackGain.gain;\n        readOnly(this, \"feedback\");\n        // the feedback loop\n        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackEffect.js.map","import { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n        this.name = \"FeedbackDelay\";\n        const options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        this._delayNode = new Delay({\n            context: this.context,\n            delayTime: options.delayTime,\n            maxDelay: options.maxDelay,\n        });\n        this.delayTime = this._delayNode.delayTime;\n        // connect it up\n        this.connectEffect(this._delayNode);\n        readOnly(this, \"delayTime\");\n    }\n    static getDefaults() {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._delayNode.dispose();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackDelay.js.map","import { __awaiter } from \"tslib\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound.\n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n * @category Effect\n */\nexport class Reverb extends Effect {\n    constructor() {\n        super(optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]));\n        this.name = \"Reverb\";\n        /**\n         * Convolver node\n         */\n        this._convolver = this.context.createConvolver();\n        /**\n         * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n         * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n         * before the IR is generated with the latest values.\n         */\n        this.ready = Promise.resolve();\n        const options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n        this._decay = options.decay;\n        this._preDelay = options.preDelay;\n        this.generate();\n        this.connectEffect(this._convolver);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            decay: 1.5,\n            preDelay: 0.01,\n        });\n    }\n    /**\n     * The duration of the reverb.\n     */\n    get decay() {\n        return this._decay;\n    }\n    set decay(time) {\n        time = this.toSeconds(time);\n        assertRange(time, 0.001);\n        this._decay = time;\n        this.generate();\n    }\n    /**\n     * The amount of time before the reverb is fully ramped in.\n     */\n    get preDelay() {\n        return this._preDelay;\n    }\n    set preDelay(time) {\n        time = this.toSeconds(time);\n        assertRange(time, 0);\n        this._preDelay = time;\n        this.generate();\n    }\n    /**\n     * Generate the Impulse Response. Returns a promise while the IR is being generated.\n     * @return Promise which returns this object.\n     */\n    generate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const previousReady = this.ready;\n            // create a noise burst which decays over the duration in each channel\n            const context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n            const noiseL = new Noise({ context });\n            const noiseR = new Noise({ context });\n            const merge = new Merge({ context });\n            noiseL.connect(merge, 0, 0);\n            noiseR.connect(merge, 0, 1);\n            const gainNode = new Gain({ context }).toDestination();\n            merge.connect(gainNode);\n            noiseL.start(0);\n            noiseR.start(0);\n            // predelay\n            gainNode.gain.setValueAtTime(0, 0);\n            gainNode.gain.setValueAtTime(1, this._preDelay);\n            // decay\n            gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n            // render the buffer\n            const renderPromise = context.render();\n            this.ready = renderPromise.then(noOp);\n            // wait for the previous `ready` to resolve\n            yield previousReady;\n            // set the buffer\n            this._convolver.buffer = (yield renderPromise).get();\n            return this;\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._convolver.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Reverb.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n        this.name = \"Solo\";\n        const options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n        });\n        if (!Solo._allSolos.has(this.context)) {\n            Solo._allSolos.set(this.context, new Set());\n        }\n        Solo._allSolos.get(this.context).add(this);\n        // set initially\n        this.solo = options.solo;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            solo: false,\n        });\n    }\n    /**\n     * Isolates this instance and mutes all other instances of Solo.\n     * Only one instance can be soloed at a time. A soloed\n     * instance will report `solo=false` when another instance is soloed.\n     */\n    get solo() {\n        return this._isSoloed();\n    }\n    set solo(solo) {\n        if (solo) {\n            this._addSolo();\n        }\n        else {\n            this._removeSolo();\n        }\n        Solo._allSolos.get(this.context).forEach(instance => instance._updateSolo());\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed\n     */\n    get muted() {\n        return this.input.gain.value === 0;\n    }\n    /**\n     * Add this to the soloed array\n     */\n    _addSolo() {\n        if (!Solo._soloed.has(this.context)) {\n            Solo._soloed.set(this.context, new Set());\n        }\n        Solo._soloed.get(this.context).add(this);\n    }\n    /**\n     * Remove this from the soloed array\n     */\n    _removeSolo() {\n        if (Solo._soloed.has(this.context)) {\n            Solo._soloed.get(this.context).delete(this);\n        }\n    }\n    /**\n     * Is this on the soloed array\n     */\n    _isSoloed() {\n        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n    }\n    /**\n     * Returns true if no one is soloed\n     */\n    _noSolos() {\n        // either does not have any soloed added\n        return !Solo._soloed.has(this.context) ||\n            // or has a solo set but doesn't include any items\n            (Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0);\n    }\n    /**\n     * Solo the current instance and unsolo all other instances.\n     */\n    _updateSolo() {\n        if (this._isSoloed()) {\n            this.input.gain.value = 1;\n        }\n        else if (this._noSolos()) {\n            // no one is soloed\n            this.input.gain.value = 1;\n        }\n        else {\n            this.input.gain.value = 0;\n        }\n    }\n    dispose() {\n        super.dispose();\n        Solo._allSolos.get(this.context).delete(this);\n        this._removeSolo();\n        return this;\n    }\n}\n/**\n * Hold all of the solo'ed tracks belonging to a specific context\n */\nSolo._allSolos = new Map();\n/**\n * Hold the currently solo'ed instance(s)\n */\nSolo._soloed = new Map();\n//# sourceMappingURL=Solo.js.map","import { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n        this.name = \"PanVol\";\n        const options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n        this._panner = this.input = new Panner({\n            context: this.context,\n            pan: options.pan,\n            channelCount: options.channelCount,\n        });\n        this.pan = this._panner.pan;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        // connections\n        this._panner.connect(this._volume);\n        this.mute = options.mute;\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            pan: 0,\n            volume: 0,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        this.pan.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PanVol.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n        this.name = \"Channel\";\n        const options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n        this._solo = this.input = new Solo({\n            solo: options.solo,\n            context: this.context,\n        });\n        this._panVol = this.output = new PanVol({\n            context: this.context,\n            pan: options.pan,\n            volume: options.volume,\n            mute: options.mute,\n            channelCount: options.channelCount\n        });\n        this.pan = this._panVol.pan;\n        this.volume = this._panVol.volume;\n        this._solo.connect(this._panVol);\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            volume: 0,\n            mute: false,\n            solo: false,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n     */\n    get solo() {\n        return this._solo.solo;\n    }\n    set solo(solo) {\n        this._solo.solo = solo;\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed,\n     * or the channel is muted\n     */\n    get muted() {\n        return this._solo.muted || this.mute;\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._panVol.mute;\n    }\n    set mute(mute) {\n        this._panVol.mute = mute;\n    }\n    /**\n     * Get the gain node belonging to the bus name. Create it if\n     * it doesn't exist\n     * @param name The bus name\n     */\n    _getBus(name) {\n        if (!Channel.buses.has(name)) {\n            Channel.buses.set(name, new Gain({ context: this.context }));\n        }\n        return Channel.buses.get(name);\n    }\n    /**\n     * Send audio to another channel using a string. `send` is a lot like\n     * [[connect]], except it uses a string instead of an object. This can\n     * be useful in large applications to decouple sections since [[send]]\n     * and [[receive]] can be invoked separately in order to connect an object\n     * @param name The channel name to send the audio\n     * @param volume The amount of the signal to send.\n     * \tDefaults to 0db, i.e. send the entire signal\n     * @returns Returns the gain node of this connection.\n     */\n    send(name, volume = 0) {\n        const bus = this._getBus(name);\n        const sendKnob = new Gain({\n            context: this.context,\n            units: \"decibels\",\n            gain: volume,\n        });\n        this.connect(sendKnob);\n        sendKnob.connect(bus);\n        return sendKnob;\n    }\n    /**\n     * Receive audio from a channel which was connected with [[send]].\n     * @param name The channel name to receive audio from.\n     */\n    receive(name) {\n        const bus = this._getBus(name);\n        bus.connect(this);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._panVol.dispose();\n        this.pan.dispose();\n        this.volume.dispose();\n        this._solo.dispose();\n        return this;\n    }\n}\n/**\n * Store the send/receive channels by name.\n */\nChannel.buses = new Map();\n//# sourceMappingURL=Channel.js.map","import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nexport class Listener extends ToneAudioNode {\n    constructor() {\n        super(...arguments);\n        this.name = \"Listener\";\n        this.positionX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionZ,\n        });\n        this.forwardX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardX,\n        });\n        this.forwardY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardY,\n        });\n        this.forwardZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardZ,\n        });\n        this.upX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upX,\n        });\n        this.upY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upY,\n        });\n        this.upZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.listener = new Listener({ context });\n});\nonContextClose(context => {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * const comp = new Tone.Compressor(-30, 3);\n * @category Component\n */\nexport class Compressor extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]));\n        this.name = \"Compressor\";\n        /**\n         * the compressor node\n         */\n        this._compressor = this.context.createDynamicsCompressor();\n        this.input = this._compressor;\n        this.output = this._compressor;\n        const options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n        this.threshold = new Param({\n            minValue: this._compressor.threshold.minValue,\n            maxValue: this._compressor.threshold.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.threshold,\n            units: \"decibels\",\n            value: options.threshold,\n        });\n        this.attack = new Param({\n            minValue: this._compressor.attack.minValue,\n            maxValue: this._compressor.attack.maxValue,\n            context: this.context,\n            param: this._compressor.attack,\n            units: \"time\",\n            value: options.attack,\n        });\n        this.release = new Param({\n            minValue: this._compressor.release.minValue,\n            maxValue: this._compressor.release.maxValue,\n            context: this.context,\n            param: this._compressor.release,\n            units: \"time\",\n            value: options.release,\n        });\n        this.knee = new Param({\n            minValue: this._compressor.knee.minValue,\n            maxValue: this._compressor.knee.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.knee,\n            units: \"decibels\",\n            value: options.knee,\n        });\n        this.ratio = new Param({\n            minValue: this._compressor.ratio.minValue,\n            maxValue: this._compressor.ratio.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.ratio,\n            units: \"positive\",\n            value: options.ratio,\n        });\n        // set the defaults\n        readOnly(this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.003,\n            knee: 30,\n            ratio: 12,\n            release: 0.25,\n            threshold: -24,\n        });\n    }\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n     */\n    get reduction() {\n        return this._compressor.reduction;\n    }\n    dispose() {\n        super.dispose();\n        this._compressor.disconnect();\n        this.attack.dispose();\n        this.release.dispose();\n        this.threshold.dispose();\n        this.ratio.dispose();\n        this.knee.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Compressor.js.map","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport function now() {\n    return getContext().now();\n}\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate() {\n    return getContext().immediate();\n}\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport() {\n    return getContext().transport;\n}\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination() {\n    return getContext().destination;\n}\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener() {\n    return getContext().listener;\n}\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n/**\n * Get the singleton attached to the global context.\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport function getDraw() {\n    return getContext().draw;\n}\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n    return ToneAudioBuffer.loaded();\n}\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;\n//# sourceMappingURL=index.js.map","import { computed, isReadonly, ref } from 'vue-demi';\nimport { toValue, clamp, reactify } from '@vueuse/shared';\n\nfunction createGenericProjection(fromDomain, toDomain, projector) {\n  return (input) => {\n    return computed(() => projector(toValue(input), toValue(fromDomain), toValue(toDomain)));\n  };\n}\n\nfunction defaultNumericProjector(input, from, to) {\n  return (input - from[0]) / (from[1] - from[0]) * (to[1] - to[0]) + to[0];\n}\nfunction createProjection(fromDomain, toDomain, projector = defaultNumericProjector) {\n  return createGenericProjection(fromDomain, toDomain, projector);\n}\n\nfunction logicAnd(...args) {\n  return computed(() => args.every((i) => toValue(i)));\n}\n\nfunction logicNot(v) {\n  return computed(() => !toValue(v));\n}\n\nfunction logicOr(...args) {\n  return computed(() => args.some((i) => toValue(i)));\n}\n\nfunction useAbs(value) {\n  return computed(() => Math.abs(toValue(value)));\n}\n\nfunction toValueArgsFlat(args) {\n  return args.flatMap((i) => {\n    const v = toValue(i);\n    if (Array.isArray(v))\n      return v.map((i2) => toValue(i2));\n    return [v];\n  });\n}\n\nfunction useAverage(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return array.reduce((sum, v) => sum += v, 0) / array.length;\n  });\n}\n\nfunction useCeil(value) {\n  return computed(() => Math.ceil(toValue(value)));\n}\n\nfunction useClamp(value, min, max) {\n  if (typeof value === \"function\" || isReadonly(value))\n    return computed(() => clamp(toValue(value), toValue(min), toValue(max)));\n  const _value = ref(value);\n  return computed({\n    get() {\n      return _value.value = clamp(_value.value, toValue(min), toValue(max));\n    },\n    set(value2) {\n      _value.value = clamp(value2, toValue(min), toValue(max));\n    }\n  });\n}\n\nfunction useFloor(value) {\n  return computed(() => Math.floor(toValue(value)));\n}\n\nfunction useMath(key, ...args) {\n  return reactify(Math[key])(...args);\n}\n\nfunction useMax(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return Math.max(...array);\n  });\n}\n\nfunction useMin(...args) {\n  return computed(() => {\n    const array = toValueArgsFlat(args);\n    return Math.min(...array);\n  });\n}\n\nfunction accurateMultiply(value, power) {\n  const valueStr = value.toString();\n  if (value > 0 && valueStr.includes(\".\")) {\n    const decimalPlaces = valueStr.split(\".\")[1].length;\n    const multiplier = 10 ** decimalPlaces;\n    return value * multiplier * power / multiplier;\n  } else {\n    return value * power;\n  }\n}\nfunction usePrecision(value, digits, options) {\n  return computed(() => {\n    var _a;\n    const _value = toValue(value);\n    const _digits = toValue(digits);\n    const power = 10 ** _digits;\n    return Math[((_a = toValue(options)) == null ? void 0 : _a.math) || \"round\"](accurateMultiply(_value, power)) / power;\n  });\n}\n\nfunction useProjection(input, fromDomain, toDomain, projector) {\n  return createProjection(fromDomain, toDomain, projector)(input);\n}\n\nfunction useRound(value) {\n  return computed(() => Math.round(toValue(value)));\n}\n\nfunction useSum(...args) {\n  return computed(() => toValueArgsFlat(args).reduce((sum, v) => sum += v, 0));\n}\n\nfunction useTrunc(value) {\n  return computed(() => Math.trunc(toValue(value)));\n}\n\nexport { logicAnd as and, createGenericProjection, createProjection, logicAnd, logicNot, logicOr, logicNot as not, logicOr as or, useAbs, useAverage, useCeil, useClamp, useFloor, useMath, useMax, useMin, usePrecision, useProjection, useRound, useSum, useTrunc };\n","import { PolySynth, MonoSynth, start, now, Midi, Transport, Reverb, Frequency, AutoPanner, FeedbackDelay, Compressor } from 'tone'\nimport { midi } from './midi'\nimport { useStorage } from '@vueuse/core'\nimport { onKeyDown } from '@vueuse/core'\n\n\nexport const synth = {}\n\n\n\nexport const synthOptions = reactive({\n  midi: true,\n  bpm: useClamp(useStorage(\"tempo-bpm\", 90), 10, 500),\n  quantize: useStorage('quantize', '@8n'),\n  octave: useClamp(useStorage(\"synth-transpose\", 0), -2, 2),\n  transpose: computed(() => synthOptions.octave * 12),\n  initiated: false,\n  params: {\n    oscillator: {\n      type: useStorage('synth-osc', 'sawtooth8')\n    },\n    volume: -20,\n    envelope: {\n      attack: 0.005,\n      decay: 0.3,\n      sustain: 0.4,\n      release: 0.8,\n    },\n    filterEnvelope: {\n      attack: 0.001,\n      decay: 0.7,\n      sustain: 0.5,\n      release: 1,\n      baseFrequency: 60,\n      octaves: 5\n    }\n  }\n})\n\n\n\nexport function useSynth() {\n  if (!synthOptions.initiated) {\n\n    onKeyDown('zя'.split(''), (ev) => {\n      synthOptions.octave--\n    })\n    onKeyDown('xч'.split(''), (ev) => {\n      synthOptions.octave++\n    })\n\n    onKeyDown('Escape', () => synthReleaseAll())\n\n    Transport.bpm.set(synthOptions.bpm);\n    Transport.start();\n\n    watch(() => synthOptions.bpm, bpm => {\n      Transport.bpm.rampTo(bpm, 2);\n    })\n\n    watch(() => synthOptions.params, params => {\n      if (synth.poly) {\n        synth.poly.set(params)\n      }\n    }, { deep: true })\n\n\n    watch(() => midi.note, note => {\n      if (!synthOptions.midi) return\n      if (note.velocity > 0) {\n        synthAttack(Midi(note.number).toFrequency(), note.velocity / 127)\n      } else {\n        synthRelease(Midi(note.number).toFrequency())\n      }\n    })\n\n    watch(() => midi.playing, play => {\n      if (!play) synthReleaseAll()\n    })\n  }\n  return { init, synth, synthOptions, synthOnce, synthAttack, synthRelease, synthReleaseAll }\n}\n\nexport function init() {\n  start()\n  if (synth?.poly) return\n  synth.compressor = new Compressor().toDestination()\n  synth.pan = new AutoPanner({ depth: 0.4, frequency: '8n', wet: 0.7 }).connect(synth.compressor)\n  synth.reverb = new Reverb(2.5).connect(synth.pan)\n  synth.poly = new PolySynth(MonoSynth, synthOptions.params).connect(synth.pan)\n  synth.delay = new FeedbackDelay({ delayTime: '8n', wet: 0.3, feedback: 0.3, maxDelay: '8n' }).toDestination()\n  synth.poly.connect(synth.reverb)\n  synth.poly.connect(synth.delay)\n  synth.poly.connect(synth.pan)\n  synth.pan.start()\n\n  synthOptions.initiated = true\n}\n\nexport function synthOnce(note = 'A4', duration = '8n', time) {\n  if (!synth.poly || synthOptions.mute) return init()\n  synth.poly.triggerAttackRelease(note, duration)\n  synth.poly.releaseAll(synthOptions.quantize)\n}\n\nexport function synthAttack(note, velocity) {\n  if (!synth.poly || synthOptions.mute) return init()\n  synth.poly.triggerAttack(Frequency(note).transpose(synthOptions.transpose), synthOptions.quantize, velocity)\n}\n\nexport function synthRelease(note) {\n  if (!synth.poly || synthOptions.mute) return init()\n  synth.poly.triggerRelease(Frequency(note).transpose(synthOptions.transpose), synthOptions.quantize)\n}\n\nexport function synthReleaseAll() {\n  if (!synth.poly || synthOptions.mute) return init()\n  synth.poly.releaseAll(synthOptions.quantize)\n}\n\n\n","import { WebMidi, Note } from \"webmidi\";\nimport { useStorage, useRafFn, onKeyDown, onKeyUp } from \"@vueuse/core\";\nimport { synthOptions } from \"./synth\";\n\n\nexport const midi = reactive({\n  enabled: false,\n  initiated: false,\n  keyboardInitiated: false,\n  offset: -1,\n  out: true,\n  inputs: {},\n  outputs: {},\n  forwards: {},\n  playing: false,\n  channels: {},\n  channel: useStorage(\"global-midi-channel\", 1),\n  note: null,\n  time: 0,\n  duration: 0,\n  maxDuration: 3000,\n  message: null,\n  log: [],\n  cc: {},\n  clock: 0,\n  filter: useStorage(\"global-midi-filter\", {}),\n  available: computed(() => Object.entries(midi.outputs).length > 0),\n  total: {\n    hits: 0,\n    dur: 0,\n    duration: computed(() => midi.total.dur + midi.duration),\n    notes: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    durations: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    durs: computed(() => midi.total.durations.map((d, p) => ({ pitch: p, dur: d })).filter(el => el.dur > 0)),\n    reset() {\n      midi.total.hits = 0;\n      midi.total.dur = 0\n      midi.total.notes = new Array(12).fill(0)\n      midi.total.durations = new Array(12).fill(0)\n    }\n  }\n});\n\nconst noteKeys = {\n  KeyA: { note: 'C', offset: 0 },\n  KeyW: { note: 'C#', offset: 0 },\n  KeyS: { note: 'D', offset: 0 },\n  KeyE: { note: 'D#', offset: 0 },\n  KeyD: { note: 'E', offset: 0 },\n  KeyF: { note: 'F', offset: 0 },\n  KeyT: { note: 'F#', offset: 0 },\n  KeyG: { note: 'G', offset: 0 },\n  KeyY: { note: 'G#', offset: 0 },\n  KeyH: { note: 'A', offset: 0 },\n  KeyU: { note: 'A#', offset: 0 },\n  KeyJ: { note: 'B', offset: 0 },\n  KeyK: { note: 'C', offset: 1 },\n  KeyO: { note: 'C#', offset: 1 },\n  KeyL: { note: 'D', offset: 1 },\n  KeyP: { note: 'D#', offset: 1 },\n  Semicolon: { note: 'E', offset: 1 },\n  Quote: { note: 'F', offset: 1 },\n  BracketRight: { note: 'F#', offset: 1 },\n}\n\n\nexport function useKeyboard() {\n\n  if (midi.keyboardInitiated) return\n\n  document.addEventListener('keydown', e => {\n    if (e.code == 'KeyZ') midi.offset--\n    if (e.code == 'KeyX') midi.offset++\n    if (e.repeat || !noteKeys[e.code]) return\n    if (e.ctrlKey || e.altKey || e.metaKey) return\n    if (e.code == 'Slash' || e.code == 'Quote') e.preventDefault()\n    playMidi(noteKeys[e.code].note, noteKeys[e.code].offset)\n  })\n\n  document.addEventListener('keyup', e => {\n    if (!noteKeys[e.code]) return\n    playMidi(noteKeys[e.code].note, noteKeys[e.code].offset, true)\n  })\n\n\n  onKeyDown('Enter', () => midi.total.reset())\n\n  midi.keyboardInitiated = true\n}\n\nfunction playMidi(name, offset, off) {\n  let title = name + (4 + offset + midi.offset)\n  const note = new Note(title, { attack: off ? 0 : 1 })\n  const ev = {\n    type: off ? 'noteoff' : 'noteon',\n    note,\n    port: { id: 'PC Keyboard' },\n    timestamp: midi.time,\n    target: { number: 0 },\n  }\n  noteInOn(ev)\n}\n\n\n\nconst { pause, resume } = useRafFn(() => {\n  midi.time = WebMidi.time\n  if (midi?.note?.velocity > 0) {\n    midi.duration = WebMidi.time - midi?.note?.timestamp\n  } else {\n    midi.total.dur += midi.duration\n    midi.total.durations[midi?.note?.pitch || 0] += midi.duration\n    midi.duration = 0\n  }\n})\n\nwatch(() => midi.duration, dur => {\n  if (dur > midi.maxDuration) {\n    midi.total.reset()\n  }\n})\n\n\nexport function useMidi() {\n  onMounted(() => {\n    if (WebMidi.supported) {\n      setupMidi();\n    }\n  });\n\n  watchEffect(() => {\n    if (!midi.out) return;\n    let outs = Object.values(WebMidi.outputs);\n    if (midi.playing) {\n      outs.forEach((output) => {\n        output.sendContinue();\n      });\n    } else {\n      outs.forEach((output) => {\n        output.sendStop();\n      });\n    }\n  });\n\n  return {\n    midi,\n    midiAttack,\n    midiRelease,\n    midiOnce,\n    setCC,\n    WebMidi,\n  };\n}\n\nfunction setupMidi() {\n  if (midi.initiated) return;\n  WebMidi.enable();\n  WebMidi.addListener(\"enabled\", (e) => {\n    midi.enabled = true;\n    initMidi();\n  });\n\n  // let interval = setInterval(() => {\n  //   initMidi();\n  // }, 3000);\n\n  WebMidi.addListener(\"connected\", (e) => {\n    initMidi();\n  });\n\n  WebMidi.addListener(\"disconnected\", (e) => {\n    delete midi[e.port.type + \"s\"][e.port.id];\n  });\n  midi.initiated = true;\n}\n\n\nfunction initMidi() {\n  midi.inputs = reactive({});\n\n  WebMidi.inputs.forEach((input) => {\n    midi.enabled = true;\n    midi.inputs[input.id] = {\n      name: input.name,\n      manufacturer: input.manufacturer,\n      forwarder: input.addForwarder(),\n      event: null,\n      note: null,\n      cc: null\n    };\n    input.removeListener();\n    input.addListener(\"start\", () => {\n      midi.playing = true;\n    });\n    input.addListener(\"stop\", () => {\n      midi.playing = false;\n      midi.channels = {};\n    });\n    input.addListener('midimessage', ev => {\n      if (ev?.message?.type == 'clock') return\n      midi.inputs[input.id].event = ev\n      midi.message = ev.message\n      midi.log.unshift(ev)\n      if (midi.log.length > 100) midi.log.pop()\n    })\n    input.addListener(\"noteon\", (ev) => {\n      midi.inputs[input.id].note = noteInOn(ev)\n\n    }, {\n      channels: \"all\",\n    });\n    input.addListener(\"noteoff\", (ev) => {\n      midi.inputs[input.id].note = noteInOn(ev)\n    }, { channels: \"all\" });\n\n    input.addListener(\"controlchange\", (ev) => {\n      const cc = ccIn(ev)\n      if (!cc) return\n      midi.inputs[input.id].cc = cc\n      midi.cc = cc\n    }, {\n      channels: \"all\",\n    });\n\n    input.addListener(\"clock\", (ev) => {\n      midi.clock = ev.timestamp;\n      //bpm = 60000 / ((ev.timestamp - prevTimestamp) * PPQ)  ppq=24\n    });\n  });\n\n  midi.outputs = reactive({});\n  WebMidi.outputs.forEach((output) => {\n    midi.outputs[output.id] = {\n      name: output.name,\n      manufacturer: output.manufacturer,\n    };\n  });\n}\n\nfunction noteInOn(ev) {\n  let note = ev.note;\n  note.port = ev.port.id;\n  note.type = ev.type;\n  note.timestamp = ev.timestamp;\n  note.channel = ev.target.number;\n  if (ev.type == \"noteoff\") {\n    note.velocity = 0;\n  } else {\n    note.velocity = 100;\n    midi.total.hits++\n    let pitch = (ev.note.number + 3) % 12;\n    midi.total.notes[pitch] = midi.total.notes[pitch] + 1\n  }\n  note.pitch = (note.number + 3) % 12;\n  note.octA = Math.floor((note.number + 3) / 12) - 1;\n  if (midi.filter[note.channel]) return;\n  createChannel(note.channel);\n  midi.channels[note.channel].notes[note.number] = note;\n  midi.note = note;\n  return note\n}\n\nfunction ccIn(ev) {\n  if (midi.filter[ev.target.number]) return;\n  let cc = {\n    channel: ev.target.number,\n    timestamp: ev.timestamp,\n    number: ev.controller.number,\n    value: ev.value,\n    raw: ev.rawValue,\n    port: ev.port.id,\n  };\n  createChannel(cc.channel);\n  midi.channels[cc.channel].cc[cc.number] = cc;\n  return cc\n}\n\nfunction createChannel(ch) {\n  if (!midi.channels[ch]) {\n    midi.channels[ch] = { num: ch, activeNotes: {}, notes: {}, cc: {} };\n  }\n}\n\nfunction setVelocity(channel, note, velocity) {\n  if (midi.channels?.[channel]?.notes?.[note]) {\n    midi.channels[channel].notes[note].velocity = velocity;\n  }\n}\n\nexport function midiAttack(note, options) {\n  if (!midi.out) return;\n  let channel = note?.channel || midi.channel;\n  setVelocity(channel, note?.number, 100);\n  WebMidi.outputs.forEach((output) => {\n    output.playNote(note.number, {\n      channels: channel,\n      ...options,\n    });\n  });\n}\n\nexport function midiPlay(note, options) {\n  if (!midi.out) return;\n  WebMidi.outputs.forEach((output) => {\n    output.playNote(note, {\n      channels: midi.channel,\n      ...options,\n    });\n  });\n}\n\nexport function midiStop(note, options) {\n  if (!midi.out) return;\n  if (note) {\n    WebMidi.outputs.forEach((output) => {\n      output.stopNote(note, { channels: midi.channel, ...options });\n    });\n  } else {\n    WebMidi.outputs.forEach((output) => {\n      output.sendAllNotesOff();\n      output.sendAllSoundOff({ time: \"+1\" });\n    });\n  }\n}\n\nexport function midiRelease(note) {\n  if (!midi.out) return;\n  if (note) {\n    let channel = note?.channel || midi.channel;\n    setVelocity(channel, note?.number, 0);\n    WebMidi.outputs.forEach((output) => {\n      output.stopNote(note.number, { channels: channel });\n    });\n  } else {\n    WebMidi.outputs.forEach((output) => {\n      output.sendAllNotesOff();\n      output.sendAllSoundOff({ time: \"+1\" });\n    });\n  }\n}\n\nexport function midiOnce(note, options) {\n  if (!midi.out || midi.filter[midi.channel]) return;\n  midiPlay(note, options);\n  setTimeout(() => {\n    midiStop(note, options);\n  }, 300);\n}\n\nexport function setCC(cc, value) {\n  if (!midi.out) return;\n  WebMidi.outputs.forEach((output) => {\n    output.sendControlChange(Number(cc.number), value, cc.channel);\n  });\n}\n\nexport function stopAll() {\n  if (!midi.out) return;\n  midi.channels = {};\n  midi.playing = false;\n  WebMidi.outputs.forEach((output) => {\n    output.sendAllNotesOff();\n    output.sendAllSoundOff({ time: \"+1\" });\n    output.sendReset();\n  });\n}\n\n\nexport function forwardMidi(iid, oid) {\n  const output = WebMidi.outputs.find((out) => out.id == oid);\n  const destinations = midi.inputs[iid].forwarder.destinations;\n  const index = destinations.indexOf(output);\n\n  if (index == -1) {\n    destinations.push(output);\n    midi.forwards[iid] = midi.forwards[iid] || {};\n    midi.forwards[iid][oid] = true;\n  } else {\n    destinations.splice(index, 1);\n    delete midi.forwards?.[iid]?.[oid];\n  }\n}\n\n","export const midiA = 69\n\nexport const notes = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#',]\n\n\nexport function pitchNoteOctave(pitch) {\n  return {\n    note: pitch > 0 ? pitch % 12 : 12 + (pitch % 12),\n    octave: Math.floor(pitch / 12) + 4,\n  }\n}\n\nexport function pitchFreq(\n  pitch = 0,\n  octave = 3,\n  middleA = 440,\n  tuning = 'equal',\n) {\n  let hz = 0\n  const justCents = [0, 112, 204, 316, 386, 498, 590, 702, 814, 884, 1017, 1088]\n  if (tuning == 'equal') {\n    hz = Number(middleA * Math.pow(2, octave - 3 + pitch / 12))\n  }\n  if (tuning == 'just') {\n    let diff = Number(Math.pow(Math.pow(2, 1 / 1200), justCents[pitch]))\n    hz = Number(middleA * Math.pow(2, octave - 4) * diff)\n  }\n  return hz\n}\n\nexport function pitchColor(pitch = 0, octave, velocity = 1, alpha = 1) {\n  octave = octave || Math.floor(pitch / 12) + 4\n  return `hsla(${(pitch % 12) * 30},${velocity * 100}%,${Math.abs(octave + 2) * 8\n    }%,${alpha})`\n}\n\nexport function freqColor(freq) {\n  return pitchColor(freqPitch(freq))\n}\n\nexport function freqPitch(freq, middleA = 440) {\n  return 12 * (Math.log(freq / middleA) / Math.log(2))\n}\n\nexport function isInChroma(chroma, tonic, note) {\n  return chroma.split('')[(24 + note - tonic) % 12] == '1'\n}\n\nexport function getCircleCoord(n = 0, total = 12, radius = 35, width = 100, height = 100) {\n  let angle = ((n - total / 4) / (total / 2)) * Math.PI // Calculate the angle at which the element will be placed.\n  // For a semicircle, we would use (i / numNodes) * Math.PI.\n  let x = radius * Math.cos(angle) + width / 2 // Calculate the x position of the element.\n  let y = radius * Math.sin(angle) + height / 2 // Calculate the y position of the element.\n  return { x, y }\n}\n\nexport function rotateArray(arr, count = 1) {\n  return [...arr.slice(count, arr.length), ...arr.slice(0, count)]\n}\n\nexport function clampNum(main, delta, min = 0, max = 100) {\n  return Math.max(min, Math.min(Number(main) + Number(delta), max));\n}","import { pitchColor, getCircleCoord, notes } from '~/use/chromatone'\nimport { useElementBounding, useStorage } from \"@vueuse/core\";\n\nconst visual = ref()\n\nexport const activeScene = useStorage('active-scene', 'Rose')\n\nexport function useScene() {\n  const { width, height } = useElementBounding(visual)\n  return { visual, width, height, activeScene }\n}\n","<script setup>\nimport { midi } from '~/use/midi';\nimport { useScene } from '~/use/scene';\nconst { width, height } = useScene()\n\nconst acc = 200\n\n</script>\n\n<template lang='pug'>\n\ng.text-overlay.select-none(fill=\"currentColor\")\n  text(\n    v-tooltip.bottom-start=\"'Notes played'\"\n    fill=\"currentColor\"\n    :x=\"30\"\n    :y=\"30\"\n  ) {{ midi?.total?.hits }} \n  g(@click=\"midi.total.reset()\")\n    circle(cx=\"18\" cy=\"22\" r=\"14\" fill=\"transparent\")\n    icon-ic-baseline-refresh(\n      x=\"8\"\n      y=\"12\"\n    )\n  g(:transform=\"`translate(${width / 2},${height - 60})`\" opacity=\"0.7\")\n    rect(\n      :x=\"-acc / 2\"\n      :width=\"acc\"\n      height=\"10\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      rx=\"4\"\n    )\n    rect(\n      :x=\"-acc / 2\"\n      :width=\"acc\"\n      :transform=\"`scale(${midi.duration / midi.maxDuration},1)`\"\n      height=\"10\"\n      fill=\"currentColor\"\n      rx=\"4\"\n    )\n  text(\n    text-anchor=\"middle\"\n    fill=\"currentColor\"\n    :x=\"width / 2\"\n    :y=\"30\"\n    v-tooltip.bottom=\"'Current note'\"\n  ) {{ midi?.note?.identifier }}\n  text(\n    v-tooltip.bottom-end=\"'Session time: playing / total'\"\n    fill=\"currentColor\"\n    :x=\"width - 10\"\n    :y=\"30\"\n    text-anchor=\"end\"\n  ) {{ (midi?.total?.duration / 1000).toFixed() }} / {{ (midi.time / 1000).toFixed() }}s\n  text.text-16px(\n    :y=\"height - 20\"\n    :x=\"width / 2\"\n    text-anchor=\"middle\"\n    opacity=\"0.6\"\n  ) \n    tspan.font-normal Made by\n    tspan(dx=\"4\")\n      a(href=\"https://chromatone.center\" target=\"_blank\") Chromatone\n    tspan(dx=\"4\") for\n    tspan(dx=\"4\" )\n      a(href=\"https://playtronica.com\" target=\"_blank\") Playtronica\n    tspan(dx=\"4\" )\n      a(href=\"https://shop.playtronica.com/products/touchme\" target=\"_blank\") TouchMe\n</template>","export default \"__VITE_PUBLIC_ASSET__1bd25af0__\"","<script setup>\nimport { init, synthOptions } from '~/use/synth'\nimport { midi } from '~/use/midi'\nimport { useStorage } from '@vueuse/core';\n\n\nconst started = ref(false)\n\nconst steps = reactive({\n  browser: {\n    text: 'MIDI enabled browser',\n    checked: computed(() => midi?.enabled),\n    disabled: true\n  },\n  controller: {\n    text: 'TouchMe (or any other MIDI controller)',\n    checked: useStorage('touch-me', false)\n  },\n  usb: {\n    text: \"USB cable (you have it in your package)\",\n    checked: useStorage('usb-cable', false)\n  },\n  adapter: {\n    text: \"Special adapter, if your device doesn’t have a usb port \",\n    checked: useStorage('usb-adapter', false)\n  },\n  friend: {\n    text: \"Your best friend \",\n    checked: useStorage('your-friend', false)\n  }\n})\n\n</script>\n\n<template lang='pug'>\n.text-center.absolute.z-500.p-4.rounded-xl.shadow-xl.bg-light-200.mx-auto.dark_bg-dark-200.min-w-80(\n  style=\"left: 50%; top: 50%; transform: translate(-50%, -50%);\"\n  v-if=\"!synthOptions.initiated\"\n  )\n  h2.text-center.text-2xl.my-4 Let's play music with touch \n  .p-4.flex.flex-col.gap-2(v-if=\"!midi.enabled\") This interactive experience needs Web MIDI API support. Unfortunately, your current browser doesn't provide it. Is it Firefox or Safari? Please, use another one here.\n\n    a.button.p-4.flex.items-center(href=\"https://chrome.google.com\" target=\"_blank\")\n      icon-la-chrome.text-2xl\n      .ml-2 Google Chrome for Desktop or Android\n\n    a.button.p-4.flex.items-center(href=\"https://apps.apple.com/ru/app/web-midi-browser/id953846217\" target=\"_blank\")\n      icon-la-apple.text-2xl\n      .ml-2 Web MIDI Browser for iOS\n    a.button.p-4.flex.items-center(href=\"https://caniuse.com/?search=midi\" target=\"_blank\")\n      icon-ic-baseline-checklist.text-2xl\n      .ml-2 Other options\n    .mt-4 Or play notes with your PC keyboard \n    img(src=\"/pc-keyboard.svg\")\n  .px-4(v-else)\n    .flex.items-center.my-4(v-for=\"(step, name) in steps\" :key=\"name\")\n      input.transform.scale-200(type=\"checkbox\" :disabled=\"step.disabled\" :id=\"name\" v-model=\"step.checked\")\n      label.ml-4(:for=\"name\") {{ step.text }}\n  button.button.mx-auto.w-full.font-bold(@click=\"init(); started = true\") Start\n</template>\n\n<style lang=\"postcss\" scoped>\n</style>","<script setup>\nimport { synthOptions } from '~/use/synth';\n\nconst bpms = [60, 80, 100, 120]\n\nfunction cycle() {\n  let index = bpms.findIndex(el => el == synthOptions.bpm)\n  synthOptions.bpm = bpms[++index % bpms.length]\n}\n\n</script>\n\n<template lang='pug'>\nbutton.button.relative(@click=\"cycle()\")\n  .-mt-3.mb-1.font-bold {{ synthOptions.bpm }}\n  .absolute.bottom-1.text-xs BPM\n</template>","<script setup>\nimport { computed } from 'vue';\nimport { useSynth } from '~/use/synth'\nimport { midi } from '~/use/midi';\n\nconst types = {\n  sine: 'SIN',\n  triangle: 'TRI',\n  square8: 'SQR',\n  sawtooth8: 'SAW',\n}\n\nfunction cycle() {\n  let arr = Object.keys(types)\n  let index = arr.findIndex(el => el == synthOptions.params.oscillator.type)\n  synthOptions.params.oscillator.type = arr[++index % arr.length]\n}\n\nconst type = computed(() => synthOptions.params.oscillator.type)\n\nconst { synthOptions, synthOnce, init } = useSynth();\n\n\n</script>\n\n<template lang='pug'>\n.button.flex-auto.flex.justify-center.m-1.cursor-pointer(@click=\"cycle(); synthOnce(midi?.note?.identifier); !synthOptions.initiated && init(); \")\n  icon-ph-wave-sine-duotone(v-if=\"type == 'sine'\")\n  icon-ph-wave-triangle-duotone(v-if=\"type == 'triangle'\")\n  icon-ph-wave-square-duotone(v-if=\"type == 'square8'\")\n  icon-ph-wave-sawtooth-duotone(v-if=\"type == 'sawtooth8'\")\n</template>\n\n<style lang=\"postcss\" scoped>\n</style>","export default {};","<script setup>\nimport { pitchColor } from '~/use/chromatone'\nimport { useMidi } from '~/use/midi.js'\nimport { Utilities } from 'webmidi'\nconst active = ref(false)\n\nconst { midi, midiAttack, midiRelease, setCC } = useMidi();\n\nfunction sortNotes(notes) {\n  if (!notes) return []\n  let arr = Object.values(notes)\n  return arr.sort((a, b) => {\n    return a.number < b.number ? -1 : 1\n  })\n}\n</script>\n\n<template lang='pug'>\n.flex.flex-col.gap-1.mb-4.overflow-x-scroll.font-mono.pt-4\n  transition-group(name=\"fall\" mode=\"out-in\")\n    .flex.text-xs.fall.whitespace-nowrap.justify-between(v-for=\"ev in midi.log\" :key=\"ev\")\n      .p-2(:style=\"{ backgroundColor: pitchColor(ev.message.dataBytes[0] + 3 || 0) }\")\n      .txt.whitespace-nowrap {{ Utilities.toNoteIdentifier(ev.message.dataBytes[0] || 1) }}\n      .txt {{ ev.message?.type }}\n      .txt {{ ((ev.message.dataBytes[1]) / 127).toFixed(2) }}\n      .txt.text-center {{ ev.data.join(',') }}\n      .txt.text-right CH{{ ev.message?.channel }}\n\n      \n</template>\n\n\n<style lang=\"postcss\" scoped>\n.txt {\n  @apply p-1;\n  flex: 10 1 30px;\n}\n</style>\n\n<route lang=\"yaml\">\ntitle: Log\nsubtitle: by Chromatone \n</route>","<script setup>\nimport { useMidi, forwardMidi } from \"~/use/midi.js\";\nimport { pitchColor } from \"~/use/chromatone\";\n\nconst props = defineProps({\n  input: Object,\n  iid: [Number, String]\n})\n\nconst { midi } = useMidi();\n\nconst color = computed(() => props.input?.note?.velocity > 0\n  ? pitchColor(props.input.note?.pitch, null, 1, 0.4)\n  : \"#7773\")\n\n</script>\n\n<template lang='pug'>\n.p-4.shadow-lg.rounded-2xl.bg-light-900.dark_bg-dark-300.relative.border-2.shadow-lg(\n  style=\"flex: 1 1 200px\"\n  )\n  .flex.justify-between.flex-wrap.gap-1\n    .flex-col\n      .text-sm {{ input.manufacturer }}\n      .text-xl.font-bold {{ input.name }}\n    .flex-col.text-xs.font-mono.flex.gap-2.text-center\n\n      .display(v-if=\"input.note\" :style=\"{ backgroundColor: color }\") \n        .indicator(:style=\"{ transform: `scale(${input?.note?.attack},1)` }\")\n        i CH{{ input?.note?.channel }} \n        .px-1.rounded-sm(:style=\"{ backgroundColor: color }\") {{ input?.note?.identifier }} \n        i {{ input?.note?.number }}\n\n      .display(v-if=\"input.cc\") \n        .indicator(\n          :style=\"{ transform: `scale(${input?.cc?.value},1)` }\"\n        )\n        i CH{{ input?.cc?.channel }} \n        i CC{{ input?.cc?.number }}\n        i {{ input?.cc?.raw }}\n      //- .px-1.py-2px.rounded.border-1.border-current.w-16ch.flex.flex-col.justify-between.relative(v-if=\"input.event\")\n      //-   i {{ input?.event?.message?.type }}\n      //-   .flex.justify-between\n      //-     i(v-for=\"byte in input?.event?.data\" :key=\"byte\") {{ byte }}\n  .flex.flex-wrap.gap-3.mt-4.items-center\n    .text-xs TO\n    button.px-2.shadow-sm.rounded-xl.bg-light-200.dark_bg-dark-500.cursor-pointer.border-2.border-transparent.select-none(\n      :class=\"{ active: midi.forwards?.[iid]?.[oid] }\"\n      @click=\"forwardMidi(iid, oid)\"\n      v-for=\"(output, oid) in midi.outputs\"\n      :key=\"oid\"\n      v-show=\"input.name != output.name\"\n      ) \n      .text-sm {{ output.name }}\n</template>\n\n\n<style lang=\"postcss\" scoped>\n.active {\n  @apply border-dark-200 dark_border-light-200;\n}\n\n.display {\n  @apply overflow-hidden px-1 py-2px rounded-lg border-1 border-dark-50/50 w-16ch flex justify-between transition relative;\n}\n\n.indicator {\n  @apply h-full w-full origin-left absolute top-0 left-0 border-r-1 transition border-dark-50/50 bg-dark-50 bg-opacity-20 dark_bg-light-50 dark_bg-opacity-20;\n}\n</style>","<script setup>\nimport { midi, stopAll, midiAttack, midiRelease } from '~/use/midi.js'\nimport { onKeyStroke } from '@vueuse/core'\n\nconst props = defineProps({\n  toChannel: {\n    type: Boolean,\n    default: true,\n  }\n});\n\nonKeyStroke(' ', ev => {\n  ev.preventDefault()\n  midi.playing = !midi.playing\n});\n</script>\n\n<template lang=\"pug\">\n.z-40.flex.flex-col.gap-2\n  .p-2.border.border-red-500.text-red-500(v-if=\"!midi?.enabled\") MIDI is not available. Use a \n    a.font-normal.underline(href=\"https://caniuse.com/?search=midi\" target=\"_blank\") compatible browser \n    span or \n    a.font-normal.underline(href=\"https://apps.apple.com/ru/app/web-midi-browser/id953846217\" target=\"_blank\") Web MIDI Browser on iOS\n  .flex.flex-wrap.gap-4.justify-center(v-else)\n    midi-input(\n      :input=\"input\"\n      :iid=\"iid\"\n      v-for=\"(input, iid) in midi.inputs\" \n      :key=\"iid\"\n      )\n  midi-log.max-h-40vh.mt-6\n</template>\n\n<style lang=\"postcss\" scoped>\ninput.ch {\n  @apply pl-2 w-2.5em bg-transparent;\n}\n</style>","<script setup>\nimport { useMidi } from '~/use/midi'\nimport { pitchColor } from '~/use/chromatone'\nimport { onClickOutside } from '@vueuse/core'\n\n\nconst panel = useStorage('global-midi-panel', false)\nconst target = ref(null)\nonClickOutside(target, () => {\n  panel.value = false\n})\n\nconst { midi } = useMidi();\n</script>\n\n<template lang=\"pug\">\n.p-0\n  button.button.text-2xl(@click.stop=\"panel = !panel\" aria-label=\"Toggle MIDI panel\")\n    icon-mdi-midi-input.transition-all.duration-200(\n      :style=`{ opacity: midi.enabled ? 1 : 0.2, color: pitchColor(midi.enabled ? midi.note?.pitch : 0, midi.note?.octA) }`\n    )\n  transition(name=\"fade\")\n    .panel(v-if=\"panel\" ref=\"target\")\n      .button.cursor-pointer.p-1.absolute.top-4.right-4.z-100(@click=\"panel = false\")\n        icon-la-times\n      midi-panel\n</template>\n\n<style lang=\"postcss\" scoped>\n</style>","import { useDark } from '@vueuse/core'\nimport { getDestination, gainToDb } from 'tone'\n\nexport const isDark = useDark()\n\nconst audio = reactive({\n  initiated: false,\n  mute: useStorage('mute', false),\n  volume: useClamp(useStorage('main-vol', 1), 0, 1),\n})\n\n\nexport function useAudio() {\n  if (!audio.initiated) {\n    watchEffect(() => {\n      getDestination().mute = audio.mute\n    })\n\n    watchEffect(() => {\n      getDestination().volume.targetRampTo(gainToDb(audio.volume), 0.1)\n    })\n  }\n  audio.initiated = true\n  return audio\n}","<script setup>\nimport { useFullscreen } from '@vueuse/core'\n\nconst props = defineProps(['el'])\n\nconst element = ref()\n\nonMounted(() => {\n  nextTick(() => {\n    if (props.el) {\n      element.value = props.el\n    } else {\n      element.value = document.getElementById('screen')\n    }\n    full.value = useFullscreen(element.value)\n  })\n\n\n})\n\nconst full = ref()\n\nfunction toggle() {\n  if (!full.value) full.value = useFullscreen(element.value);\n  full.value.toggle()\n}\n\nconst supported = computed(() => full.value?.isSupported);\n\n</script>\n\n<template lang=\"pug\">\nbutton.button(\n  v-show=\"supported\"\n  @click=\"toggle()\"\n)\n  icon-la-expand\n</template>\n\n<style lang=\"postcss\" scoped>\n</style>","<script setup>\n\nimport { synthOptions, useSynth } from '~/use/synth';\n\nconst octaves = [-2, -1, 0, 1, 2]\nconst modes = ['+0', '@4n', '@8n', '@16n', '@32n']\n\nconst { synthReleaseAll } = useSynth()\n\nfunction cycleOctaves() {\n  let oct = octaves.findIndex(el => el == synthOptions.octave)\n  synthOptions.octave = octaves[++oct % (octaves.length)]\n}\n\nfunction cycle() {\n  let mode = modes.findIndex(el => el == synthOptions.quantize)\n  synthOptions.quantize = modes[++mode % (modes.length)]\n}\n\n</script>\n\n<template lang='pug'>\n.flex.gap-4.absolute.flex-col.right-2.bottom-2.top-20.text-xl.items-center.opacity-40.hover_opacity-100.transition.justify-between.items-center\n  .flex-0.flex.flex-col.gap-1\n    state-fullscreen(v-tooltip.left=\"'Toggle fullscreen mode'\")\n    state-dark(v-tooltip.left=\"'Toggle dark mode'\")\n    midi-state(v-tooltip.left=\"'MIDI state'\")\n  .flex-auto\n  .flex-0.flex.flex-col.items-center.gap-2\n\n    state-oscillator(v-tooltip.left=\"'Synth oscillator type'\")\n    button.button.w-16.font-bold.select-none(\n    @click=\"cycleOctaves()\"\n    aria-label=\"Octave offset\"\n    v-tooltip.left=\"'Octave offset'\"\n    ) {{ synthOptions.octave > 0 ? '+' : '' }}{{ synthOptions.octave }}\n    button.button.font-bold.text-sm.w-16.select-none(\n      @click=\"cycle\"\n      aria-label=\"Synth quantize\"\n      v-tooltip.left=\"'Synth quantize'\"\n      ) {{ synthOptions.quantize }}\n    state-bpm(v-tooltip.left=\"'Increment tempo'\")\n    button.button.w-16(@click=\"synthReleaseAll('+1n')\" v-tooltip.left=\"'Turn off all synth voices'\")\n      icon-la-times-circle\n</template>\n\n<style lang=\"postcss\" scoped>\nnav button {\n  @apply text-2xl;\n}\n</style>","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n Copyright (c) 2022 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n// these #__PURE__ comments help uglifyjs with dead code removal\n// \nconst F2 = /*#__PURE__*/ 0.5 * (Math.sqrt(3.0) - 1.0);\nconst G2 = /*#__PURE__*/ (3.0 - Math.sqrt(3.0)) / 6.0;\nconst F3 = 1.0 / 3.0;\nconst G3 = 1.0 / 6.0;\nconst F4 = /*#__PURE__*/ (Math.sqrt(5.0) - 1.0) / 4.0;\nconst G4 = /*#__PURE__*/ (5.0 - Math.sqrt(5.0)) / 20.0;\n// I'm really not sure why this | 0 (basically a coercion to int)\n// is making this faster but I get ~5 million ops/sec more on the\n// benchmarks across the board or a ~10% speedup.\nconst fastFloor = (x) => Math.floor(x) | 0;\nconst grad2 = /*#__PURE__*/ new Float64Array([1, 1,\n    -1, 1,\n    1, -1,\n    -1, -1,\n    1, 0,\n    -1, 0,\n    1, 0,\n    -1, 0,\n    0, 1,\n    0, -1,\n    0, 1,\n    0, -1]);\n// double seems to be faster than single or int's\n// probably because most operations are in double precision\nconst grad3 = /*#__PURE__*/ new Float64Array([1, 1, 0,\n    -1, 1, 0,\n    1, -1, 0,\n    -1, -1, 0,\n    1, 0, 1,\n    -1, 0, 1,\n    1, 0, -1,\n    -1, 0, -1,\n    0, 1, 1,\n    0, -1, 1,\n    0, 1, -1,\n    0, -1, -1]);\n// double is a bit quicker here as well\nconst grad4 = /*#__PURE__*/ new Float64Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n    0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n    1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n    -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n    1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n    -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n    1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n    -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);\n/**\n * Creates a 2D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction2D}\n */\nexport function createNoise2D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating this yields a little ~3% performance improvement.\n    const permGrad2x = new Float64Array(perm).map(v => grad2[(v % 12) * 2]);\n    const permGrad2y = new Float64Array(perm).map(v => grad2[(v % 12) * 2 + 1]);\n    return function noise2D(x, y) {\n        // if(!isFinite(x) || !isFinite(y)) return 0;\n        let n0 = 0; // Noise contributions from the three corners\n        let n1 = 0;\n        let n2 = 0;\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y) * F2; // Hairy factor for 2D\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const t = (i + j) * G2;\n        const X0 = i - t; // Unskew the cell origin back to (x,y) space\n        const Y0 = j - t;\n        const x0 = x - X0; // The x,y distances from the cell origin\n        const y0 = y - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        else {\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        const y1 = y0 - j1 + G2;\n        const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n        const y2 = y0 - 1.0 + 2.0 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            const gi0 = ii + perm[jj];\n            const g0x = permGrad2x[gi0];\n            const g0y = permGrad2y[gi0];\n            t0 *= t0;\n            // n0 = t0 * t0 * (grad2[gi0] * x0 + grad2[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n            n0 = t0 * t0 * (g0x * x0 + g0y * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            const gi1 = ii + i1 + perm[jj + j1];\n            const g1x = permGrad2x[gi1];\n            const g1y = permGrad2y[gi1];\n            t1 *= t1;\n            // n1 = t1 * t1 * (grad2[gi1] * x1 + grad2[gi1 + 1] * y1);\n            n1 = t1 * t1 * (g1x * x1 + g1y * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            const gi2 = ii + 1 + perm[jj + 1];\n            const g2x = permGrad2x[gi2];\n            const g2y = permGrad2y[gi2];\n            t2 *= t2;\n            // n2 = t2 * t2 * (grad2[gi2] * x2 + grad2[gi2 + 1] * y2);\n            n2 = t2 * t2 * (g2x * x2 + g2y * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70.0 * (n0 + n1 + n2);\n    };\n}\n/**\n * Creates a 3D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction3D}\n */\nexport function createNoise3D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating these seems to yield a speedup of over 15%\n    const permGrad3x = new Float64Array(perm).map(v => grad3[(v % 12) * 3]);\n    const permGrad3y = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 1]);\n    const permGrad3z = new Float64Array(perm).map(v => grad3[(v % 12) * 3 + 2]);\n    return function noise3D(x, y, z) {\n        let n0, n1, n2, n3; // Noise contributions from the four corners\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y + z) * F3; // Very nice and simple skew factor for 3D\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const k = fastFloor(z + s);\n        const t = (i + j + k) * G3;\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const x0 = x - X0; // The x,y,z distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n        // Determine which simplex we are in.\n        let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n        let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n        if (x0 >= y0) {\n            if (y0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // X Y Z order\n            else if (x0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // X Z Y order\n            else {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // Z X Y order\n        }\n        else { // x0<y0\n            if (y0 < z0) {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Z Y X order\n            else if (x0 < z0) {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Y Z X order\n            else {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // Y X Z order\n        }\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n        // c = 1/6.\n        const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n        const y1 = y0 - j1 + G3;\n        const z1 = z0 - k1 + G3;\n        const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n        const y2 = y0 - j2 + 2.0 * G3;\n        const z2 = z0 - k2 + 2.0 * G3;\n        const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n        const y3 = y0 - 1.0 + 3.0 * G3;\n        const z3 = z0 - 1.0 + 3.0 * G3;\n        // Work out the hashed gradient indices of the four simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        // Calculate the contribution from the four corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = ii + perm[jj + perm[kk]];\n            t0 *= t0;\n            n0 = t0 * t0 * (permGrad3x[gi0] * x0 + permGrad3y[gi0] * y0 + permGrad3z[gi0] * z0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1]];\n            t1 *= t1;\n            n1 = t1 * t1 * (permGrad3x[gi1] * x1 + permGrad3y[gi1] * y1 + permGrad3z[gi1] * z1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2]];\n            t2 *= t2;\n            n2 = t2 * t2 * (permGrad3x[gi2] * x2 + permGrad3y[gi2] * y2 + permGrad3z[gi2] * z2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = ii + 1 + perm[jj + 1 + perm[kk + 1]];\n            t3 *= t3;\n            n3 = t3 * t3 * (permGrad3x[gi3] * x3 + permGrad3y[gi3] * y3 + permGrad3z[gi3] * z3);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to stay just inside [-1,1]\n        return 32.0 * (n0 + n1 + n2 + n3);\n    };\n}\n/**\n * Creates a 4D noise function\n * @param random the random function that will be used to build the permutation table\n * @returns {NoiseFunction4D}\n */\nexport function createNoise4D(random = Math.random) {\n    const perm = buildPermutationTable(random);\n    // precalculating these leads to a ~10% speedup\n    const permGrad4x = new Float64Array(perm).map(v => grad4[(v % 32) * 4]);\n    const permGrad4y = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 1]);\n    const permGrad4z = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 2]);\n    const permGrad4w = new Float64Array(perm).map(v => grad4[(v % 32) * 4 + 3]);\n    return function noise4D(x, y, z, w) {\n        let n0, n1, n2, n3, n4; // Noise contributions from the five corners\n        // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n        const s = (x + y + z + w) * F4; // Factor for 4D skewing\n        const i = fastFloor(x + s);\n        const j = fastFloor(y + s);\n        const k = fastFloor(z + s);\n        const l = fastFloor(w + s);\n        const t = (i + j + k + l) * G4; // Factor for 4D unskewing\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const W0 = l - t;\n        const x0 = x - X0; // The x,y,z,w distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        const w0 = w - W0;\n        // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n        // To find out which of the 24 possible simplices we're in, we need to\n        // determine the magnitude ordering of x0, y0, z0 and w0.\n        // Six pair-wise comparisons are performed between each possible pair\n        // of the four coordinates, and the results are used to rank the numbers.\n        let rankx = 0;\n        let ranky = 0;\n        let rankz = 0;\n        let rankw = 0;\n        if (x0 > y0)\n            rankx++;\n        else\n            ranky++;\n        if (x0 > z0)\n            rankx++;\n        else\n            rankz++;\n        if (x0 > w0)\n            rankx++;\n        else\n            rankw++;\n        if (y0 > z0)\n            ranky++;\n        else\n            rankz++;\n        if (y0 > w0)\n            ranky++;\n        else\n            rankw++;\n        if (z0 > w0)\n            rankz++;\n        else\n            rankw++;\n        // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n        // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n        // impossible. Only the 24 indices which have non-zero entries make any sense.\n        // We use a thresholding to set the coordinates in turn from the largest magnitude.\n        // Rank 3 denotes the largest coordinate.\n        // Rank 2 denotes the second largest coordinate.\n        // Rank 1 denotes the second smallest coordinate.\n        // The integer offsets for the second simplex corner\n        const i1 = rankx >= 3 ? 1 : 0;\n        const j1 = ranky >= 3 ? 1 : 0;\n        const k1 = rankz >= 3 ? 1 : 0;\n        const l1 = rankw >= 3 ? 1 : 0;\n        // The integer offsets for the third simplex corner\n        const i2 = rankx >= 2 ? 1 : 0;\n        const j2 = ranky >= 2 ? 1 : 0;\n        const k2 = rankz >= 2 ? 1 : 0;\n        const l2 = rankw >= 2 ? 1 : 0;\n        // The integer offsets for the fourth simplex corner\n        const i3 = rankx >= 1 ? 1 : 0;\n        const j3 = ranky >= 1 ? 1 : 0;\n        const k3 = rankz >= 1 ? 1 : 0;\n        const l3 = rankw >= 1 ? 1 : 0;\n        // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n        const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n        const y1 = y0 - j1 + G4;\n        const z1 = z0 - k1 + G4;\n        const w1 = w0 - l1 + G4;\n        const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n        const y2 = y0 - j2 + 2.0 * G4;\n        const z2 = z0 - k2 + 2.0 * G4;\n        const w2 = w0 - l2 + 2.0 * G4;\n        const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n        const y3 = y0 - j3 + 3.0 * G4;\n        const z3 = z0 - k3 + 3.0 * G4;\n        const w3 = w0 - l3 + 3.0 * G4;\n        const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n        const y4 = y0 - 1.0 + 4.0 * G4;\n        const z4 = z0 - 1.0 + 4.0 * G4;\n        const w4 = w0 - 1.0 + 4.0 * G4;\n        // Work out the hashed gradient indices of the five simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        const ll = l & 255;\n        // Calculate the contribution from the five corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = ii + perm[jj + perm[kk + perm[ll]]];\n            t0 *= t0;\n            n0 = t0 * t0 * (permGrad4x[gi0] * x0 + permGrad4y[gi0] * y0 + permGrad4z[gi0] * z0 + permGrad4w[gi0] * w0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]];\n            t1 *= t1;\n            n1 = t1 * t1 * (permGrad4x[gi1] * x1 + permGrad4y[gi1] * y1 + permGrad4z[gi1] * z1 + permGrad4w[gi1] * w1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]];\n            t2 *= t2;\n            n2 = t2 * t2 * (permGrad4x[gi2] * x2 + permGrad4y[gi2] * y2 + permGrad4z[gi2] * z2 + permGrad4w[gi2] * w2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]];\n            t3 *= t3;\n            n3 = t3 * t3 * (permGrad4x[gi3] * x3 + permGrad4y[gi3] * y3 + permGrad4z[gi3] * z3 + permGrad4w[gi3] * w3);\n        }\n        let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n        if (t4 < 0)\n            n4 = 0.0;\n        else {\n            const gi4 = ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]];\n            t4 *= t4;\n            n4 = t4 * t4 * (permGrad4x[gi4] * x4 + permGrad4y[gi4] * y4 + permGrad4z[gi4] * z4 + permGrad4w[gi4] * w4);\n        }\n        // Sum up and scale the result to cover the range [-1,1]\n        return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    };\n}\n/**\n * Builds a random permutation table.\n * This is exported only for (internal) testing purposes.\n * Do not rely on this export.\n * @private\n */\nexport function buildPermutationTable(random) {\n    const tableSize = 512;\n    const p = new Uint8Array(tableSize);\n    for (let i = 0; i < tableSize / 2; i++) {\n        p[i] = i;\n    }\n    for (let i = 0; i < tableSize / 2 - 1; i++) {\n        const r = i + ~~(random() * (256 - i));\n        const aux = p[i];\n        p[i] = p[r];\n        p[r] = aux;\n    }\n    for (let i = 256; i < tableSize; i++) {\n        p[i] = p[i - 256];\n    }\n    return p;\n}\n//# sourceMappingURL=simplex-noise.js.map","// deno-fmt-ignore-file\n// deno-lint-ignore-file\n// This code was bundled using `deno bundle` and it's not recommended to edit it manually\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _block, _blocks, _bytes, _finalized, _first, _h0, _h1, _h2, _h3, _h4, _h5, _h6, _h7, _hashed, _hBytes, _is224, _lastByteIndex, _start;\nconst BKDRHash = function (str) {\n    var seed = 131;\n    var seed2 = 137;\n    var hash = 0;\n    str += 'x';\n    var MAX_SAFE_INTEGER = Math.floor(9007199254740991 / seed2);\n    for (let i = 0; i < str.length; i++) {\n        if (hash > MAX_SAFE_INTEGER) {\n            hash = Math.floor(hash / seed2);\n        }\n        hash = hash * seed + str.charCodeAt(i);\n    }\n    return hash;\n};\nconst HEX_CHARS = \"0123456789abcdef\".split(\"\");\nconst EXTRA = [\n    -2147483648,\n    8388608,\n    32768,\n    128\n];\nconst SHIFT = [\n    24,\n    16,\n    8,\n    0\n];\nconst K = [\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n];\nconst blocks = [];\nclass Sha256 {\n    constructor(is224 = false, sharedMemory = false) {\n        _block.set(this, void 0);\n        _blocks.set(this, void 0);\n        _bytes.set(this, void 0);\n        _finalized.set(this, void 0);\n        _first.set(this, void 0);\n        _h0.set(this, void 0);\n        _h1.set(this, void 0);\n        _h2.set(this, void 0);\n        _h3.set(this, void 0);\n        _h4.set(this, void 0);\n        _h5.set(this, void 0);\n        _h6.set(this, void 0);\n        _h7.set(this, void 0);\n        _hashed.set(this, void 0);\n        _hBytes.set(this, void 0);\n        _is224.set(this, void 0);\n        _lastByteIndex.set(this, 0);\n        _start.set(this, void 0);\n        this.init(is224, sharedMemory);\n    }\n    init(is224, sharedMemory) {\n        if (sharedMemory) {\n            blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n            __classPrivateFieldSet(this, _blocks, blocks);\n        }\n        else {\n            __classPrivateFieldSet(this, _blocks, [\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0,\n                0\n            ]);\n        }\n        if (is224) {\n            __classPrivateFieldSet(this, _h0, 0xc1059ed8);\n            __classPrivateFieldSet(this, _h1, 0x367cd507);\n            __classPrivateFieldSet(this, _h2, 0x3070dd17);\n            __classPrivateFieldSet(this, _h3, 0xf70e5939);\n            __classPrivateFieldSet(this, _h4, 0xffc00b31);\n            __classPrivateFieldSet(this, _h5, 0x68581511);\n            __classPrivateFieldSet(this, _h6, 0x64f98fa7);\n            __classPrivateFieldSet(this, _h7, 0xbefa4fa4);\n        }\n        else {\n            __classPrivateFieldSet(this, _h0, 0x6a09e667);\n            __classPrivateFieldSet(this, _h1, 0xbb67ae85);\n            __classPrivateFieldSet(this, _h2, 0x3c6ef372);\n            __classPrivateFieldSet(this, _h3, 0xa54ff53a);\n            __classPrivateFieldSet(this, _h4, 0x510e527f);\n            __classPrivateFieldSet(this, _h5, 0x9b05688c);\n            __classPrivateFieldSet(this, _h6, 0x1f83d9ab);\n            __classPrivateFieldSet(this, _h7, 0x5be0cd19);\n        }\n        __classPrivateFieldSet(this, _block, __classPrivateFieldSet(this, _start, __classPrivateFieldSet(this, _bytes, __classPrivateFieldSet(this, _hBytes, 0))));\n        __classPrivateFieldSet(this, _finalized, __classPrivateFieldSet(this, _hashed, false));\n        __classPrivateFieldSet(this, _first, true);\n        __classPrivateFieldSet(this, _is224, is224);\n    }\n    update(message) {\n        if (__classPrivateFieldGet(this, _finalized)) {\n            return this;\n        }\n        let msg;\n        if (message instanceof ArrayBuffer) {\n            msg = new Uint8Array(message);\n        }\n        else {\n            msg = message;\n        }\n        let index = 0;\n        const length = msg.length;\n        const blocks = __classPrivateFieldGet(this, _blocks);\n        while (index < length) {\n            let i;\n            if (__classPrivateFieldGet(this, _hashed)) {\n                __classPrivateFieldSet(this, _hashed, false);\n                blocks[0] = __classPrivateFieldGet(this, _block);\n                blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n            }\n            if (typeof msg !== \"string\") {\n                for (i = __classPrivateFieldGet(this, _start); index < length && i < 64; ++index) {\n                    blocks[i >> 2] |= msg[index] << SHIFT[i++ & 3];\n                }\n            }\n            else {\n                for (i = __classPrivateFieldGet(this, _start); index < length && i < 64; ++index) {\n                    let code = msg.charCodeAt(index);\n                    if (code < 0x80) {\n                        blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                    }\n                    else if (code < 0x800) {\n                        blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n                    }\n                    else if (code < 0xd800 || code >= 0xe000) {\n                        blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n                    }\n                    else {\n                        code = 0x10000 + ((code & 0x3ff) << 10 | msg.charCodeAt(++index) & 0x3ff);\n                        blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n                        blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n                    }\n                }\n            }\n            __classPrivateFieldSet(this, _lastByteIndex, i);\n            __classPrivateFieldSet(this, _bytes, __classPrivateFieldGet(this, _bytes) + (i - __classPrivateFieldGet(this, _start)));\n            if (i >= 64) {\n                __classPrivateFieldSet(this, _block, blocks[16]);\n                __classPrivateFieldSet(this, _start, i - 64);\n                this.hash();\n                __classPrivateFieldSet(this, _hashed, true);\n            }\n            else {\n                __classPrivateFieldSet(this, _start, i);\n            }\n        }\n        if (__classPrivateFieldGet(this, _bytes) > 4294967295) {\n            __classPrivateFieldSet(this, _hBytes, __classPrivateFieldGet(this, _hBytes) + (__classPrivateFieldGet(this, _bytes) / 4294967296 << 0));\n            __classPrivateFieldSet(this, _bytes, __classPrivateFieldGet(this, _bytes) % 4294967296);\n        }\n        return this;\n    }\n    finalize() {\n        if (__classPrivateFieldGet(this, _finalized)) {\n            return;\n        }\n        __classPrivateFieldSet(this, _finalized, true);\n        const blocks = __classPrivateFieldGet(this, _blocks);\n        const i = __classPrivateFieldGet(this, _lastByteIndex);\n        blocks[16] = __classPrivateFieldGet(this, _block);\n        blocks[i >> 2] |= EXTRA[i & 3];\n        __classPrivateFieldSet(this, _block, blocks[16]);\n        if (i >= 56) {\n            if (!__classPrivateFieldGet(this, _hashed)) {\n                this.hash();\n            }\n            blocks[0] = __classPrivateFieldGet(this, _block);\n            blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n        }\n        blocks[14] = __classPrivateFieldGet(this, _hBytes) << 3 | __classPrivateFieldGet(this, _bytes) >>> 29;\n        blocks[15] = __classPrivateFieldGet(this, _bytes) << 3;\n        this.hash();\n    }\n    hash() {\n        let a = __classPrivateFieldGet(this, _h0);\n        let b = __classPrivateFieldGet(this, _h1);\n        let c = __classPrivateFieldGet(this, _h2);\n        let d = __classPrivateFieldGet(this, _h3);\n        let e = __classPrivateFieldGet(this, _h4);\n        let f = __classPrivateFieldGet(this, _h5);\n        let g = __classPrivateFieldGet(this, _h6);\n        let h = __classPrivateFieldGet(this, _h7);\n        const blocks = __classPrivateFieldGet(this, _blocks);\n        let s0;\n        let s1;\n        let maj;\n        let t1;\n        let t2;\n        let ch;\n        let ab;\n        let da;\n        let cd;\n        let bc;\n        for (let j = 16; j < 64; ++j) {\n            t1 = blocks[j - 15];\n            s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;\n            t1 = blocks[j - 2];\n            s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;\n            blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n        }\n        bc = b & c;\n        for (let j1 = 0; j1 < 64; j1 += 4) {\n            if (__classPrivateFieldGet(this, _first)) {\n                if (__classPrivateFieldGet(this, _is224)) {\n                    ab = 300032;\n                    t1 = blocks[0] - 1413257819;\n                    h = t1 - 150054599 << 0;\n                    d = t1 + 24177077 << 0;\n                }\n                else {\n                    ab = 704751109;\n                    t1 = blocks[0] - 210244248;\n                    h = t1 - 1521486534 << 0;\n                    d = t1 + 143694565 << 0;\n                }\n                __classPrivateFieldSet(this, _first, false);\n            }\n            else {\n                s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);\n                s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);\n                ab = a & b;\n                maj = ab ^ a & c ^ bc;\n                ch = e & f ^ ~e & g;\n                t1 = h + s1 + ch + K[j1] + blocks[j1];\n                t2 = s0 + maj;\n                h = d + t1 << 0;\n                d = t1 + t2 << 0;\n            }\n            s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);\n            s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);\n            da = d & a;\n            maj = da ^ d & b ^ ab;\n            ch = h & e ^ ~h & f;\n            t1 = g + s1 + ch + K[j1 + 1] + blocks[j1 + 1];\n            t2 = s0 + maj;\n            g = c + t1 << 0;\n            c = t1 + t2 << 0;\n            s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);\n            s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);\n            cd = c & d;\n            maj = cd ^ c & a ^ da;\n            ch = g & h ^ ~g & e;\n            t1 = f + s1 + ch + K[j1 + 2] + blocks[j1 + 2];\n            t2 = s0 + maj;\n            f = b + t1 << 0;\n            b = t1 + t2 << 0;\n            s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);\n            s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);\n            bc = b & c;\n            maj = bc ^ b & d ^ cd;\n            ch = f & g ^ ~f & h;\n            t1 = e + s1 + ch + K[j1 + 3] + blocks[j1 + 3];\n            t2 = s0 + maj;\n            e = a + t1 << 0;\n            a = t1 + t2 << 0;\n        }\n        __classPrivateFieldSet(this, _h0, __classPrivateFieldGet(this, _h0) + a << 0);\n        __classPrivateFieldSet(this, _h1, __classPrivateFieldGet(this, _h1) + b << 0);\n        __classPrivateFieldSet(this, _h2, __classPrivateFieldGet(this, _h2) + c << 0);\n        __classPrivateFieldSet(this, _h3, __classPrivateFieldGet(this, _h3) + d << 0);\n        __classPrivateFieldSet(this, _h4, __classPrivateFieldGet(this, _h4) + e << 0);\n        __classPrivateFieldSet(this, _h5, __classPrivateFieldGet(this, _h5) + f << 0);\n        __classPrivateFieldSet(this, _h6, __classPrivateFieldGet(this, _h6) + g << 0);\n        __classPrivateFieldSet(this, _h7, __classPrivateFieldGet(this, _h7) + h << 0);\n    }\n    hex() {\n        this.finalize();\n        const h0 = __classPrivateFieldGet(this, _h0);\n        const h1 = __classPrivateFieldGet(this, _h1);\n        const h2 = __classPrivateFieldGet(this, _h2);\n        const h3 = __classPrivateFieldGet(this, _h3);\n        const h4 = __classPrivateFieldGet(this, _h4);\n        const h5 = __classPrivateFieldGet(this, _h5);\n        const h6 = __classPrivateFieldGet(this, _h6);\n        const h7 = __classPrivateFieldGet(this, _h7);\n        let hex = HEX_CHARS[h0 >> 28 & 0x0f] + HEX_CHARS[h0 >> 24 & 0x0f] + HEX_CHARS[h0 >> 20 & 0x0f] + HEX_CHARS[h0 >> 16 & 0x0f] + HEX_CHARS[h0 >> 12 & 0x0f] + HEX_CHARS[h0 >> 8 & 0x0f] + HEX_CHARS[h0 >> 4 & 0x0f] + HEX_CHARS[h0 & 0x0f] + HEX_CHARS[h1 >> 28 & 0x0f] + HEX_CHARS[h1 >> 24 & 0x0f] + HEX_CHARS[h1 >> 20 & 0x0f] + HEX_CHARS[h1 >> 16 & 0x0f] + HEX_CHARS[h1 >> 12 & 0x0f] + HEX_CHARS[h1 >> 8 & 0x0f] + HEX_CHARS[h1 >> 4 & 0x0f] + HEX_CHARS[h1 & 0x0f] + HEX_CHARS[h2 >> 28 & 0x0f] + HEX_CHARS[h2 >> 24 & 0x0f] + HEX_CHARS[h2 >> 20 & 0x0f] + HEX_CHARS[h2 >> 16 & 0x0f] + HEX_CHARS[h2 >> 12 & 0x0f] + HEX_CHARS[h2 >> 8 & 0x0f] + HEX_CHARS[h2 >> 4 & 0x0f] + HEX_CHARS[h2 & 0x0f] + HEX_CHARS[h3 >> 28 & 0x0f] + HEX_CHARS[h3 >> 24 & 0x0f] + HEX_CHARS[h3 >> 20 & 0x0f] + HEX_CHARS[h3 >> 16 & 0x0f] + HEX_CHARS[h3 >> 12 & 0x0f] + HEX_CHARS[h3 >> 8 & 0x0f] + HEX_CHARS[h3 >> 4 & 0x0f] + HEX_CHARS[h3 & 0x0f] + HEX_CHARS[h4 >> 28 & 0x0f] + HEX_CHARS[h4 >> 24 & 0x0f] + HEX_CHARS[h4 >> 20 & 0x0f] + HEX_CHARS[h4 >> 16 & 0x0f] + HEX_CHARS[h4 >> 12 & 0x0f] + HEX_CHARS[h4 >> 8 & 0x0f] + HEX_CHARS[h4 >> 4 & 0x0f] + HEX_CHARS[h4 & 0x0f] + HEX_CHARS[h5 >> 28 & 0x0f] + HEX_CHARS[h5 >> 24 & 0x0f] + HEX_CHARS[h5 >> 20 & 0x0f] + HEX_CHARS[h5 >> 16 & 0x0f] + HEX_CHARS[h5 >> 12 & 0x0f] + HEX_CHARS[h5 >> 8 & 0x0f] + HEX_CHARS[h5 >> 4 & 0x0f] + HEX_CHARS[h5 & 0x0f] + HEX_CHARS[h6 >> 28 & 0x0f] + HEX_CHARS[h6 >> 24 & 0x0f] + HEX_CHARS[h6 >> 20 & 0x0f] + HEX_CHARS[h6 >> 16 & 0x0f] + HEX_CHARS[h6 >> 12 & 0x0f] + HEX_CHARS[h6 >> 8 & 0x0f] + HEX_CHARS[h6 >> 4 & 0x0f] + HEX_CHARS[h6 & 0x0f];\n        if (!__classPrivateFieldGet(this, _is224)) {\n            hex += HEX_CHARS[h7 >> 28 & 0x0f] + HEX_CHARS[h7 >> 24 & 0x0f] + HEX_CHARS[h7 >> 20 & 0x0f] + HEX_CHARS[h7 >> 16 & 0x0f] + HEX_CHARS[h7 >> 12 & 0x0f] + HEX_CHARS[h7 >> 8 & 0x0f] + HEX_CHARS[h7 >> 4 & 0x0f] + HEX_CHARS[h7 & 0x0f];\n        }\n        return hex;\n    }\n    toString() {\n        return this.hex();\n    }\n    digest() {\n        this.finalize();\n        const h0 = __classPrivateFieldGet(this, _h0);\n        const h1 = __classPrivateFieldGet(this, _h1);\n        const h2 = __classPrivateFieldGet(this, _h2);\n        const h3 = __classPrivateFieldGet(this, _h3);\n        const h4 = __classPrivateFieldGet(this, _h4);\n        const h5 = __classPrivateFieldGet(this, _h5);\n        const h6 = __classPrivateFieldGet(this, _h6);\n        const h7 = __classPrivateFieldGet(this, _h7);\n        const arr = [\n            h0 >> 24 & 0xff,\n            h0 >> 16 & 0xff,\n            h0 >> 8 & 0xff,\n            h0 & 0xff,\n            h1 >> 24 & 0xff,\n            h1 >> 16 & 0xff,\n            h1 >> 8 & 0xff,\n            h1 & 0xff,\n            h2 >> 24 & 0xff,\n            h2 >> 16 & 0xff,\n            h2 >> 8 & 0xff,\n            h2 & 0xff,\n            h3 >> 24 & 0xff,\n            h3 >> 16 & 0xff,\n            h3 >> 8 & 0xff,\n            h3 & 0xff,\n            h4 >> 24 & 0xff,\n            h4 >> 16 & 0xff,\n            h4 >> 8 & 0xff,\n            h4 & 0xff,\n            h5 >> 24 & 0xff,\n            h5 >> 16 & 0xff,\n            h5 >> 8 & 0xff,\n            h5 & 0xff,\n            h6 >> 24 & 0xff,\n            h6 >> 16 & 0xff,\n            h6 >> 8 & 0xff,\n            h6 & 0xff\n        ];\n        if (!__classPrivateFieldGet(this, _is224)) {\n            arr.push(h7 >> 24 & 0xff, h7 >> 16 & 0xff, h7 >> 8 & 0xff, h7 & 0xff);\n        }\n        return arr;\n    }\n    array() {\n        return this.digest();\n    }\n    arrayBuffer() {\n        this.finalize();\n        const buffer = new ArrayBuffer(__classPrivateFieldGet(this, _is224) ? 28 : 32);\n        const dataView = new DataView(buffer);\n        dataView.setUint32(0, __classPrivateFieldGet(this, _h0));\n        dataView.setUint32(4, __classPrivateFieldGet(this, _h1));\n        dataView.setUint32(8, __classPrivateFieldGet(this, _h2));\n        dataView.setUint32(12, __classPrivateFieldGet(this, _h3));\n        dataView.setUint32(16, __classPrivateFieldGet(this, _h4));\n        dataView.setUint32(20, __classPrivateFieldGet(this, _h5));\n        dataView.setUint32(24, __classPrivateFieldGet(this, _h6));\n        if (!__classPrivateFieldGet(this, _is224)) {\n            dataView.setUint32(28, __classPrivateFieldGet(this, _h7));\n        }\n        return buffer;\n    }\n}\n_block = new WeakMap(), _blocks = new WeakMap(), _bytes = new WeakMap(), _finalized = new WeakMap(), _first = new WeakMap(), _h0 = new WeakMap(), _h1 = new WeakMap(), _h2 = new WeakMap(), _h3 = new WeakMap(), _h4 = new WeakMap(), _h5 = new WeakMap(), _h6 = new WeakMap(), _h7 = new WeakMap(), _hashed = new WeakMap(), _hBytes = new WeakMap(), _is224 = new WeakMap(), _lastByteIndex = new WeakMap(), _start = new WeakMap();\nfunction Sha256ToInt(s) {\n    const sha256 = new Sha256();\n    sha256.update(s);\n    return parseInt(sha256.hex().substring(0, 8), 16);\n}\nconst RGB2HEX = function (RGBArray) {\n    var hex = '#';\n    RGBArray.forEach(function (value) {\n        if (value < 16) {\n            hex += 0;\n        }\n        hex += value.toString(16);\n    });\n    return hex;\n};\nconst HSL2RGB = function (H, S, L) {\n    H /= 360;\n    var q = L < 0.5 ? L * (1 + S) : L + S - L * S;\n    var p = 2 * L - q;\n    return [\n        H + 1 / 3,\n        H,\n        H - 1 / 3\n    ].map(function (color) {\n        if (color < 0) {\n            color++;\n        }\n        if (color > 1) {\n            color--;\n        }\n        if (color < 1 / 6) {\n            color = p + (q - p) * 6 * color;\n        }\n        else if (color < 0.5) {\n            color = q;\n        }\n        else if (color < 2 / 3) {\n            color = p + (q - p) * 6 * (2 / 3 - color);\n        }\n        else {\n            color = p;\n        }\n        return Math.round(color * 255);\n    });\n};\nclass ColorHash {\n    constructor(options = {}) {\n        const [L, S] = [\n            options.lightness,\n            options.saturation\n        ].map(function (param) {\n            param = param !== undefined ? param : [\n                0.35,\n                0.5,\n                0.65\n            ];\n            return Array.isArray(param) ? param.concat() : [\n                param\n            ];\n        });\n        this.L = L;\n        this.S = S;\n        if (typeof options.hue === 'number') {\n            options.hue = {\n                min: options.hue,\n                max: options.hue\n            };\n        }\n        if (typeof options.hue === 'object' && !Array.isArray(options.hue)) {\n            options.hue = [\n                options.hue\n            ];\n        }\n        if (typeof options.hue === 'undefined') {\n            options.hue = [];\n        }\n        this.hueRanges = options.hue.map(function (range) {\n            return {\n                min: typeof range.min === 'undefined' ? 0 : range.min,\n                max: typeof range.max === 'undefined' ? 360 : range.max\n            };\n        });\n        this.hash = Sha256ToInt;\n        if (typeof options.hash === 'function') {\n            this.hash = options.hash;\n        }\n        if (options.hash === 'bkdr') {\n            this.hash = BKDRHash;\n        }\n    }\n    hsl(str) {\n        var H, S, L;\n        var hash = this.hash(str);\n        var hueResolution = 727;\n        if (this.hueRanges.length) {\n            const range = this.hueRanges[hash % this.hueRanges.length];\n            H = hash / this.hueRanges.length % hueResolution * (range.max - range.min) / hueResolution + range.min;\n        }\n        else {\n            H = hash % 359;\n        }\n        hash = Math.ceil(hash / 360);\n        S = this.S[hash % this.S.length];\n        hash = Math.ceil(hash / this.S.length);\n        L = this.L[hash % this.L.length];\n        return [\n            H,\n            S,\n            L\n        ];\n    }\n    rgb(str) {\n        var hsl = this.hsl(str);\n        return HSL2RGB.apply(this, hsl);\n    }\n    hex(str) {\n        var rgb = this.rgb(str);\n        return RGB2HEX(rgb);\n    }\n}\nexport { ColorHash as default };\n","const __pages_import_0__ = () => import(\"/src/scenes/stats.vue\");\nconst __pages_import_1__ = () => import(\"/src/scenes/spiral.vue\");\nconst __pages_import_2__ = () => import(\"/src/scenes/rose.vue\");\nconst __pages_import_3__ = () => import(\"/src/scenes/level.vue\");\nconst __pages_import_4__ = () => import(\"/src/scenes/index.vue\");\nconst __pages_import_5__ = () => import(\"/src/scenes/donut.vue\");\nconst __pages_import_6__ = () => import(\"/src/scenes/cross.vue\");\n\nconst routes = [{\"name\":\"stats\",\"path\":\"/stats\",\"component\":__pages_import_0__,\"props\":true},{\"name\":\"spiral\",\"path\":\"/spiral\",\"component\":__pages_import_1__,\"props\":true,\"title\":\"Electric\",\"subtitle\":\"by Chromatone\"},{\"name\":\"rose\",\"path\":\"/rose\",\"component\":__pages_import_2__,\"props\":true},{\"name\":\"level\",\"path\":\"/level\",\"component\":__pages_import_3__,\"props\":true,\"title\":\"Electric\",\"subtitle\":\"by Chromatone\"},{\"name\":\"index\",\"path\":\"/\",\"component\":__pages_import_4__,\"props\":true,\"title\":\"Floating\",\"subtitle\":\"by Chromatone\"},{\"name\":\"donut\",\"path\":\"/donut\",\"component\":__pages_import_5__,\"props\":true},{\"name\":\"cross\",\"path\":\"/cross\",\"component\":__pages_import_6__,\"props\":true}];\n\nexport default routes;","/*!\n  * vue-router v4.2.2\n  * (c) 2023 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || obj[Symbol.toStringTag] === 'Module';\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = isArray(value)\r\n            ? value.map(fn)\r\n            : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nconst noop = () => { };\r\n/**\r\n * Typesafe alternative to Array.isArray\r\n * https://github.com/microsoft/TypeScript/pull/48228\r\n */\r\nconst isArray = Array.isArray;\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms a URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    // TODO: move to new URL()\r\n    const hashPos = location.indexOf('#');\r\n    let searchPos = location.indexOf('?');\r\n    // the hash appears before the search, so it's not part of the search string\r\n    if (hashPos < searchPos && hashPos >= 0) {\r\n        searchPos = -1;\r\n    }\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    const query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non-case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param stringifyQuery - A function that takes a query object of type LocationQueryRaw and returns a string representation of it.\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    const aLastIndex = a.matched.length - 1;\r\n    const bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (const key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    const lastToSegment = toSegments[toSegments.length - 1];\r\n    // make . and ./ the same (../ === .., ../../ === ../..)\r\n    // this is the same behavior as new URL()\r\n    if (lastToSegment === '..' || lastToSegment === '.') {\r\n        toSegments.push('');\r\n    }\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // we stay on the same position\r\n        if (segment === '.')\r\n            continue;\r\n        // go up in the from array\r\n        if (segment === '..') {\r\n            // we can't go below zero, but we still need to increment toPosition\r\n            if (position > 1)\r\n                position--;\r\n            // continue\r\n        }\r\n        // we reached a non-relative path, we stop here\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            // ensure we use at least the last element in the toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        const positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    const foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param base - The base path\r\n * @param location - The window.location object\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // set up the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // set up the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    // TODO: could we use 'pagehide' or 'visibilitychange' instead?\r\n    // https://developer.chrome.com/blog/page-lifecycle-api/\r\n    window.addEventListener('beforeunload', beforeUnloadListener, {\r\n        passive: true,\r\n    });\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    const currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    const historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor, and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided, and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/router/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/router/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates an in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    base = normalizeBase(base);\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (const callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g. `file://`) or when configuring a server to\r\n * handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname + location.search` If there is a `<base>` tag\r\n * in the `head`, its value will be ignored in favor of this parameter **but note it affects all the history.pushState()\r\n * calls**, meaning that if you use a `<base>` tag, it's `href` value **has to match this parameter** (ignoring anything\r\n * after the `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = Symbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : '');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* ErrorTypes.MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* ErrorTypes.NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* ErrorTypes.NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* ErrorTypes.NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non-greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    const score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* PathScore.Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub-segment /:a-other-:b\r\n            let subSegmentScore = 40 /* PathScore.Segment */ +\r\n                (options.sensitive ? 0.25 /* PathScore.BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* TokenType.Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* PathScore.Static */;\r\n            }\r\n            else if (token.type === 1 /* TokenType.Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* PathScore.BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* PathScore.Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* PathScore.BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* PathScore.BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* PathScore.BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* PathScore.BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* TokenType.Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* TokenType.Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (isArray(param) && !repeatable) {\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    }\r\n                    const text = isArray(param)\r\n                        ? param.join('/')\r\n                        : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        // avoid empty path when we have multiple optional params\r\n        return path || '/';\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* PathScore.Static */ + 40 /* PathScore.Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    if (Math.abs(bScore.length - aScore.length) === 1) {\r\n        if (isLastScoreNegative(aScore))\r\n            return 1;\r\n        if (isLastScoreNegative(bScore))\r\n            return -1;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\r\n/**\r\n * This allows detecting splats at the end of a path: /home/:id(.*)*\r\n *\r\n * @param score - score to check\r\n * @returns true if the last entry is negative\r\n */\r\nfunction isLastScoreNegative(score) {\r\n    const last = score[score.length - 1];\r\n    return score.length > 0 && last[last.length - 1] < 0;\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* TokenType.Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* TokenizerState.Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* TokenizerState.Static */) {\r\n            segment.push({\r\n                type: 0 /* TokenType.Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* TokenizerState.Param */ ||\r\n            state === 2 /* TokenizerState.ParamRegExp */ ||\r\n            state === 3 /* TokenizerState.ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* TokenType.Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* TokenizerState.ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* TokenizerState.EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* TokenizerState.Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* TokenizerState.Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* TokenizerState.EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* TokenizerState.Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* TokenizerState.ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* TokenizerState.Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* TokenizerState.ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* TokenizerState.ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* TokenizerState.ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* TokenizerState.Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* TokenizerState.ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        const isRootAdd = !originalRecord;\r\n        const mainNormalizedRecord = normalizeRouteRecord(record);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent);\r\n        }\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            const { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                const parentPath = parent.record.path;\r\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object beforehand, so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist,\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if (mainNormalizedRecord.children) {\r\n                const children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other aliases (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            // Avoid adding a record that doesn't display anything. This allows passing through records without a component to\r\n            // not be reached and pass through the catch all route\r\n            if ((matcher.record.components &&\r\n                Object.keys(matcher.record.components).length) ||\r\n                matcher.record.name ||\r\n                matcher.record.redirect) {\r\n                insertMatcher(matcher);\r\n            }\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            const index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0 &&\r\n            // Adding children with empty path should still appear before the parent\r\n            // https://github.com/vuejs/router/issues/1124\r\n            (matcher.record.path !== matchers[i].record.path ||\r\n                !isRecordChildOf(matcher, matchers[i])))\r\n            i++;\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            // warn if the user is passing invalid params so they can debug it better when they get removed\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const invalidParams = Object.keys(location.params || {}).filter(paramName => !matcher.keys.find(k => k.name === paramName));\r\n                if (invalidParams.length) {\r\n                    warn(`Discarded invalid param(s) \"${invalidParams.join('\", \"')}\" when navigating. See https://github.com/vuejs/router/blob/main/packages/router/CHANGELOG.md#414-2022-08-22 for more details.`);\r\n                }\r\n            }\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), \r\n            // discard any existing params in the current location that do not exist here\r\n            // #1497 this ensures better active/exact matching\r\n            location.params &&\r\n                paramsFromLocation(location.params, matcher.keys.map(k => k.name)));\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/router.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* ErrorTypes.MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    const newParams = {};\r\n    for (const key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || null\r\n            : record.component && { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records, but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (const name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    const options = {};\r\n    for (const key in defaults) {\r\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (const key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (const key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" must have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\n/**\r\n * A route with a name and a child with an empty path without a name should warn when adding the route\r\n *\r\n * @param mainNormalizedRecord - RouteRecordNormalized\r\n * @param parent - RouteRecordMatcher\r\n */\r\nfunction checkChildMissingNameWithEmptyPath(mainNormalizedRecord, parent) {\r\n    if (parent &&\r\n        parent.record.name &&\r\n        !mainNormalizedRecord.name &&\r\n        !mainNormalizedRecord.path) {\r\n        warn(`The route named \"${String(parent.record.name)}\" has a child without a name and an empty path. Using that name won't render the empty path child so you probably want to move the name to the child instead. If this is intentional, add a name to the child route to remove the warning.`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (const key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" must have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\r\nfunction isRecordChildOf(record, parent) {\r\n    return parent.children.some(child => child === record || isRecordChildOf(record, child));\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving un-encoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query, but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        const eqPos = searchParam.indexOf('=');\r\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        const values = isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (const key in query) {\r\n        const value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : '');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : '');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router' : '');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'route location' : '');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = Symbol((process.env.NODE_ENV !== 'production') ? 'router view location' : '');\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteLeave()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found when calling `onBeforeRouteUpdate()`. Make sure you call this function inside a component child of <router-view>. Maybe you called it inside of App.vue?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false) {\r\n                reject(createRouterError(4 /* ErrorTypes.NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            }\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function') {\r\n                    enterCallbackArray.push(valid);\r\n                }\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        if ((process.env.NODE_ENV !== 'production') && !record.components && !record.children.length) {\r\n            warn(`Record with path \"${record.path}\" is either missing a \"component(s)\"` +\r\n                ` or \"children\" property.`);\r\n        }\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    const promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                const options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    // cannot be null or undefined because we went into the for loop\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @internal\r\n *\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\r\n/**\r\n * Ensures a route is loaded, so it can be passed as o prop to `<RouterView>`.\r\n *\r\n * @param route - resolved route to load\r\n */\r\nfunction loadRouteLocation(route) {\r\n    return route.matched.every(record => record.redirect)\r\n        ? Promise.reject(new Error('Cannot load a route that redirects.'))\r\n        : Promise.all(route.matched.map(record => record.components &&\r\n            Promise.all(Object.keys(record.components).reduce((promises, name) => {\r\n                const rawComponent = record.components[name];\r\n                if (typeof rawComponent === 'function' &&\r\n                    !('displayName' in rawComponent)) {\r\n                    promises.push(rawComponent().then(resolved => {\r\n                        if (!resolved)\r\n                            return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\". Ensure you passed a function that returns a promise.`));\r\n                        const resolvedComponent = isESModule(resolved)\r\n                            ? resolved.default\r\n                            : resolved;\r\n                        // replace the function with the resolved component\r\n                        // cannot be null or undefined because we went into the for loop\r\n                        record.components[name] = resolvedComponent;\r\n                        return;\r\n                    }));\r\n                }\r\n                return promises;\r\n            }, [])))).then(() => route);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        const { matched } = route.value;\r\n        const { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        const currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    /**\r\n     * NOTE: update {@link _RouterLinkI}'s `$slots` type when updating this\r\n     */\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    compatConfig: { MODE: 3 },\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener, so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (const key in inner) {\r\n        const innerValue = inner[key];\r\n        const outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    // Better compat for @vue/compat users\r\n    // https://github.com/vuejs/router/issues/1315\r\n    compatConfig: { MODE: 3 },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const injectedDepth = inject(viewDepthKey, 0);\r\n        // The depth changes based on empty components option, which allows passthrough routes e.g. routes with children\r\n        // that are used to reuse the `path` property\r\n        const depth = computed(() => {\r\n            let initialDepth = unref(injectedDepth);\r\n            const { matched } = routeToDisplay.value;\r\n            let matchedRoute;\r\n            while ((matchedRoute = matched[initialDepth]) &&\r\n                !matchedRoute.components) {\r\n                initialDepth++;\r\n            }\r\n            return initialDepth;\r\n        });\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth.value]);\r\n        provide(viewDepthKey, computed(() => depth.value + 1));\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name, so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[currentName];\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[currentName];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) &&\r\n                isBrowser &&\r\n                component.ref) {\r\n                // TODO: can display if it's an alias, its props\r\n                const info = {\r\n                    depth: depth.value,\r\n                    name: matchedRoute.name,\r\n                    path: matchedRoute.path,\r\n                    meta: matchedRoute.meta,\r\n                };\r\n                const internalInstances = isArray(component.ref)\r\n                    ? component.ref.map(r => r.i)\r\n                    : [component.ref.i];\r\n                internalInstances.forEach(instance => {\r\n                    // @ts-expect-error\r\n                    instance.__vrv_devtools = info;\r\n                });\r\n            }\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    const parentSubTreeType = instance.parent && instance.parent.subTree && instance.parent.subTree.type;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition')) &&\r\n        typeof parentSubTreeType === 'object' &&\r\n        parentSubTreeType.name === 'RouterView') {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\n/**\r\n * Copies a route location and removes any problematic properties that cannot be shown in devtools (e.g. Vue instances).\r\n *\r\n * @param routeLocation - routeLocation to format\r\n * @param tooltip - optional tooltip\r\n * @returns a copy of the routeLocation\r\n */\r\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://router.vuejs.org',\r\n        logo: 'https://router.vuejs.org/logo.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        if (typeof api.now !== 'function') {\r\n            console.warn('[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\r\n        }\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active and display tags on router views\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            if (componentInstance.__vrv_devtools) {\r\n                const info = componentInstance.__vrv_devtools;\r\n                node.tags.push({\r\n                    label: (info.name ? `${info.name.toString()}: ` : '') + info.path,\r\n                    textColor: 0,\r\n                    tooltip: 'This component is rendered by &lt;router-view&gt;',\r\n                    backgroundColor: PINK_500,\r\n                });\r\n            }\r\n            // if multiple useLink are used\r\n            if (isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: api.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: api.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: api.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    if (Object.keys(route.record.meta).length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'meta',\r\n            value: route.record.meta,\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: typeof record.redirect === 'string'\r\n                ? `redirect: ${record.redirect}`\r\n                : 'redirects',\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    const parseQuery$1 = options.parseQuery || parseQuery;\r\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    const routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = \r\n    // @ts-expect-error: intentionally avoid the type check\r\n    applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        const recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            const href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                // @ts-expect-error: the type is never\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // remove any nullish param\r\n            const targetParams = assign({}, rawLocation.params);\r\n            for (const key in targetParams) {\r\n                if (targetParams[key] == null) {\r\n                    delete targetParams[key];\r\n                }\r\n            }\r\n            // pass encoded values to the matcher, so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(targetParams),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // the matcher might have merged current location params, so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        const href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/router/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : (rawLocation.query || {}),\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* ErrorTypes.NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                // avoid transferring params if the redirect has a path\r\n                params: 'path' in newTargetLocation ? {} : to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: typeof shouldRedirect === 'object'\r\n                    ? assign({}, data, shouldRedirect.state)\r\n                    : data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* ErrorTypes.NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? // navigation redirects still mark the router as ready\r\n                isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)\r\n                    ? error\r\n                    : markAsReady(error) // also returns the error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 30) {\r\n                        warn(`Detected a possibly infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow.\\n Are you always returning a new location within a navigation guard? That would lead to this error. Only return when redirecting or aborting, that should fix this. This might break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign({\r\n                        // preserve an existing replacement but allow the redirect to override it\r\n                        replace,\r\n                    }, locationAsObject(failure.to), {\r\n                        state: typeof failure.to === 'object'\r\n                            ? assign({}, data, failure.to.state)\r\n                            : data,\r\n                        force,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    function runWithContext(fn) {\r\n        const app = installedApps.values().next().value;\r\n        // support Vue < 3.3\r\n        return app && typeof app.runWithContext === 'function'\r\n            ? app.runWithContext(fn)\r\n            : fn();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list()) {\r\n            runWithContext(() => guard(to, from, failure));\r\n        }\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        // avoid setting up listeners twice due to an invalid first navigation\r\n        if (removeHistoryListener)\r\n            return;\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            if (!router.listening)\r\n                return;\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is no guarantee for\r\n                    // it to work on every browser. So instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing, but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ |\r\n                            16 /* ErrorTypes.NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta) {\r\n                    routerHistory.go(-info.delta, false);\r\n                }\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta &&\r\n                        // a new navigation has been triggered, so we do not want to revert, that will change the current history\r\n                        // entry while a different route is displayed\r\n                        !isNavigationFailure(failure, 8 /* ErrorTypes.NAVIGATION_CANCELLED */)) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* ErrorTypes.NAVIGATION_ABORTED */ | 16 /* ErrorTypes.NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    function markAsReady(err) {\r\n        if (!ready) {\r\n            // still not ready if an error happened\r\n            ready = !err;\r\n            setupListeners();\r\n            readyHandlers\r\n                .list()\r\n                .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n            readyHandlers.reset();\r\n        }\r\n        return err;\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        listening: true,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (const key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            const unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                // the router is not attached to an app anymore\r\n                if (installedApps.size < 1) {\r\n                    // invalidate the current navigation\r\n                    pendingLocation = START_LOCATION_NORMALIZED;\r\n                    removeHistoryListener && removeHistoryListener();\r\n                    removeHistoryListener = null;\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            // TODO: this probably needs to be updated so it can be used by vue-termui\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    // TODO: type this as NavigationGuardReturn or similar instead of any\r\n    function runGuardQueue(guards) {\r\n        return guards.reduce((promise, guard) => promise.then(() => runWithContext(guard)), Promise.resolve());\r\n    }\r\n    return router;\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, loadRouteLocation, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","<script setup>\nimport { useRafFn } from '@vueuse/core'\nimport { createNoise2D } from 'simplex-noise';\nimport ColorHash from \"color-hash\";\nimport scenes from '~pages'\nimport { useScene, activeScene } from '~/use/scene';\nimport { useMidi, useKeyboard } from '~/use/midi'\nimport { useRoute, useRouter } from 'vue-router'\nimport { onKeyStroke } from '@vueuse/core';\nimport { init } from './use/synth';\n\n\nconst { midi } = useMidi()\nconst route = useRoute()\nconst router = useRouter()\n\nconst count = ref(0)\n\nconst noise2D = createNoise2D();\n\nconst angle = ref()\n\nconst { pause, resume } = useRafFn(() => {\n  count.value++\n  angle.value = noise2D(1, count.value / 2000);\n})\n\nconst getColor = new ColorHash({\n  saturation: [0.05, 0.28, 0.62],\n  lightness: [0.75, 0.87, 0.9],\n})\n\nconst color1 = computed(() => getColor.hex(Math.random() * 100000 + 'a'))\nconst color2 = computed(() => getColor.hex(Math.random() * 100000 + 'b'))\nconst background = computed(() => `linear-gradient(${angle.value * 360}deg, ${color1.value}, ${color2.value})`)\n\nconst { visual, width, height } = useScene()\n\nconst changed = ref(false)\n\nwatch(() => midi.total.hits, hits => {\n  if (hits == 0) {\n    router.push(randomScene())\n  }\n})\n\nonKeyStroke([' ', 'Enter'], () => {\n  init()\n  router.push(randomScene())\n})\n\nfunction randomScene() {\n  let rnd, scs, index, path\n  for (let i = 0; i < 20; i++) {\n    rnd = Math.random()\n    scs = Object.values(scenes)\n    index = rnd * (scs.length)\n    path = scs[Math.floor(index)].path\n    if (!route.path.includes(path)) break\n  }\n\n  changed.value = true\n  return path\n}\n\nonMounted(() => {\n  useKeyboard()\n})\n\n\n</script>\n\n<template lang=\"pug\">\n.flex.flex-col.h-100vh.w-full \n  // (:style=\"{ background }\"  )\n  state-overlay\n  .absolute.bottom-20.text-center.flex.flex-col.items-center.w-full(v-if=\"!changed\")\n    .text-sm Hold any note more than {{ midi.maxDuration / 1000 }} seconds or press Enter/Spacebar to randomly change current scene.\n  state-start\n  .h-full.w-full\n    svg#visual.h-full.w-full(\n      ref=\"visual\"\n      version=\"1.1\",\n      baseProfile=\"full\",\n      :viewBox=\"`0 0  ${width} ${height}`\",\n      xmlns=\"http://www.w3.org/2000/svg\",\n    )\n      defs\n        filter#noiseFilter\n          feTurbulence(type=\"fractalNoise\", basefrequency=\"6.29\", numoctaves=\"6\", stitchtiles=\"stitch\").\n      rect(\n        filter=\"url(#noiseFilter)\"\n        fill=\"hsl(20,70%,60%)\"\n        opacity=\"0.1\"\n        :width=\"width\"\n        :height=\"height\"\n        )\n      router-view(v-slot=\"{ Component }\")\n        transition(name=\"fade\" mode=\"out-in\")\n          keep-alive\n            component#content(:is=\"Component\")\n      scene-stats\n    .absolute.left-0.top-10.flex.flex-col.gap-2.m-2.opacity-20.hover_opacity-100.transition\n      router-link.button.p-2.cursor-pointer.text-3xl( \n        v-for=\"(scene, i) in scenes\" :key=\"scene.path\"\n        @click=\"changed = true\"\n        :to=\"scene\"\n        :class=\"{ active: $route.path == scene.path }\"\n        v-tooltip.right=\"scene.name.charAt(0).toUpperCase() + scene.name.slice(1) + ' scene'\"\n        )\n\n        icon-ph-plugs-connected(v-if=\"scene.name == 'index'\")\n        icon-bx-tachometer(v-if=\"scene.name == 'level'\")\n        icon-bi-flower1(v-if=\"scene.name == 'rose'\")\n        icon-la-plus(v-if=\"scene.name == 'cross'\")\n        icon-ri-donut-chart-fill(v-if=\"scene.name == 'donut'\")\n        icon-ic-outline-bar-chart(v-if=\"scene.name == 'stats'\")\n        icon-ph-spiral(v-if=\"scene.name == 'spiral'\")\n//debug\n</template>\n\n<style lang=\"postcss\">\n.app {\n  @apply transition duration-800ms relative overflow-y-scroll absolute min-h-full flex flex-col items-center text-left w-full;\n}\n\n.nav {\n  @apply rounded-lg flex items-center flex-1 w-full bg-dark-50/40 hover_no-underline hover_shadow transition hover_bg-light-50/80;\n}\n\n.button {\n  @apply p-4 shadow transition opacity-90 hover_opacity-100 flex transition flex-auto justify-center items-center rounded-xl bg-light-400 dark_bg-dark-500;\n\n  &:hover {\n    @apply bg-light-50 dark_bg-dark-50;\n  }\n\n  &.active {\n    @apply bg-dark-50 text-light-200 dark_bg-light-200 dark_text-dark-500;\n  }\n}\n\n.panel {\n  @apply absolute p-4 m-4 bg-light-300 dark_bg-dark-300 z-20 flex flex-col gap-2 bg-opacity-90 dark_bg-opacity-90 flex items-center shadow-lg rounded-xl overflow-hidden right-2 bottom-2 max-w-sm overflow-y-scroll max-h-80vh;\n}\n</style>\n\n\n","function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getBasePlacement(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref) {\n  let {\n    reference,\n    floating,\n    placement\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  let coords;\n\n  switch (getBasePlacement(placement)) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] = coords[mainAxis] - (reference[length] / 2 - floating[length] / 2);\n      break;\n\n    case 'end':\n      coords[mainAxis] = coords[mainAxis] + (reference[length] / 2 - floating[length] / 2);\n      break;\n  }\n\n  return coords;\n}\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement({ ...rects,\n    placement\n  });\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let _debug_loop_count_ = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    if (process.env.NODE_ENV !== \"production\") {\n      _debug_loop_count_++;\n\n      if (_debug_loop_count_ > 100) {\n        throw new Error(['Floating UI: The middleware lifecycle appears to be', 'running in an infinite loop. This is usually caused by a `reset`', 'continually being returned without a break condition.'].join(' '));\n      }\n    }\n\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: data != null ? data : {}\n    };\n\n    if (reset) {\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement({ ...rects,\n          placement: statefulPlacement\n        }));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nasync function detectOverflow(middlewareArguments, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingParents',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = await platform.getClippingClientRect({\n    element: (await platform.isElement(element)) ? element : element.contextElement || (await platform.getDocumentElement({\n      element: elements.floating\n    })),\n    boundary,\n    rootBoundary\n  });\n  const elementClientRect = rectToClientRect(await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await platform.getOffsetParent({\n      element: elements.floating\n    }),\n    strategy\n  })); // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const basePlacement = getBasePlacement(placement);\n    const axis = getMainAxisFromPlacement(basePlacement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions({\n      element\n    });\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await platform.getOffsetParent({\n      element\n    });\n    const clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside of the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n    return {\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects) {\n  const isStart = getAlignment(placement) === 'start';\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? isStart ? 'right' : 'left' : isStart ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst basePlacements = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/basePlacements.reduce((acc, basePlacement) => acc.concat(basePlacement, basePlacement + \"-start\", basePlacement + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getBasePlacement(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _middlewareData$autoP5, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n\n      if ((_middlewareData$autoP = middlewareData.autoPlacement) != null && _middlewareData$autoP.skip) {\n        return {};\n      }\n\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP2 = (_middlewareData$autoP3 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP3.index) != null ? _middlewareData$autoP2 : 0;\n      const currentPlacement = placements[currentIndex];\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getBasePlacement(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP4 = (_middlewareData$autoP5 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP5.overflows) != null ? _middlewareData$autoP4 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      return {\n        data: {\n          skip: true\n        },\n        reset: {\n          placement: placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement\n        }\n      };\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip, _middlewareData$flip2;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement\n      } = middlewareArguments;\n\n      if ((_middlewareData$flip = middlewareData.flip) != null && _middlewareData$flip.skip) {\n        return {};\n      }\n\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const basePlacement = getBasePlacement(placement);\n      const isBasePlacement = basePlacement === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[basePlacement]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip3;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip3 = middlewareData.flip) == null ? void 0 : _middlewareData$flip3.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$slice$;\n\n              const placement = (_overflowsData$slice$ = overflowsData.slice().sort((a, b) => a.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0) - b.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0))[0]) == null ? void 0 : _overflowsData$slice$.placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        return {\n          data: {\n            skip: true\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return basePlacements.some(side => overflow[side] >= 0);\n}\n\nconst hide = () => ({\n  name: 'hide',\n\n  async fn(modifierArguments) {\n    const referenceOverflow = await detectOverflow(modifierArguments, {\n      elementContext: 'reference'\n    });\n    const floatingAltOverflow = await detectOverflow(modifierArguments, {\n      altBoundary: true\n    });\n    const referenceHiddenOffsets = getSideOffsets(referenceOverflow, modifierArguments.rects.reference);\n    const escapedOffsets = getSideOffsets(floatingAltOverflow, modifierArguments.rects.floating);\n    const referenceHidden = isAnySideFullyClipped(referenceHiddenOffsets);\n    const escaped = isAnySideFullyClipped(escapedOffsets);\n    return {\n      data: {\n        referenceHidden,\n        referenceHiddenOffsets,\n        escaped,\n        escapedOffsets\n      }\n    };\n  }\n\n});\n\nfunction convertValueToCoords(_ref) {\n  let {\n    placement,\n    rects,\n    value\n  } = _ref;\n  const basePlacement = getBasePlacement(placement);\n  const multiplier = ['left', 'top'].includes(basePlacement) ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value({ ...rects,\n    placement\n  }) : value;\n  const {\n    mainAxis,\n    crossAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    ...rawValue\n  };\n  return getMainAxisFromPlacement(basePlacement) === 'x' ? {\n    x: crossAxis,\n    y: mainAxis * multiplier\n  } : {\n    x: mainAxis * multiplier,\n    y: crossAxis\n  };\n}\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects\n      } = middlewareArguments;\n      const diffCoords = convertValueToCoords({\n        placement,\n        rects,\n        value\n      });\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getBasePlacement(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getBasePlacement(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$size;\n\n      const {\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n\n      if ((_middlewareData$size = middlewareData.size) != null && _middlewareData$size.skip) {\n        return {};\n      }\n\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const basePlacement = getBasePlacement(placement);\n      const isEnd = getAlignment(placement) === 'end';\n      let heightSide;\n      let widthSide;\n\n      if (basePlacement === 'top' || basePlacement === 'bottom') {\n        heightSide = basePlacement;\n        widthSide = isEnd ? 'left' : 'right';\n      } else {\n        widthSide = basePlacement;\n        heightSide = isEnd ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        height: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        width: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      apply == null ? void 0 : apply({ ...dimensions,\n        ...rects\n      });\n      return {\n        data: {\n          skip: true\n        },\n        reset: {\n          rects: true\n        }\n      };\n    }\n\n  };\n};\n\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$inlin, _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy,\n        middlewareData\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n\n      if ((_middlewareData$inlin = middlewareData.inline) != null && _middlewareData$inlin.skip) {\n        return {};\n      }\n\n      const fallback = rectToClientRect(await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await platform.getOffsetParent({\n          element: elements.floating\n        }),\n        strategy\n      }));\n      const clientRects = Array.from((_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects({\n        element: elements.reference\n      }))) != null ? _await$platform$getCl : []);\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getBasePlacement(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftPlacement = getBasePlacement(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftPlacement ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      return {\n        data: {\n          skip: true\n        },\n        reset: {\n          rects: await platform.getElementRects({\n            reference: {\n              getBoundingClientRect\n            },\n            floating: elements.floating,\n            strategy\n          })\n        }\n      };\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return (value == null ? void 0 : value.toString()) === '[object Window]';\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = navigator.userAgent.toLowerCase().includes('firefox');\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  return {\n    width: clientRect.width / scaleX,\n    height: clientRect.height / scaleY,\n    top: clientRect.top / scaleY,\n    right: clientRect.right / scaleX,\n    bottom: clientRect.bottom / scaleY,\n    left: clientRect.left / scaleX,\n    x: clientRect.left / scaleX,\n    y: clientRect.top / scaleY\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isWindow(element)) {\n    return {\n      scrollLeft: element.pageXOffset,\n      scrollTop: element.pageYOffset\n    };\n  }\n\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, isOffsetParentAnElement && isScaled(offsetParent));\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || ( // DOM Element detected\n    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n\n  );\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  return {\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n\n    if (Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) < 0.01) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].includes(getNodeName(node))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n\nfunction getScrollParents(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollParent = getScrollParent(node);\n  const isBody = scrollParent === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollParent);\n  const target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getScrollParents(getParentNode(target)));\n}\n\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  return false;\n}\n\nfunction getInnerBoundingClientRect(element) {\n  const clientRect = getBoundingClientRect(element);\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingParent(element, clippingParent) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element));\n  }\n\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  const clippingParents = getScrollParents(getParentNode(element));\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n\n  return clippingParents.filter(clippingParent => isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingClientRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary\n  } = _ref;\n  const mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  const clippingParents = [...mainClippingParents, rootBoundary];\n  const firstClippingParent = clippingParents[0];\n  const clippingRect = clippingParents.reduce((accRect, clippingParent) => {\n    const rect = getClientRectFromClippingParent(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingParent(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n\nconst platform = {\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  convertOffsetParentRelativeRectToViewportRelativeRect: args => convertOffsetParentRelativeRectToViewportRelativeRect(args),\n  getOffsetParent: _ref2 => {\n    let {\n      element\n    } = _ref2;\n    return getOffsetParent(element);\n  },\n  isElement: value => isElement(value),\n  getDocumentElement: _ref3 => {\n    let {\n      element\n    } = _ref3;\n    return getDocumentElement(element);\n  },\n  getClippingClientRect: args => getClippingClientRect(args),\n  getDimensions: _ref4 => {\n    let {\n      element\n    } = _ref4;\n    return getDimensions(element);\n  },\n  getClientRects: _ref5 => {\n    let {\n      element\n    } = _ref5;\n    return element.getClientRects();\n  }\n};\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { computePosition, getScrollParents };\n","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport { defineComponent, pushScopeId, popScopeId, nextTick, openBlock, createBlock, withScopeId, resolveComponent, createElementBlock, normalizeClass, normalizeStyle, withKeys, createElementVNode, Fragment, renderSlot, createCommentVNode, mergeProps, withCtx, createVNode, toDisplayString, ref, createApp, h } from \"vue\";\nimport { offset, autoPlacement, shift, flip, arrow, size, computePosition, getScrollParents } from \"@floating-ui/dom\";\nfunction assign(to, from) {\n  for (const key in from) {\n    if (Object.prototype.hasOwnProperty.call(from, key)) {\n      if (typeof from[key] === \"object\" && to[key]) {\n        assign(to[key], from[key]);\n      } else {\n        to[key] = from[key];\n      }\n    }\n  }\n}\nconst config = {\n  disabled: false,\n  distance: 5,\n  skidding: 0,\n  container: \"body\",\n  boundary: void 0,\n  instantMove: false,\n  disposeTimeout: 5e3,\n  popperTriggers: [],\n  strategy: \"absolute\",\n  preventOverflow: true,\n  flip: true,\n  shift: true,\n  overflowPadding: 0,\n  arrowPadding: 0,\n  arrowOverflow: true,\n  themes: {\n    tooltip: {\n      placement: \"top\",\n      triggers: [\"hover\", \"focus\", \"touch\"],\n      hideTriggers: (events) => [...events, \"click\"],\n      delay: {\n        show: 200,\n        hide: 0\n      },\n      handleResize: false,\n      html: false,\n      loadingContent: \"...\"\n    },\n    dropdown: {\n      placement: \"bottom\",\n      triggers: [\"click\"],\n      delay: 0,\n      handleResize: true,\n      autoHide: true\n    },\n    menu: {\n      $extend: \"dropdown\",\n      triggers: [\"hover\", \"focus\"],\n      popperTriggers: [\"hover\", \"focus\"],\n      delay: {\n        show: 0,\n        hide: 400\n      }\n    }\n  }\n};\nfunction getDefaultConfig(theme, key) {\n  let themeConfig = config.themes[theme] || {};\n  let value;\n  do {\n    value = themeConfig[key];\n    if (typeof value === \"undefined\") {\n      if (themeConfig.$extend) {\n        themeConfig = config.themes[themeConfig.$extend] || {};\n      } else {\n        themeConfig = null;\n        value = config[key];\n      }\n    } else {\n      themeConfig = null;\n    }\n  } while (themeConfig);\n  return value;\n}\nfunction getThemeClasses(theme) {\n  const result = [theme];\n  let themeConfig = config.themes[theme] || {};\n  do {\n    if (themeConfig.$extend && !themeConfig.$resetCss) {\n      result.push(themeConfig.$extend);\n      themeConfig = config.themes[themeConfig.$extend] || {};\n    } else {\n      themeConfig = null;\n    }\n  } while (themeConfig);\n  return result.map((c) => `v-popper--theme-${c}`);\n}\nvar vueResize = \"\";\nlet supportsPassive = false;\nif (typeof window !== \"undefined\") {\n  supportsPassive = false;\n  try {\n    const opts = Object.defineProperty({}, \"passive\", {\n      get() {\n        supportsPassive = true;\n      }\n    });\n    window.addEventListener(\"test\", null, opts);\n  } catch (e) {\n  }\n}\nlet isIOS = false;\nif (typeof window !== \"undefined\" && typeof navigator !== \"undefined\") {\n  isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\nconst placements = [\"auto\", \"top\", \"bottom\", \"left\", \"right\"].reduce((acc, base) => acc.concat([\n  base,\n  `${base}-start`,\n  `${base}-end`\n]), []);\nconst SHOW_EVENT_MAP = {\n  hover: \"mouseenter\",\n  focus: \"focus\",\n  click: \"click\",\n  touch: \"touchstart\"\n};\nconst HIDE_EVENT_MAP = {\n  hover: \"mouseleave\",\n  focus: \"blur\",\n  click: \"click\",\n  touch: \"touchend\"\n};\nfunction removeFromArray(array, item) {\n  const index = array.indexOf(item);\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n}\nfunction nextFrame() {\n  return new Promise((resolve) => requestAnimationFrame(() => {\n    requestAnimationFrame(resolve);\n  }));\n}\nconst shownPoppers = [];\nlet hidingPopper = null;\nlet Element = function() {\n};\nif (typeof window !== \"undefined\") {\n  Element = window.Element;\n}\nfunction defaultPropFactory(prop) {\n  return function(props) {\n    return getDefaultConfig(props.theme, prop);\n  };\n}\nvar PrivatePopper = () => defineComponent({\n  name: \"VPopper\",\n  props: {\n    theme: {\n      type: String,\n      required: true\n    },\n    targetNodes: {\n      type: Function,\n      required: true\n    },\n    referenceNode: {\n      type: Function,\n      required: true\n    },\n    popperNode: {\n      type: Function,\n      required: true\n    },\n    shown: {\n      type: Boolean,\n      default: false\n    },\n    showGroup: {\n      type: String,\n      default: null\n    },\n    ariaId: {\n      default: null\n    },\n    disabled: {\n      type: Boolean,\n      default: defaultPropFactory(\"disabled\")\n    },\n    placement: {\n      type: String,\n      default: defaultPropFactory(\"placement\"),\n      validator: (value) => placements.includes(value)\n    },\n    delay: {\n      type: [String, Number, Object],\n      default: defaultPropFactory(\"delay\")\n    },\n    distance: {\n      type: [Number, String],\n      default: defaultPropFactory(\"distance\")\n    },\n    skidding: {\n      type: [Number, String],\n      default: defaultPropFactory(\"skidding\")\n    },\n    triggers: {\n      type: Array,\n      default: defaultPropFactory(\"triggers\")\n    },\n    showTriggers: {\n      type: [Array, Function],\n      default: defaultPropFactory(\"showTriggers\")\n    },\n    hideTriggers: {\n      type: [Array, Function],\n      default: defaultPropFactory(\"hideTriggers\")\n    },\n    popperTriggers: {\n      type: Array,\n      default: defaultPropFactory(\"popperTriggers\")\n    },\n    popperShowTriggers: {\n      type: [Array, Function],\n      default: defaultPropFactory(\"popperShowTriggers\")\n    },\n    popperHideTriggers: {\n      type: [Array, Function],\n      default: defaultPropFactory(\"popperHideTriggers\")\n    },\n    container: {\n      type: [String, Object, Element, Boolean],\n      default: defaultPropFactory(\"container\")\n    },\n    boundary: {\n      type: [String, Element],\n      default: defaultPropFactory(\"boundary\")\n    },\n    strategy: {\n      type: String,\n      validator: (value) => [\"absolute\", \"fixed\"].includes(value),\n      default: defaultPropFactory(\"strategy\")\n    },\n    autoHide: {\n      type: Boolean,\n      default: defaultPropFactory(\"autoHide\")\n    },\n    handleResize: {\n      type: Boolean,\n      default: defaultPropFactory(\"handleResize\")\n    },\n    instantMove: {\n      type: Boolean,\n      default: defaultPropFactory(\"instantMove\")\n    },\n    eagerMount: {\n      type: Boolean,\n      default: defaultPropFactory(\"eagerMount\")\n    },\n    popperClass: {\n      type: [String, Array, Object],\n      default: defaultPropFactory(\"popperClass\")\n    },\n    computeTransformOrigin: {\n      type: Boolean,\n      default: defaultPropFactory(\"computeTransformOrigin\")\n    },\n    autoMinSize: {\n      type: Boolean,\n      default: defaultPropFactory(\"autoMinSize\")\n    },\n    autoMaxSize: {\n      type: Boolean,\n      default: defaultPropFactory(\"autoMaxSize\")\n    },\n    preventOverflow: {\n      type: Boolean,\n      default: defaultPropFactory(\"preventOverflow\")\n    },\n    overflowPadding: {\n      type: [Number, String],\n      default: defaultPropFactory(\"overflowPadding\")\n    },\n    arrowPadding: {\n      type: [Number, String],\n      default: defaultPropFactory(\"arrowPadding\")\n    },\n    arrowOverflow: {\n      type: Boolean,\n      default: defaultPropFactory(\"arrowOverflow\")\n    },\n    flip: {\n      type: Boolean,\n      default: defaultPropFactory(\"flip\")\n    },\n    shift: {\n      type: Boolean,\n      default: defaultPropFactory(\"shift\")\n    },\n    shiftCrossAxis: {\n      type: Boolean,\n      default: defaultPropFactory(\"shiftCrossAxis\")\n    }\n  },\n  emits: [\n    \"show\",\n    \"hide\",\n    \"update:shown\",\n    \"apply-show\",\n    \"apply-hide\",\n    \"close-group\",\n    \"close-directive\",\n    \"auto-hide\",\n    \"resize\",\n    \"dispose\"\n  ],\n  data() {\n    return {\n      isShown: false,\n      isMounted: false,\n      skipTransition: false,\n      classes: {\n        showFrom: false,\n        showTo: false,\n        hideFrom: false,\n        hideTo: true\n      },\n      result: {\n        x: 0,\n        y: 0,\n        placement: \"\",\n        strategy: this.strategy,\n        arrow: {\n          x: 0,\n          y: 0,\n          centerOffset: 0\n        },\n        transformOrigin: null\n      }\n    };\n  },\n  computed: {\n    popperId() {\n      return this.ariaId != null ? this.ariaId : this.randomId;\n    },\n    shouldMountContent() {\n      return this.eagerMount || this.isMounted;\n    },\n    slotData() {\n      return {\n        popperId: this.popperId,\n        isShown: this.isShown,\n        shouldMountContent: this.shouldMountContent,\n        skipTransition: this.skipTransition,\n        autoHide: this.autoHide,\n        show: this.show,\n        hide: this.hide,\n        handleResize: this.handleResize,\n        onResize: this.onResize,\n        classes: __spreadProps(__spreadValues({}, this.classes), {\n          popperClass: this.popperClass\n        }),\n        result: this.result\n      };\n    }\n  },\n  watch: __spreadValues({\n    shown: \"$_autoShowHide\",\n    disabled(value) {\n      if (value) {\n        this.dispose();\n      } else {\n        this.init();\n      }\n    },\n    async container() {\n      if (this.isShown) {\n        this.$_ensureTeleport();\n        await this.$_computePosition();\n      }\n    },\n    triggers() {\n      if (!this.$_isDisposed) {\n        this.$_removeEventListeners();\n        this.$_addEventListeners();\n      }\n    }\n  }, [\n    \"placement\",\n    \"distance\",\n    \"skidding\",\n    \"boundary\",\n    \"strategy\",\n    \"overflowPadding\",\n    \"arrowPadding\",\n    \"preventOverflow\",\n    \"shift\",\n    \"shiftCrossAxis\",\n    \"flip\"\n  ].reduce((acc, prop) => {\n    acc[prop] = \"$_computePosition\";\n    return acc;\n  }, {})),\n  created() {\n    this.$_isDisposed = true;\n    this.randomId = `popper_${[Math.random(), Date.now()].map((n) => n.toString(36).substring(2, 10)).join(\"_\")}`;\n  },\n  mounted() {\n    this.init();\n    this.$_detachPopperNode();\n  },\n  activated() {\n    this.$_autoShowHide();\n  },\n  deactivated() {\n    this.hide();\n  },\n  beforeUnmount() {\n    this.dispose();\n  },\n  methods: {\n    show({ event = null, skipDelay = false, force = false } = {}) {\n      if (force || !this.disabled) {\n        this.$_scheduleShow(event, skipDelay);\n        this.$emit(\"show\");\n        this.$_showFrameLocked = true;\n        requestAnimationFrame(() => {\n          this.$_showFrameLocked = false;\n        });\n      }\n      this.$emit(\"update:shown\", true);\n    },\n    hide({ event = null, skipDelay = false } = {}) {\n      this.$_scheduleHide(event, skipDelay);\n      this.$emit(\"hide\");\n      this.$emit(\"update:shown\", false);\n    },\n    init() {\n      if (!this.$_isDisposed)\n        return;\n      this.$_isDisposed = false;\n      this.isMounted = false;\n      this.$_events = [];\n      this.$_preventShow = false;\n      this.$_referenceNode = this.referenceNode();\n      this.$_targetNodes = this.targetNodes().filter((e) => e.nodeType === e.ELEMENT_NODE);\n      this.$_popperNode = this.popperNode();\n      this.$_innerNode = this.$_popperNode.querySelector(\".v-popper__inner\");\n      this.$_arrowNode = this.$_popperNode.querySelector(\".v-popper__arrow-container\");\n      this.$_swapTargetAttrs(\"title\", \"data-original-title\");\n      this.$_detachPopperNode();\n      if (this.triggers.length) {\n        this.$_addEventListeners();\n      }\n      if (this.shown) {\n        this.show();\n      }\n    },\n    dispose() {\n      if (this.$_isDisposed)\n        return;\n      this.$_isDisposed = true;\n      this.$_removeEventListeners();\n      this.hide({ skipDelay: true });\n      this.$_detachPopperNode();\n      this.isMounted = false;\n      this.isShown = false;\n      this.$_swapTargetAttrs(\"data-original-title\", \"title\");\n      this.$emit(\"dispose\");\n    },\n    async onResize() {\n      if (this.isShown) {\n        await this.$_computePosition();\n        this.$emit(\"resize\");\n      }\n    },\n    async $_computePosition() {\n      var _a;\n      if (this.$_isDisposed)\n        return;\n      const options2 = {\n        strategy: this.strategy,\n        middleware: []\n      };\n      if (this.distance || this.skidding) {\n        options2.middleware.push(offset({\n          mainAxis: this.distance,\n          crossAxis: this.skidding\n        }));\n      }\n      const isPlacementAuto = this.placement.startsWith(\"auto\");\n      if (isPlacementAuto) {\n        options2.middleware.push(autoPlacement({\n          alignment: (_a = this.placement.split(\"-\")[1]) != null ? _a : \"\"\n        }));\n      } else {\n        options2.placement = this.placement;\n      }\n      if (this.preventOverflow) {\n        if (this.shift) {\n          options2.middleware.push(shift({\n            padding: this.overflowPadding,\n            boundary: this.boundary,\n            crossAxis: this.shiftCrossAxis\n          }));\n        }\n        if (!isPlacementAuto && this.flip) {\n          options2.middleware.push(flip({\n            padding: this.overflowPadding,\n            boundary: this.boundary\n          }));\n        }\n      }\n      options2.middleware.push(arrow({\n        element: this.$_arrowNode,\n        padding: this.arrowPadding\n      }));\n      if (this.arrowOverflow) {\n        options2.middleware.push({\n          name: \"arrowOverflow\",\n          fn: ({ placement, rects, middlewareData }) => {\n            let overflow;\n            const { centerOffset } = middlewareData.arrow;\n            if (placement.startsWith(\"top\") || placement.startsWith(\"bottom\")) {\n              overflow = Math.abs(centerOffset) > rects.reference.width / 2;\n            } else {\n              overflow = Math.abs(centerOffset) > rects.reference.height / 2;\n            }\n            return {\n              data: {\n                overflow\n              }\n            };\n          }\n        });\n      }\n      if (this.autoMinSize) {\n        options2.middleware.push({\n          name: \"autoMinSize\",\n          fn: ({ rects, placement, middlewareData }) => {\n            var _a2;\n            if ((_a2 = middlewareData.autoMinSize) == null ? void 0 : _a2.skip) {\n              return {};\n            }\n            let width;\n            let height;\n            if (placement.startsWith(\"top\") || placement.startsWith(\"bottom\")) {\n              width = rects.reference.width;\n            } else {\n              height = rects.reference.height;\n            }\n            this.$_innerNode.style.minWidth = width != null ? `${width}px` : null;\n            this.$_innerNode.style.minHeight = height != null ? `${height}px` : null;\n            return {\n              data: {\n                skip: true\n              },\n              reset: {\n                rects: true\n              }\n            };\n          }\n        });\n      }\n      if (this.autoMaxSize) {\n        options2.middleware.push(size({\n          boundary: this.boundary,\n          padding: this.overflowPadding,\n          apply: ({ width, height }) => {\n            this.$_innerNode.style.maxWidth = width != null ? `${width}px` : null;\n            this.$_innerNode.style.maxHeight = height != null ? `${height}px` : null;\n          }\n        }));\n      }\n      const data = await computePosition(this.$_referenceNode, this.$_popperNode, options2);\n      Object.assign(this.result, {\n        x: data.x,\n        y: data.y,\n        placement: data.placement,\n        strategy: data.strategy,\n        arrow: __spreadValues(__spreadValues({}, data.middlewareData.arrow), data.middlewareData.arrowOverflow)\n      });\n    },\n    $_scheduleShow(event = null, skipDelay = false) {\n      this.$_hideInProgress = false;\n      clearTimeout(this.$_scheduleTimer);\n      if (hidingPopper && this.instantMove && hidingPopper.instantMove) {\n        hidingPopper.$_applyHide(true);\n        this.$_applyShow(true);\n        return;\n      }\n      if (skipDelay) {\n        this.$_applyShow();\n      } else {\n        this.$_scheduleTimer = setTimeout(this.$_applyShow.bind(this), this.$_computeDelay(\"show\"));\n      }\n    },\n    $_scheduleHide(event = null, skipDelay = false) {\n      this.$_hideInProgress = true;\n      clearTimeout(this.$_scheduleTimer);\n      if (this.isShown) {\n        hidingPopper = this;\n      }\n      if (skipDelay) {\n        this.$_applyHide();\n      } else {\n        this.$_scheduleTimer = setTimeout(this.$_applyHide.bind(this), this.$_computeDelay(\"hide\"));\n      }\n    },\n    $_computeDelay(type) {\n      const delay = this.delay;\n      return parseInt(delay && delay[type] || delay || 0);\n    },\n    async $_applyShow(skipTransition = false) {\n      clearTimeout(this.$_disposeTimer);\n      clearTimeout(this.$_scheduleTimer);\n      this.skipTransition = skipTransition;\n      if (this.isShown) {\n        return;\n      }\n      this.$_ensureTeleport();\n      await nextFrame();\n      await this.$_computePosition();\n      await this.$_applyShowEffect();\n    },\n    async $_applyShowEffect() {\n      if (this.$_hideInProgress)\n        return;\n      if (this.computeTransformOrigin) {\n        const bounds = this.$_referenceNode.getBoundingClientRect();\n        const popperWrapper = this.$_popperNode.querySelector(\".v-popper__wrapper\");\n        const parentBounds = popperWrapper.parentNode.getBoundingClientRect();\n        const x = bounds.x + bounds.width / 2 - (parentBounds.left + popperWrapper.offsetLeft);\n        const y = bounds.y + bounds.height / 2 - (parentBounds.top + popperWrapper.offsetTop);\n        this.result.transformOrigin = `${x}px ${y}px`;\n      }\n      this.isShown = true;\n      this.$_applyAttrsToTarget({\n        \"aria-describedby\": this.popperId,\n        \"data-popper-shown\": \"\"\n      });\n      const showGroup = this.showGroup;\n      if (showGroup) {\n        let popover;\n        for (let i = 0; i < shownPoppers.length; i++) {\n          popover = shownPoppers[i];\n          if (popover.showGroup !== showGroup) {\n            popover.hide();\n            popover.$emit(\"close-group\");\n          }\n        }\n      }\n      shownPoppers.push(this);\n      this.$emit(\"apply-show\");\n      this.classes.showFrom = true;\n      this.classes.showTo = false;\n      this.classes.hideFrom = false;\n      this.classes.hideTo = false;\n      await nextFrame();\n      this.classes.showFrom = false;\n      this.classes.showTo = true;\n    },\n    async $_applyHide(skipTransition = false) {\n      clearTimeout(this.$_scheduleTimer);\n      if (!this.isShown) {\n        return;\n      }\n      this.skipTransition = skipTransition;\n      removeFromArray(shownPoppers, this);\n      if (hidingPopper === this) {\n        hidingPopper = null;\n      }\n      this.isShown = false;\n      this.$_applyAttrsToTarget({\n        \"aria-describedby\": void 0,\n        \"data-popper-shown\": void 0\n      });\n      clearTimeout(this.$_disposeTimer);\n      const disposeTime = getDefaultConfig(this.theme, \"disposeTimeout\");\n      if (disposeTime !== null) {\n        this.$_disposeTimer = setTimeout(() => {\n          if (this.$_popperNode) {\n            this.$_detachPopperNode();\n            this.isMounted = false;\n          }\n        }, disposeTime);\n      }\n      this.$emit(\"apply-hide\");\n      this.classes.showFrom = false;\n      this.classes.showTo = false;\n      this.classes.hideFrom = true;\n      this.classes.hideTo = false;\n      await nextFrame();\n      this.classes.hideFrom = false;\n      this.classes.hideTo = true;\n    },\n    $_autoShowHide() {\n      if (this.shown) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    },\n    $_ensureTeleport() {\n      if (this.$_isDisposed)\n        return;\n      let container = this.container;\n      if (typeof container === \"string\") {\n        container = window.document.querySelector(container);\n      } else if (container === false) {\n        container = this.$_targetNodes[0].parentNode;\n      }\n      if (!container) {\n        throw new Error(\"No container for popover: \" + this.container);\n      }\n      container.appendChild(this.$_popperNode);\n      this.isMounted = true;\n    },\n    $_addEventListeners() {\n      const addListeners2 = (targetNodes, eventType, handler) => {\n        this.$_events.push({ targetNodes, eventType, handler });\n        targetNodes.forEach((node) => node.addEventListener(eventType, handler, supportsPassive ? {\n          passive: true\n        } : void 0));\n      };\n      const addEvents = (targetNodes, eventMap, commonTriggers, customTrigger, handler) => {\n        let triggers = commonTriggers;\n        if (customTrigger != null) {\n          triggers = typeof customTrigger === \"function\" ? customTrigger(triggers) : customTrigger;\n        }\n        triggers.forEach((trigger) => {\n          const eventType = eventMap[trigger];\n          if (eventType) {\n            addListeners2(targetNodes, eventType, handler);\n          }\n        });\n      };\n      const handleShow = (event) => {\n        if (this.isShown && !this.$_hideInProgress) {\n          return;\n        }\n        event.usedByTooltip = true;\n        !this.$_preventShow && this.show({ event });\n      };\n      addEvents(this.$_targetNodes, SHOW_EVENT_MAP, this.triggers, this.showTriggers, handleShow);\n      addEvents([this.$_popperNode], SHOW_EVENT_MAP, this.popperTriggers, this.popperShowTriggers, handleShow);\n      const handleHide = (event) => {\n        if (event.usedByTooltip) {\n          return;\n        }\n        this.hide({ event });\n      };\n      addEvents(this.$_targetNodes, HIDE_EVENT_MAP, this.triggers, this.hideTriggers, handleHide);\n      addEvents([this.$_popperNode], HIDE_EVENT_MAP, this.popperTriggers, this.popperHideTriggers, handleHide);\n      addListeners2([\n        ...getScrollParents(this.$_referenceNode),\n        ...getScrollParents(this.$_popperNode)\n      ], \"scroll\", () => {\n        this.$_computePosition();\n      });\n    },\n    $_removeEventListeners() {\n      this.$_events.forEach(({ targetNodes, eventType, handler }) => {\n        targetNodes.forEach((node) => node.removeEventListener(eventType, handler));\n      });\n      this.$_events = [];\n    },\n    $_handleGlobalClose(event, touch = false) {\n      if (this.$_showFrameLocked)\n        return;\n      this.hide({ event });\n      if (event.closePopover) {\n        this.$emit(\"close-directive\");\n      } else {\n        this.$emit(\"auto-hide\");\n      }\n      if (touch) {\n        this.$_preventShow = true;\n        setTimeout(() => {\n          this.$_preventShow = false;\n        }, 300);\n      }\n    },\n    $_detachPopperNode() {\n      this.$_popperNode.parentNode && this.$_popperNode.parentNode.removeChild(this.$_popperNode);\n    },\n    $_swapTargetAttrs(attrFrom, attrTo) {\n      for (const el of this.$_targetNodes) {\n        const value = el.getAttribute(attrFrom);\n        if (value) {\n          el.removeAttribute(attrFrom);\n          el.setAttribute(attrTo, value);\n        }\n      }\n    },\n    $_applyAttrsToTarget(attrs) {\n      for (const el of this.$_targetNodes) {\n        for (const n in attrs) {\n          const value = attrs[n];\n          if (value == null) {\n            el.removeAttribute(n);\n          } else {\n            el.setAttribute(n, value);\n          }\n        }\n      }\n    }\n  },\n  render() {\n    return this.$slots.default(this.slotData);\n  }\n});\nif (typeof document !== \"undefined\" && typeof window !== \"undefined\") {\n  if (isIOS) {\n    document.addEventListener(\"touchstart\", handleGlobalMousedown, supportsPassive ? {\n      passive: true,\n      capture: true\n    } : true);\n    document.addEventListener(\"touchend\", handleGlobalTouchend, supportsPassive ? {\n      passive: true,\n      capture: true\n    } : true);\n  } else {\n    window.addEventListener(\"mousedown\", handleGlobalMousedown, true);\n    window.addEventListener(\"click\", handleGlobalClick, true);\n  }\n  window.addEventListener(\"resize\", computePositionAllShownPoppers);\n}\nfunction handleGlobalMousedown(event) {\n  for (let i = 0; i < shownPoppers.length; i++) {\n    const popper = shownPoppers[i];\n    const popperContent = popper.popperNode();\n    popper.$_mouseDownContains = popperContent.contains(event.target);\n  }\n}\nfunction handleGlobalClick(event) {\n  handleGlobalClose(event);\n}\nfunction handleGlobalTouchend(event) {\n  handleGlobalClose(event, true);\n}\nfunction handleGlobalClose(event, touch = false) {\n  for (let i = 0; i < shownPoppers.length; i++) {\n    const popper = shownPoppers[i];\n    const popperContent = popper.popperNode();\n    const contains = popper.$_mouseDownContains || popperContent.contains(event.target);\n    requestAnimationFrame(() => {\n      if (event.closeAllPopover || event.closePopover && contains || popper.autoHide && !contains) {\n        popper.$_handleGlobalClose(event, touch);\n      }\n    });\n  }\n}\nfunction computePositionAllShownPoppers(event) {\n  for (let i = 0; i < shownPoppers.length; i++) {\n    const popper = shownPoppers[i];\n    popper.$_computePosition(event);\n  }\n}\nfunction hideAllPoppers() {\n  for (let i = 0; i < shownPoppers.length; i++) {\n    const popper = shownPoppers[i];\n    popper.hide();\n  }\n}\nfunction getInternetExplorerVersion() {\n  var ua = window.navigator.userAgent;\n  var msie = ua.indexOf(\"MSIE \");\n  if (msie > 0) {\n    return parseInt(ua.substring(msie + 5, ua.indexOf(\".\", msie)), 10);\n  }\n  var trident = ua.indexOf(\"Trident/\");\n  if (trident > 0) {\n    var rv = ua.indexOf(\"rv:\");\n    return parseInt(ua.substring(rv + 3, ua.indexOf(\".\", rv)), 10);\n  }\n  var edge = ua.indexOf(\"Edge/\");\n  if (edge > 0) {\n    return parseInt(ua.substring(edge + 5, ua.indexOf(\".\", edge)), 10);\n  }\n  return -1;\n}\nlet isIE;\nfunction initCompat() {\n  if (!initCompat.init) {\n    initCompat.init = true;\n    isIE = getInternetExplorerVersion() !== -1;\n  }\n}\nvar script = {\n  name: \"ResizeObserver\",\n  props: {\n    emitOnMount: {\n      type: Boolean,\n      default: false\n    },\n    ignoreWidth: {\n      type: Boolean,\n      default: false\n    },\n    ignoreHeight: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\n    \"notify\"\n  ],\n  mounted() {\n    initCompat();\n    nextTick(() => {\n      this._w = this.$el.offsetWidth;\n      this._h = this.$el.offsetHeight;\n      if (this.emitOnMount) {\n        this.emitSize();\n      }\n    });\n    const object = document.createElement(\"object\");\n    this._resizeObject = object;\n    object.setAttribute(\"aria-hidden\", \"true\");\n    object.setAttribute(\"tabindex\", -1);\n    object.onload = this.addResizeHandlers;\n    object.type = \"text/html\";\n    if (isIE) {\n      this.$el.appendChild(object);\n    }\n    object.data = \"about:blank\";\n    if (!isIE) {\n      this.$el.appendChild(object);\n    }\n  },\n  beforeUnmount() {\n    this.removeResizeHandlers();\n  },\n  methods: {\n    compareAndNotify() {\n      if (!this.ignoreWidth && this._w !== this.$el.offsetWidth || !this.ignoreHeight && this._h !== this.$el.offsetHeight) {\n        this._w = this.$el.offsetWidth;\n        this._h = this.$el.offsetHeight;\n        this.emitSize();\n      }\n    },\n    emitSize() {\n      this.$emit(\"notify\", {\n        width: this._w,\n        height: this._h\n      });\n    },\n    addResizeHandlers() {\n      this._resizeObject.contentDocument.defaultView.addEventListener(\"resize\", this.compareAndNotify);\n      this.compareAndNotify();\n    },\n    removeResizeHandlers() {\n      if (this._resizeObject && this._resizeObject.onload) {\n        if (!isIE && this._resizeObject.contentDocument) {\n          this._resizeObject.contentDocument.defaultView.removeEventListener(\"resize\", this.compareAndNotify);\n        }\n        this.$el.removeChild(this._resizeObject);\n        this._resizeObject.onload = null;\n        this._resizeObject = null;\n      }\n    }\n  }\n};\nconst _withId = /* @__PURE__ */ withScopeId(\"data-v-b329ee4c\");\npushScopeId(\"data-v-b329ee4c\");\nconst _hoisted_1$2 = {\n  class: \"resize-observer\",\n  tabindex: \"-1\"\n};\npopScopeId();\nconst render = /* @__PURE__ */ _withId((_ctx, _cache, $props, $setup, $data, $options) => {\n  return openBlock(), createBlock(\"div\", _hoisted_1$2);\n});\nscript.render = render;\nscript.__scopeId = \"data-v-b329ee4c\";\nscript.__file = \"src/components/ResizeObserver.vue\";\nvar PrivateThemeClass = {\n  computed: {\n    themeClass() {\n      return getThemeClasses(this.theme);\n    }\n  }\n};\nvar PopperContent_vue_vue_type_style_index_0_lang = \"\";\nvar _export_sfc = (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n};\nconst _sfc_main$5 = defineComponent({\n  name: \"VPopperContent\",\n  components: {\n    ResizeObserver: script\n  },\n  mixins: [\n    PrivateThemeClass\n  ],\n  props: {\n    popperId: String,\n    theme: String,\n    shown: Boolean,\n    mounted: Boolean,\n    skipTransition: Boolean,\n    autoHide: Boolean,\n    handleResize: Boolean,\n    classes: Object,\n    result: Object\n  },\n  emits: [\n    \"hide\",\n    \"resize\"\n  ],\n  methods: {\n    toPx(value) {\n      if (value != null && !isNaN(value)) {\n        return `${value}px`;\n      }\n      return null;\n    }\n  }\n});\nconst _hoisted_1$1 = [\"id\", \"aria-hidden\", \"tabindex\", \"data-popper-placement\"];\nconst _hoisted_2$1 = {\n  ref: \"inner\",\n  class: \"v-popper__inner\"\n};\nconst _hoisted_3 = /* @__PURE__ */ createElementVNode(\"div\", { class: \"v-popper__arrow-outer\" }, null, -1);\nconst _hoisted_4 = /* @__PURE__ */ createElementVNode(\"div\", { class: \"v-popper__arrow-inner\" }, null, -1);\nconst _hoisted_5 = [\n  _hoisted_3,\n  _hoisted_4\n];\nfunction _sfc_render$2(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ResizeObserver = resolveComponent(\"ResizeObserver\");\n  return openBlock(), createElementBlock(\"div\", {\n    id: _ctx.popperId,\n    ref: \"popover\",\n    class: normalizeClass([\"v-popper__popper\", [\n      _ctx.themeClass,\n      _ctx.classes.popperClass,\n      {\n        \"v-popper__popper--shown\": _ctx.shown,\n        \"v-popper__popper--hidden\": !_ctx.shown,\n        \"v-popper__popper--show-from\": _ctx.classes.showFrom,\n        \"v-popper__popper--show-to\": _ctx.classes.showTo,\n        \"v-popper__popper--hide-from\": _ctx.classes.hideFrom,\n        \"v-popper__popper--hide-to\": _ctx.classes.hideTo,\n        \"v-popper__popper--skip-transition\": _ctx.skipTransition,\n        \"v-popper__popper--arrow-overflow\": _ctx.result.arrow.overflow\n      }\n    ]]),\n    style: normalizeStyle({\n      position: _ctx.result.strategy,\n      transform: `translate3d(${Math.round(_ctx.result.x)}px,${Math.round(_ctx.result.y)}px,0)`\n    }),\n    \"aria-hidden\": _ctx.shown ? \"false\" : \"true\",\n    tabindex: _ctx.autoHide ? 0 : void 0,\n    \"data-popper-placement\": _ctx.result.placement,\n    onKeyup: _cache[1] || (_cache[1] = withKeys(($event) => _ctx.autoHide && _ctx.$emit(\"hide\"), [\"esc\"]))\n  }, [\n    createElementVNode(\"div\", {\n      class: \"v-popper__wrapper\",\n      style: normalizeStyle({\n        transformOrigin: _ctx.result.transformOrigin\n      })\n    }, [\n      createElementVNode(\"div\", _hoisted_2$1, [\n        _ctx.mounted ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [\n          createElementVNode(\"div\", null, [\n            renderSlot(_ctx.$slots, \"default\")\n          ]),\n          _ctx.handleResize ? (openBlock(), createBlock(_component_ResizeObserver, {\n            key: 0,\n            onNotify: _cache[0] || (_cache[0] = ($event) => _ctx.$emit(\"resize\", $event))\n          })) : createCommentVNode(\"\", true)\n        ], 64)) : createCommentVNode(\"\", true)\n      ], 512),\n      createElementVNode(\"div\", {\n        ref: \"arrow\",\n        class: \"v-popper__arrow-container\",\n        style: normalizeStyle({\n          left: _ctx.toPx(_ctx.result.arrow.x),\n          top: _ctx.toPx(_ctx.result.arrow.y)\n        })\n      }, _hoisted_5, 4)\n    ], 4)\n  ], 46, _hoisted_1$1);\n}\nvar PrivatePopperContent = /* @__PURE__ */ _export_sfc(_sfc_main$5, [[\"render\", _sfc_render$2]]);\nvar PrivatePopperMethods = {\n  methods: {\n    show(...args) {\n      return this.$refs.popper.show(...args);\n    },\n    hide(...args) {\n      return this.$refs.popper.hide(...args);\n    },\n    dispose(...args) {\n      return this.$refs.popper.dispose(...args);\n    },\n    onResize(...args) {\n      return this.$refs.popper.onResize(...args);\n    }\n  }\n};\nvar PopperWrapper_vue_vue_type_style_index_0_lang = \"\";\nconst _sfc_main$4 = defineComponent({\n  name: \"VPopperWrapper\",\n  components: {\n    Popper: PrivatePopper(),\n    PopperContent: PrivatePopperContent\n  },\n  mixins: [\n    PrivatePopperMethods,\n    PrivateThemeClass\n  ],\n  inheritAttrs: false,\n  props: {\n    theme: {\n      type: String,\n      default: null\n    }\n  },\n  computed: {\n    finalTheme() {\n      var _a;\n      return (_a = this.theme) != null ? _a : this.$options.vPopperTheme;\n    },\n    popperAttrs() {\n      const result = __spreadValues({}, this.$attrs);\n      delete result.class;\n      delete result.style;\n      return result;\n    }\n  },\n  methods: {\n    getTargetNodes() {\n      return Array.from(this.$refs.reference.children).filter((node) => node !== this.$refs.popperContent.$el);\n    }\n  }\n});\nfunction _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PopperContent = resolveComponent(\"PopperContent\");\n  const _component_Popper = resolveComponent(\"Popper\");\n  return openBlock(), createBlock(_component_Popper, mergeProps({ ref: \"popper\" }, _ctx.popperAttrs, {\n    theme: _ctx.finalTheme,\n    \"target-nodes\": _ctx.getTargetNodes,\n    \"reference-node\": () => _ctx.$refs.reference,\n    \"popper-node\": () => _ctx.$refs.popperContent.$el\n  }), {\n    default: withCtx(({\n      popperId,\n      isShown,\n      shouldMountContent,\n      skipTransition,\n      autoHide,\n      show,\n      hide,\n      handleResize,\n      onResize,\n      classes,\n      result\n    }) => [\n      createElementVNode(\"div\", {\n        ref: \"reference\",\n        class: normalizeClass([\"v-popper\", [\n          _ctx.$attrs.class,\n          _ctx.themeClass,\n          {\n            \"v-popper--shown\": isShown\n          }\n        ]]),\n        style: normalizeStyle(_ctx.$attrs.style)\n      }, [\n        renderSlot(_ctx.$slots, \"default\", {\n          shown: isShown,\n          show,\n          hide\n        }),\n        createVNode(_component_PopperContent, {\n          ref: \"popperContent\",\n          \"popper-id\": popperId,\n          theme: _ctx.finalTheme,\n          shown: isShown,\n          mounted: shouldMountContent,\n          \"skip-transition\": skipTransition,\n          \"auto-hide\": autoHide,\n          \"handle-resize\": handleResize,\n          classes,\n          result,\n          onHide: hide,\n          onResize\n        }, {\n          default: withCtx(() => [\n            renderSlot(_ctx.$slots, \"popper\", {\n              shown: isShown,\n              hide\n            })\n          ]),\n          _: 2\n        }, 1032, [\"popper-id\", \"theme\", \"shown\", \"mounted\", \"skip-transition\", \"auto-hide\", \"handle-resize\", \"classes\", \"result\", \"onHide\", \"onResize\"])\n      ], 6)\n    ]),\n    _: 3\n  }, 16, [\"theme\", \"target-nodes\", \"reference-node\", \"popper-node\"]);\n}\nvar PrivatePopperWrapper = /* @__PURE__ */ _export_sfc(_sfc_main$4, [[\"render\", _sfc_render$1]]);\nvar Dropdown_vue_vue_type_style_index_0_lang = \"\";\nconst _sfc_main$3 = defineComponent(__spreadProps(__spreadValues({}, PrivatePopperWrapper), {\n  name: \"VDropdown\",\n  vPopperTheme: \"dropdown\"\n}));\nconst _sfc_main$2 = defineComponent(__spreadProps(__spreadValues({}, PrivatePopperWrapper), {\n  name: \"VMenu\",\n  vPopperTheme: \"menu\"\n}));\nvar Tooltip_vue_vue_type_style_index_0_lang = \"\";\nconst _sfc_main$1 = defineComponent(__spreadProps(__spreadValues({}, PrivatePopperWrapper), {\n  name: \"VTooltip\",\n  vPopperTheme: \"tooltip\"\n}));\nconst _sfc_main = defineComponent({\n  name: \"VTooltipDirective\",\n  components: {\n    Popper: PrivatePopper(),\n    PopperContent: PrivatePopperContent\n  },\n  mixins: [\n    PrivatePopperMethods\n  ],\n  inheritAttrs: false,\n  props: {\n    theme: {\n      type: String,\n      default: \"tooltip\"\n    },\n    html: {\n      type: Boolean,\n      default: (props) => getDefaultConfig(props.theme, \"html\")\n    },\n    content: {\n      type: [String, Number, Function],\n      default: null\n    },\n    loadingContent: {\n      type: String,\n      default: (props) => getDefaultConfig(props.theme, \"loadingContent\")\n    }\n  },\n  data() {\n    return {\n      asyncContent: null\n    };\n  },\n  computed: {\n    isContentAsync() {\n      return typeof this.content === \"function\";\n    },\n    loading() {\n      return this.isContentAsync && this.asyncContent == null;\n    },\n    finalContent() {\n      if (this.isContentAsync) {\n        return this.loading ? this.loadingContent : this.asyncContent;\n      }\n      return this.content;\n    }\n  },\n  watch: {\n    content: {\n      handler() {\n        this.fetchContent(true);\n      },\n      immediate: true\n    },\n    async finalContent() {\n      await this.$nextTick();\n      this.$refs.popper.onResize();\n    }\n  },\n  created() {\n    this.$_fetchId = 0;\n  },\n  methods: {\n    fetchContent(force) {\n      if (typeof this.content === \"function\" && this.$_isShown && (force || !this.$_loading && this.asyncContent == null)) {\n        this.asyncContent = null;\n        this.$_loading = true;\n        const fetchId = ++this.$_fetchId;\n        const result = this.content(this);\n        if (result.then) {\n          result.then((res) => this.onResult(fetchId, res));\n        } else {\n          this.onResult(fetchId, result);\n        }\n      }\n    },\n    onResult(fetchId, result) {\n      if (fetchId !== this.$_fetchId)\n        return;\n      this.$_loading = false;\n      this.asyncContent = result;\n    },\n    onShow() {\n      this.$_isShown = true;\n      this.fetchContent();\n    },\n    onHide() {\n      this.$_isShown = false;\n    }\n  }\n});\nconst _hoisted_1 = [\"innerHTML\"];\nconst _hoisted_2 = [\"textContent\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PopperContent = resolveComponent(\"PopperContent\");\n  const _component_Popper = resolveComponent(\"Popper\");\n  return openBlock(), createBlock(_component_Popper, mergeProps({ ref: \"popper\" }, _ctx.$attrs, {\n    theme: _ctx.theme,\n    \"popper-node\": () => _ctx.$refs.popperContent.$el,\n    onApplyShow: _ctx.onShow,\n    onApplyHide: _ctx.onHide\n  }), {\n    default: withCtx(({\n      popperId,\n      isShown,\n      shouldMountContent,\n      skipTransition,\n      autoHide,\n      hide,\n      handleResize,\n      onResize,\n      classes,\n      result\n    }) => [\n      createVNode(_component_PopperContent, {\n        ref: \"popperContent\",\n        class: normalizeClass({\n          \"v-popper--tooltip-loading\": _ctx.loading\n        }),\n        \"popper-id\": popperId,\n        theme: _ctx.theme,\n        shown: isShown,\n        mounted: shouldMountContent,\n        \"skip-transition\": skipTransition,\n        \"auto-hide\": autoHide,\n        \"handle-resize\": handleResize,\n        classes,\n        result,\n        onHide: hide,\n        onResize\n      }, {\n        default: withCtx(() => [\n          _ctx.html ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            innerHTML: _ctx.finalContent\n          }, null, 8, _hoisted_1)) : (openBlock(), createElementBlock(\"div\", {\n            key: 1,\n            textContent: toDisplayString(_ctx.finalContent)\n          }, null, 8, _hoisted_2))\n        ]),\n        _: 2\n      }, 1032, [\"class\", \"popper-id\", \"theme\", \"shown\", \"mounted\", \"skip-transition\", \"auto-hide\", \"handle-resize\", \"classes\", \"result\", \"onHide\", \"onResize\"])\n    ]),\n    _: 1\n  }, 16, [\"theme\", \"popper-node\", \"onApplyShow\", \"onApplyHide\"]);\n}\nvar PrivateTooltipDirective = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nconst TARGET_CLASS = \"v-popper--has-tooltip\";\nfunction getPlacement(options2, modifiers) {\n  let result = options2.placement;\n  if (!result && modifiers) {\n    for (const pos of placements) {\n      if (modifiers[pos]) {\n        result = pos;\n      }\n    }\n  }\n  if (!result) {\n    result = getDefaultConfig(options2.theme || \"tooltip\", \"placement\");\n  }\n  return result;\n}\nfunction getOptions(el, value, modifiers) {\n  let options2;\n  const type = typeof value;\n  if (type === \"string\") {\n    options2 = { content: value };\n  } else if (value && type === \"object\") {\n    options2 = value;\n  } else {\n    options2 = { content: false };\n  }\n  options2.placement = getPlacement(options2, modifiers);\n  options2.targetNodes = () => [el];\n  options2.referenceNode = () => el;\n  return options2;\n}\nlet directiveApp;\nlet directives;\nlet uid = 0;\nfunction ensureDirectiveApp() {\n  if (directiveApp)\n    return;\n  directives = ref([]);\n  directiveApp = createApp({\n    name: \"VTooltipDirectiveApp\",\n    setup() {\n      return {\n        directives\n      };\n    },\n    render() {\n      return this.directives.map((directive) => {\n        return h(PrivateTooltipDirective, __spreadProps(__spreadValues({}, directive.options), {\n          shown: directive.shown.value || directive.options.shown,\n          key: directive.id\n        }));\n      });\n    },\n    devtools: {\n      hide: true\n    }\n  });\n  const mountTarget = document.createElement(\"div\");\n  document.body.appendChild(mountTarget);\n  directiveApp.mount(mountTarget);\n}\nfunction createTooltip(el, value, modifiers) {\n  ensureDirectiveApp();\n  const options2 = ref(getOptions(el, value, modifiers));\n  const shown = ref(false);\n  const item = {\n    id: uid++,\n    options: options2,\n    shown\n  };\n  directives.value.push(item);\n  if (el.classList) {\n    el.classList.add(TARGET_CLASS);\n  }\n  const result = el.$_popper = {\n    options: options2,\n    item,\n    show() {\n      shown.value = true;\n    },\n    hide() {\n      shown.value = false;\n    }\n  };\n  return result;\n}\nfunction destroyTooltip(el) {\n  if (el.$_popper) {\n    const index = directives.value.indexOf(el.$_popper.item);\n    if (index !== -1)\n      directives.value.splice(index, 1);\n    delete el.$_popper;\n    delete el.$_popperOldShown;\n    delete el.$_popperMountTarget;\n  }\n  if (el.classList) {\n    el.classList.remove(TARGET_CLASS);\n  }\n}\nfunction bind(el, { value, oldValue, modifiers }) {\n  const options2 = getOptions(el, value, modifiers);\n  if (!options2.content || getDefaultConfig(options2.theme || \"tooltip\", \"disabled\")) {\n    destroyTooltip(el);\n  } else {\n    let directive;\n    if (el.$_popper) {\n      directive = el.$_popper;\n      directive.options.value = options2;\n    } else {\n      directive = createTooltip(el, value, modifiers);\n    }\n    if (typeof value.shown !== \"undefined\" && value.shown !== el.$_popperOldShown) {\n      el.$_popperOldShown = value.shown;\n      value.shown ? directive.show() : directive.hide();\n    }\n  }\n}\nvar PrivateVTooltip = {\n  beforeMount: bind,\n  updated: bind,\n  beforeUnmount(el) {\n    destroyTooltip(el);\n  }\n};\nfunction addListeners(el) {\n  el.addEventListener(\"click\", onClick);\n  el.addEventListener(\"touchstart\", onTouchStart, supportsPassive ? {\n    passive: true\n  } : false);\n}\nfunction removeListeners(el) {\n  el.removeEventListener(\"click\", onClick);\n  el.removeEventListener(\"touchstart\", onTouchStart);\n  el.removeEventListener(\"touchend\", onTouchEnd);\n  el.removeEventListener(\"touchcancel\", onTouchCancel);\n}\nfunction onClick(event) {\n  const el = event.currentTarget;\n  event.closePopover = !el.$_vclosepopover_touch;\n  event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;\n}\nfunction onTouchStart(event) {\n  if (event.changedTouches.length === 1) {\n    const el = event.currentTarget;\n    el.$_vclosepopover_touch = true;\n    const touch = event.changedTouches[0];\n    el.$_vclosepopover_touchPoint = touch;\n    el.addEventListener(\"touchend\", onTouchEnd);\n    el.addEventListener(\"touchcancel\", onTouchCancel);\n  }\n}\nfunction onTouchEnd(event) {\n  const el = event.currentTarget;\n  el.$_vclosepopover_touch = false;\n  if (event.changedTouches.length === 1) {\n    const touch = event.changedTouches[0];\n    const firstTouch = el.$_vclosepopover_touchPoint;\n    event.closePopover = Math.abs(touch.screenY - firstTouch.screenY) < 20 && Math.abs(touch.screenX - firstTouch.screenX) < 20;\n    event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;\n  }\n}\nfunction onTouchCancel(event) {\n  const el = event.currentTarget;\n  el.$_vclosepopover_touch = false;\n}\nvar PrivateVClosePopper = {\n  beforeMount(el, { value, modifiers }) {\n    el.$_closePopoverModifiers = modifiers;\n    if (typeof value === \"undefined\" || value) {\n      addListeners(el);\n    }\n  },\n  updated(el, { value, oldValue, modifiers }) {\n    el.$_closePopoverModifiers = modifiers;\n    if (value !== oldValue) {\n      if (typeof value === \"undefined\" || value) {\n        addListeners(el);\n      } else {\n        removeListeners(el);\n      }\n    }\n  },\n  beforeUnmount(el) {\n    removeListeners(el);\n  }\n};\nconst options = config;\nconst VTooltip = PrivateVTooltip;\nconst VClosePopper = PrivateVClosePopper;\nconst Dropdown = _sfc_main$3;\nconst Menu = _sfc_main$2;\nconst Popper = PrivatePopper;\nconst PopperContent = PrivatePopperContent;\nconst PopperMethods = PrivatePopperMethods;\nconst PopperWrapper = PrivatePopperWrapper;\nconst ThemeClass = PrivateThemeClass;\nconst Tooltip = _sfc_main$1;\nconst TooltipDirective = PrivateTooltipDirective;\nfunction install(app, options2 = {}) {\n  if (app.$_vTooltipInstalled)\n    return;\n  app.$_vTooltipInstalled = true;\n  assign(config, options2);\n  app.directive(\"tooltip\", PrivateVTooltip);\n  app.directive(\"close-popper\", PrivateVClosePopper);\n  app.component(\"v-tooltip\", _sfc_main$1);\n  app.component(\"VTooltip\", _sfc_main$1);\n  app.component(\"v-dropdown\", _sfc_main$3);\n  app.component(\"VDropdown\", _sfc_main$3);\n  app.component(\"v-menu\", _sfc_main$2);\n  app.component(\"VMenu\", _sfc_main$2);\n}\nconst plugin = {\n  version: \"2.0.0-y.0\",\n  install,\n  options: config\n};\nexport { Dropdown, HIDE_EVENT_MAP, Menu, Popper, PopperContent, PopperMethods, PopperWrapper, SHOW_EVENT_MAP, ThemeClass, Tooltip, TooltipDirective, VClosePopper, VTooltip, createTooltip, plugin as default, destroyTooltip, hideAllPoppers, install, options, placements };\n","import { createApp } from \"vue\";\nimport App from \"./app.vue\";\n\n\nimport './styles/index.css'\nimport 'floating-vue/dist/style.css'\nimport \"virtual:windi.css\";\n\nimport { createRouter, createWebHashHistory } from \"vue-router\";\nimport FloatingVue from 'floating-vue'\n\nimport routes from \"~pages\";\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes: [...routes],\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition;\n    } else {\n      return { top: 0, behavior: \"smooth\" };\n    }\n  },\n});\n\nconst app = createApp(App);\napp.use(router)\napp.use(FloatingVue)\n\n\napp.mount(\"#touchme-app\");\n\n","<script setup>\nimport { midi } from '~/use/midi';\nimport { notes, pitchColor } from '~/use/chromatone';\nimport { useScene } from '~/use/scene';\nconst { width, height } = useScene()\n</script>\n\n<template lang='pug'>\ng.stats\n\n  g.grid\n    g.note(v-for=\"(m, o) in 10\" :key=\"m\")\n      rect(\n        style=\"transition: all 300ms ease-out\"\n        v-for=\"(n, i) in 12\" :key=\"i\"\n        :x=\"i * width / 12\"\n        :y=\"height - height / 9 * o\"\n        :width=\"width / 12\"\n        :height=\"height / 9\"\n        :transform-origin=\"`${width / 12} ${height - height / 9 * (o - 0.5)}`\"\n        :style=\"`transform: scale(1,${(n - 4 + m * 12) == midi?.note?.number && midi?.note?.attack ? midi?.duration / 300 + 1 : 1})`\"\n        :fill=\"pitchColor(i + 12 * n, 3, 1, (n - 4 + m * 12) == midi?.note?.number && midi?.note?.attack ? 1 : 0.05)\"\n      )\n  g.stat(\n    v-for=\"(dur, p) in midi.total.durations\" :key=\"p\"\n    :transform=\"`translate(${p * width / 12})`\"\n    )\n    rect(\n      :x=\"0\"\n      :y=\"0\"\n      :height=\"height\"\n      :width=\"width / 12\"\n      :fill=\"pitchColor(p, 2)\"\n      :transform-origin=\"`${0} ${height}`\"\n      style=\"transition: all 200ms ease-out\"\n      :style=\"`transform: scale(1,${dur / midi.total.duration || 0})`\"\n    )\n    text(\n      :x=\"width / 24\"\n      :y=\"height - 20\"\n      text-anchor=\"middle\"\n      fill=\"currentColor\"\n    ) {{ notes[p] }}\n</template>","<script setup>\nimport { pitchColor } from '~/use/chromatone'\nimport { useMidi } from '~/use/midi.js'\nimport { useScene } from '~/use/scene';\nconst { width, height } = useScene()\n\n\nconst { midi, } = useMidi();\n\nconst time = computed(() => (midi.time / 1000).toFixed())\n\n</script>\n\n<template lang='pug'>\ng.arrows.pointer-events-none.transition(transform=\"translate(0 40)\")\n  circle.center(\n    style=\"transition: all 400ms ease-out;\"\n    :cx=\"width / 2\"\n    :cy=\"height / 2\"\n    :fill=\"midi.note?.attack > 0 ? pitchColor((midi.note?.number - 9) % 12) : 'currentColor'\"\n    :r=\"5\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :style=\"{ transform: `scale(${midi.note?.attack * midi.duration / 20 + 1})` }\"\n  )\n  g.ticks\n    g(\n      v-for=\"dot in 120\" :key=\"dot\" \n      :transform-origin=\"`${width / 2} ${height / 2}`\"\n      :style=\"{ transform: `rotate(${dot - 60}deg)` }\"\n    )\n      line(\n        style=\"transition: all 400ms ease-out;\"\n        :x1=\"width / 2\"\n        :x2=\"width / 2\"\n        :y1=\"10\"\n        :y2=\"100\"\n        :stroke-width=\"midi.note?.number == dot && midi.note?.attack ? 50 * (1 + midi.duration / 1000) : 2\"\n        :stroke=\"midi.note?.number == dot && midi.note?.attack ? pitchColor((dot + 3) % 12) : 'currentColor'\"\n        stroke-linecap=\"round\"\n        :transform-origin=\"`${width / 2} ${height / 2}`\"\n        :transform=\"`rotate(${dot * midi.time / 20000}) scale(${1 - (dot / 120) * midi.time / 500000})`\"\n      )\n  line.arrow(\n    style=\"transition: all 400ms ease-out;\"\n    :x1=\"width / 2\"\n    :y1=\"height / 2\"\n    stroke-width=\"4\"\n    stroke=\"currentColor\"\n    stroke-linecap=\"round\"\n    :x2=\"width / 2\"\n    :y2=\"20\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :style=\"{ transform: `rotate(${(midi.note?.number) * (1 + midi.time / 20000) - 60}deg)` }\"\n  )\n\n  //- g(\n    :fill=\"midi.note?.attack > 0 ? pitchColor((midi.note?.number - 9) % 12) : 'currentColor'\"\n    )\n    text.transition(\n      text-anchor=\"middle\"\n      alignment-baseline=\"central\"\n      fill=\"currentColor\"\n      :x=\"width / 2\"\n      :y=\"height / 2 * 1.2\"\n      font-size=\"4em\"\n      :transform-origin=\"`${width / 2} ${height / 2 * 1.5}`\"\n      :transform=\"`scale(${midi?.note?.attack || 0})`\"\n      ) {{ midi.note?.identifier || '' }}\n    //- rect(\n      :width=\"width / 2\"\n      :x=\"width / 2 - width / 4\"\n      :y=\"height / 2 * 1.6\"\n      :height=\"300\"\n      :transform-origin=\"`${width / 2} ${height / 2 * 1.5}`\"\n      :transform=\"`scale(${midi.duration / 2000} 1)`\"\n      )\n</template>\n\n<route lang=\"yaml\">\ntitle: Electric\nsubtitle: by Chromatone \n</route>","<script setup>\nimport { midi } from '~/use/midi';\nimport { notes, pitchColor, getCircleCoord } from '~/use/chromatone';\nimport { useScene } from '~/use/scene';\nconst { width, height } = useScene()\n\nconst round = computed(() => new Array(12).fill(1).map((r, i) => {\n  if (!midi.total.notes[i]) return {}\n  return getCircleCoord(i, 12, midi.total.notes[i] / midi.total.hits * width.value * 1.2 + 50, width.value, height.value)\n}))\n\nconst lines = computed(() => {\n  const active = round.value.filter(dot => dot.x && dot.y)\n  const lines = active.map((dot, i) => {\n    return { x1: dot.x, y1: dot.y, x2: active[i == (active.length - 1) ? 0 : i + 1].x, y2: active[i == (active.length - 1) ? 0 : i + 1].y, }\n  })\n  return lines\n})\n\n</script>\n\n<template lang='pug'>\ng\n  line(\n    style=\"transition: all 500ms ease-out\"\n    v-for=\"(l, i) in 12\" :key=\"l\"\n    :x1=\"width / 2\"\n    :x2=\"width / 2\"\n    :y1=\"height / 2\"\n    :y2=\"-height / 2\"\n    stroke-linecap=\"round\"\n    :stroke-width=\"midi?.note?.pitch == i && midi?.note?.attack ? midi.duration / 10 : 2\"\n    :stroke=\"pitchColor(i, 4)\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :transform=\"`rotate(${30 * i})`\"\n  )\n  circle.mix-blend-multiply.dark_mix-blend-difference(\n    style=\"transition: all 400ms ease-out\"\n    v-for=\"(coord, p) in round\" :key=\"p\"\n    :cx=\"coord.x || width / 2\"\n    :r=\"10\"\n    :cy=\"coord.y || height / 2\"\n    :fill=\"pitchColor(p)\"\n    stroke-width=\"4\"\n    :transform-origin=\"`${coord.x} ${coord.y}`\"\n    :style=\"`transform: scale(${50 * midi.total.durations[p] / midi.total.duration})`\"\n  )\n  line.mix-blend-exclusion(\n    style=\"transition: all 300ms ease-out\"\n    v-for=\"line in lines\" :key=\"line\"\n    v-bind=\"line\"\n    stroke=\"currentColor\"\n    stroke-width=\"4\"\n    stroke-linecap=\"round\"  \n  )\n  line.mix-blend-difference(\n    style=\"transition: all 300ms ease-out\"\n    :x1=\"width / 2\"\n    :x2=\"width / 2\"\n    :y1=\"height / 2 - midi.duration / 5 - 100\"\n    :y2=\"height / 2\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :transform=\"`rotate(${30 * midi?.note?.pitch || 0})`\"\n    stroke=\"white\"\n    stroke-width=\"4\"\n    stroke-linecap=\"round\"\n  )\n  circle(\n    style=\"transition: all 200ms ease-out\"\n    :cx=\"width / 2\"\n    :cy=\"height / 2\"\n    :r=\"30\"\n    :style=\"`transform: scale(${midi.duration / 1000})`\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :fill=\"pitchColor(midi?.note?.pitch, 3, midi?.note?.attack)\"\n  )\n</template>\n","<script setup>\nimport { pitchColor } from '~/use/chromatone'\nimport { useMidi } from '~/use/midi.js'\nimport { useScene } from '~/use/scene';\nconst { width, height } = useScene()\n\n\nconst { midi, } = useMidi();\n\nconst time = computed(() => (midi.time / 1000).toFixed())\n\n</script>\n\n<template lang='pug'>\ng.arrows.pointer-events-none.transition(transform=\"translate(0 40)\")\n  g.ticks\n    g(\n      v-for=\"dot in 120\" :key=\"dot\" \n      :transform-origin=\"`${width / 2} ${height / 2}`\"\n      :style=\"{ transform: `rotate(${dot - 60}deg)` }\"\n    )\n      line(\n        :x1=\"width / 2\"\n        :x2=\"width / 2\"\n        :y1=\"10\"\n        :y2=\"70\"\n        :stroke-width=\"midi.note?.number == dot && midi.note?.attack ? (2 + 50 * midi.duration / 1000) : 2\"\n        :stroke=\"midi.note?.number == dot && midi.note?.attack ? pitchColor((dot + 3) % 12) : 'currentColor'\"\n        stroke-linecap=\"round\"\n      )\n  line.arrow.transition(\n    :x1=\"width / 2\"\n    :y1=\"height / 2\"\n    stroke-width=\"4\"\n    stroke=\"currentColor\"\n    stroke-linecap=\"round\"\n    :x2=\"width / 2\"\n    :y2=\"20\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :style=\"{ transform: `rotate(${midi.note?.number * midi.note?.attack - 60}deg)` }\"\n  )\n  circle.center.transition(\n    :cx=\"width / 2\"\n    :cy=\"height / 2\"\n    :fill=\"midi.note?.attack > 0 ? pitchColor((midi.note?.number - 9) % 12) : 'currentColor'\"\n    :r=\"5\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :style=\"{ transform: `scale(${midi.note?.attack * 10 + 1})` }\"\n  )\n  g(\n    :fill=\"midi.note?.attack > 0 ? pitchColor((midi.note?.number - 9) % 12) : 'currentColor'\"\n  )\n    text.transition.font-bold(\n      text-anchor=\"middle\"\n      alignment-baseline=\"central\"\n\n      :x=\"width / 2\"\n      :y=\"height / 2 * 1.5\"\n      font-size=\"4em\"\n      :transform-origin=\"`${width / 2} ${height / 2 * 1.5}`\"\n      :transform=\"`scale(${midi?.note?.attack || 0})`\"\n      ) {{ midi.note?.identifier || '' }} \n    rect(\n      :width=\"width / 2\"\n      :x=\"width / 2 - width / 4\"\n      :y=\"height / 2 * 1.6\"\n      :height=\"300\"\n      :transform-origin=\"`${width / 2} ${height / 2 * 1.5}`\"\n      :transform=\"`scale(${midi.duration / 2000} 1)`\"\n    )\n</template>\n\n<route lang=\"yaml\">\ntitle: Electric\nsubtitle: by Chromatone \n</route>","<script setup>\nimport { pitchColor } from '~/use/chromatone'\nimport { useMidi } from '~/use/midi.js'\nimport { useElementBounding, useRafFn } from \"@vueuse/core\";\nimport { createNoise2D } from 'simplex-noise';\n\nimport { useScene } from '~/use/scene';\nconst { width, height } = useScene()\n\n\nconst { midi } = useMidi();\n\nconst noise2D = createNoise2D();\n\nfunction useActor() {\n  const actor = reactive({\n    x: 100,\n    y: 100,\n    angle: 0,\n  })\n  const count = ref(0)\n\n  const initial = Math.random()\n\n  const { pause, resume } = useRafFn(() => {\n    count.value++\n    actor.x = (noise2D(initial * 100, count.value / 2000) + 1) / 2;\n    actor.y = (noise2D(initial * 200, count.value / 2000) + 1) / 2;\n    actor.angle = (noise2D(initial * 300, count.value / 2000) + 1) / 2;\n  })\n  return actor\n}\n\nconst actors = reactive([])\n\nactors.push(useActor())\nactors.push(useActor())\n\n\n</script>\n\n<template lang='pug'>\n\nsvg#visual.h-full(\n  version=\"1.1\",\n  baseProfile=\"full\",\n  :viewBox=\"`0 0  ${width} ${height}`\",\n  xmlns=\"http://www.w3.org/2000/svg\",\n)\n  defs\n    filter#blur(x=\"-300%\" y=\"-300%\" width=\"600%\" height=\"600%\")\n      feGaussianBlur(in=\"SourceGraphic\" stdDeviation=\"50\")\n  rect(\n    opacity=\"0.1\"\n    :width=\"width\"\n    :height=\"height\"\n  )\n  line(\n    style=\"transition: stroke-width 0.2s ease-out;\"\n    :stroke-width=\"midi?.note?.number * midi?.note?.velocity / 200 * midi.duration / 100\"\n    :stroke=\"pitchColor(midi?.note?.number - 21)\"\n    stroke-linecap=\"round\"\n    :x1=\"actors[0].x * width\"\n    :x2=\"actors[1].x * width\"\n    :y1=\"actors[0].y * height\"\n    :y2=\"actors[1].y * height\"\n  )\n\n  g(\n    style=\"transition: transform 0.1s ease-out;\"\n    v-for=\"actor in actors\" :key=\"actor\"\n    :style=\"`transform: translate(${actor.x * width}px,${actor.y * height}px) rotate(${actor.angle * 360}deg) scale(${midi.duration / 1000 + 1})`\"\n    )\n    //- circle(\n    //-   opacity=\"0.5\"\n    //-   r=\"40\"\n    //-   filter=\"url(#blur)\"\n    //- )\n    circle(\n      stroke-width=\"2\"\n      stroke=\"white\"\n      fill=\"hsl(30,90%,80%)\"\n      r=\"30\"\n    )\n    circle(\n      r=\"3\"\n      cx=\"20\"\n    )\n    circle(\n      r=\"3\"\n      cx=\"10\"\n    )\n  circle(\n    :cx=\"(actors[0].x + actors[1].x) * width / 2\"\n    :cy=\"(actors[0].y + actors[1].y) * height / 2\"\n    :r=\"midi.duration / 20 + 25\"\n    :fill=\"pitchColor(midi?.note?.number - 9)\"\n    :opacity=\"0.75 * midi?.note?.attack || 0\"\n  )\n</template>\n\n<route lang=\"yaml\">\ntitle: Floating\nsubtitle: by Chromatone \n</route>","<script setup>\nconst props = defineProps({\n  fill: { type: String, default: 'gray' },\n  stroke: { type: String, default: 'none' },\n  sWidth: { type: Number, default: 0 },\n  cx: { type: Number, default: 500 },\n  cy: { type: Number, default: 500 },\n  radius: { type: Number, default: 450 },\n  from: { type: Number, default: 0 },\n  to: { type: Number, default: 360 },\n  thickness: { type: Number, default: 100 },\n  op: { type: Number, default: 1 },\n  round: { type: Boolean, default: false, }\n});\n\n\n// arc\nconst arc = reactive({\n  from: computed(() => props.from <= props.to ? props.from : props.to),\n  to: computed(() => props.from > props.to ? props.from : props.to),\n  start: computed(() => getPolar(arc.to)),\n  end: computed(() => getPolar(arc.from)),\n  largeArcFlag: computed(() => arc.to - arc.from <= 180 ? \"0\" : \"1\"),\n  cutout: computed(() => props.radius - props.thickness),\n  start2: computed(() => getPolar(arc.to, arc.cutout)),\n  end2: computed(() => getPolar(arc.from, arc.cutout)),\n})\n\nfunction getPolar(angle = 0, radius = props.radius) {\n  return polarToCartesian(props.cx, props.cy, radius, angle)\n}\n\nconst d = computed(() => [\n  \"M\", arc.start.x, arc.start.y,\n  \"A\", props.radius, props.radius, 0, arc.largeArcFlag, 0, arc.end.x, arc.end.y,\n  \"L\", arc.end2.x, arc.end2.y,\n  \"A\", arc.cutout, arc.cutout, 0, arc.largeArcFlag, 1, arc.start2.x, arc.start2.y,\n  \"L\", arc.start.x, arc.start.y,\n  \"Z\",\n].join(\" \"));\n\nconst pill = computed(() => [\n  \"M\", arc.start.x, arc.start.y,\n  \"A\", props.radius, props.radius, 0, arc.largeArcFlag, 0, arc.end.x, arc.end.y,\n  \"A\", props.thickness / 2, props.thickness / 2, 0, 0, 0, arc.end2.x, arc.end2.y,\n  \"A\", arc.cutout, arc.cutout, 0, arc.largeArcFlag, 1, arc.start2.x, arc.start2.y,\n  \"A\", props.thickness / 2, props.thickness / 2, 0, 0, 0, arc.start.x, arc.start.y,\n  \"Z\",\n].join(\" \"));\n\n\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n  return {\n    x: centerX + (radius * Math.cos(angleInRadians)),\n    y: centerY + (radius * Math.sin(angleInRadians))\n  };\n}\n\n</script>\n\n<template lang=\"pug\">\npath(\n  style=\"transition: all 200ms ease-out\"\n  :d=\"round ? pill : d\" \n  :fill=\"fill\" \n  :stroke=\"stroke\" \n  :stroke-width=\"sWidth\"\n  fill-rule=\"evenodd\"\n  stroke-linejoin=\"round\"\n  :fill-opacity=\"op\"\n  :transform-origin=\"`${cx} ${cy}`\"\n  )\n  slot\n</template>\n\n<style lang=\"postcss\" scoped>\n</style>","<script setup>\n//https://css-tricks.com/building-a-donut-chart-with-vue-and-svg/\nimport { pitchColor } from \"~/use/chromatone\";\nimport { midi } from \"~/use/midi.js\";\nimport { useScene } from \"~/use/scene\";\nconst { width, height } = useScene();\n\nconst radius = computed(() => (height.value < width.value ? height.value / 2 : width.value / 2) - 20);\nconst len = computed(() => 2 * Math.PI * radius.value);\n\nconst totalDur = computed(() => midi.total.durations.reduce((acc, val) => acc + val) || 1);\n\nconst parts = computed(() => midi.total.durations.map(el => (el / totalDur.value)))\nconst sum = computed(() => {\n  let s = 0\n  const arr = [0];\n  parts.value.forEach(part => {\n    s += Number(part)\n    arr.push(s)\n  })\n  return arr\n})\n\n</script>\n\n<template lang=\"pug\">\ng.donut \n\n  g(v-for=\"(value, index) in parts\")\n    scene-ring(\n      style=\"transition: all 500ms ease-out\"\n      :cx=\"width / 2\", \n      :cy=\"height / 2\", \n      :radius=\"radius\",\n      :fill=\"pitchColor(index)\", \n      :from=\"sum[index] * 360\"\n      :to=\"(sum[index] + parts[index]) * 360\"\n      :thickness=\"width / 3\"\n      )\n  circle(\n    style=\"transition: all 200ms ease-out\"\n    :cx=\"width / 2\"\n    :cy=\"height / 2\"\n    :r=\"30\"\n    opacity=\"0.9\"\n    :transform=\"`scale(${midi?.note?.attack * midi.duration / 500 + 1 || 1})`\"\n    :transform-origin=\"`${width / 2} ${height / 2}`\"\n    :fill=\"pitchColor(midi?.note?.pitch, 3, midi?.note?.attack)\"\n  )\n  text(\n    :x=\"width / 2\"\n    :y=\"height / 2 + 8\"\n    text-anchor=\"middle\"\n    font-size=\"14\"\n  ) {{ midi?.note?.identifier }}\n</template>\n","<script setup>\nimport { midi } from '~/use/midi';\nimport { notes, pitchColor } from '~/use/chromatone';\nimport { useScene } from '~/use/scene';\nconst { width, height } = useScene()\n</script>\n\n<template lang='pug'>\ng.cross\n  rect(\n    style=\"transition: all 300ms ease-in-out\"\n    :x=\"width / 2 - 50\"\n    :y=\"0\"\n    :height=\"height\"\n    :width=\"100\"\n    :style=\"`transform: scale(${midi.duration / 100}, 1)`\"\n    :transform-origin=\"`${width / 2} ${0}`\"\n    :fill=\"pitchColor(midi?.note?.pitch - 24 + 7)\"\n  )\n  line.mix-blend-multiply.dark_mix-blend-difference(\n    style=\"transition: all 300ms ease-in-out\"\n    :x1=\"0\"\n    :x2=\"width\"\n    :y1=\"0\"\n    :y2=\"0\"\n    :stroke=\"pitchColor(midi?.note?.pitch)\"\n    :stroke-width=\"midi.duration\"\n    :transform-origin=\"`${width / 2} ${0}`\"\n    :style=\"`transform: translateY(${(127 - midi?.note?.number) / 127 * height || 0}px)`\"\n  )\n  circle(\n    style=\"transition: all 300ms ease-in-out\"\n    v-for=\"num in 127\" :key=\"num\"\n    :cx=\"width / 2\"\n    :cy=\"(127 - num) / 127 * height || 0\"\n    :transform-origin=\"`${width / 2} ${(127 - num) / 127 * height || 0}`\"\n    :r=\"60\"\n    :fill=\"pitchColor((num + 3) % 12)\"\n    :opacity=\"midi?.note?.number == num ? 0.9 : 0\"\n    :style=\"`transform: scale(${midi?.note?.number == num ? midi.duration / 50 : 1})`\"\n  )\n\n  rect.mix-blend-exclusion(\n    style=\"transition: all 100ms ease-in-out\"\n    fill=\"white\"\n    opacity=\"0.1\"\n    :x=\"0\"\n    :y=\"0\"\n    :transform-origin=\"`${0} ${height}`\"\n    :style=\"`transform: scale(1,${midi.total.duration / midi.time})`\"\n    :width=\"width\"\n    :height=\"height\"\n  )\n</template>"],"names":["makeMap","str","expectsLowerCase","map","list","i","val","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","key","isModelListener","extend","remove","arr","el","hasOwnProperty","hasOwn","isArray","isMap","toTypeString","isSet","isDate","isRegExp","isFunction","isString","isSymbol","isObject","isPromise","objectToString","value","toRawType","isPlainObject","isIntegerKey","isReservedProp","cacheStringFunction","fn","cache","camelizeRE","camelize","_","c","hyphenateRE","hyphenate","capitalize","toHandlerKey","hasChanged","oldValue","invokeArrayFns","fns","arg","def","obj","looseToNumber","n","toNumber","_globalThis","getGlobalThis","normalizeStyle","res","item","normalized","parseStringStyle","listDelimiterRE","propertyDelimiterRE","styleCommentRE","cssText","ret","tmp","normalizeClass","name","specialBooleanAttrs","isSpecialBooleanAttr","includeBooleanAttr","looseCompareArrays","a","b","equal","looseEqual","aValidType","bValidType","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","toDisplayString","replacer","_key","entries","val2","activeEffectScope","EffectScope","detached","currentEffectScope","fromParent","l","last","recordEffectScope","effect","scope","getCurrentScope","onScopeDispose","createDep","effects","dep","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","targetMap","effectTrackDepth","maxMarkerBits","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","parent","lastShouldTrack","shouldTrack","cleanupEffect","effect2","trackStack","pauseTracking","resetTracking","track","target","type","depsMap","trackEffects","debuggerEventExtraInfo","shouldTrack2","trigger","newValue","oldTarget","newLength","key2","triggerEffects","triggerEffect","getDepFromReactive","object","_a","isNonTrackableKeys","builtInSymbols","get$1","createGetter","shallowGet","readonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","toRaw","isReadonly2","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","isRef","readonly","reactive","set$1","createSetter","shallowSet","isReadonly","isShallow","hadKey","result","deleteProperty","has$1","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toShallow","getProto","v","get","rawTarget","rawKey","has2","wrap","toReadonly","toReactive","has","size","add","set","get2","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","isKeyOnly","innerIterator","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations2","shallowInstrumentations2","readonlyInstrumentations2","shallowReadonlyInstrumentations2","mutableInstrumentations","readonlyInstrumentations","shallowInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","isReactive","isProxy","raw","markRaw","trackRefValue","ref2","triggerRefValue","newVal","r","ref","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","CustomRefImpl","factory","customRef","ObjectRefImpl","_object","_defaultValue","GetterRefImpl","_getter","toRef","source","defaultValue","propertyToRef","ComputedRefImpl","getter","_setter","isSSR","self","computed","getterOrOptions","debugOptions","setter","onlyGetter","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","values","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","appErrorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","nextTick","p","findInsertionIndex","id","start","end","middle","getId","queueJob","job","queueFlush","flushJobs","invalidateJob","queuePostFlushCb","cb","flushPreFlushCbs","seen","flushPostFlushCbs","deduped","comparator","diff","check","emit","event","rawArgs","props","modelArg","modifiersKey","number","trim","handlerName","handler","onceHandler","normalizeEmitsOptions","comp","appContext","asMixin","cached","hasExtends","extendEmits","raw2","normalizedFromExtend","isEmitListener","options","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","renderFnWithContext","setBlockTracking","prevInstance","renderComponentRoot","Component","vnode","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","proxyToUse","normalizeVNode","render2","getFunctionalFallthrough","blockStack","createVNode","Comment","root","keys","shapeFlag","filterModelListeners","cloneVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","component","nextProps","nextChildren","patchFlag","emits","hasPropsChanged","dynamicProps","emitsOptions","nextKeys","updateHOCHostEl","isSuspense","queueEffectWithSuspense","suspense","watchEffect","doWatch","INITIAL_WATCHER_VALUE","watch","immediate","deep","flush","onTrack","onTrigger","currentInstance","forceTrigger","isMultiSource","isShallow$1","s","traverse","cleanup","onCleanup","baseGetter","ssrCleanup","isInSSRComponentSetup","useSSRContext","queuePostRenderEffect","unwatch","instanceWatch","publicThis","createPathGetter","setCurrentInstance","unsetCurrentInstance","path","segments","withDirectives","directives","internalInstance","getExposeProxy","bindings","dir","modifiers","invokeDirectiveHook","oldBindings","binding","hook","useTransitionState","state","onMounted","onBeforeUnmount","TransitionHookValidator","BaseTransitionPropsValidators","BaseTransitionImpl","getCurrentInstance","prevTransitionKey","children","getTransitionRawChildren","child","rawProps","mode","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","BaseTransition","leavingVNodes","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","callHook","callAsyncHook","hook2","hooks","leavingVNode","afterHook","cancelHook","called","cancelled","vnode2","isKeepAlive","keepComment","parentKey","keyedFragmentCount","Fragment","defineComponent","extraOptions","isAsyncWrapper","KeepAliveImpl","sharedContext","current","parentSuspense","patch","move","_unmount","createElement","storageContainer","container","anchor","isSVG","instance2","vnodeHook","invokeVNodeHook","unmount","resetShapeFlag","pruneCache","filter","getComponentName","pruneCacheEntry","include","exclude","matches","pendingCacheKey","cacheSubtree","getInnerChild","onUpdated","subTree","da","rawVNode","isVNode","max","cachedVNode","KeepAlive","pattern","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","prepend","createHook","lifecycle","onBeforeMount","onBeforeUpdate","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","COMPONENTS","DIRECTIVES","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","resolveDynamicComponent","resolveDirective","warnMissing","selfName","resolve","registry","renderList","renderItem","index","renderSlot","fallback","noSlotted","slot","openBlock","validSlotContent","ensureValidVNode","rendered","createBlock","vnodes","getPublicInstance","isStatefulComponent","publicPropertiesMap","resolveMergedOptions","hasSetupBinding","PublicInstanceProxyHandlers","accessCache","normalizedProps","shouldCacheAccess","publicGetter","cssModule","globalProperties","descriptor","normalizePropsOrEmits","applyOptions","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","filters","resolveInjections","methodHandler","opt","createWatcher","provides","provide","registerLifecycleHook","register","_hook","exposed","checkDuplicateProperties","normalizeInject","inject","h","base","mixins","extendsOptions","globalMixins","optionMergeStrategies","resolved","m","mergeOptions","to","from","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeEmitsOrPropsOptions","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","createAppContext","uid$1","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","isMounted","app","version","plugin","mixin","directive","rootContainer","isHydrate","currentApp","parentProvides","treatDefaultAsFactory","initProps","isStateful","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","propsToUpdate","camelizedKey","resolvePropValue","kebabKey","needCastKeys","rawCastValues","camelKey","castValues","isAbsent","hasDefault","propsDefaults","normalizePropsOptions","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","isSameType","expectedTypes","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","setRef","rawRef","oldRawRef","isUnmount","refValue","owner","oldRef","refs","_isString","_isRef","doSet","existing","createRenderer","baseCreateRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","hostCreateElement","hostCreateText","hostCreateComment","hostSetText","hostSetElementText","hostParentNode","hostNextSibling","hostSetScopeId","hostInsertStaticContent","n1","n2","parentComponent","slotScopeIds","getNextHostNode","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","internals","moveStaticNode","nextSibling","next","removeStaticNode","mountElement","patchElement","transition","dirs","mountChildren","setScopeId","unmountChildren","needCallTransitionHooks","scopeId","parentVNode","cloneIfMounted","dynamicChildren","oldProps","newProps","toggleRecurse","areChildrenSVG","patchBlockChildren","patchChildren","patchProps","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","mountComponent","updateComponent","initialVNode","createComponentInstance","setupComponent","setupRenderEffect","placeholder","updateComponentPreRender","componentUpdateFn","bu","u","originNext","nextTree","prevTree","bm","isAsyncWrapperVNode","hydrateNode","hydrateSubTree","scopedInitialVNode","update","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","moveType","leave","delayLeave","afterLeave","remove2","performLeave","doRemove","shouldInvokeDirs","shouldInvokeVnodeHook","unmountComponent","removeFragment","performRemove","bum","um","allowed","ch1","ch2","len","arrI","isTeleport","currentBlock","disableTracking","closeBlock","isBlockTreeEnabled","setupBlock","createElementBlock","createBaseVNode","normalizeKey","normalizeRef","ref_key","ref_for","isBlockNode","needFullChildrenNormalization","normalizeChildren","_createVNode","cloned","isClassComponent","guardReactiveProps","klass","style","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","text","flag","createStaticVNode","content","numberOfNodes","createCommentVNode","asBlock","slotFlag","toMerge","incoming","emptyAppContext","uid","internalSetCurrentInstance","globalCurrentInstanceSetters","settersKey","setupResult","setupStatefulComponent","setup","setupContext","createSetupContext","resolvedResult","handleSetupResult","e","finishComponentSetup","compile","skipOptions","template","isCustomElement","compilerOptions","delimiters","componentCompilerOptions","finalCompilerOptions","getAttrsProxy","includeInferred","computed$1","propsOrChildren","ssrContextKey","svgNS","doc","templateContainer","nodeOps","tag","is","node","selector","before","wrapper","patchClass","transitionClasses","patchStyle","isCssString","setStyle","currentDisplay","importantRE","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","isBoolean","patchDOMProp","needRemove","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","cachedNow","getNow","initialValue","patchStopImmediatePropagation","originalStop","nativeOnRE","patchProp","shouldSetAsProp","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","TransitionPropsValidators","h2","hasExplicitCallback","baseProps","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","_vtc","endId","expectedType","explicitTimeout","resolveIfNotStale","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","positionMap","newPositionMap","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","applyTranslation","cssTransitionProps","removeMode","TransitionGroup","oldPos","newPos","dx","dy","clone","getModelAssigner","vModelCheckbox","modelValue","elementValue","getValue","checked","assign","found","filtered","getCheckboxValue","setChecked","systemModifiers","modifierGuards","withModifiers","guard","keyNames","withKeys","eventKey","k","vShow","setDisplay","rendererOptions","renderer","ensureRenderer","createApp","mount","containerOrSelector","normalizeContainer","EventEmitter","eventsSuspended","listener","Listener","results","listeners","params","reject","Listener$1","Enumerations","Note","wm","Utilities","fragments","octaveOffset","semitoneOffset","identifier","notes","octave","accidental","channel","channels","ch","time","parsed","input","output","note","msb","lsb","multiplied","message","element","cm","OutputChannel","pressure","offset","controller","parameter","valid","noteOffOptions","nVelocity","command","coarse","fine","semitones","cents","nrpn","program","rpn","Output","midiOutput","legacy","Message","identification","Forwarder","destinations","destination","InputChannel","data1","data2","numberedEvent","namedEvent","paramMsb","paramLsb","subtype","legacyEvent","Input","midiInput","forwarder","WebMidi","errorEvent","midiAccessGrantedEvent","enabledEvent","promises","portsChangedEvent","nInput","nOutput","tryOnScopeDispose","toValue","isClient","clamp","min","noop","isIOS","getIsIOS","createFilterWrapper","bypassFilter","invoke","pausableFilter","extendFilter","isActive","pause","resume","eventFilter","toRef$1","tryOnMounted","sync","__getOwnPropSymbols$8","__hasOwnProp$8","__propIsEnum$8","__objRest$5","watchWithFilter","__defProp$2","__defProps$2","__getOwnPropDescs$2","__getOwnPropSymbols$2","__hasOwnProp$2","__propIsEnum$2","__defNormalProp$2","__spreadValues$2","__spreadProps$2","__objRest$1","watchPausable","unrefElement","elRef","plain","defaultWindow","defaultDocument","useEventListener","events","cleanups","options2","stopWatch","stop","_iOSWorkaround","onClickOutside","window","ignore","capture","detectIframe","shouldListen","shouldIgnore","target2","__defProp$o","__defProps$b","__getOwnPropDescs$b","__getOwnPropSymbols$r","__hasOwnProp$r","__propIsEnum$r","__defNormalProp$o","__spreadValues$o","__spreadProps$b","createKeyPredicate","keyFilter","onKeyStroke","eventName","passive","dedupe","predicate","onKeyDown","useMounted","useSupported","useRafFn","previousFrameTimestamp","rafId","loop","timestamp","delta","useMediaQuery","query","isSupported","mediaQuery","_global","globalKey","handlers","getHandlers","getSSRHandler","guessSerializerType","rawInit","__defProp$k","__getOwnPropSymbols$n","__hasOwnProp$n","__propIsEnum$n","__defNormalProp$k","__spreadValues$k","StorageSerializers","customStorageEventName","useStorage","defaults","storage","listenToStorageChanges","writeDefaults","mergeDefaults","onError","_a2","serializer","pauseWatch","resumeWatch","pausableWatch","write","updateFromCustomEvent","serialized","read","usePreferredDark","__defProp$j","__getOwnPropSymbols$m","__hasOwnProp$m","__propIsEnum$m","__defNormalProp$j","__spreadValues$j","useColorMode","attribute","storageKey","storageRef","emitAuto","disableTransition","modes","preferredDark","system","store","updateHTMLAttrs","selector2","attribute2","defaultOnChanged","onChanged","auto","__defProp$i","__defProps$8","__getOwnPropDescs$8","__getOwnPropSymbols$k","__hasOwnProp$k","__propIsEnum$k","__defNormalProp$i","__spreadValues$i","__spreadProps$8","useDark","valueDark","valueLight","mode2","defaultHandler","modeVal","__getOwnPropSymbols$g","__hasOwnProp$g","__propIsEnum$g","__objRest$2","useResizeObserver","observerOptions","observer","targets","els","_el","useElementBounding","reset","windowResize","windowScroll","height","bottom","left","right","top","width","x","y","rect","ele","eventHandlers","useFullscreen","document","autoExit","targetRef","isFullscreen","requestMethod","exitMethod","fullscreenEnabled","fullscreenElementMethod","isCurrentElementFullScreen","isElementFullScreen","exit","enter","toggle","handlerCallback","isElementFullScreenValue","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","getTargetValueAtTime","valueAtStartTime","timeConstant","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","upperIndex","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","eventTime","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","indexOfNextEvent","indexOfCurrentEvent","createCancelAndHoldAutomationEvent","cancelTime","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","createAbortError","createAddActiveInputConnectionToAudioNode","insertElementInSet","activeInputs","eventListener","ignoreDuplicates","activeInputConnection","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","ACTIVE_AUDIO_NODE_STORE","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","isConstructible","constructible","IMPORT_STATEMENT_REGEX","splitImportStatements","url","importStatements","sourceWithoutImportStatements","unresolvedUrl","importStatementWithResolvedUrl","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","createAddAudioWorkletModule","cacheTestResult","createNotSupportedError","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getNativeContext","getOrCreateBackupOfflineAudioContext","isNativeOfflineAudioContext","nativeAudioWorkletNodeConstructor","ongoingRequests","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","nativeContext","promise","absoluteUrl","wrappedSource","evaluateAudioWorkletGlobalScope","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","blob","backupOfflineAudioContext","nativeContextOrBackupOfflineAudioContext","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","getValueForKey","pickElementFromSet","matchingElements","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","passiveInputConnections","matchingConnection","passiveInputConnection","getEventListenersOfAudioNode","setInternalStateToActive","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","connections","createAddConnectionToAudioNode","addActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","connectNativeAudioNodeToNativeAudioNode","deleteActiveInputConnectionToAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getAudioNodeTailTime","getNativeAudioNode","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","tailTimeTimeoutIds","isOffline","outputs","eventListeners","nativeDestinationAudioNode","nativeSourceAudioNode","partialConnection","tailTime","tailTimeTimeoutId","outputConnection","createAddPassiveInputConnectionToAudioNode","createAddSilentConnection","createNativeGainNode","nativeAudioScheduledSourceNode","nativeGainNode","disconnect","createAddUnrenderedAudioWorkletNode","getUnrenderedAudioWorkletNodes","audioWorkletNode","DEFAULT_OPTIONS","createAnalyserNodeConstructor","audionNodeConstructor","createAnalyserNodeRenderer","createIndexSizeError","createNativeAnalyserNode","mergedOptions","nativeAnalyserNode","analyserNodeRenderer","maxDecibels","minDecibels","array","isOwnedByContext","createAnalyserNodeRendererFactory","renderInputsOfAudioNode","renderedNativeAnalyserNodes","createAnalyserNode","nativeOfflineAudioContext","renderedNativeAnalyserNode","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","createAudioBufferConstructor","audioBufferStore","nativeAudioBufferConstructor","nativeOfflineAudioContextConstructor","testNativeAudioBufferConstructorSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","AudioBuffer","length","numberOfChannels","sampleRate","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","createAudioBufferSourceNodeConstructor","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createInvalidStateError","createNativeAudioBufferSourceNode","wrapEventListener","nativeAudioBufferSourceNode","audioBufferSourceNodeRenderer","wrappedListener","nativeOnEnded","when","resetInternalStateToPassive","createAudioBufferSourceNodeRendererFactory","connectAudioParam","renderAutomation","renderedNativeAudioBufferSourceNodes","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","isAudioBufferSourceNode","isBiquadFilterNode","isConstantSourceNode","isGainNode","isOscillatorNode","isStereoPannerNode","getAudioParamConnections","deactivateActiveAudioNodeInputConnections","trace","audioParams","audioParamConnections","deactivateAudioGraph","isValidLatencyHint","latencyHint","createAudioContextConstructor","baseAudioContextConstructor","createUnknownError","mediaElementAudioSourceNodeConstructor","mediaStreamAudioDestinationNodeConstructor","mediaStreamAudioSourceNodeConstructor","mediaStreamTrackAudioSourceNodeConstructor","nativeAudioContextConstructor","nativeAudioContext","revokeState","mediaElement","mediaStream","mediaStreamTrack","resolvePromise","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","channelCount","nativeAudioDestinationNode","audioDestinationNodeRenderer","renderedNativeAudioDestinationNodes","createAudioDestinationNode","renderedNativeAudioDestinationNode","createAudioListenerFactory","createNativeChannelMergerNode","createNativeConstantSourceNode","createNativeScriptProcessorNode","getFirstSample","overwriteAccessors","nativeListener","createFakeAudioParams","buffer","channelMergerNode","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","scriptProcessorNode","inputBuffer","orientation","positon","createSetOrientation","createSetPosition","createFakeAudioParam","setValue","constantSourceNode","cancelAndHoldAtTime","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setTargetAtTime","setValueAtTime","setValueCurveAtTime","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","lmnt","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","fakeNativeDestinationAudioNode","deleteActiveInputConnection","activeInputConnections","deleteActiveInputConnectionToAudioParam","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","getNativeAudioParam","testAudioNodeDisconnectMethodSupport","analyzer","dummy","ones","channelData","chnnlDt","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","connect","returnValue","connectionsToDestination","connection","destinationOrOutput","filteredConnections","addConnectionToAudioParamOfAudioContext","nativeAudioParam","deleteInputConnectionOfAudioNode","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","deleteInputsOfAudioParam","deleteAnyConnection","audioNodeConnectionsOfSource","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","createInvalidAccessError","decrementCycleCounter","detectCycles","eventTargetConstructor","isNativeAudioContext","isNativeAudioParam","isPassive","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","setValueAtTimeUntilPossible","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","previousLastEvent","currentLastEvent","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","ReadOnlyMap","parameters","createAudioWorkletNodeConstructor","addUnrenderedAudioWorkletNode","createAudioWorkletNodeRenderer","createNativeAudioWorkletNode","getBackupOfflineAudioContext","sanitizeAudioWorkletNodeOptions","setActiveAudioWorkletNodeInputs","testAudioWorkletNodeOptionsClonability","processorConstructor","nativeAudioWorkletNode","audioWorkletNodeRenderer","nm","nativeOnProcessorError","copyFromChannel","channelNumber","bufferOffset","slicedInput","copyToChannel","createNestedArrays","arrays","getAudioWorkletProcessor","nodeToProcessorMap","processBuffer","renderedBuffer","outputChannelCount","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","inputs","prmtrs","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","error","createAudioWorkletNodeRendererFactory","connectMultipleOutputs","createNativeChannelSplitterNode","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","renderNativeOfflineAudioContext","renderedNativeAudioNodes","processedBufferPromise","createAudioNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","outputChannelSplitterNode","outputChannelMergerNodes","outputGainNode","numberOfParameters","partialOfflineAudioContext","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","gainNode","audioBufferSourceNode","outputChannelMergerNode","renderedNativeAudioWorkletNodeOrGainNode","createBaseAudioContextConstructor","addAudioWorkletModule","analyserNodeConstructor","audioBufferConstructor","audioBufferSourceNodeConstructor","biquadFilterNodeConstructor","channelMergerNodeConstructor","channelSplitterNodeConstructor","constantSourceNodeConstructor","convolverNodeConstructor","decodeAudioData","delayNodeConstructor","dynamicsCompressorNodeConstructor","gainNodeConstructor","iIRFilterNodeConstructor","minimalBaseAudioContextConstructor","oscillatorNodeConstructor","pannerNodeConstructor","periodicWaveConstructor","stereoPannerNodeConstructor","waveShaperNodeConstructor","_nativeContext","numberOfInputs","numberOfOutputs","maxDelayTime","feedforward","feedback","real","imag","constraints","audioData","successCallback","errorCallback","createBiquadFilterNodeConstructor","createBiquadFilterNodeRenderer","createNativeBiquadFilterNode","setAudioNodeTailTime","nativeBiquadFilterNode","biquadFilterNodeRenderer","frequencyHz","magResponse","phaseResponse","createBiquadFilterNodeRendererFactory","renderedNativeBiquadFilterNodes","createBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","renderedNativeBiquadFilterNode","createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createChannelMergerNodeConstructor","createChannelMergerNodeRenderer","nativeChannelMergerNode","channelMergerNodeRenderer","createChannelMergerNodeRendererFactory","renderedNativeAudioNode","createChannelSplitterNodeConstructor","createChannelSplitterNodeRenderer","sanitizeChannelSplitterOptions","nativeChannelSplitterNode","channelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","createConnectAudioParam","renderInputsOfAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConnectedNativeAudioBufferSourceNodeFactory","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createConvolverNodeConstructor","createConvolverNodeRenderer","createNativeConvolverNode","nativeConvolverNode","convolverNodeRenderer","createConvolverNodeRendererFactory","renderedNativeConvolverNodes","createConvolverNode","renderedNativeConvolverNode","createCreateNativeOfflineAudioContext","createDataCloneError","detachArrayBuffer","arrayBuffer","port1","port2","closeAndResolve","createDecodeAudioData","createEncodingError","detachedArrayBuffers","isNativeContext","testPromiseSupport","anyContext","complete","fail","createDecrementCycleCounter","cycleCounters","cycleCounter","nativeDestinationAudioParam","createDelayNodeConstructor","createDelayNodeRenderer","createNativeDelayNode","nativeDelayNode","delayNodeRenderer","createDelayNodeRendererFactory","renderedNativeDelayNodes","createDelayNode","nativeDelayNodeIsOwnedByContext","renderedNativeDelayNode","createDeleteActiveInputConnectionToAudioNode","createDeleteUnrenderedAudioWorkletNode","isDelayNode","createDetectCycles","chain","nextLink","mergedCycles","nestedCycles","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","createDynamicsCompressorNodeConstructor","createDynamicsCompressorNodeRenderer","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","dynamicsCompressorNodeRenderer","previousChannelCount","createDynamicsCompressorNodeRendererFactory","renderedNativeDynamicsCompressorNodes","createDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","renderedNativeDynamicsCompressorNode","createEvaluateSource","head","script","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","src","lineno","colno","createEventTargetConstructor","_nativeEventTarget","wrappedEventListener","createExposeCurrentFrameAndCurrentTime","currentTime","createFetchSource","response","createGainNodeConstructor","createGainNodeRenderer","gainNodeRenderer","createGainNodeRendererFactory","renderedNativeGainNodes","createGainNode","nativeGainNodeIsOwnedByContext","renderedNativeGainNode","createGetActiveAudioWorkletNodeInputs","activeAudioWorkletNodeInputsStore","createGetAudioNodeRenderer","createGetAudioNodeTailTime","audioNodeTailTimeStore","createGetAudioParamRenderer","createGetBackupOfflineAudioContext","backupOfflineAudioContextStore","createGetNativeContext","contextStore","createGetOrCreateBackupOfflineAudioContext","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodeStore","unrenderedAudioWorkletNodes","wrapIIRFilterNodeGetFrequencyResponseMethod","nativeIIRFilterNode","getFrequencyResponse","createIIRFilterNodeConstructor","createNativeIIRFilterNode","createIIRFilterNodeRenderer","iirFilterNodeRenderer","filterBuffer","feedbackLength","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","filterFullBuffer","convertedFeedback","convertedFeedforward","filteredBuffer","createIIRFilterNodeRendererFactory","filteredBufferPromise","nativeIIRFilterNodeIsOwnedByContext","createIncrementCycleCounterFactory","createIsAnyAudioContext","anything","createIsAnyAudioNode","audioNodeStore","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","createIsNativeAudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","createMediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","createMediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","createMediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","nativeMediaStreamTrackAudioSourceNode","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","nativeOnStateChange","uint32Array","createMonitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","wrapAnalyserNodeGetFloatTimeDomainDataMethod","byteTimeDomainData","createNativeAnalyserNodeFactory","createNativeAudioBufferConstructor","assignNativeAudioNodeAudioParamValue","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","isScheduled","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeAudioBufferSourceNodeFactory","addSilentConnection","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","createNativeAudioContextConstructor","createNativeAudioDestinationNodeFactory","isNodeOfNativeOfflineAudioContext","createNativeAudioWorkletNodeConstructor","testClonabilityOfAudioWorkletNodeOptions","audioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createNativeAudioWorkletNodeFaker","monitorConnections","baseLatency","patchedEventListeners","onprocessorerror","unpatchedEventListener","patchedEventListener","computeBufferSize","cloneAudioWorkletNodeOptions","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createAudioWorkletProcessor","audioWorkletProcessorPromise","createNativeAudioWorkletNodeFakerFactory","getActiveAudioWorkletNodeInputs","messageChannel","bufferSize","parameterMap","channelInterpretation","nativeAudioWorkletNodeFaker","onmessage","dWrkltPrcssr","disconnectOutputsGraph","activeInputIndexes","outputBuffer","isConnected","disconnectFakeGraph","connectFakeGraph","createNativeChannelMergerNodeFactory","wrapChannelMergerNode","wrapChannelSplitterNode","channelSplitterNode","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFaker","interceptConnections","original","interceptor","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","nativeConstantSourceNodeFaker","createNativeConvolverNodeFactory","createNativeDynamicsCompressorNodeFactory","createNativeIIRFilterNodeFactory","createNativeIIRFilterNodeFaker","divide","denominator","multiply","evaluatePolynomial","coefficient","z","createNativeIIRFilterNodeFakerFactory","channelCountMode","bufferIndexes","xBuffers","yBuffers","nyquist","omega","numerator","audioStreamTracks","filteredAudioStreamTracks","createNativeMediaStreamTrackAudioSourceNodeFactory","createNativeOfflineAudioContextConstructor","createNativeOscillatorNodeFactory","nativeOscillatorNode","createNativePannerNodeFactory","createNativePannerNodeFaker","nativePannerNode","createNativePannerNodeFakerFactory","createNativeWaveShaperNode","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","refDistance","rolloffFactor","pannerNode","SINGLE_CHANNEL_OPTIONS","inputGainNode","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePeriodicWaveFactory","disableNormalization","convertedImag","convertedReal","nativePeriodicWave","createNativeStereoPannerNodeFactory","createNativeStereoPannerNodeFaker","nativeStereoPannerNode","createNativeStereoPannerNodeFakerFactory","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraphForMono","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","buildInternalGraphForStereo","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","centerIndex","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraph","pan","connectGraph","disconnectGraph","nativeStereoPannerNodeFakerFactory","createNativeWaveShaperNodeFactory","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","isDCCurve","nativeWaveShaperNode","curve","disconnectNativeAudioBufferSourceNode","createNativeWaveShaperNodeFakerFactory","oversample","negativeWaveShaperNode","positiveWaveShaperNode","invertGainNode","revertGainNode","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","createOfflineAudioContextConstructor","createNativeOfflineAudioContext","startRendering","delayStateChangeEvent","createOscillatorNodeConstructor","createNativeOscillatorNode","createOscillatorNodeRenderer","oscillatorNodeRenderer","periodicWave","createOscillatorNodeRendererFactory","renderedNativeOscillatorNodes","createOscillatorNode","nativeOscillatorNodeIsOwnedByContext","renderedNativeOscillatorNode","createPannerNodeConstructor","createNativePannerNode","createPannerNodeRenderer","pannerNodeRenderer","createPannerNodeRendererFactory","renderedBufferPromise","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","renderedNativeGainNodeOrNativePannerNode","createPeriodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","createRenderAutomation","getAudioParamRenderer","createRenderInputsOfAudioNode","getAudioNodeRenderer","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","createSetActiveAudioWorkletNodeInputs","createSetAudioNodeTailTime","createStartRendering","createStereoPannerNodeConstructor","createNativeStereoPannerNode","createStereoPannerNodeRenderer","stereoPannerNodeRenderer","createStereoPannerNodeRendererFactory","renderedNativeStereoPannerNodes","createStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","renderedNativeStereoPannerNode","createTestAudioBufferConstructorSupport","createTestAudioWorkletProcessorPostMessageSupport","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","createTestOfflineAudioContextCurrentTimeSupport","createWaveShaperNodeConstructor","createWaveShaperNodeRenderer","waveShaperNodeRenderer","createWaveShaperNodeRendererFactory","renderedNativeWaveShaperNodes","createWaveShaperNode","renderedNativeWaveShaperNode","createWindow","createWrapAudioBufferCopyChannelMethods","convertNumberToUnsignedLong","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapChannelMergerNode","property","prototype","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","disconnectGainNode","isStopped","createConstantSourceNodeRenderer","isSecureContext","audioContextConstructor","audioWorkletNodeConstructor","offlineAudioContextConstructor","isAnyAudioContext","isAnyAudioNode","isAnyAudioParam","isAnyOfflineAudioContext","isUndef","isDefined","isNumber","isNote","assert","statement","assertRange","gte","lte","assertContextRunning","warn","isInsideScheduledCallback","printedScheduledWarning","enterScheduledCallback","insideCallback","assertUsedScheduleTime","defaultLogger","log","createAudioContext","stdAudioContext","createOfflineAudioContext","stdOfflineAudioContext","theWindow","hasAudioContext","createAudioWorkletNode","stdAudioWorkletNode","__decorate","decorators","desc","__awaiter","_arguments","P","generator","adopt","fulfilled","step","rejected","Ticker","updateInterval","contextSampleRate","blobUrl","worker","interval","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","noCopy","deepMerge","sources","deepEquals","arrayA","arrayB","optionsFromArguments","argsArray","objKey","opts","getDefaultsFromInstance","defaultArg","given","omitFromObject","omit","Tone","EPSILON","GT","GTE","EQ","LT","Timeline","lastValue","param","after","beginning","midPoint","nextEvent","testEvent","lowerBound","upperBound","notifyNewContext","onContextInit","initializeContext","notifyCloseContext","onContextClose","closeContext","Emitter","boundCallback","eventList","constr","BaseContext","Context","_b","feedForward","stream","t","constant","now","firstEvent","intervalFn","DummyContext","_numberOfChannels","_length","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_stream","_element","_audioData","_name","_options","_url","_fn","_timeout","_interval","_val","_d","readOnly","writable","noOp","ToneAudioBuffer","getContext","doneLoading","isMultidimensional","multiChannelArray","chanNum","outputArray","numChannels","channelArray","startSamples","endSamples","retBuffer","rev","extensions","extension","ext","baseUrl","location","OfflineContext","asynchronous","yieldEvery","dummyContext","globalContext","setContext","disposeOld","printString","dbToGain","db","gainToDb","gain","intervalToFrequencyRatio","A4","getA4","setA4","freq","ftom","frequency","ftomf","mtof","midi","TimeBaseClass","units","dot","numericValue","scalar","q","total","typeName","quantity","expr","matching","beats","seconds","ticks","TimeClass","quantTo","subdiv","percent","subdivision","testNotations","power","closest","closestSeconds","notation","notationSeconds","quarterTime","quarters","measures","sixteenths","sixteenthString","FrequencyClass","pitch","noteNumber","noteToScaleIndex","intervals","scaleIndexToNote","Frequency","TransportTimeClass","ToneWithContext","member","StateTimeline","initial","Param","computedTime","previous","previousVal","beforeValue","currentVal","rampTime","scaling","startingValue","segTime","valueAtTime","previousEvent","subdivisions","t0","v0","v1","t1","ToneAudioNode","nodeList","outputNum","inputNum","nodes","connectSeries","first","srcNode","dstNode","outputNumber","inputNumber","Gain","OneShotSource","fadeInTime","fadeOutTime","additionalTail","disposeCallback","ToneConstantSource","Signal","connectSignal","convert","overridden","signal","TickParam","computedValue","prevEvent","rampVal","ticksUntilTime","computedVal","segmentDur","val0","val1","onTheLineEvent","currentTick","tick","sol1","sol2","computedDuration","startTicks","TickSignal","TickSource","stopEvent","memoizedEvent","tmpEvent","lastState","elapsedTicks","eventToMemoize","periodStartTime","offsetEvent","elapsedSeconds","absoluteTicks","lastStateEvent","maxStartTime","ticksAtStart","nextTickTime","Clock","Delay","maxDelayInSeconds","ToneAudioBuffers","onerror","MidiClass","Midi","TicksClass","Draw","IntervalTimeline","IntervalNode","replacement","balance","temp","isLeftChild","pivotNode","allNodes","low","high","point","Volume","mute","Destination","TimelineValue","SignalOperator","WaveShaper","mapping","oversampling","isOverSampleType","Pow","exponent","TransportEvent","transport","tickDuration","TransportRepeatEvent","Transport","tickTime","progress","amount","eventId","timeline","computedAfter","offsetTicks","timeSig","startPosition","endPosition","remainingTick","ppq","transportPos","remainingTicks","ratio","sourceValue","scaleFactor","scaleBefore","reciprocal","scaleAfter","ratioSignal","syncedSignal","Source","sched","stateEvent","startOffset","ToneBufferSource","computedOffset","loopEnd","loopStart","loopDuration","computedDur","Noise","_noiseBuffers","rate","BUFFER_LENGTH","NUM_CHANNELS","_noiseCache","channelNum","lastOut","white","b0","b1","b2","b3","b4","b5","b6","generateWaveform","ToneOscillatorNode","Oscillator","description","oscProps","isBasicType","partials","wave","baseType","partial","fullPartials","phase","periodicWaveSize","partialCount","piFactor","twoPi","testPositions","AudioToGain","Multiply","AMOscillator","FMOscillator","PulseOscillator","FatOscillator","osc","iterator","spread","PWMOscillator","OmniOscillatorSourceMap","OmniOscillator","prefix","oscType","OscConstructor","oldOsc","sType","sourceType","mType","Add","Scale","Zero","LFO","currentMin","currentMax","range","valueMap","propertyKey","timeRange","Player","origDuration","GainToAudio","Envelope","direction","curveName","EnvelopeCurves","curveDef","velocity","attack","decay","currentValue","attackRate","decayValue","decayStart","release","attackPortion","envelopeDuration","sustainTime","totalDuration","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","sineCurve","bounceCurve","invertCurve","out","reverseCurve","Instrument","changed","timePosition","originalMethod","Monophonic","computedFrequency","portTime","AmplitudeEnvelope","Synth","computedAttack","computedDecay","BiquadFilter","freqValues","magValues","phaseValues","filterClone","Filter","rolloff","rolloffNum","possibilities","cascadingCount","totalResponse","FrequencyEnvelope","octaves","MonoSynth","MembraneSynth","hertz","maxNote","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","toneAudioWorkletProcessor","singleIOProcess","delayLine","workletName","feedbackCombFilter","PolySynth","voice","activeVoiceIndex","firstAvail","midiNote","released","durationSeconds","sanitizedOptions","Sampler","urlMap","mid","midiFloat","remainder","difference","closestNote","playbackRate","CrossFade","Effect","LFOEffect","Panner","AutoPanner","bitCrusherWorklet","Merge","FeedbackEffect","FeedbackDelay","Reverb","previousReady","noiseL","noiseR","merge","renderPromise","Solo","solo","PanVol","Channel","volume","bus","sendKnob","Compressor","useClamp","_value","value2","synth","synthOptions","useSynth","ev","synthReleaseAll","bpm","synthAttack","synthRelease","play","init","synthOnce","noteKeys","useKeyboard","playMidi","off","title","noteInOn","_c","dur","useMidi","setupMidi","outs","midiAttack","midiRelease","midiOnce","setCC","initMidi","cc","ccIn","createChannel","setVelocity","midiPlay","midiStop","forwardMidi","iid","oid","pitchColor","alpha","getCircleCoord","radius","angle","visual","activeScene","useScene","acc","_imports_0","started","bpms","types","block0","color","panel","isDark","full","supported","cycleOctaves","oct","F2","G2","fastFloor","grad2","createNoise2D","random","perm","buildPermutationTable","permGrad2x","permGrad2y","n0","X0","Y0","x0","y0","i1","j1","x1","y1","x2","y2","ii","jj","gi0","g0x","g0y","gi1","g1x","g1y","t2","gi2","g2x","g2y","aux","__classPrivateFieldSet","this","privateMap","__classPrivateFieldGet","_block","_blocks","_bytes","_finalized","_first","_h0","_h1","_h2","_h3","_h4","_h5","_h6","_h7","_hashed","_hBytes","_is224","_lastByteIndex","_start","BKDRHash","seed","seed2","hash","MAX_SAFE_INTEGER","HEX_CHARS","EXTRA","SHIFT","K","blocks","Sha256","is224","sharedMemory","msg","code","f","g","s0","maj","ab","cd","bc","h0","h1","h3","h4","h5","h6","h7","hex","dataView","Sha256ToInt","sha256","RGB2HEX","RGBArray","HSL2RGB","H","S","L","ColorHash","hueResolution","hsl","rgb","__pages_import_0__","__vitePreload","stats","__pages_import_1__","spiral","__pages_import_2__","rose","__pages_import_3__","level","__pages_import_4__","__pages_import_5__","donut","__pages_import_6__","cross","routes","isBrowser","isESModule","applyToParams","newParams","TRAILING_SLASH_RE","removeTrailingSlash","parseURL","parseQuery","currentLocation","searchString","hashPos","searchPos","resolveRelativePath","stringifyURL","stringifyQuery","stripBase","pathname","isSameRouteLocation","aLastIndex","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","isSameRouteLocationParamsValue","isEquivalentArray","fromSegments","toSegments","lastToSegment","position","toPosition","segment","NavigationType","NavigationDirection","normalizeBase","baseEl","BEFORE_HASH_RE","createHref","getElementPosition","docRect","elRect","computeScrollPosition","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getScrollKey","scrollPositions","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","createBaseLocation","createCurrentLocation","search","slicePos","pathFromHash","useHistoryListeners","historyState","replace","teardowns","pauseState","popStateHandler","fromState","pauseListeners","listen","teardown","beforeUnloadListener","history","destroy","buildState","back","forward","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","push","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","createWebHashHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","NavigationFailureSymbol","NavigationFailureType","createRouterError","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","REGEX_CHARS_RE","tokensToParser","score","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","subPattern","parse","stringify","avoidDuplicatedSlash","compareScoreArray","comparePathParserScore","aScore","bScore","isLastScoreNegative","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","parser","matcher","createRouterMatcher","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","normalizedRecords","aliases","alias","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","isRecordChildOf","paramsFromLocation","matched","parentMatcher","mergeMetaFields","normalizeRecordProps","propsObject","meta","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","searchParams","searchParam","eqPos","normalizeQuery","normalizedQuery","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","useCallbacks","guardToPromiseFn","enterCallbackArray","guardReturn","guardCall","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","componentPromise","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","parentRecordPath","getOriginalPath","includesParams","isExactActive","navigate","guardEvent","RouterLinkImpl","link","elClass","getLinkClass","RouterLink","outer","inner","innerValue","outerValue","propClass","globalClass","defaultClass","RouterViewImpl","injectedRoute","routeToDisplay","injectedDepth","depth","initialDepth","matchedRoute","matchedRouteRef","viewRef","oldInstance","oldName","currentName","ViewComponent","routePropsOption","routeProps","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","href","matcherLocation","targetParams","fullPath","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","redirect","newTargetLocation","redirectedFrom","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","markAsReady","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","runWithContext","installedApps","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","canceledNavigationCheck","runGuardQueue","beforeEnter","isPush","isFirstNavigation","removeHistoryListener","setupListeners","_from","info","readyHandlers","errorHandlers","ready","isReady","scrollBehavior","reactiveRoute","unmountApp","recordFrom","recordTo","useRouter","useRoute","noise2D","getColor","color1","color2","hits","randomScene","rnd","scs","scenes","getBasePlacement","placement","getAlignment","getMainAxisFromPlacement","getLengthFromAxis","axis","computeCoordsFromPlacement","_ref","reference","floating","commonX","commonY","coords","mainAxis","computePosition","config","strategy","middleware","platform","rects","statefulPlacement","middlewareData","nextX","nextY","expandPaddingObject","padding","getSideObjectFromPadding","rectToClientRect","detectOverflow","middlewareArguments","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","elementClientRect","within","min$1","max$1","arrow","basePlacement","arrowDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","center","hash$1","getOppositePlacement","getAlignmentSides","isStart","mainAlignmentSide","getOppositeAlignmentPlacement","basePlacements","allPlacements","getPlacementList","alignment","autoAlignment","allowedPlacements","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_middlewareData$autoP3","_middlewareData$autoP4","_middlewareData$autoP5","_placementsSortedByLe","detectOverflowOptions","placements","overflow","currentPlacement","main","currentOverflows","allOverflows","nextPlacement","placementsSortedByLeastOverflow","placementThatFitsOnAllSides","overflows","getExpandedPlacements","oppositePlacement","flip","_middlewareData$flip","_middlewareData$flip2","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","flipAlignment","fallbackPlacements","overflowsData","side","_middlewareData$flip$","_middlewareData$flip3","resetPlacement","_overflowsData$slice$","convertValueToCoords","multiplier","crossAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","_middlewareData$size","apply","isEnd","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","isWindow","getWindow","ownerDocument","getComputedStyle$1","getNodeName","isHTMLElement","isElement","isNode","isShadowRoot","OwnElement","isScrollParent","overflowX","overflowY","isTableElement","isContainingBlock","isFirefox","css","round","getBoundingClientRect","includeScale","clientRect","scaleX","scaleY","getDocumentElement","getNodeScroll","getWindowScrollBarX","isScaled","getRectRelativeToOffsetParent","offsetParent","isOffsetParentAnElement","documentElement","offsets","offsetRect","getParentNode","getTrueOffsetParent","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","getViewportRect","win","html","visualViewport","getDocumentRect","_element$ownerDocumen","body","getScrollParent","getScrollParents","_node$ownerDocument","scrollParent","isBody","updatedList","contains","rootNode","getInnerBoundingClientRect","getClientRectFromClippingParent","clippingParent","getClippingParents","clippingParents","clipperElement","getClippingClientRect","firstClippingParent","clippingRect","accRect","_ref2","_ref3","_ref4","_ref5","computePosition$1","__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","__spreadProps","getDefaultConfig","theme","themeConfig","getThemeClasses","supportsPassive","SHOW_EVENT_MAP","HIDE_EVENT_MAP","removeFromArray","shownPoppers","hidingPopper","Element","defaultPropFactory","PrivatePopper","skipDelay","isPlacementAuto","centerOffset","delay","skipTransition","bounds","popperWrapper","parentBounds","showGroup","popover","disposeTime","addListeners2","targetNodes","eventType","addEvents","eventMap","commonTriggers","customTrigger","triggers","handleShow","handleHide","touch","attrFrom","attrTo","handleGlobalMousedown","handleGlobalTouchend","handleGlobalClick","computePositionAllShownPoppers","popper","popperContent","handleGlobalClose","getInternetExplorerVersion","ua","msie","trident","rv","edge","isIE","initCompat","_withId","_hoisted_1$2","_ctx","_cache","$props","$setup","$data","$options","PrivateThemeClass","_export_sfc","sfc","_sfc_main$5","_hoisted_1$1","_hoisted_2$1","_hoisted_3","createElementVNode","_hoisted_4","_hoisted_5","_sfc_render$2","_component_ResizeObserver","$event","PrivatePopperContent","PrivatePopperMethods","_sfc_main$4","_sfc_render$1","_component_PopperContent","_component_Popper","popperId","isShown","shouldMountContent","autoHide","show","hide","handleResize","onResize","classes","PrivatePopperWrapper","_sfc_main$3","_sfc_main$2","_sfc_main$1","_sfc_main","fetchId","_hoisted_1","_hoisted_2","_sfc_render","PrivateTooltipDirective","TARGET_CLASS","getPlacement","pos","getOptions","directiveApp","ensureDirectiveApp","mountTarget","createTooltip","shown","destroyTooltip","bind","PrivateVTooltip","addListeners","onClick","onTouchStart","removeListeners","onTouchEnd","onTouchCancel","firstTouch","PrivateVClosePopper","install","savedPosition","App","FloatingVue","lines","active","useActor","actor","actors","arc","getPolar","polarToCartesian","pill","centerX","centerY","angleInDegrees","angleInRadians","totalDur","parts","part"],"mappings":"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cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,cAAe,IACf,YAAa,IACb,oBAAqB,IACrB,aAAc,IACd,YAAa,IACb,YAAa,IACb,WAAY,IACZ,WAAY,IACZ,WAAY,GAElB,CAEG,CAwJD,WAAW,yBAA0B,CAEnC,MAAO,CACL,CACE,OAAQ,EACR,KAAM,mBACN,YAAa,uBACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,wBACN,YAAa,4BACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,yBACN,YAAa,6BACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,cACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,uBACN,YAAa,2BACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,uBACN,YAAa,2BACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,kBACN,YAAa,sBACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,eACN,YAAa,0BACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,gBACN,YAAa,mBACb,SAAU,KACX,EACD,CACE,OAAQ,EACR,KAAM,cACN,YAAa,wBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,YACN,YAAa,eACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,mBACN,YAAa,iCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,uBACN,YAAa,4BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,uBACN,YAAa,4BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,wCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,wCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,wCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,wCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,iBACN,YAAa,qBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,sBACN,YAAa,0BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,uBACN,YAAa,2BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,qBACN,YAAa,yBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,qBACN,YAAa,yBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,gBACN,YAAa,oBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,oBACN,YAAa,wBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,cACN,YAAa,iBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,UACN,YAAa,aACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,iBACN,YAAa,+BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,qBACN,YAAa,0BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,qBACN,YAAa,0BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,sCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,sCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,sCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,sCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,cACN,YAAa,qBACd,EACD,CACE,OAAQ,GACR,KAAM,aACN,YAAa,mBACd,EACD,CACE,OAAQ,GACR,KAAM,YACN,YAAa,kBACd,EACD,CACE,OAAQ,GACR,KAAM,YACN,YAAa,mBACd,EACD,CACE,OAAQ,GACR,KAAM,cACN,YAAa,qBACd,EACD,CACE,OAAQ,GACR,KAAM,QACN,YAAa,eACd,EACD,CACE,OAAQ,GACR,KAAM,iBACN,YAAa,kBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,YACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,cACN,YAAa,eACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,aACN,YAAa,cACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,aACN,YAAa,aACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,YACN,YAAa,aACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,cACN,YAAa,eACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,gBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,gBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,YACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,+BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,+BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,+BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,4BACN,YAAa,+BACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,oBACN,YAAa,qBACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,WACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,WACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,WACd,EACD,CACE,OAAQ,GACR,KAAM,+BACN,YAAa,kCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,WACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,WACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,qCACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,iBACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,qCACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,iBACd,EACD,CACE,OAAQ,GACR,KAAM,eACN,YAAa,iBACd,EACD,CACE,OAAQ,GACR,KAAM,gBACN,YAAa,gBACd,EACD,CACE,OAAQ,GACR,KAAM,gBACN,YAAa,gBACd,EACD,CACE,OAAQ,GACR,KAAM,6BACN,YAAa,yCACb,SAAU,KACX,EACD,CACE,OAAQ,GACR,KAAM,+BACN,YAAa,2CACb,SAAU,KACX,EACD,CACE,OAAQ,IACR,KAAM,0BACN,YAAa,qCACb,SAAU,KACX,EACD,CACE,OAAQ,IACR,KAAM,4BACN,YAAa,uCACb,SAAU,KACX,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,KAAM,gBACN,YAAa,WACd,EACD,CACE,OAAQ,IACR,K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"}